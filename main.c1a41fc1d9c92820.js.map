{"version":3,"file":"main.c1a41fc1d9c92820.js","mappings":"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","sources":["./src/app/components/modals/modal.component.ts","./src/app/components/modals/qr-scanner/qr-scanner.component.html","./src/app/components/modals/qr-scanner/qr-scanner.component.ts","./src/app/components/ui/asset/asset.component.html","./src/app/components/ui/asset/asset.component.ts","./src/app/components/ui/button/toggle/toggle.component.ts","./src/app/components/ui/button/toggle/advanced/advanced.component.ts","./src/app/components/ui/button/toggle/advanced/advanced.component.html","./src/app/components/ui/chart/chart.component.html","./src/app/components/ui/chart/chart.component.ts","./src/app/components/ui/dropdown/dropdown.component.ts","./src/app/components/ui/generic/list.component.ts","./src/app/components/views/logged-in/account-view/activity/event/event.component.html","./src/app/components/views/logged-in/account-view/activity/event/event.component.ts","./src/app/components/views/logged-in/account-view/activity/activity.component.html","./src/app/components/views/logged-in/account-view/activity/activity.component.ts","./src/app/components/views/logged-in/account-view/nfts/token/token.component.html","./src/app/components/views/logged-in/account-view/nfts/token/token.component.ts","./src/app/components/ui/search/search.component.html","./src/app/components/ui/search/search.component.ts","./src/app/components/views/logged-in/account-view/nfts/body/body.component.html","./src/app/components/views/logged-in/account-view/nfts/body/body.component.ts","./src/app/components/views/logged-in/account-view/nfts/nfts.component.html","./src/app/components/views/logged-in/account-view/nfts/nfts.component.ts","./src/app/components/ui/button/basic/basic.component.ts","./src/app/components/ui/button/basic/send/send-button.component.html","./src/app/components/ui/button/basic/send/send-button.component.ts","./src/app/components/views/logged-in/account-view/balances/token/balance-token.component.html","./src/app/components/views/logged-in/account-view/balances/token/balance-token.component.ts","./src/app/components/views/logged-in/account-view/balances/balances.component.html","./src/app/components/views/logged-in/account-view/balances/balances.component.ts","./src/app/components/modals/send/detail/token-detail.component.html","./src/app/components/modals/send/detail/token-detail.component.ts","./src/app/components/views/logged-in/account-view/account-view.component.html","./src/app/components/views/logged-in/account-view/account-view.component.ts","./src/app/components/views/logged-in/settings/settings.component.html","./src/app/components/views/logged-in/settings/settings.component.ts","./src/app/components/views/logged-in/delegate-page/delegate-page.component.html","./src/app/components/views/logged-in/delegate-page/delegate-page.component.ts","./src/app/components/views/logged-in/logged-in-routing.module.ts","./src/app/components/views/logged-in/logged-in.module.ts","./src/app/components/views/start/activate/activate.component.html","./src/app/components/views/start/activate/activate.component.ts","./src/app/interfaces.ts","./src/app/libraries/common.ts","./src/app/libraries/utils.ts","./src/app/libraries/hd.ts","./src/app/pipes/error-handling.pipe.ts","./src/app/pipes/remove-comma.pipe.ts","./src/app/pipes/time-ago.pipe.ts","./src/app/services/activity/activity.service.ts","./src/app/services/balance/balance.service.ts","./src/app/services/beacon/beacon.service.ts","./src/app/services/chart/chart.service.ts","./src/app/services/indexer/signal/signal.service.ts","./src/app/services/coordinator/coordinator.service.ts","./src/app/services/deeplink/deeplink.service.ts","./src/app/services/delegate/delegate.service.ts","./src/app/services/encryption/encryption.service.ts","./src/app/services/estimate/estimate.service.ts","./src/app/services/indexer/dipdup/dipdup.service.ts","./src/app/services/indexer/indexer.service.ts","./src/app/services/indexer/objkt/objkt.service.ts","./src/app/services/indexer/tzkt/tzkt.service.ts","./src/app/services/input-validation/input-validation.service.ts","./src/app/services/lookup/lookup.service.ts","./src/app/services/message/message.service.ts","./src/app/services/operation/operation.service.ts","./src/app/services/subject/subject.service.ts","./src/app/services/swap-liquidity/classes/Amount.ts","./src/app/services/swap-liquidity/swap-liquidity.service.ts","./src/app/services/tezos-domains/tezos-domains.service.ts","./src/app/services/token-balances/token-balances.service.ts","./src/app/services/token/indexedDB.ts","./src/app/services/token/token.service.ts","./src/app/services/torus/torus.service.ts","./src/app/services/tzrate/tzrate.service.ts","./src/app/services/unlockable/unlockable.service.ts","./src/app/services/utils/utils.service.ts","./src/app/services/bc/bc.service.ts","./src/app/services/wallet-connect/wallet-connect.service.ts","./src/app/services/wallet/wallet.service.ts","./src/app/services/wallet/wallet.ts","./src/environments/environment.ghostnet.ts","./src/environments/environment.ts","./src/app/services/import/import.service.ts","./src/app/components/views/start/start.component.html","./src/app/components/views/start/start.component.ts","./src/app/services/export/export.service.ts","./src/app/components/views/start/login-types/new-wallet/new-wallet.component.html","./src/app/components/views/start/login-types/new-wallet/new-wallet.component.ts","./src/app/components/views/start/login-types/mnemonic-import/mnemonic-import.component.html","./src/app/components/views/start/login-types/mnemonic-import/mnemonic-import.component.ts","./src/app/services/ledger/ledger.service.ts","./src/app/components/views/start/login-types/connect-ledger/connect-ledger.component.ts","./src/app/components/views/start/login-types/connect-ledger/connect-ledger.component.html","./src/app/components/views/error/404.component.ts","./src/app/components/views/error/404.component.html","./src/app/components/views/error/500.component.ts","./src/app/components/views/error/500.component.html","./src/app/components/views/start/agreement/privacy-policy/privacy-policy.component.ts","./src/app/components/views/start/agreement/privacy-policy/privacy-policy.component.html","./src/app/components/views/start/agreement/terms-of-use/terms-of-use.component.ts","./src/app/components/views/start/agreement/terms-of-use/terms-of-use.component.html","./src/app/services/embedded-auth/embedded-auth.service.ts","./src/app/components/misc/send/interfaces.ts","./src/app/components/modals/swap-liquidity/swap-liquidity.component.html","./src/app/components/modals/swap-liquidity/swap-liquidity.component.ts","./src/app/components/modals/send/confirm/send-confirmation.component.html","./src/app/components/modals/send/confirm/send-confirmation.component.ts","./src/app/components/ui/dropdown/prepare-send/prepare-send-dropdown.component.html","./src/app/components/ui/dropdown/prepare-send/prepare-send-dropdown.component.ts","./src/app/components/modals/send/prepare/prepare-send.component.html","./src/app/components/modals/send/prepare/prepare-send.component.ts","./src/app/components/views/embedded/confirm-send/confirm-send.component.html","./src/app/components/views/embedded/confirm-send/confirm-send.component.ts","./src/app/components/modals/swap-liquidity/swap-liquidity-confirm.component.html","./src/app/components/modals/swap-liquidity/swap-liquidity-confirm.component.ts","./src/app/components/misc/send/send.component.html","./src/app/components/misc/send/send.component.ts","./src/app/components/views/embedded/sign-expr/template/template.component.html","./src/app/components/views/embedded/sign-expr/template/template.component.ts","./src/app/components/views/embedded/sign-expr/sign-expr.component.html","./src/app/components/views/embedded/sign-expr/sign-expr.component.ts","./src/app/components/views/embedded/queue/queue.component.html","./src/app/components/views/embedded/queue/queue.component.ts","./src/app/components/views/embedded/signin/signin.component.html","./src/app/components/views/embedded/signin/signin.component.ts","./src/app/components/views/embedded/card/card.component.ts","./src/app/components/views/embedded/card/card.component.html","./src/app/components/views/embedded/embedded.component.html","./src/app/components/views/embedded/embedded.component.ts","./src/app/components/modals/receive/receive.component.html","./src/app/components/modals/receive/receive.component.ts","./src/app/components/modals/new-implicit/new-implicit.component.html","./src/app/components/modals/new-implicit/new-implicit.component.ts","./src/app/components/ui/dropdown/permission-request/permission-request.component.html","./src/app/components/ui/dropdown/permission-request/permission-request.component.ts","./src/app/components/modals/permission-request/permission-request.component.html","./src/app/components/modals/permission-request/permission-request.component.ts","./src/app/components/modals/sign-expr/sign-expr.component.html","./src/app/components/modals/sign-expr/sign-expr.component.ts","./src/app/components/modals/originate/originate.component.html","./src/app/components/modals/originate/originate.component.ts","./src/app/components/modals/delegate/delegate.component.html","./src/app/components/modals/delegate/delegate.component.ts","./src/app/components/modals/account-list/body/body.component.html","./src/app/components/modals/account-list/body/body.component.ts","./src/app/components/modals/account-list/list.component.ts","./src/app/components/modals/account-list/list.component.html","./src/app/components/modals/export-mnemonic/export-mnemonic.component.html","./src/app/components/modals/export-mnemonic/export-mnemonic.component.ts","./src/app/components/ui/dropdown/session-select/session-select.component.html","./src/app/components/ui/dropdown/session-select/session-select.component.ts","./src/app/components/modals/session-select/session-select.component.html","./src/app/components/modals/session-select/session-select.component.ts","./src/app/components/misc/uri-handler/uri-handler.component.ts","./src/app/components/misc/uri-handler/uri-handler.component.html","./src/app/components/views/logged-in/account-view/buy/buy.component.html","./src/app/components/views/logged-in/account-view/buy/buy.component.ts","./src/app/components/modals/buy/buy.component.html","./src/app/components/modals/buy/buy.component.ts","./src/app/components/views/logged-in/logged-in.component.ts","./src/app/components/views/logged-in/logged-in.component.html","./src/app/app-routing.module.ts","./src/app/components/modals/info/info.component.html","./src/app/components/modals/info/info.component.ts","./src/app/components/modals/alert/alert.component.html","./src/app/components/modals/alert/alert.component.ts","./src/app/components/ui/messages/messages.component.html","./src/app/components/ui/messages/messages.component.ts","./src/app/components/ui/dropdown/account/account-dropdown.component.html","./src/app/components/ui/dropdown/account/account-dropdown.component.ts","./src/app/components/ui/dropdown/mobile-menu/mobile-menu.component.html","./src/app/components/ui/dropdown/mobile-menu/mobile-menu.component.ts","./src/app/components/views/layouts/header/header.component.html","./src/app/components/views/layouts/header/header.component.ts","./src/app/components/views/layouts/footer/footer.component.html","./src/app/components/views/layouts/footer/footer.component.ts","./src/app/components/ui/spinner/new/spinner-new.component.ts","./src/app/components/ui/spinner/new/spinner-new.component.html","./src/app/components/ui/spinner/spinner.component.html","./src/app/components/ui/spinner/spinner.component.ts","./src/app/components/views/start/agreement/agreement.component.html","./src/app/components/views/start/agreement/agreement.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/pipes/truncate.pipe.ts","./src/app/app.module.ts","./src/main.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import { Component, OnInit, Optional, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\ninterface ModalPayload {\n  name: string | null;\n  data: any;\n  forceClose?: boolean;\n}\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html'\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n  public isOpen = false;\n  name = '';\n  static currentModel = new BehaviorSubject<ModalPayload>({\n    name: '',\n    data: null\n  });\n  private modalSub: Subscription = new Subscription();\n  constructor(@Optional() public cd?: ChangeDetectorRef) {\n    this.cd = cd;\n    this.modalSub = ModalComponent.currentModel.subscribe((load) => {\n      load.forceClose = load.forceClose === undefined ? true : load.forceClose;\n      if (!!load.name && load.name === this.name) {\n        if (!this.isOpen) {\n          this.willOpen();\n          this.open(load.data);\n        }\n      } else {\n        if (this.isOpen && load.forceClose) {\n          this.close();\n          if (this.cd) {\n            this.cd.detectChanges();\n          }\n        }\n      }\n    });\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.modalSub.unsubscribe();\n  }\n\n  willOpen(): void {}\n\n  open(data?: any): void {\n    if (window.innerHeight < document.body.scrollHeight) {\n      document.body.style.marginRight = '0.5rem !important';\n      document.body.style.overflowY = 'hidden !important';\n    }\n    const isMobile = Number(document.documentElement.style.getPropertyValue('--is-mobile'));\n    if (isMobile) {\n      setTimeout(() => {\n        window.scrollTo({ top: 0 });\n      }, 0);\n    }\n    this.isOpen = true;\n  }\n\n  close(): void {\n    document.body.style.marginRight = '';\n    document.body.style.overflowY = '';\n    this.isOpen = false;\n  }\n}\n","<button *ngIf=\"!override\" class=\"scan\" (click)=\"openModal()\">Scan QR code</button>\n<img *ngIf=\"override\" class=\"scan override\" (click)=\"openModal()\" src=\"assets/img/qr.svg\" />\n<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <form autocomplete=\"off\">\n    <div class=\"content\">\n      <div class=\"flex-row top\">\n        <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n            src=\"../../../assets/img/close-btn-x.png\" /></div>\n        <h1 class=\"title\">QR-Scanner</h1>\n      </div>\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column qr-scanner\">\n        <div class=\"video-container\">\n          <video #videoPlayer>\n            Browser not supported\n          </video>\n          <p class=\"no-cam\" *ngIf=\"!qrScanner\">No camera detected</p>\n          <p class=\"no-cam\" *ngIf=\"!!errorMessage\">{{ errorMessage }}</p>\n          <p class=\"no-cam\" *ngIf=\"!!errorMessage\">Please check site permissions</p>\n        </div>\n        <input *ngIf=\"!override\" name=\"none\" type=\"text\" [(ngModel)]=\"manualInput\" class=\"text\" (paste)=\"handlePaste($event)\"\n          placeholder=\"...or paste pairing string here\">\n      </div>\n    </div>\n  </form>\n</div>","import { Component, ViewChild, ElementRef, Input, EventEmitter, Output } from '@angular/core';\nimport { BeaconService } from '../../../services/beacon/beacon.service';\nimport QrScanner from 'qr-scanner';\nimport { DeeplinkService } from '../../../services/deeplink/deeplink.service';\nimport { CONSTANTS as _CONSTANTS, environment } from '../../../../environments/environment';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ModalComponent } from '../modal.component';\nimport { WalletConnectService } from '../../../services/wallet-connect/wallet-connect.service';\n\n@Component({\n  selector: 'app-qr-scanner',\n  templateUrl: './qr-scanner.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class QrScannerComponent extends ModalComponent {\n  readonly CONSTANTS = _CONSTANTS;\n  readonly env = environment;\n  constructor(\n    private beaconService: BeaconService,\n    private deeplinkService: DeeplinkService,\n    private messageService: MessageService,\n    private walletConnectService: WalletConnectService\n  ) {\n    super();\n  }\n  @Output('scanResponse') scanResponse = new EventEmitter();\n  @ViewChild('videoPlayer') videoplayer: ElementRef;\n  @Input() override = false;\n  qrScanner: QrScanner;\n  manualInput = '';\n  name = 'qr-scanner';\n  loadingCam = false;\n  errorMessage = '';\n  openModal(): void {\n    if (!this.override) {\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n    } else {\n      super.open();\n    }\n    this.scan();\n  }\n  async scan(): Promise<void> {\n    this.loadingCam = true;\n    const hasCamera = await QrScanner.hasCamera();\n    if (hasCamera && this.videoplayer?.nativeElement) {\n      this.errorMessage = '';\n      try {\n        this.qrScanner = new QrScanner(this.videoplayer?.nativeElement, (result: QrScanner.ScanResult) => this.handleQrCode(result), {});\n        await this.qrScanner.start();\n        if (!this.isOpen) {\n          this.qrScanner.stop();\n          this.qrScanner.destroy();\n          this.qrScanner = null;\n        }\n      } catch (e) {\n        this.errorMessage = e;\n      }\n    } else {\n      console.warn('no camera found');\n    }\n    this.loadingCam = false;\n  }\n  handleQrCode(scanResult: QrScanner.ScanResult): void {\n    const qrString = scanResult.data;\n    console.log('QR Code', qrString);\n    try {\n      const pairingInfo = this.deeplinkService.QRtoPairingJson(qrString);\n      if (pairingInfo && !this.override) {\n        this.beaconService.preNotifyPairing(pairingInfo);\n        this.beaconService.addPeer(pairingInfo);\n      } else if (qrString && this.override) {\n        this.scanResponse.emit({ pkh: qrString });\n      }\n      this.closeModal();\n    } catch (e) {\n      if (!this.override) {\n        this.messageService.addError('Invalid Base58 checksum!');\n      }\n    }\n  }\n  async handlePaste(ev: ClipboardEvent) {\n    try {\n      const clipboardString = ev?.clipboardData?.getData('text');\n      const pairingInfo = clipboardString ? this.deeplinkService.QRtoPairingJson(clipboardString) : '';\n      if (!this.override && pairingInfo) {\n        this.beaconService.preNotifyPairing(pairingInfo);\n        this.beaconService.addPeer(pairingInfo);\n      } else if (clipboardString && this.override) {\n        this.scanResponse.emit({ pkh: clipboardString });\n      } else if (clipboardString.startsWith('wc')) {\n        this.walletConnectService.pair(clipboardString);\n      }\n      this.closeModal();\n    } catch (e) {\n      if (!this.override) {\n        this.messageService.addError('Invalid Base58 checksum!');\n      }\n    }\n  }\n  closeModal(): void {\n    // restore body scrollbar\n    if (this.qrScanner && !this.loadingCam) {\n      this.qrScanner.stop();\n      this.qrScanner.destroy();\n      this.qrScanner = null;\n    }\n    if (!this.override) {\n      ModalComponent.currentModel.next({ name: '', data: null });\n    } else {\n      super.close();\n    }\n    this.manualInput = '';\n  }\n}\n","<ng-container *ngIf=\"this.display === Display.image || (this.display === Display.audio && !!poster)\">\n  <!-- Need crossorigin anonymous here to leverage caching from first GET (check mime type) -->\n  <img crossorigin=\"anonymous\" #postImage [src]=\"postSrc\" id=\"postImage\" [style.objectFit]=\"postSrc?.indexOf(loaderUrl) > -1 ? 'scale-down' : ''\" (error)=\"onError($event)\" (load)=\"onLoad($event)\" />\n  <img crossorigin=\"anonymous\" #preImage [src]=\"preSrc\" id=\"preImage\" (error)=\"onError($event)\" (load)=\"onLoad($event)\" />\n</ng-container>\n<audio crossorigin=\"anonymous\" #audio *ngIf=\"this.display === Display.audio\" preload=\"metadata\" [controls]=\"controls\" [controlsList]=\"controlsList\" id=\"audio\" (error)=\"onError($event)\" (loadeddata)=\"onLoadData($event)\">\n  <source crossorigin=\"anonymous\" [src]=\"dataSrc\" [type]=\"mimeType\" />\n</audio>\n<video crossorigin=\"anonymous\" #video *ngIf=\"this.display === Display.video\" preload=\"metadata\" id=\"video\" [controls]=\"controls\" [playsinline]=\"playsinline\" [muted]=\"muted\" [loop]=\"loop\" [autoplay]=\"autoplay\" (error)=\"onError($event)\" (loadeddata)=\"onLoadData($event)\">\n  <source crossorigin=\"anonymous\" [src]=\"dataSrc\" [type]=\"mimeType\" />\n  <img crossorigin=\"anonymous\" [src]=\"loaderUrl\" class=\"spinner\" />\n</video>\n<div *ngIf=\"this.display === Display.threeD\" class=\"model-wrapper\">\n  <model-viewer crossorigin=\"anonymous\" #model id=\"modelCanvas\" auto-rotate rotation-per-second=\"30deg\"\n    [src]=\"dataSrc\" alt=\"postSrc\" (load)=\"onLoad($event)\" (error)=\"onError($event)\"\n    camera-controls ar ar-modes=\"webxr scene-viewer quick-look\"></model-viewer>\n</div>","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, Sanitizer, SimpleChanges, ViewChild } from '@angular/core';\nimport { Asset, CachedAsset, TokenService } from '../../../services/token/token.service';\nimport { CONSTANTS, MODEL_3D_WHITELIST } from '../../../../environments/environment';\n\nenum Display {\n  'none',\n  'audio',\n  'image',\n  'video',\n  'threeD'\n}\n\nenum Size {\n  'icon' = 'icon',\n  'small' = 'small',\n  'medium' = 'medium',\n  'gallery' = 'gallery',\n  'raw' = 'raw'\n}\n\nconst MIMETYPE_OVERLOADS = ['unknown', 'image/gif'];\n\n@Component({\n  selector: 'app-asset',\n  templateUrl: './asset.component.html',\n  styleUrls: ['../../../../scss/components/ui/asset/asset.component.scss']\n})\nexport class AssetComponent implements OnInit, AfterViewInit {\n  Display = Display;\n  display = Display.image;\n  @ViewChild('preImage') preImage;\n  @ViewChild('postImage') postImage;\n  @ViewChild('audio') audio;\n  @ViewChild('video') video;\n  @ViewChild('model') model;\n  @Input() assets: any;\n  @Input() size = Size.medium;\n  @Input() priorityList = ['displayAsset', 'thumbnailAsset'];\n  @Input() controlsList = 'nofullscreen nodownload noremoteplayback noplaybackrate';\n  @Input() poster: CachedAsset;\n  @Input() controls = false;\n  @Input() requires = ['all'];\n  @Input() hideSpinner = false;\n  @Input() muted = false;\n  @Input() autoplay = false;\n  @Input() loop = false;\n  @Input() playsinline = false;\n  @Output() inView = new EventEmitter(null);\n  @Output() load = new EventEmitter(null);\n  readonly loaderUrl = 'assets/img/loader.svg';\n  readonly unknownUrl = 'assets/img/unknown-token-grayscale.svg';\n  dataSrc = undefined;\n  preSrc = this.loaderUrl;\n  postSrc = this.loaderUrl;\n  mimeType = 'image/*';\n  errors = 0;\n  obs: IntersectionObserver;\n\n  constructor(private elRef: ElementRef, private tokenService: TokenService) {}\n\n  ngOnInit(): void {\n    if (this.hideSpinner) {\n      this.display = Display.none;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes?.assets?.previousValue &&\n      changes?.assets?.currentValue &&\n      JSON.stringify(changes?.assets?.previousValue) !== JSON.stringify(changes?.assets?.currentValue)\n    ) {\n      const p0 = this.assetToUrl(this.pickAsset(changes?.assets?.previousValue));\n      const p1 = this.assetToUrl(this.pickAsset(changes?.assets?.currentValue));\n      if (p0 !== p1) {\n        console.log('reload asset', { from: p0, to: p1 });\n        this.reload();\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.lazyLoad();\n  }\n  private reload() {\n    this.display = Display.none;\n    this.dataSrc = undefined;\n    this.preSrc = this.loaderUrl;\n    this.postSrc = this.loaderUrl;\n    this.mimeType = 'image/*';\n    this.updateDisplay();\n    this.lazyLoad();\n  }\n  updateDisplay(): void {\n    if (this.isImage() && (this.requires.includes('image') || this.requires.includes('all'))) {\n      this.display = Display.image;\n    } else if (this.isAudio() && (this.requires.includes('audio') || this.requires.includes('all'))) {\n      this.display = Display.audio;\n    } else if (this.isVideo() && (this.requires.includes('video') || this.requires.includes('all'))) {\n      this.display = Display.video;\n    } else if (this.is3D() && (this.requires.includes('model') || this.requires.includes('all'))) {\n      this.display = Display.threeD;\n    } else {\n      this.display = Display.none;\n    }\n  }\n\n  isImage(): boolean {\n    return this.mimeType?.startsWith('image/') || this.mimeType?.startsWith('application/');\n  }\n\n  isVideo(): boolean {\n    return this.mimeType?.startsWith('video/');\n  }\n\n  isAudio(): boolean {\n    return this.mimeType?.startsWith('audio/');\n  }\n\n  is3D(): boolean {\n    return this.mimeType?.startsWith('model/');\n  }\n\n  onLoad(e): void {\n    if (e?.target?.id === 'preImage') {\n      this.postSrc = this.preSrc;\n      this.updateDisplay();\n    }\n  }\n\n  onLoadData(e): void {\n    if (this.isAudio()) {\n      if (this.audio.nativeElement.muted) {\n        this.audio.nativeElement.volume = 1.0;\n      }\n    }\n  }\n\n  onError(e): void {\n    if ((e?.target?.id === 'postImage' || e?.target?.id === 'preImage') && this.isImage()) {\n      this.errors++;\n      if (this.errors <= 2) {\n        console.log('retry lazyload', this.preSrc);\n        this.reload();\n      } else {\n        console.log('failed to load asset', this.preSrc);\n        this.evaluateInvalid();\n      }\n    }\n  }\n\n  evaluateInvalid(): void {\n    this.mimeType = 'image/*';\n    this.updateDisplay();\n    this.preSrc = this.unknownUrl;\n  }\n  pickAsset(assets): Asset {\n    for (let type of this.priorityList) {\n      if (assets && assets[type] && !(typeof assets[type] === 'object' && !assets[type]?.uri)) {\n        return assets[type];\n      }\n    }\n    return null;\n  }\n\n  async evaluate(assets): Promise<void> {\n    if (this.poster) {\n      this.preSrc = this.assetToUrl(this.poster);\n    }\n    let asset = this.pickAsset(assets);\n    if (asset) {\n      try {\n        await this.determineMime(asset);\n      } catch (e) {\n        console.error(e);\n        this.evaluateInvalid();\n        return;\n      }\n      this.setSrc(asset);\n    } else {\n      this.evaluateInvalid();\n    }\n  }\n\n  lazyLoad(): void {\n    this.obs = new IntersectionObserver((entries, _) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          this.evaluate(this.assets);\n          this.obs.unobserve(this.elRef?.nativeElement);\n        }\n        this.inView.emit();\n      });\n    });\n    if (this.elRef?.nativeElement) {\n      this.obs.observe(this.elRef?.nativeElement);\n    }\n  }\n\n  async determineMime(asset: Asset) {\n    const url = this.assetToUrl(asset);\n    if (!url) {\n      throw new Error('InvalidUrl');\n    }\n    if (url?.startsWith('data:image')) {\n      this.mimeType = 'image/*';\n      return (this.preSrc = url);\n    }\n    // Ignore MIME type provided in metadata for now. Way too unreliable. Exception for nfts in 3d wl. (media proxy don't return the correct mime type)\n    if (\n      typeof asset !== 'string' &&\n      !(asset?.mimeType?.startsWith('model/') && (MODEL_3D_WHITELIST as Array<any>).includes(this.tokenService.getContractAddressFromAsset(asset?.uri)))\n    ) {\n      let response;\n      for (let i = 0; i < 3 && !response?.ok; i++) {\n        response = await fetch(url, { method: 'GET' });\n      }\n      if (!response?.ok) {\n        throw new Error('Failed to fetch asset');\n      }\n      this.mimeType = response.headers.get('content-type');\n    } else if (typeof asset === 'string') {\n      this.mimeType = 'image/*';\n    } else {\n      this.mimeType = asset.mimeType;\n    }\n  }\n\n  setSrc(asset): void {\n    this.updateDisplay();\n    if (this.isAudio() || this.isVideo() || this.is3D()) {\n      this.isAudio() ? this.load.emit() : undefined;\n      if (this.is3D()) {\n        const contractAddress = this.tokenService.getContractAddressFromAsset(asset?.uri);\n        if (!(MODEL_3D_WHITELIST as Array<any>).includes(contractAddress)) {\n          console.warn('Content blocked');\n          this.evaluateInvalid();\n          return;\n        }\n      }\n      this.dataSrc = this.assetToUrl(asset);\n    } else if (this.isImage()) {\n      this.preSrc = this.assetToUrl(asset);\n    } else {\n      console.warn(`Unrecognized MIME type: ${this.mimeType}`, '\\n', 'Assuming: image/*');\n      this.mimeType = 'image/*';\n      this.updateDisplay();\n      this.preSrc = this.assetToUrl(asset);\n    }\n  }\n  assetToUrl(asset: Asset): string {\n    let url = '';\n    const uri = typeof asset === 'string' ? asset : asset?.uri;\n    if (uri.startsWith('ipfs://')) {\n      const mediaAndSize = this.size === Size.raw ? '' : `media/${this.size}/`;\n      url = `https://static.tcinfra.net/${mediaAndSize}ipfs/${uri.slice(7)}`;\n    } else if (uri.startsWith('https://')) {\n      url = `https://static.tcinfra.net/media/${this.size}/web/${uri.slice(8)}`;\n    } else if (!CONSTANTS.MAINNET && (uri.startsWith('http://localhost') || uri.startsWith('http://127.0.0.1'))) {\n      url = uri.slice(16);\n    } else if (typeof asset === 'string') {\n      url = uri;\n    } else {\n      console.error('failed to parse asset', asset);\n    }\n    return url ?? '';\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-ui-toggle',\n  templateUrl: './toggle.component.html'\n})\nexport class ToggleComponent implements OnInit {\n  @Input() state: boolean;\n  @Input() text = 'Advanced:';\n  @Input() default: boolean = false;\n  @Output() stateChange = new EventEmitter<boolean>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.state = this.default;\n  }\n\n  toggle(): void {\n    this.state = !this.state;\n    this.stateChange.emit(this.state);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ToggleComponent } from '../toggle.component';\n\n@Component({\n  selector: 'app-ui-toggle-advanced',\n  templateUrl: './advanced.component.html',\n  styleUrls: ['../../../../../../scss/components/ui/button/toggle.component.scss']\n})\nexport class AdvancedToggleComponent extends ToggleComponent implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"flex-row advanced\">\n  <div class=\"flex-row switch-container\">\n    <span class=\"value\">{{ text }}&nbsp;&nbsp;&nbsp;&nbsp;</span>\n    <label class=\"flex-row switch\">\n      <span class=\"key\" [class]=\"state ? 'active' : ''\">{{ state ? ' ON' : 'OFF' }}</span>\n      <span class=\"slider\" [class]=\"state ? 'active' : ''\" (click)=\"toggle()\">\n        <span class=\"round\"></span>\n      </span>\n    </label>\n  </div>\n</div>","<div class=\"title-dropdown\" [class.expanded]=\"ddExpanded\">\n  <ng-container *ngFor=\"let value of ddSets\">\n    <p [class.active]=\"set === value?.name\" (click)=\"toggleSet(value?.name);ddExpanded = !ddExpanded\">{{ value?.name ||\n      '' }}</p>\n  </ng-container>\n</div>\n<div *ngIf=\"sets?.length\" class=\"flex-row mode\">\n  <div class=\"flex-column left\">\n    <span class=\"title\" (click)=\"ddExpanded = !ddExpanded\">{{ set }}<img [class.expanded]=\"ddExpanded\"\n        src=\"assets/img/chevron-down.svg\" /></span>\n    <span class=\"tooltip value\">{{ tooltipValue }}\n      <span class=\"unit\">{{ units }}</span>\n    </span>\n  </div>\n  <div class=\"right\">\n    <div class=\"attributes\">\n      <ng-container *ngFor=\"let key of Object.keys(attributes)\">\n        <span>{{ attributes[key] }}</span>\n      </ng-container>\n    </div>\n  </div>\n</div>\n<svg *ngIf=\"!sets?.length\" class=\"spinner\" viewBox=\"0 0 50 50\">\n  <circle class=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"5\"></circle>\n</svg>\n<span *ngIf=\"!sets?.length\" class=\"loading-text\">Loading Chart...</span>\n<div class=\"expand\" (click)=\"toggleChartExpand(); ddExpanded = false; toggleSet(set)\">{{ !chartExpanded ? 'Expand' : 'Collapse' }}\n</div>\n<ng-container *ngIf=\"design === 'default'\">\n  <div class=\"flex-column canvas-wrapper\">\n    <canvas #chart [class.loaded]=\"sets?.length\"></canvas>\n    <div *ngIf=\"sets?.length\" class=\"flex-row time\" [class.expanded]=\"chartExpanded\">\n      <span *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'day'\" (click)=\"toggleSeries('day')\">24H</span><span\n      *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'week'\" (click)=\"toggleSeries('week')\">1W</span>\n      <span [class.active]=\"series === 'month'\" (click)=\"toggleSeries('month')\">1M</span><span\n      *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'year'\" (click)=\"toggleSeries('year')\">1Y</span>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"design === 'mini'\">\n  <div class=\"canvas-wrapper\">\n    <canvas #chart [class.loaded]=\"sets?.length\"></canvas>\n    <div *ngIf=\"sets?.length\" class=\"flex-row time\" [class.expanded]=\"chartExpanded\">\n      <span *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'day'\"\n        (click)=\"toggleSeries('day')\">24H</span><span *ngIf=\"set !== 'Total Value Locked'\"\n        [class.active]=\"series === 'week'\" (click)=\"toggleSeries('week')\">1W</span>\n      <span [class.active]=\"series === 'month'\" (click)=\"toggleSeries('month')\">1M</span><span\n        *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'year'\" (click)=\"toggleSeries('year')\">1Y</span>\n    </div>\n  </div>\n</ng-container>","import { Component, ElementRef, EventEmitter, Input, Output, SimpleChange, SimpleChanges, ViewChild } from '@angular/core';\nimport { Chart, ChartOptions, ChartTypeRegistry, registerables } from 'chart.js';\nimport { ChartTitle } from '../../../services/chart/chart.service';\n\nChart.register(...registerables);\n\nlet width, height, gradient;\nfunction getGradientBackground(ctx, chartArea) {\n  const style = getComputedStyle(document.body);\n  const theme = style.getPropertyValue('--theme').replace(/[ \\\"]/g, '');\n  const chartWidth = chartArea.right - chartArea.left;\n  const chartHeight = chartArea.bottom - chartArea.top;\n  if (gradient === null || width !== chartWidth || height !== chartHeight) {\n    width = chartWidth;\n    height = chartHeight;\n    gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n    // gradient.addColorStop(1, '#5963ff88');\n    // gradient.addColorStop(0.5, '#5963ff33');\n    // gradient.addColorStop(0, '#5963ff19');\n    if (theme === 'dark') {\n      gradient.addColorStop(1, '#383d7d');\n      gradient.addColorStop(0.5, '#2e304f');\n      gradient.addColorStop(0, '#2a2c3f');\n    } else {\n      gradient.addColorStop(1, '#c2c5fc');\n      gradient.addColorStop(0.5, '#e0e1fb');\n      gradient.addColorStop(0, '#e8eafb');\n    }\n  }\n\n  return gradient;\n}\n\nexport enum ChartSeries {\n  'day' = 'day',\n  'week' = 'week',\n  'month' = 'month',\n  'year' = 'year'\n}\n@Component({\n  selector: 'app-ui-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['../../../../scss/components/ui/chart/chart.component.scss']\n})\nexport class ChartComponent {\n  Object = Object;\n  @Input() attributes: any = {};\n  @Input() type: keyof ChartTypeRegistry = 'line';\n  @Input() data = { datasets: [], labels: [] };\n  @Input() datas = {};\n  @Input() options: ChartOptions = {};\n  @Input() design: string;\n  @Input() ddSets = [];\n  @Input() sets = [];\n  @Input() set = '';\n  @Input() units = {};\n  @Input() layout = 'default';\n  tooltipValue: string = '';\n  @ViewChild('chart') chartRef: ElementRef;\n  @Output('drawn') drawn = new EventEmitter();\n\n  chart = null;\n  series: ChartSeries = ChartSeries.day;\n  ddExpanded = false;\n  chartExpanded = false;\n\n  constructor() {\n    Chart.register({\n      id: 'my-plugin',\n      afterTooltipDraw: (chart, args, options) => {\n        if (chart) {\n          let x = chart.tooltip.dataPoints[0].element.x;\n          let yAxis = chart.scales.y;\n          let ctx = chart.ctx;\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(x, yAxis.bottom + 60);\n          ctx.lineTo(x, yAxis.top + 60);\n          ctx.lineWidth = 2;\n          ctx.setLineDash([3, 1]);\n          ctx.strokeStyle = 'rgba(0, 0, 255, 0.3)';\n          ctx.stroke();\n          ctx.setLineDash([0, 0]);\n          ctx.textAlign = 'center';\n          if (x >= chart.chartArea.right + -30) {\n            ctx.textAlign = 'right';\n          } else if (x <= chart.chartArea.left + 30) {\n            ctx.textAlign = 'left';\n          }\n          ctx.font = '14px sans-serif';\n          ctx.fillStyle = getComputedStyle(document.documentElement).getPropertyValue('--base-font-color-secondary');\n          ctx.fillText(chart.tooltip.title[0], x, yAxis.top + 45);\n          ctx.restore();\n        }\n      }\n    });\n  }\n\n  toggleChartExpand() {\n    this.chartExpanded = !this.chartExpanded;\n    (this.chartRef.nativeElement as HTMLCanvasElement).parentElement.parentElement.classList.toggle('expanded');\n  }\n\n  refreshDDSets(): void {\n    this.ddSets = this.sets?.sort(function (a, b) {\n      const nameA = a.name.toLowerCase(),\n        nameB = b.name.toLowerCase();\n      if (nameA > nameB) return -1;\n      if (nameA < nameB) return 1;\n      return 0;\n    });\n  }\n\n  draw(): void {\n    if (this.set === ChartTitle.totalValueLocked) {\n      const data = this.datas[this.series]?.datasets?.find((ds) => ds.label === ChartTitle.totalValueLocked).data;\n      if (!data) {\n        return;\n      }\n      this.tooltipValue = parseFloat(parseFloat(data[data.length - 1].toString()).toFixed(2)).toLocaleString();\n    } else if (this.set === ChartTitle.XTZtzBTC) {\n      const data = this.datas[this.series]?.datasets?.find((ds) => ds.label === ChartTitle.XTZtzBTC).data;\n      if (!data) {\n        return;\n      }\n      this.tooltipValue = parseFloat(data[data.length - 1].toString()).toFixed(8);\n    } else if (this.set === ChartTitle.tzBTCXTZ) {\n      const data = this.datas[this.series]?.datasets?.find((ds) => ds.label === ChartTitle.tzBTCXTZ).data;\n      if (!data) {\n        return;\n      }\n      this.tooltipValue = parseFloat(parseFloat(data[data.length - 1].toString()).toFixed(6)).toLocaleString();\n    }\n\n    if (this.chartRef?.nativeElement && this.datas[this.series]?.datasets) {\n      const ctx = this.chartRef.nativeElement.getContext('2d');\n      this.chart?.destroy();\n      this.sets = this.data?.datasets.map((set) => ({ name: set.label }));\n      this.chart = new Chart(ctx, {\n        type: this.type,\n        data: this.data,\n        options: this.options,\n        plugins: []\n      });\n      this.drawn.emit(null);\n    }\n  }\n  toggleSeries(series): void {\n    this.series = series;\n    this.data = this.datas[series];\n    this.overrideDatasetConfig();\n    this.options = this.getChartOptions();\n    this.draw();\n  }\n  toggleSet(set): void {\n    this.reset();\n    this.overrideDatasetConfig();\n    for (let key of Object.keys(this.datas)) {\n      for (let i = 0; i < this.datas[key].datasets.length; ++i) {\n        if (this.datas[key].datasets[i].label === set) {\n          this.datas[key].datasets[i].hidden = false;\n          if (set === ChartTitle.XTZtzBTC) {\n            this.units = 'tzBTC';\n          } else if (set === ChartTitle.tzBTCXTZ) {\n            this.units = 'XTZ';\n          } else {\n            this.toggleSeries(ChartSeries['month']);\n            this.units = 'usd';\n          }\n        } else {\n          this.datas[key].datasets[i].hidden = true;\n        }\n      }\n    }\n    this.data = this.datas[this.series];\n    this.sets = this.data?.datasets.map((set) => ({ name: set.label }));\n    this.set = set ?? this.sets[0].name;\n    this.refreshDDSets();\n    this.options = this.getChartOptions();\n    this.draw();\n  }\n  reset(): void {\n    this.ddSets = [];\n    this.sets = [];\n    this.set = '';\n    this.data = null;\n  }\n  overrideDatasetConfig(): void {\n    for (let i = 0; i < this.datas[this.series]?.datasets.length; ++i) {\n      this.datas[this.series].datasets[i].pointHoverBorderWidth = this.design === 'mini' && !this.chartExpanded ? 0 : 6;\n      this.datas[this.series].datasets[i].pointHitRadius = this.design === 'mini' && !this.chartExpanded ? 0 : 6;\n      this.datas[this.series].datasets[i].pointHoverBackgroundColor = this.design === 'mini' && !this.chartExpanded ? '#00000000' : '#5963ff88';\n      this.datas[this.series].datasets[i].pointHoverBorderColor = this.design === 'mini' && !this.chartExpanded ? '#00000000' : '#5963ff88';\n      this.datas[this.series].datasets[i].pointBackgroundColor = this.design === 'mini' && !this.chartExpanded ? '#00000000' : '#5963ff88';\n      this.datas[this.series].datasets[i].backgroundColor = function (context) {\n        const chart = context.chart;\n        const { ctx, chartArea } = chart;\n\n        if (!chartArea) {\n          return null;\n        }\n        return getGradientBackground(ctx, chartArea);\n      };\n    }\n  }\n  getChartOptions(): any {\n    let yTickPadding = -102;\n    if (this.set === ChartTitle.tzBTCXTZ) {\n      yTickPadding = -71;\n    } else if (this.set === ChartTitle.totalValueLocked) {\n      yTickPadding = -95;\n    }\n    return {\n      layout: {\n        padding: 0\n      },\n      scales: {\n        y: {\n          beginAtZero: false,\n          position: 'right',\n          ticks: {\n            maxTicksLimit: 5,\n            display: this.design === 'mini' && this.chartExpanded === false ? false : true,\n            padding: yTickPadding,\n            align: 'start',\n            font: {\n              size: 14,\n              weight: 500,\n              family: 'Roboto'\n            },\n            textStrokeColor: '#333',\n            z: 1,\n            callback: (label, index, ticks) => {\n              if (index >= 1 && index < 4) {\n                return label < 1 ? label.toFixed(8) : Number(label.toFixed(8).replace(/(\\.0+|0+)$/, '')).toLocaleString();\n              } else {\n                return '';\n              }\n            }\n          },\n          grid: {\n            drawBorder: false,\n            lineWidth: 0\n          }\n        },\n        x: {\n          ticks: {\n            maxTicksLimit: 0,\n            display: false\n          },\n          grid: {\n            drawBorder: false,\n            lineWidth: 0\n          }\n        }\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      hover: {\n        mode: 'nearest',\n        axis: 'x',\n        intersect: false\n      },\n      tooltips: {\n        mode: 'index',\n        axis: 'x',\n        intersect: false\n      },\n      interaction: {\n        intersect: false,\n        mode: 'index',\n        axis: 'x'\n      },\n      elements: {\n        line: {\n          tension: 0.0\n        },\n        point: {\n          radius: 0\n        }\n      },\n      plugins: {\n        tooltip: {\n          enabled: this.design === 'mini' && !this.chartExpanded ? false : true,\n          mode: 'nearest',\n          intersect: false,\n          backgroundColor: 'rgba(0, 0, 0, 0.0)',\n          titleColor: 'rgba(0, 0, 0, 0.0)',\n          bodyColor: 'rgba(0, 0, 0, 0.0)',\n          footerColor: 'rgba(0, 0, 0, 0.0)',\n          displayColors: false,\n          callbacks: {\n            label: (item, a, b) => {\n              this.tooltipValue =\n                item.dataset.data[item.dataIndex] < 1\n                  ? item.dataset.data[item.dataIndex].toFixed(8).toLocaleString()\n                  : parseFloat(item.dataset.data[item.dataIndex].toFixed(2).replace(/(\\.0+|0+)$/, '')).toLocaleString() ?? '';\n              return parseFloat(item.dataset.data[item.dataIndex].toFixed(8)).toLocaleString();\n            }\n          }\n        },\n        legend: { display: false }\n      }\n    };\n  }\n}\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { ListComponent } from '../generic/list.component';\n\n@Component({\n  selector: 'app-ui-dropdown',\n  templateUrl: './dropdown.component.html'\n})\nexport class DropdownComponent extends ListComponent implements OnInit {\n  @Output() dropdownResponse = new EventEmitter();\n  @Input() options: any[];\n  selection: any;\n  ecmpId = this.constructor['ɵcmp'].id;\n  isOpen = false;\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  @HostListener('document:click', ['$event'])\n  @HostListener('document:touchend', ['$event'])\n  closeDropdown(e): void {\n    if (!e.target.closest('#' + this.ecmpId) && this.isOpen) {\n      this.isOpen = false;\n    }\n  }\n\n  toggleDropdown(): void {\n    this.isOpen = !this.isOpen;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html'\n})\nexport class ListComponent implements OnInit {\n  @Input() current;\n  @Input() list: any[];\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"flex-column\" [class]=\"getType().replace('undelegated', 'delegated')\"\n  [class.unconfirmed]=\"activity.status === OpStatus.UNCONFIRMED\" [class.half_confirmed]=\"activity.status === OpStatus.HALF_CONFIRMED\"\n  [class.confirmed]=\"activity.status === OpStatus.CONFIRMED\" [class.new]=\"fresh && activity.status === OpStatus.CONFIRMED\"\n  [class.failed]=\"activity.status === OpStatus.FAILED\">\n  <div class=\"flex-row top\">\n    <div class=\"flex-row title\">\n      <ng-container *ngIf=\"!activity.entrypoint; else callEntrypoint\">\n        <ng-container [ngSwitch]=\"getType()?.replace('undelegated', 'delegated')\">\n          <img *ngSwitchCase=\"'sent'\" [src]=\"activity.status === OpStatus.FAILED ? '../../../../assets/img/up-arrow-red.svg' : '../../../../assets/img/up-arrow-black.svg'\"\n            style=\"transform: rotate(45deg)\" />\n          <img *ngSwitchCase=\"'received'\" [src]=\"activity.status === OpStatus.FAILED ? '../../../../assets/img/up-arrow-red.svg' : '../../../../assets/img/up-arrow.svg'\" style=\"transform: rotate(135deg)\" />\n          <div *ngSwitchDefault class=\"blank\"></div>\n        </ng-container>{{ printAmount() }}\n      </ng-container>\n      <ng-template #callEntrypoint>\n        <ng-container *ngIf=\"zeroSent(activity); else notZero\">\n          <div class=\"blank\"></div>\n        </ng-container>\n        <ng-template #notZero>\n          <img src=\"../../../../assets/img/up-arrow-black.svg\" style=\"transform: rotate(45deg)\" />\n        </ng-template>\n        {{ sentKind(activity) }}\n      </ng-template>\n    </div>\n    <span class=\"failed\" *ngIf=\"activity.status === OpStatus.FAILED\">Error</span>\n    <div class=\"updating-balances\" *ngIf=\"activity.status === OpStatus.HALF_CONFIRMED\">\n      <img class=\"spinner\" src=\"../../../../../assets/img/feeLoader.gif\">\n      <span>Updating balances</span>\n    </div>\n  </div>\n  <div class=\"flex-row bottom\">\n    <div class=\"flex-row address\"><img\n        *ngIf=\"!!getCounterparty(activity)?.lookupType && getCounterparty(activity)?.lookupType !== 5\"\n        [src]=\"getEventIcon()\" class=\"event-icon\" />\n      <div class=\"flex-row value\">{{ getAddressPrefix(getType()) }}&nbsp;{{getCounterparty(activity)?.name ||\n        getCounterparty(activity)?.address || ''}}</div>\n      <img class=\"copy\" src=\"../../../../assets/img/copy-icon.svg\"\n          (click)=\"copy(getCounterparty(activity)?.address)\" />\n    </div>\n    <span class=\"flex-row time\">\n      <img [src]=\"getEventStatusIcon()\" />\n      <a class=\"status\" *ngIf=\"activity.status !== OpStatus.UNCONFIRMED\" href=\"{{ explorerURL(activity.hash) }}\" target=\"_blank\">\n        <ng-container *ngIf=\"activity.status !== OpStatus.HALF_CONFIRMED; else halfConfirmed\">\n          {{ activity.timestamp | timeAgo:trigger }}\n        </ng-container>\n        <ng-template #halfConfirmed>\n          Confirmed\n        </ng-template>\n      </a>\n      <div class=\"status\" *ngIf=\"activity.status === OpStatus.UNCONFIRMED\">Unconfirmed</div>\n    </span>\n  </div>\n</div>","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { Account, Activity, OpStatus } from '../../../../../../services/wallet/wallet';\nimport { TimeAgoPipe } from '../../../../../../pipes/time-ago.pipe';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../../services/message/message.service';\nimport { ActivityService } from '../../../../../../services/activity/activity.service';\nimport { TokenService } from '../../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { LookupType } from '../../../../../../services/lookup/lookup.service';\nimport copy from 'copy-to-clipboard';\nimport { SubjectService } from '../../../../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/activity/event.component.scss']\n})\nexport class EventComponent implements OnInit, OnChanges, OnDestroy {\n  public OpStatus = OpStatus;\n  public LookupType = LookupType;\n  public fresh = undefined;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public timeAgoPipe: TimeAgoPipe,\n    private activityService: ActivityService,\n    public tokenService: TokenService,\n    private subjectService: SubjectService\n  ) {}\n  trigger = true;\n  @Input() activity: Activity;\n  @Input() account: Account;\n  ngOnInit(): void {\n    setInterval(() => {\n      this.trigger = !this.trigger;\n    }, 1000);\n    this.subscriptions.add(\n      this.subjectService.confirmedOp.subscribe((opHash) => {\n        if (opHash === this.activity.hash && this.fresh === undefined) {\n          this.fresh = true;\n          setTimeout(() => {\n            this.fresh = false;\n          }, 20000);\n        }\n      })\n    );\n  }\n  ngOnChanges(changes: SimpleChanges): void {}\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  getType(): string {\n    if (this.activity.type !== 'transaction') {\n      if (this.activity.type === 'delegation') {\n        if (this.activity.destination.address) {\n          return 'delegated';\n        } else {\n          return 'undelegated';\n        }\n      } else {\n        return this.activity.type;\n      }\n    } else {\n      let operationType = '';\n      if (this.activity.source.address === this.account.address) {\n        operationType = 'sent';\n      } else {\n        operationType = 'received';\n      }\n      return operationType;\n    }\n  }\n\n  explorerURL(hash: string): string {\n    const baseURL = CONSTANTS.BLOCK_EXPLORER_URL;\n    return `${baseURL}/${hash}`;\n  }\n  getCounterparty(transaction): any {\n    const c = this.activityService.getCounterparty(transaction, this.account);\n    if (!c.name) {\n      c.name = c.address ? `${c.address.slice(0, 7)}...${c.address.slice(-4)}` : '—';\n    }\n    c.name.trim();\n    return c;\n  }\n  getEventIcon(): string {\n    return `../../../../assets/img/${LookupType[this.getCounterparty(this.activity)?.lookupType].toLowerCase().replace('tezosdomains', 'domain')}-logo.svg`;\n  }\n  getEventStatusIcon(): string {\n    return this.fresh && this.activity.status === OpStatus.CONFIRMED\n      ? '../../../../assets/img/event-new.png'\n      : this.activity.status === OpStatus.CONFIRMED\n      ? '../../../../assets/img/event-confirmed.png'\n      : this.activity.status === OpStatus.UNCONFIRMED\n      ? '../../../../assets/img/event-unconfirmed.png'\n      : this.activity.status === OpStatus.FAILED\n      ? '../../../../assets/img/event-error.png'\n      : this.activity.status === OpStatus.HALF_CONFIRMED\n      ? '../../../../../assets/img/event-half-confirmed.png'\n      : '../../../../assets/img/event-unconfirmed.png';\n  }\n  printAmount(): string {\n    switch (this.getType()) {\n      case 'sent':\n        return this.tokenService.formatAmount(this.activity.tokenId, this.activity.amount.toString());\n      case 'received':\n        return this.tokenService.formatAmount(this.activity.tokenId, this.activity.amount.toString());\n      case 'delegated':\n        return 'Staked';\n      case 'undelegated':\n        return 'Unstaked';\n      case 'origination':\n        return this.tokenService.formatAmount(this.activity.tokenId, this.activity.amount.toString());\n      default:\n        return '';\n    }\n  }\n  sentKind(activity): string {\n    if (activity.entrypoint) {\n      if (activity.amount !== '0') {\n        return `${this.printAmount()}, Call ${activity.entrypoint}`;\n      }\n      return `Call ${activity.entrypoint}`;\n    }\n    return '0';\n  }\n  zeroSent(activity): boolean {\n    return this.sentKind(activity).length > 4 && activity.amount === '0';\n  }\n  receivedKind(activity): string {\n    return activity.tokenId && activity.source.address && activity.tokenId.split(':')[0] === activity.source.address ? 'Minted' : 'Received';\n  }\n  getAddressPrefix(type: string) {\n    switch (type.toLowerCase()) {\n      case 'sent':\n        return 'Sent to:';\n      case 'received':\n        return this.receivedKind(this.activity) + ' from:';\n      case 'delegated':\n        return 'To:';\n      case 'undelegated':\n        return 'To:';\n      case 'origination':\n        return 'Originated contract:';\n    }\n  }\n  copy(address: string): void {\n    copy(address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(address + ' ' + copyToClipboard, 5);\n  }\n}\n","<div class=\"selectable main-container\">\n  <div class=\"top-container-activity\">\n    <h1>Recent Activity</h1>\n    <div class=\"right\">\n      <a class=\"view-all\" href=\"{{ explorerURL(account.address) }}\" target=\"_blank\">View in Explorer</a>\n      <!-- <img class=\"button icon\" src=\"../../../../assets/img/info.svg\" /> -->\n    </div>\n  </div>\n  <div class=\"selectable\" id=\"operations-container\" *ngIf=\"this.translate.store.translations.en\">\n    <ng-container *ngIf=\"account.activities; else loading\">\n      <ng-container *ngIf=\"!account.activities.length\">\n        <div class=\"line\"><span>No activity yet</span></div>\n      </ng-container>\n      <ng-container *ngFor=\"let activity of account.activities | slice:0:10; trackBy: trackEvent\">\n        <app-event [activity]=\"activity\" [account]=\"account\"></app-event>\n      </ng-container>\n    </ng-container>\n    <ng-template #loading>Loading activity...</ng-template>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { TimeAgoPipe } from '../../../../../pipes/time-ago.pipe';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { CONSTANTS } from '../../../../../../environments/environment';\nimport { TokenService } from '../../../../../services/token/token.service';\n\n@Component({\n  selector: 'app-activity',\n  templateUrl: './activity.component.html',\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/cards/activity/activity.component.scss']\n})\nexport class ActivityComponent implements OnInit {\n  public currTimeStamp: number;\n  constructor(public translate: TranslateService, public messageService: MessageService, public timeAgoPipe: TimeAgoPipe, public tokenService: TokenService) {}\n  trigger = true;\n  @Input() activity: any;\n  @Input() account: Account;\n  ngOnInit(): void {}\n  explorerURL(hash: string): string {\n    const baseURL = CONSTANTS.BLOCK_EXPLORER_URL;\n    return `${baseURL}/${hash}`;\n  }\n\n  trackEvent(index: number, activity: any): string {\n    return activity.block + activity.hash;\n  }\n}\n","<div class=\"flex-row token\" (click)=\"viewToken(token)\">\n  <div class=\"dot\"></div>\n  <div class=\"wrapper\">\n    <app-asset class=\"asset\" (inView)=\"balanceChangeTimer()\" [assets]=\"token\" [size]=\"'small'\" [muted]=\"true\" [autoplay]=\"true\" [playsinline]=\"true\" [loop]=\"true\" [priorityList]=\"['thumbnailAsset', 'displayAsset']\"></app-asset>\n    <div *ngIf=\"Number.parseInt(token?.balance) > 1\" class=\"balance\">x{{\n      formatBalance(token) }}</div>\n  </div>\n  <div class=\"flex-column right\">\n    <div class=\"title\">\n      {{token?.name}}\n    </div>\n    <div *ngIf=\"token?.series\" class=\"series\">\n      {{ token?.series }}\n    </div>\n  </div>\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../../services/message/message.service';\nimport { TokenService } from '../../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { ModalComponent } from '../../../../../modals/modal.component';\nimport { TokenBalancesService } from '../../../../../../services/token-balances/token-balances.service';\nimport { DisplayLinkOption } from '../../../../../../interfaces';\nimport Big from 'big.js';\n\n@Component({\n  selector: 'app-nfts-token',\n  templateUrl: './token.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/nfts/token.component.scss']\n})\nexport class NftsTokenComponent implements OnInit, OnChanges {\n  DisplayLinkOption = DisplayLinkOption;\n  Number = Number;\n  @Input() token;\n  isNew = false;\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public tokenService: TokenService,\n    public tokenBalancesService: TokenBalancesService\n  ) {}\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes.token.previousValue?.balance > -1 &&\n      changes.token.currentValue?.balance > -1 &&\n      changes.token.currentValue?.balance != changes.token.previousValue?.balance\n    ) {\n      this.isNew = true;\n    }\n  }\n  viewToken(token): void {\n    ModalComponent.currentModel.next({ name: 'token-detail', data: token });\n  }\n  balanceChangeTimer(): void {\n    setTimeout(() => {\n      this.isNew = false;\n    }, 5000);\n  }\n  formatBalance(token): string {\n    return Big(token.balance)\n      .div(10 ** parseInt(token.decimals))\n      .toFixed();\n  }\n}\n","<form autocomplete=\"off\">\n  <div class=\"flex-row\" [id]=\"ecmpId\">\n    <div class=\"flex-row search-bar\" [class.active]=\"isActive\" [class.has-value]=\"hasValue\">\n      <img class=\"search-button\" src=\"assets/img/search.svg\" (click)=\"searchButtonClicked()\" />\n      <input #input name=\"none\" type=\"text\" [(ngModel)]=\"searchText\" [placeholder]=\"placeholderText\" (focus)=\"onFocus()\"\n        (keydown)=\"onKeydown($event)\" />\n      <div *ngIf=\"isActive && hasValue\" class=\"flex-row match-count\"><span>{{ matchCount + ' matches' }}</span></div>\n    </div>\n    <div *ngIf=\"!hasValue\" class=\"flex-row item-count\"><span>{{ '(' + itemCount + ')' }}</span></div>\n  </div>\n</form>","import { Component, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { DropdownComponent } from '../dropdown/dropdown.component';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search.component.html',\n  styleUrls: ['../../../../scss/components/ui/search-bar/search.component.scss']\n})\nexport class SearchBarComponent extends DropdownComponent implements OnInit, OnDestroy {\n  @ViewChild('input') input: ElementRef;\n  @Output() onInput = new EventEmitter();\n  @Input() itemCount = 0;\n  @Input() matchCount = 0;\n  inputUpdated = new Subject<any>();\n  filter = '.*';\n  isActive = false;\n  hasValue = false;\n  @Input() placeholder = '';\n  placeholderText = '';\n  searchText = '';\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(private subjectService: SubjectService) {\n    super();\n    this.subscriptions.add(\n      this.inputUpdated.pipe(debounceTime(150)).subscribe((e) => {\n        this.filter = !!e?.target.value ? `${e.target.value.replace(/(\\W)/g, '\\\\$1')}` : '';\n        if (!!e) {\n          this.onInput.emit(this.filter);\n        }\n        this.hasValue = !!this.filter;\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((_) => {\n        this.reset();\n      })\n    );\n  }\n  ngOnInit(): void {\n    this.placeholderText = this.placeholder;\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  onKeydown(e): void {\n    this.inputUpdated.next(e);\n  }\n  onFocus(): void {\n    this.isActive = true;\n    this.onInput.emit(this.filter);\n  }\n  searchButtonClicked(): void {\n    if (!this.isActive) {\n      this.input.nativeElement.focus();\n    }\n  }\n  @HostListener('document:click', ['$event'])\n  @HostListener('document:touchend', ['$event'])\n  onBlur(e): void {\n    if (!e.target.closest('#' + this.ecmpId) && this.isActive && !this.hasValue) {\n      this.isActive = false;\n      this.onInput.emit('');\n    }\n  }\n  reset(): void {\n    this.isActive = false;\n    this.filter = '';\n    this.searchText = '';\n    this.hasValue = false;\n    this.onInput.emit(this.filter);\n  }\n}\n","<app-search-bar *ngIf=\"tokens?.length > 12 && searchable\" [placeholder]=\"'Search'\"\n  [matchCount]=\"tokensToDisplay?.filtered.length || 0\" [itemCount]=\"tokensToDisplay?.raw.length || 0\"\n  (onInput)=\"updateFilter($event)\"></app-search-bar>\n<div class=\"scroll-wrapper\">\n  <div #body [style.display]=\"!isDisplaying ? 'none' : ''\" class=\"body\">\n    <ng-container *ngFor=\"let token of tokensToDisplay.loaded; trackBy:trackToken\">\n      <app-nfts-token class=\"token\" [token]=\"token\"></app-nfts-token>\n    </ng-container>\n    <ng-container *ngIf=\"filter !== '.*' && !tokensToDisplay.filtered.length\">\n      No Matches Found\n    </ng-container>\n  </div>\n</div>","import { AfterViewInit, Component, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../../services/message/message.service';\nimport { TokenService } from '../../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { TokenBalancesService } from '../../../../../../services/token-balances/token-balances.service';\nimport { DisplayLinkOption } from '../../../../../../interfaces';\nimport { Subject } from 'rxjs';\nimport { Token } from '../../../../../../services/wallet/wallet';\n\n@Component({\n  selector: 'app-nfts-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/nfts/body.component.scss']\n})\nexport class NftsBodyComponent implements OnInit, OnChanges, AfterViewInit {\n  DisplayLinkOption = DisplayLinkOption;\n  @ViewChild('body') body;\n  @Input() isDisplaying;\n  @Input() tokens;\n  @Input() searchable = false;\n  tokensToDisplay = { loaded: [], filtered: [], raw: [] };\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n  readonly chunkSize = 24;\n  sliceEnd = this.chunkSize;\n  inputUpdated = new Subject<any>();\n  filter = '.*';\n\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public tokenService: TokenService,\n    public tokenBalancesService: TokenBalancesService\n  ) {}\n  ngOnInit(): void {\n    this.refresh();\n  }\n  ngOnChanges(): void {\n    if (this.isDisplaying) {\n      this.refresh();\n    }\n  }\n  refresh(): void {\n    this.tokensToDisplay.raw = this.tokens;\n    this.tokensToDisplay.filtered = this.search(this.tokens);\n    this.tokensToDisplay.loaded = this.tokensToDisplay.filtered?.slice(0, this.sliceEnd);\n  }\n  ngAfterViewInit(): void {\n    const cb = (e) => {\n      if (\n        this.body?.nativeElement?.scrollTop >= this.body?.nativeElement?.scrollHeight - this.body?.nativeElement?.clientHeight - 15 &&\n        (this.sliceEnd < this.tokensToDisplay.raw?.length ?? 0)\n      ) {\n        this.sliceEnd += this.chunkSize;\n        this.refresh();\n      }\n    };\n    this.body?.nativeElement.addEventListener('scroll', cb, { passive: true });\n    this.body?.nativeElement.addEventListener('touchmove', cb, { passive: true });\n  }\n  search(tokens): Token[] {\n    if (this.filter.length > 0 && this.filter !== '.*') {\n      return tokens.filter(\n        (t: any) =>\n          t.name.match(new RegExp(`.*${this.filter}.*`, 'i')) ||\n          (!isNaN(Number(this.filter)) && t.id.toString().match(new RegExp(`.*${parseInt(this.filter)}.*`, 'g')))\n      );\n    }\n    return tokens;\n  }\n  updateFilter(filter: string): void {\n    const prevFilter = this.filter;\n    this.filter = filter || '.*';\n    if (prevFilter !== this.filter) {\n      this.sliceEnd = this.chunkSize;\n      this.refresh();\n      this.body.nativeElement.scrollTo(0, 0);\n    }\n  }\n  trackToken(index: number, token: any): string | number {\n    return token?.contractAddress ? token?.contractAddress + ':' + token?.id : index;\n  }\n}\n","<div class=\"main-container\" *ngIf=\"displayTokenCard()\">\n  <div class=\"flex-row top-container-nfts\">\n    <div class=\"flex-row toggle\">\n      <h1 class=\"flex-row\" [class.selected]=\"!isDiscover\" (click)=\"isDiscover = false\">NFT<span> / Collectibles</span>\n      </h1>\n      <h1 class=\"flex-row\" [class.selected]=\"isDiscover\" (click)=\"isDiscover = true\">{{ 'Discover' }}</h1>\n    </div>\n    <div class=\"flex-row right\">\n      <ng-container *ngIf=\"this.nfts && Object.keys(this.nfts).length > 0 && !isDiscover\">\n        <span class=\"flex-row button icon-grey\" [class.selected]=\"filter === 'ALL'\" (click)=\"filter = 'ALL';\">ALL</span>\n        <span class=\"flex-row button icon-grey\" [class.selected]=\"filter !== 'ALL'\" (click)=\"filter = '';\">APP</span>\n      </ng-container>\n      <!-- <img class=\"button icon\" src=\"../../../../assets/img/filter.svg\" />\n      <img class=\"button icon\" src=\"../../../../assets/img/info.svg\" /> -->\n    </div>\n  </div>\n  <div class=\"flex-row-wrap nfts\" [class.d]=\"isDiscover\">\n    <!-- loop through contracts -->\n    <ng-container *ngIf=\"!nftsArray?.length && !isDiscover\"><span>There are no NFTs in this account</span>\n    </ng-container>\n    <ng-container *ngFor=\"let contract of displayedNftsArray; trackBy:trackContract\">\n      <div class=\"flex-column collection\" [class.expanded]=\"filter === sanitizeKey(contract?.key)\"\n        [id]=\"sanitizeKey(contract?.key)\" [style.display]=\"!isDiscover && filter !== 'ALL' ? '' : 'none'\">\n        <div class=\"flex-row head\" (click)=\"toggleDropdown(sanitizeKey(contract?.key))\">\n          <div class=\"flex-row left\">\n            <app-asset class=\"nfts-head-thumbnail\" [assets]=\"{ thumbnailAsset:contract?.thumbnailUrl}\"></app-asset>\n            <div class=\"title\">\n              {{ contract?.name }}\n            </div>\n          </div>\n          <div class=\"flex-row right\">\n            <div class=\"count\">({{ contract?.tokens?.length }})</div>\n            <div class=\"flex-row button toggle\"><img src=\"../../../../assets/img/caret-left.svg\" /></div>\n          </div>\n        </div>\n        <div class=\"flex-column scroll\">\n          <app-nfts-body [isDisplaying]=\"filter === sanitizeKey(contract?.key)\" [tokens]=\"contract?.tokens\">\n          </app-nfts-body>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"flex-column collection scroll all\" [style.display]=\"!isDiscover && filter === 'ALL' ? '' : 'none'\">\n      <app-nfts-body class=\"all\" [isDisplaying]=\"!isDiscover && filter === 'ALL'\" [tokens]=\"tokens\" [searchable]=\"true\">\n      </app-nfts-body>\n    </div>\n    <ng-container *ngIf=\"isDiscover\">\n      <ng-container *ngFor=\"let contractAlias of contractAliases\">\n        <ng-container *ngIf=\"shouldDisplayLink(contractAlias?.shouldDisplayLink)\">\n          <a class=\"flex-column discover\" rel=\"noreferrer\" [href]=\"contractAlias?.link || '/'\" target=\"_blank\"\n            [style.display]=\"isDiscover ? '' : 'none'\">\n            <div class=\"flex-row top\">{{ getContractAlias(contractAlias?.category) || '' }}</div>\n            <div class=\"flex-column middle\" [class.zoom]=\"contractAlias?.zoomDiscoverImg\"\n              [style.backgroundColor]=\"contractAlias?.backgroundColor\">\n              <app-asset class=\"discover\" [class.zoom]=\"contractAlias?.zoomDiscoverImg\" [size]=\"'raw'\"\n                [assets]=\"{displayAsset: contractAlias.discoverUrl, thumbnailAsset: contractAlias.thumbnailUrl}\">\n              </app-asset>\n            </div>\n            <div class=\"flex-row bottom\">\n              <div class=\"flex-column left\">\n                <div class=\"title\">{{ contractAlias?.name || key }}</div>\n                <div class=\"description\">{{ contractAlias?.description }}</div>\n              </div>\n              <div class=\"flex-column right\">\n                <a class=\"link-to-app\">\n                  <button class=\"flex-row button\">GO <img src=\"assets/img/discover-right-angle.svg\" /></button>\n                </a>\n              </div>\n            </div>\n          </a>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>","import { Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { TorusWallet } from '../../../../../services/wallet/wallet';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { TokenService } from '../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../environments/environment';\nimport { TokenBalancesService } from '../../../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../../../services/subject/subject.service';\nimport { DisplayLinkOption } from '../../../../../interfaces';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-nfts',\n  templateUrl: './nfts.component.html',\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/cards/nfts/nfts.component.scss']\n})\nexport class NftsComponent implements OnInit, OnDestroy {\n  DisplayLinkOption = DisplayLinkOption;\n  Object = Object;\n  nfts = undefined;\n  nftsArray = [];\n  displayedNftsArray = [];\n  tokens = [];\n  isDiscover: boolean = false;\n  isInitLoad: boolean = true;\n  filter: string = 'APP';\n  contractAliases = Object.keys(CONSTANTS.CONTRACT_ALIASES).map((key: any) => ({ key, ...CONSTANTS.CONTRACT_ALIASES[key] }));\n  activeAddress: string = '';\n  sliceEnd = 20;\n  sliceIncrement = 10;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public tokenService: TokenService,\n    public tokenBalancesService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private walletService: WalletService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((n) => {\n        this.populateNfts(n);\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.logout.subscribe((o) => {\n        if (o) {\n          this.reset();\n          this.activeAddress = '';\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        const activeAddress = activeAccount?.address;\n        if (activeAddress !== this.activeAddress) {\n          this.activeAddress = activeAddress;\n          this.reset();\n        }\n      })\n    );\n  }\n  @Input() activity: any;\n  @Input() account;\n  ngOnInit(): void {\n    document.addEventListener(\n      'scroll',\n      (event) => {\n        const height = Math.max(\n          document.body.scrollHeight,\n          document.body.offsetHeight,\n          document.documentElement.clientHeight,\n          document.documentElement.scrollHeight,\n          document.documentElement.offsetHeight\n        );\n        if (height < document.body.scrollTop + document.body.clientHeight + 250) {\n          this.refreshDisplayedNfts(true);\n        }\n      },\n      true\n    );\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  populateNfts(n) {\n    if (!n) return;\n    if (this.isInitLoad) {\n      if (!n?.nfts || !Object.keys(n.nfts)?.length) {\n        this.isDiscover = true;\n      } else {\n        this.isInitLoad = false;\n        this.isDiscover = false;\n      }\n    }\n    this.nfts = n?.nfts;\n    this.nftsArray = n?.nfts ? Object.keys(n.nfts).map((key: any) => ({ key, ...n.nfts[key] })) : [];\n    this.refreshDisplayedNfts();\n    this.tokens = n?.nfts\n      ? Object.keys(n.nfts)\n          .map((key: any) => n.nfts[key]?.tokens)\n          .flat()\n      : [];\n  }\n  refreshDisplayedNfts(showMore = false) {\n    if (!this.tokenService?.initialized) {\n      return;\n    }\n    let incremented = false;\n    if (showMore && this.sliceEnd <= this.displayedNftsArray.length) {\n      this.sliceEnd += this.sliceIncrement;\n      incremented = true;\n    }\n    if (!showMore || incremented) {\n      this.displayedNftsArray = this.nftsArray.slice(0, this.sliceEnd);\n    }\n  }\n  displayTokenCard(): boolean {\n    return this.nfts !== undefined;\n  }\n  toggleDropdown(sel): void {\n    if (this.filter === sel) {\n      this.filter = '';\n    } else {\n      this.filter = sel;\n      const c = document.querySelector('#' + sel) as HTMLElement;\n      if (window.innerWidth < 1024) {\n        setTimeout(() => {\n          document.body.scroll(0, c.offsetTop - 25);\n        }, 25);\n      }\n    }\n  }\n  shouldDisplayLink(option: DisplayLinkOption): boolean {\n    if (option === 0 || (option === 1 && this.walletService.wallet instanceof TorusWallet)) {\n      return true;\n    }\n    return false;\n  }\n  sanitizeKey(key: string): string {\n    return 'ku' + key?.replace(/ /g, '');\n  }\n\n  trackContract(index: number, contract: any): string | number {\n    return contract?.key ? contract.key : index;\n  }\n\n  getContractAlias(category): string {\n    return category?.join(' · ');\n  }\n  reset(): void {\n    this.nfts = undefined;\n    this.isDiscover = false;\n    this.tokens = [];\n    this.nftsArray = [];\n    this.displayedNftsArray = [];\n    this.isInitLoad = true;\n    this.filter = 'APP';\n    this.sliceEnd = 20;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-basic-button',\n  templateUrl: './basic.component.html'\n})\nexport class BasicButtonComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<button *ngIf=\"symbol && !override; else detailButton\" class=\"flex-row button button-primary with-image\"\n  [class]=\"symbol === 'tez' ? 'tez' : ''\" (click)=\"prepareTransaction()\">\n  <svg *ngIf=\"symbol === 'tez'\" width=\"18\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\">\n    <path id=\"svg_1\"\n      d=\"m16.4439,9.50064c-0.764,0.764 -2.003,0.764 -2.767,0l-2.66,-2.659l0,9.231c0,1.105 -0.895,2 -2,2c-1.104,0 -2,-0.895 -2,-2l0,-9.254l-2.679,2.68c-0.767,0.767 -2.01,0.767 -2.777,0c-0.767,-0.767 -0.767,-2.01 0,-2.776l5.936,-5.936c0.037,-0.044 0.052,-0.099 0.093,-0.14c0.203,-0.203 0.558,-0.344 0.693,-0.439c0.716,-0.307 1.575,-0.176 2.16,0.409c0.101,0.101 0.152,0.227 0.227,0.342l5.774,5.774c0.765,0.764 0.765,2.004 0,2.768z\"\n      fill=\"rgb(255, 255, 255)\" fill-rule=\"evenodd\" />\n  </svg>\n  <img *ngIf=\"symbol !== 'tez'\" [src]=\"'../../../../assets/img/up-arrow.svg'\" />\n  <div class=\"tooltip\">\n    <div class=\"description\">Send {{ symbol }}</div>\n  </div>\n</button>\n<ng-template #detailButton>\n  <button class=\"button button-primary detail\" (click)=\"prepareTransaction()\">SEND</button>\n</ng-template>","import { Component, OnInit, Input } from '@angular/core';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { TokenService } from '../../../../../services/token/token.service';\nimport { SubjectService } from '../../../../../services/subject/subject.service';\nimport { BasicButtonComponent } from '../basic.component';\n\n@Component({\n  selector: 'app-send-button',\n  templateUrl: './send-button.component.html',\n  styleUrls: ['../../../../../../scss/components/ui/button/send.component.scss']\n})\nexport class SendButtonComponent extends BasicButtonComponent implements OnInit {\n  @Input() activeAccount: Account;\n  @Input() tokenTransfer: string;\n  @Input() symbol: string;\n  @Input() override = false;\n  asset = null;\n  constructor(public tokenService: TokenService, private subjectService: SubjectService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.asset = this.tokenService.getAsset(this.tokenTransfer);\n  }\n  prepareTransaction(): void {\n    this.subjectService.prepareTokenTransfer.next({\n      account: this.activeAccount,\n      tokenTransfer: this.tokenTransfer,\n      symbol: this.symbol\n    });\n  }\n}\n","<div class=\"flex-row balance\">\n  <div class=\"flex-row left\">\n    <app-asset class=\"asset\" [priorityList]=\"['thumbnailAsset', 'displayAsset', 'fallback']\" [assets]=\"token\" [class.sd]=\"token.name === 'tezos'\"\n      (click)=\"viewToken()\">\n    </app-asset>\n    <div class=\"flex-row title\" (click)=\"viewToken()\">{{token.name === 'tezos' ? 'Tezos' : token.symbol}}</div>\n    <div class=\"flex-column prices\">\n      <div class=\"price\">{{ token.name === 'tezos' ? (getBalance() | number: '1.0-' + (token?.decimals || 6) | removeComma) || '—' :\n        getBalance() }}</div>\n      <div class=\"price-usd\">{{ getBalanceFiat() ? '$' + (getBalanceFiat() | number:'1.2-2' | removeComma) : '—' }}\n      </div>\n    </div>\n  </div>\n  <div class=\"flex-row right\">\n    <ng-container *ngIf=\"token?.name === 'tezos'\">\n      <button *ngIf=\"this.account?.balanceXTZ\" class=\"flex-row button button-primary with-image buy\" (click)=\"buy()\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 5.00024V19.0002\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M5 12H19\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n        <div class=\"tooltip\">\n          <div class=\"description\">Get tez</div>\n        </div>\n      </button>\n      <button *ngIf=\"this.account?.balanceXTZ === 0\" class=\"flex-row button button-primary with-image buy tez\" (click)=\"buy()\">\n        <span style=\"text-transform: none;\">GET</span>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 5.00024V19.0002\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M5 12H19\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n        <div class=\"tooltip\" style=\"right: 0%;\">\n          <div class=\"description\">Get tez</div>\n        </div>\n      </button>\n    </ng-container>\n    <app-send-button *ngIf=\"token && this.account?.balanceXTZ !== 0\" [activeAccount]=\"account\"\n      [tokenTransfer]=\"token?.name === 'tezos' ? null : token?.contractAddress + ':' + token?.id\"\n      [symbol]=\"token?.name === 'tezos' ? 'tez' : token?.symbol\"></app-send-button>\n  </div>\n</div>","import { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { ModalComponent } from '../../../../../modals/modal.component';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { Big } from 'big.js';\nimport { RemoveCommaPipe } from '../../../../../../pipes/remove-comma.pipe';\nimport { SubjectService } from '../../../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-balance-token',\n  templateUrl: './balance-token.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/balances/balance-token.component.scss']\n})\nexport class BalanceTokenComponent implements OnInit {\n  @Input() token = null;\n  @Input() account;\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n\n  constructor(public removeCommaPipe: RemoveCommaPipe, private subjectService: SubjectService) {}\n  ngOnInit(): void {}\n\n  getBalance(): number | string {\n    return this.token?.name === 'tezos'\n      ? this.account?.balanceXTZ !== null\n        ? Big(this.account?.balanceXTZ).div(1000000).toFixed()\n        : undefined\n      : this.token?.balance;\n  }\n\n  getBalanceFiat(): number | undefined {\n    return this.token.name === 'tezos' ? this.account?.balanceUSD || undefined : this.token?.price && this.token.price >= 0.005 ? this.token.price : undefined;\n  }\n  viewToken(): void {\n    if (this.token?.name !== 'tezos') {\n      ModalComponent.currentModel.next({\n        name: 'token-detail',\n        data: this.token\n      });\n    }\n  }\n\n  buy() {\n    ModalComponent.currentModel.next({\n      name: 'buy',\n      data: undefined\n    });\n  }\n}\n","<div class=\"main-container\">\n  <div class=\"flex-row top-container-balances\">\n    <h1>Balances</h1>\n    <div class=\"flex-row button right\">\n      <button *ngIf=\"account?.isImplicit()\" class=\"swap-liquidity\" (click)=\"openSwap()\">Liquidity Baking</button>\n    </div>\n  </div>\n  <div class=\"scroll-wrapper\">\n    <app-balance-token [account]=\"account\" [token]=\"{name: 'tezos', fallback: 'assets/img/tezos-xtz-logo.svg'}\" class=\"tez no-box\"></app-balance-token>\n    <div *ngIf=\"!!this.tokenBalancesService?.balances?.length\" class=\"flex-column balances\">\n      <ng-container *ngFor=\"let balance of balances; let i = index; trackBy: trackToken\">\n        <app-balance-token [account]=\"account\" [token]=\"balance\" [class.first]=\"i === 0\"></app-balance-token>\n      </ng-container>\n    </div>\n    <div class=\"flex-row total-balances no-box\">\n      <div class=\"flex-row left\">\n        <h3>TOTAL VALUE:</h3>\n        <h1>{{ !!totalBalances && isFiat ? '$' + (totalBalances | number: '1.2-2' | removeComma) : '' }}{{ !!totalBalances && !isFiat ? (totalBalances | number: '1.0-6' | removeComma) + ' tez' : '' }}{{ !totalBalances ? '—' : '' }}</h1>\n      </div>\n      <div class=\"flex-row\" (click)=\"toggleTotalBalances()\">\n        <span class=\"fiat\" [class.selected]=\"isFiat\">\n          {{ 'usd' }}\n        </span>\n        <span class=\"sep\">&nbsp;{{ '|' }}&nbsp;</span>\n        <span class=\"tez\" [class.selected]=\"!isFiat\">\n          {{ 'tez' }}\n        </span>\n      </div>\n    </div>\n  </div>\n</div>","import { AfterViewChecked, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { CONSTANTS } from '../../../../../../environments/environment';\nimport { TokenBalancesService } from '../../../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../../../services/subject/subject.service';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Big } from 'big.js';\nimport { RemoveCommaPipe } from '../../../../../pipes/remove-comma.pipe';\nimport { ModalComponent } from '../../../../../components/modals/modal.component';\nimport { MessageService } from '../../../../../services/message/message.service';\n\n@Component({\n  selector: 'app-balances',\n  templateUrl: './balances.component.html',\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/cards/balances/balances.component.scss']\n})\nexport class BalancesComponent implements OnInit, AfterViewChecked, OnDestroy {\n  Object = Object;\n  @Input() account: Account;\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n  totalBalances: string | number = 0;\n  balances: any[];\n  isFiat = false;\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    public tokenBalancesService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private walletService: WalletService,\n    public removeCommaPipe: RemoveCommaPipe,\n    private messageService: MessageService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.pipe(filter((account: Account) => account?.address !== this.account?.address)).subscribe((account) => {\n        this.account = account;\n        this.balances = this.tokenBalancesService?.balances;\n        this.calcTotalBalances();\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        this.balances = p?.balances ?? this.tokenBalancesService?.balances;\n        this.calcTotalBalances();\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(() => {\n        this.balances = this.tokenBalancesService?.balances;\n        this.calcTotalBalances();\n      })\n    );\n  }\n  e(wrap) {\n    if (!!wrap) {\n      if (wrap.scrollTop < 1 || this.tokenBalancesService?.balances?.length <= 5) {\n        document.querySelector('.scroll-wrapper .tez').classList.add('no-box');\n        document.querySelector('.total-balances').classList.add('no-box');\n      } else {\n        document.querySelector('.scroll-wrapper .tez').classList.remove('no-box');\n        document.querySelector('.total-balances').classList.remove('no-box');\n      }\n\n      if (this.tokenBalancesService?.balances?.length > 4) {\n        wrap.style.overflowY = 'auto';\n        wrap.style.width = 'calc(100% - 2.675rem)';\n        wrap.style.padding = '0 0 0 2rem';\n      } else {\n        wrap.style.overflowY = '';\n        wrap.style.width = '';\n        wrap.style.padding = '';\n      }\n    }\n  }\n  ngOnInit(): void {\n    this.balances = this.tokenBalancesService?.balances;\n    this.calcTotalBalances();\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  ngAfterViewChecked(): void {\n    const wrap = document.querySelector('.scroll-wrapper .balances') as HTMLElement;\n    this.e(wrap);\n  }\n  trackToken(index: number, token: any): string | number {\n    return token?.contractAddress ? token.contractAddress + ':' + token?.id + ':' + token?.balance + ':' + token?.thumbnailAsset : index;\n  }\n\n  toggleTotalBalances(): void {\n    this.isFiat = !this.isFiat;\n    this.calcTotalBalances();\n  }\n  calcTotalBalances(): void {\n    this.totalBalances = this.isFiat\n      ? this.balances.reduce((prev, balance) => prev + parseFloat(balance?.price ?? 0), 0) + this.account?.balanceUSD\n      : this.balances.reduce((prev, balance) => prev + parseFloat(balance?.price ?? 0), 0) / this.walletService.wallet.XTZrate +\n        parseFloat(\n          Big(this.account?.balanceXTZ ?? 0)\n            .div(1000000)\n            .toFixed()\n        );\n  }\n  openSwap() {\n    this.messageService.startSpinner();\n    ModalComponent.currentModel.next({ name: 'swap-liquidity', data: null });\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"close()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <h1 class=\"title\">Token Info</h1>\n    </div>\n    <div class=\"flex-column token-info\">\n      <div class=\"flex-row-wrap data\">\n        <div class=\"flex-column wrapper\" [class]=\"imageExpanded ? 'expanded' : ''\">\n          <app-asset [style.display]=\"imageExpanded ? 'none' : ''\" class=\"flex-row button sd-only\"\n            [priorityList]=\"['displayAsset', 'thumbnailAsset']\"\n            [assets]=\"{thumbnailAsset: token?.thumbnailAsset, displayAsset: token?.displayAsset}\" [size]=\"'medium'\"\n            (click)=\"expandImage()\" (loaded)=\"assetLoaded = true\" [autoplay]=\"true\" [muted]=\"true\" [loop]=\"true\"\n            [playsinline]=\"true\"></app-asset>\n          <app-asset [style.display]=\"!imageExpanded ? 'none' : ''\" class=\"flex-row button sd-only\"\n            [priorityList]=\"['artifactAsset', 'displayAsset', 'thumbnailAsset']\"\n            [assets]=\"{thumbnailAsset: token?.thumbnailAsset, displayAsset: token?.displayAsset, artifactAsset: token?.artifactAsset}\"\n            [size]=\"'raw'\" [poster]=\"token?.displayAsset\" [controls]=\"true\"></app-asset>\n          <img *ngIf=\"imageExpanded\" class=\"flex-row button close\" (click)=\"expandImage()\"\n            src=\"../../../../../assets/img/close-btn-x.png\" />\n          <img *ngIf=\"!imageExpanded && assetLoaded && !token.displayAsset?.mimeType?.startsWith('model/')\"\n            class=\"expand\" src=\"../../../../../assets/img/expand.png\" (click)=\"expandImage()\" />\n          <b *ngIf=\"!imageExpanded && token.artifactAsset?.mimeType?.startsWith('model/')\" class=\"expand icon-threed\"\n            (click)=\"expandImage()\">3D</b>\n        </div>\n        <div class=\"flex-column meta\">\n          <div class=\"flex-column top\">\n            <div *ngIf=\"token?.name\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                name\n              </div>\n              <div class=\"value\">\n                {{ token?.name }}\n              </div>\n            </div>\n            <div *ngIf=\"!isNFT && token?.symbol\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                symbol\n              </div>\n              <div class=\"value\">\n                {{ token?.symbol }}\n              </div>\n            </div>\n            <div *ngIf=\"!isNFT && !!token?.decimals\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                decimals\n              </div>\n              <div class=\"value\">\n                {{ token?.decimals }}\n              </div>\n            </div>\n            <!-- <div *ngIf=\"isNFT && !!tokenFiltered?.last_sale\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                Last Sale Price\n              </div>\n              <div class=\"value\">\n                {{ tokenFiltered.last_sale + ' tez' }}\n              </div>\n            </div> -->\n            <div *ngIf=\"token?.description\" class=\"flex-column key-value desc\">\n              <div class=\"key\">\n                description\n              </div>\n              <div class=\"value\" style=\"white-space: pre-line; overflow-wrap: break-word;\">\n                {{token?.description}}\n              </div>\n            </div>\n          </div>\n        </div>\n        <app-asset [style.height]=\"isAudio ? '' : '0px'\" class=\"flex-row audio minimal-controls\" [requires]=\"['audio']\"\n          [assets]=\"token\" [priorityList]=\"['artifactAsset']\" [size]=\"'raw'\" [autoplay]=\"true\" [muted]=\"true\"\n          [hideSpinner]=\"true\" [controls]=\"true\" (load)=\"isAudio = true\"></app-asset>\n      </div>\n      <span *ngIf=\"isNFT && token?.floorPrice\" class=\"floor-price\">Collection Floor Price: <span>{{ token?.floorPrice + ' tez' }}</span></span>\n      <ng-container *ngFor=\"let type of Object.keys(CONSTANTS.FEATURE_CONTRACTS)\">\n        <ng-container *ngFor=\"let feat of Object.keys(CONSTANTS.FEATURE_CONTRACTS[type])\">\n          <app-ui-toggle-advanced\n            *ngIf=\"CONSTANTS.FEATURE_CONTRACTS[type][feat]?.includes(token?.contractAddress + ':' + token?.id)\"\n            [class]=\"'feat ' + feat\" style=\"width: 100%; margin: 0 0 1em 0\" (stateChange)=\"toggleFeature(type, feat)\"\n            [text]=\"(feat + ' Mode').toUpperCase()\" [state]=\"theme === feat\" [default]=\"theme === feat\">\n          </app-ui-toggle-advanced>\n        </ng-container>\n      </ng-container>\n      <div *ngIf=\"tokenFiltered?.attributes?.length\" class=\"flex-column attr-more\">\n        <div class=\"flex-row button attr-info\" [class]=\"attrInfo ? 'open' : ''\" (click)=\"attrInfo = !attrInfo\">\n          <span>Attributes <span class=\"count\">&nbsp;{{ tokenFiltered?.attributes.length }}</span></span><img src=\"../../../assets/img/chevron-down.svg\" />\n        </div>\n        <div class=\"flex-row-wrap attributes\" [style.maxHeight]=\"attrInfo ? (4.5 * Object.keys(tokenFiltered?.attributes)?.length + 6) + 'em' : '0em'\"\n        [style.overflowY]=\"attrInfo ? 'auto' : 'hidden'\">\n          <ng-container *ngFor=\"let a of tokenFiltered.attributes\">\n            <div class=\"flex-column attr\">\n              <div class=\"name\">\n                {{ a.attribute.name }}\n              </div>\n              <div class=\"value\">\n                {{ a.attribute.value }}\n              </div>\n              <div *ngIf=\"!!a.attribute.freq\" class=\"freq\">\n                {{ a.attribute.freq || '-' }}\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n      <div *ngIf=\"!!token\" class=\"flex-row button more-info\" [class]=\"moreInfo ? 'open' : ''\" (click)=\"expand()\">\n        <span>{{ moreInfo ? 'LESS' : 'MORE' }} INFO</span><img src=\"../../../assets/img/chevron-down.svg\" />\n      </div>\n      <div *ngIf=\"!!token\" [style.maxHeight]=\"moreInfo ? (3.25 * Object.keys(tokenFiltered).length) + 'rem' : ''\"\n        [style.overflowY]=\"autoOverflow ? 'auto' : ''\" class=\"flex-column meta-more\">\n        <ng-container *ngFor=\"let key of Object.keys(tokenFiltered)\">\n          <div *ngIf=\"key === 'contractAddress'\" class=\"flex-column key-value\">\n            <div class=\"key\">\n              {{ 'CONTRACT (ID)' }}\n            </div>\n            <div class=\"value\">\n              {{ token[key] + ' ' + '(' + token['id'] + ')' }}\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <div *ngIf=\"!token?.isUnknownToken\" class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <app-send-button class=\"send\" [override]=\"true\" [activeAccount]=\"activeAccount\"\n          [tokenTransfer]=\"!token ? null : token['contractAddress']+':'+token['id']\"\n          [symbol]=\"!token ? 'tez' : token?.symbol\">\n        </app-send-button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ModalComponent } from '../../modal.component';\nimport { TokenBalancesService } from '../../../../services/token-balances/token-balances.service';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { CONSTANTS } from '../../../../../environments/environment';\nimport { UnlockableService } from '../../../../services/unlockable/unlockable.service';\nimport { ObjktService } from '../../../../services/indexer/objkt/objkt.service';\nimport { TokenService } from '../../../../services/token/token.service';\nimport Big from 'big.js';\n@Component({\n  selector: 'app-token-detail',\n  templateUrl: './token-detail.component.html',\n  styleUrls: ['../../../../../scss/components/modals/modal.scss']\n})\nexport class TokenDetail extends ModalComponent implements OnInit, OnDestroy {\n  Object = Object;\n  CONSTANTS = CONSTANTS;\n  token = null;\n  tokenFiltered: any = {};\n  activeAccount = null;\n  moreInfo = false;\n  attrInfo = false;\n  imageExpanded = false;\n  autoOverflow = false;\n  descOverflow = false;\n  isNFT = false;\n  assetLoaded = false;\n  isAudio = false;\n  name = 'token-detail';\n  readonly blacklistMeta = [\n    'name',\n    'kind',\n    'artifactAsset',\n    'displayAsset',\n    'thumbnailAsset',\n    'rawUrl',\n    'isTransferable',\n    'isBooleanAmount',\n    'balance',\n    'category',\n    'symbol',\n    'decimals',\n    'status',\n    'shouldPreferSymbol',\n    'price',\n    'formats',\n    'isUnknownToken'\n  ];\n\n  theme = '';\n\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    private subjectService: SubjectService,\n    private tokenBalancesService: TokenBalancesService,\n    private tokenService: TokenService,\n    private unlockableService: UnlockableService,\n    private objktService: ObjktService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.activeAccount = activeAccount;\n      })\n    );\n    for (let type of Object.keys(CONSTANTS.FEATURE_CONTRACTS)) {\n      for (let feat of Object.keys(CONSTANTS.FEATURE_CONTRACTS[type])) {\n        if (document.documentElement.classList.contains(feat)) {\n          this.theme = feat;\n        }\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  async open(data): Promise<void> {\n    this.token = data;\n    !!this.token\n      ? Object.keys(this.token)\n          .filter((key) => !this.blacklistMeta.includes(key))\n          .forEach((key) => (this.tokenFiltered[key] = this.token[key]))\n      : this.token;\n    this.isNFT = this.tokenBalancesService.isNFT(this.token);\n    this.descOverflow = this.token?.description && this.token?.description.length > 250 ? true : false;\n    this.objktService.resolveToken(this.token.contractAddress, this.token.id).then((d) => {\n      if (Object.keys(this.tokenFiltered).length === 0) {\n        return;\n      }\n      this.token.floorPrice = d?.floor_price ? Big(d.floor_price).div(1000000) : undefined;\n      d?.last_sale ? (d.last_sale = Big(d.last_sale).div(1000000)) : undefined;\n      this.tokenFiltered = { ...d, ...this.tokenFiltered };\n      this.tokenFiltered.attributes = this.tokenFiltered?.attributes?.sort((a, b) =>\n        a.attribute.name > b.attribute.name ? 1 : a.attribute.name < b.attribute.name ? -1 : 0\n      );\n      const size = d?.editions;\n      this.tokenFiltered.attributes = this.tokenFiltered?.attributes\n        ? this.tokenFiltered.attributes?.map((attr) => {\n            if (attr.attribute?.attribute_counts?.length) {\n              attr.attribute.freq = (attr.attribute?.attribute_counts[0].editions * 100) / size;\n              attr.attribute.freq = attr.attribute.freq === 0 ? undefined : attr.attribute.freq > 100 ? '—' : attr.attribute.freq.toFixed(2) + '%';\n            }\n            return attr;\n          })\n        : [];\n    });\n    super.open();\n  }\n\n  close(): void {\n    this.reset();\n    super.close();\n  }\n\n  expand(): void {\n    this.moreInfo = !this.moreInfo;\n    if (!this.autoOverflow) {\n      setTimeout(() => {\n        this.autoOverflow = !this.autoOverflow;\n      }, 160);\n    } else {\n      this.autoOverflow = !this.autoOverflow;\n    }\n  }\n\n  expandImage(): void {\n    this.imageExpanded = !this.imageExpanded;\n  }\n\n  async toggleFeature(type, feat): Promise<void> {\n    this.theme = this.unlockableService.toggleFeature(type, feat) ? feat : '';\n  }\n\n  reset(): void {\n    this.moreInfo = false;\n    this.attrInfo = false;\n    this.imageExpanded = false;\n    this.descOverflow = false;\n    this.assetLoaded = false;\n    this.isAudio = false;\n    this.tokenFiltered = {};\n  }\n}\n","<div class=\"flex-column wrapper\" *ngIf=\"account\">\n  <div class=\"grid\" [class.more-than-15]=\"moreThan15\">\n    <app-balances [account]=\"account\"></app-balances>\n    <app-nfts [account]=\"account\"></app-nfts>\n    <app-activity [account]=\"account\"></app-activity>\n  </div>\n</div>\n<app-token-detail></app-token-detail>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Account, Activity, ImplicitAccount } from '../../../../services/wallet/wallet';\nimport { TimeAgoPipe } from '../../../../pipes/time-ago.pipe';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../services/message/message.service';\nimport * as copy from 'copy-to-clipboard';\nimport { CONSTANTS } from '../../../../../environments/environment';\nimport { ActivityService } from '../../../../services/activity/activity.service';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-account-view',\n  templateUrl: './account-view.component.html',\n  styleUrls: ['../../../../../scss/components/views/logged-in/account-view/account-view.component.scss']\n})\nexport class AccountViewComponent implements OnInit, OnDestroy {\n  account: Account;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public timeAgoPipe: TimeAgoPipe,\n    private activityService: ActivityService,\n    public tokenService: TokenService,\n    private subjectService: SubjectService\n  ) {}\n  trigger = true;\n  @Input() activity: any;\n  moreThan15 = false;\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.account = activeAccount;\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        this.moreThan15 = Object.keys(p?.nfts ?? {})?.length > 15 ? true : false;\n      })\n    );\n    setInterval(() => (this.trigger = !this.trigger), 1000);\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  getType(transaction: Activity): string {\n    if (transaction.type !== 'transaction') {\n      if (transaction.type === 'delegation') {\n        if (transaction.destination.address) {\n          return 'delegated';\n        } else {\n          return 'undelegated';\n        }\n      } else {\n        return transaction.type;\n      }\n    } else {\n      let operationType = '';\n      if (transaction.source.address === this.account.address) {\n        operationType = 'sent';\n      } else {\n        operationType = 'received';\n      }\n      return operationType;\n    }\n  }\n\n  getCounterparty(transaction: any): string {\n    return this.activityService.getCounterparty(transaction, this.account);\n  }\n  copy(account: Account): void {\n    copy(account.address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(account.address + ' ' + copyToClipboard, 5);\n  }\n  explorerURL(hash: string): string {\n    const baseURL = CONSTANTS.BLOCK_EXPLORER_URL;\n    return `${baseURL}/${hash}`;\n  }\n  printAmount(activity: Activity): string {\n    return this.tokenService.formatAmount(activity.tokenId, activity.amount.toString());\n  }\n  sentKind(activity): string {\n    if (activity.entrypoint) {\n      return `Called ${activity.entrypoint}`;\n    }\n    return 'Sent';\n  }\n  zeroSent(activity): boolean {\n    return this.sentKind(activity).length > 4 && activity.amount === '0';\n  }\n  receivedKind(activity): string {\n    return activity.tokenId && activity.source.address && activity.tokenId.split(':')[0] === activity.source.address ? 'Minted' : 'Received';\n  }\n  displayTokenCard(): boolean {\n    return this.account instanceof ImplicitAccount || this.account?.tokens?.length > 0;\n  }\n}\n","<div class=\"flex-column settings\">\n  <a><button class=\"flex-row back\" [routerLink]=\"'/account/' + activeAccount?.address\"><img\n        src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n  <h3>Connect with dApps</h3>\n  <div class=\"seperator\"></div>\n  <div class=\"flex-column handler\">\n    <div>\n      <h4>Connect to dApps on <u>another device</u> by scanning a QR code.</h4>\n    </div>\n    <div class=\"scan-button\">\n      <app-qr-scanner></app-qr-scanner>\n    </div>\n  </div>\n  <ng-container *ngIf=\"walletConnectService.pairings?.size || walletConnectService.sessions?.size\">\n    <h3 style=\"height: 1.5rem\">Wallet Connect</h3>\n    <div class=\"seperator\"></div>\n    <div style=\"margin-left: 1rem\">\n      <ng-container>\n        <ng-container *ngIf=\"walletConnectService.pairings.size\">\n          <h4>Pairings <span class=\"blue-click\"\n              (click)=\"walletConnectService.pairings.expanded = !walletConnectService.pairings.expanded\">&nbsp;{{\n              walletConnectService.pairings.expanded ? '&ndash;' : '+'}}&nbsp;</span>\n            <ng-container\n              *ngIf=\"walletConnectService.pairings.size\">({{walletConnectService.pairings.size}})</ng-container>\n          </h4>\n          <table *ngIf=\"walletConnectService.pairings.expanded\">\n            <tbody class=\"wc pairings\">\n              <ng-container *ngFor=\"let dapp of walletConnectService.pairings.dapp | keyvalue\">\n                <tr class=\"dapp\">\n                  <td>{{ dapp.key }}<ng-container *ngIf=\"dapp?.value?.p?.length > 1\">&nbsp;<span class=\"blue-click\"\n                        (click)=\"walletConnectService.pairings.dapp[dapp.key].expanded = !walletConnectService.pairings.dapp[dapp.key].expanded\">\n                        {{ dapp?.value?.expanded ? '&ndash;' : '+' }}\n                      </span>\n                      <ng-container *ngIf=\"walletConnectService.pairings?.dapp[dapp.key].p?.length > 1\">\n                        ({{walletConnectService.pairings.dapp[dapp.key].p.length}})</ng-container>\n                    </ng-container>\n                  </td>\n                  <td><img (click)=\"walletConnectService.deletePairings(dapp?.value?.p)\"\n                      src=\"../../../assets/img/wc_delete.svg\"></td>\n                </tr>\n                <ng-container *ngIf=\"dapp?.value?.expanded && dapp?.value?.p?.length > 1\">\n                  <tr *ngFor=\"let p of dapp?.value?.p | keyvalue: unsorted\">\n                    <td>&emsp;#{{ p.key }}</td>\n                    <td><img (click)=\"walletConnectService.deletePairings([p?.value])\"\n                        src=\"../../../assets/img/wc_delete.svg\"></td>\n                  </tr>\n                </ng-container>\n              </ng-container>\n            </tbody>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"walletConnectService.sessions.size\">\n          <h4>Sessions <span class=\"blue-click\"\n              (click)=\"walletConnectService.sessions.expanded = !walletConnectService.sessions.expanded\">&nbsp;{{\n              walletConnectService.sessions.expanded ? '&ndash;' : '+'}}&nbsp;</span>\n            <ng-container\n              *ngIf=\"walletConnectService.sessions.size\">({{walletConnectService.sessions.size}})</ng-container>\n          </h4>\n          <table *ngIf=\"walletConnectService.sessions.expanded\">\n            <tbody class=\"wc sessions\">\n              <ng-container *ngFor=\"let dapp of walletConnectService.sessions.dapp | keyvalue\">\n                <tr class=\"dapp\">\n                  <td>{{ dapp.key }}<ng-container *ngIf=\"dapp?.value?.s?.length > 1\">&nbsp;<span class=\"blue-click\"\n                        (click)=\"walletConnectService.sessions.dapp[dapp.key].expanded = !walletConnectService.sessions.dapp[dapp.key].expanded\">\n                        {{ dapp?.value?.expanded ? '&ndash;' : '+' }}\n                      </span>\n                      <ng-container *ngIf=\"walletConnectService.sessions?.dapp[dapp.key].s?.length > 1\">\n                        ({{walletConnectService.sessions.dapp[dapp.key].s.length}})</ng-container>\n                    </ng-container>\n                  </td>\n                  <td>\n                    <ng-container *ngIf=\"!dapp?.value?.expanded || dapp.value.s.length === 1\">{{ dapp.value.s[dapp.value.s.length - 1].address }}\n                    </ng-container>\n                  </td>\n                  <td>\n                    <img class=\"modify\" (click)=\"changeSession(dapp.value.s[dapp.value.s.length-1])\" src=\"../../../assets/img/wc_modify.svg\">\n                    <img (click)=\"walletConnectService.deleteSessions(dapp?.value?.s)\" src=\"../../../assets/img/wc_delete.svg\">\n                  </td>\n                </tr>\n                <ng-container *ngIf=\"dapp?.value?.expanded && dapp?.value?.s?.length > 1\">\n                  <tr *ngFor=\"let s of dapp?.value?.s | keyvalue: unsorted\">\n                    <td>&nbsp;&nbsp;&nbsp;&nbsp;#{{ s.key }}</td>\n                    <td>{{s?.value?.address}}</td>\n                    <td><img (click)=\"walletConnectService.deleteSessions([s?.value])\"\n                        src=\"../../../assets/img/wc_delete.svg\">\n                    </td>\n                  </tr>\n                </ng-container>\n              </ng-container>\n            </tbody>\n          </table>\n        </ng-container>\n      </ng-container>\n    </div>\n  </ng-container>\n  <h3>Peers</h3>\n  <div class=\"seperator\"></div>\n  <table *ngIf=\"beaconService.peers.length\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Relay server</th>\n        <th><span (click)=\"beaconService.removePeers()\">Remove&nbsp;all</span></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let peer of beaconService.peers; index as i\">\n        <td>{{ peer.name }}</td>\n        <td>{{ peer.relayServer }}</td>\n        <td (click)=\"beaconService.removePeer(i)\"><img (click)=\"beaconService.removePeer(i)\"\n            src=\"../../../assets/img/cross.svg\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <h3>Permissions</h3>\n  <div class=\"seperator\"></div>\n  <table *ngIf=\"beaconService.permissions.length\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Address</th>\n        <th><span (click)=\"beaconService.removePermissions()\">Remove&nbsp;all</span></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let permission of beaconService.permissions; index as i\"\n        [class.inactive]=\"!accountAvailable(permission.address)\">\n        <td>{{ permission.appMetadata.name }}</td>\n        <td>{{ formatAddress(permission.address) }}</td>\n        <td><img (click)=\"beaconService.removePermission(i)\" src=\"../../../assets/img/cross.svg\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <h3>Tokens</h3>\n  <div class=\"seperator\"></div>\n  <button class=\"rescan\" (click)=\"rescan()\">Rescan unknown tokens</button>\n  <button id=\"all\" class=\"rescan\" (click)=\"rescanAll()\">Clear all token metadata</button>\n  <button *ngIf=\"canRevealMnomonic()\" class=\"reveal-mnemonic\" (click)=\"revealMnemonic()\">Reveal Seed Words</button>\n</div>","import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\nimport { BeaconService } from '../../../../services/beacon/beacon.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { Router } from '@angular/router';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { Subscription } from 'rxjs';\nimport { CoordinatorService } from '../../../../services/coordinator/coordinator.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { ModalComponent } from '../../../../components/modals/modal.component';\nimport { HdWallet, LegacyWalletV3 } from '../../../../services/wallet/wallet';\nimport { WalletConnectService } from '../../../../services/wallet-connect/wallet-connect.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['../../../../../scss/components/views/logged-in/settings/settings.component.scss']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  implicitAccounts = [];\n  wideAccounts = false;\n  activeAccount = null;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public beaconService: BeaconService,\n    private messageService: MessageService,\n    private walletService: WalletService,\n    private router: Router,\n    private tokenService: TokenService,\n    private coordinatorService: CoordinatorService,\n    private subjectService: SubjectService,\n    public walletConnectService: WalletConnectService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.implicitAccounts = this.walletService.wallet.getImplicitAccounts();\n      this.beaconService.syncBeaconState();\n      this.onResize();\n    }\n\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.activeAccount = activeAccount;\n      })\n    );\n  }\n  ngOnDestroy(): void {}\n  accountAvailable(pkh: string): boolean {\n    const index = this.implicitAccounts.findIndex((impAcc: any) => impAcc.pkh === pkh);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n  @HostListener('window:resize')\n  onResize(): void {\n    this.wideAccounts = window.innerWidth > 600;\n  }\n  formatAddress(address: string): string {\n    if (this.wideAccounts) {\n      return address;\n    } else {\n      return address.slice(0, 6) + '...' + address.slice(-4);\n    }\n  }\n  rescan(): void {\n    this.tokenService.resetCounters();\n    this.messageService.add('Scanning for token metadata...');\n    this.coordinatorService.update(this.activeAccount.address);\n    this.router.navigate([`/account/${this.activeAccount.address}`]);\n  }\n  rescanAll(): void {\n    this.tokenService.resetAllMetadata();\n    this.messageService.add('Rescanning all token metadata...');\n    this.coordinatorService.update(this.activeAccount.address);\n    this.router.navigate([`/account/${this.activeAccount.address}`]);\n  }\n  revealMnemonic(): void {\n    ModalComponent.currentModel.next({ name: 'export-mnemonic', data: null });\n  }\n  canRevealMnomonic(): boolean {\n    return this.walletService.wallet && (this.walletService.wallet instanceof HdWallet || this.walletService.wallet instanceof LegacyWalletV3);\n  }\n  changeSession(session: any): void {\n    ModalComponent.currentModel.next({ name: 'session-select', data: { topic: session.topic, preSelectedAccountAddress: session.address } });\n  }\n  unsorted() {}\n}\n","<div class=\"flex-column delegate-page\">\n  <div class=\"content\">\n    <div class=\"flex-column manual\">\n      <div class=\"flex-column delegate\">\n        <a [routerLink]=\"'/account/' + activeAccount?.address\"><button class=\"flex-row back\"><img\n              src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n        <h1>Staking</h1>\n        <div class=\"flex-row toolbar\"><span class=\"button blue\" (click)=\"toggleCustom()\">Enter Custom Baker</span><span\n            *ngIf=\"!delegates?.length\" class=\"button blue\" (click)=\"this.delegateService.getDelegates()\">Reload</span>\n        </div>\n        <ng-container *ngIf=\"isShowingCustom\">\n          <span>Address or domain of a registered baker</span>\n          <div class=\"custom\">\n            <input [(ngModel)]=\"customAddress\" placeholder=\"Custom baker address\" /><button class=\"button\" (click)=\"stake({address: customAddress})\">STAKE</button>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"flex-column list\">\n      <ng-container *ngFor=\"let delegate of delegates\">\n        <div class=\"flex-row delegate desktop\">\n          <img class=\"logo\" [src]=\"delegate.logo ? delegate.logo : ''\" />\n          <span class=\"name\">{{ delegate.name }}</span>\n          <span class=\"fee\">SPLIT:&nbsp;<b class=\"value\">{{ toPercent(delegate?.fee) }}</b></span>\n          <span class=\"freespace\">SPACE:&nbsp;<b class=\"value\">{{ round(delegate?.freeSpace) + ' tez' }}</b></span>\n          <span class=\"estROI\">EST REWARDS:&nbsp;<b class=\"value\">{{ toPercent(delegate?.estimatedRoi) }}</b></span>\n          <span class=\"accuracy\">ACCURACY:&nbsp;<b class=\"value\">{{ delegate?.payoutAccuracy }}</b></span>\n          <button *ngIf=\"delegate?.address !== activeAccount?.delegate\" class=\"button\" (click)=\"stake(delegate)\">STAKE</button>\n          <span class=\"current\" *ngIf=\"delegate?.address === activeAccount?.delegate\">CURRENT</span>\n        </div>\n        <div class=\"flex-row delegate mobile\">\n          <div class=\"flex-column props\">\n            <img class=\"logo\" [src]=\"delegate.logo ? delegate.logo : ''\" />\n            <span class=\"name\">{{ delegate.name }}</span>\n            <span class=\"fee\">SPLIT:&nbsp;<b class=\"value\">{{ toPercent(delegate?.fee) }}</b></span>\n            <span class=\"freespace\">SPACE:&nbsp;<b class=\"value\">{{ round(delegate?.freeSpace) + ' tez' }}</b></span>\n            <span class=\"estROI\">EST REWARDS:&nbsp;<b class=\"value\">{{ toPercent(delegate?.estimatedRoi) }}</b></span>\n          </div>\n          <button *ngIf=\"delegate?.address !== activeAccount?.delegate\" class=\"button\" (click)=\"stake(delegate)\">STAKE</button>\n          <span class=\"current\" *ngIf=\"delegate?.address === activeAccount?.delegate\">CURRENT</span>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { DelegateService } from '../../../../services/delegate/delegate.service';\nimport { ModalComponent } from '../../../modals/modal.component';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-delegate-page',\n  templateUrl: './delegate-page.component.html',\n  styleUrls: ['../../../../../scss/components/views/logged-in/delegate/delegate.component.scss']\n})\nexport class DelegatePageComponent implements OnInit, OnDestroy {\n  delegates;\n  activeAccount = null;\n  customAddress: string = '';\n  isShowingCustom = false;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    public delegateService: DelegateService,\n    public router: Router,\n    public walletService: WalletService,\n    public inputValidationService: InputValidationService,\n    private messageServcie: MessageService,\n    private subjectService: SubjectService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        if (this.activeAccount !== activeAccount) {\n          this.activeAccount = activeAccount;\n          this.subscriptions.add(\n            this.delegateService.delegates.pipe(take(1)).subscribe((d) => {\n              this.delegates = this.filter(d).sort((x, y) => (x.address === this.activeAccount?.delegate ? -1 : y === this.activeAccount?.delegate ? 1 : 0));\n            })\n          );\n        }\n      })\n    );\n\n    this.subscriptions.add(\n      this.delegateService.delegates.subscribe((d) => {\n        this.delegates = this.filter(d).sort((x, y) => (x.address === this.activeAccount?.delegate ? -1 : y === this.activeAccount?.delegate ? 1 : 0));\n      })\n    );\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  filter(delegates: any): any[] | null {\n    if (delegates?.length) {\n      const balanceXTZ = this.activeAccount ? Math.ceil(this.activeAccount.balanceXTZ / 1000000) : 0;\n      return delegates\n        .map((d) => {\n          try {\n            if (d.freeSpace > balanceXTZ && d.estimatedRoi >= 0 && d.openForDelegation === true && d.minDelegation < balanceXTZ) {\n              return d;\n            }\n          } catch {\n            return null;\n          }\n          return null;\n        })\n        .filter((obj) => obj);\n    }\n    return [];\n  }\n  stake(delegate: any): void {\n    if (delegate.address === '' || this.inputValidationService.validDelegationAddress(delegate.address)) {\n      ModalComponent.currentModel.next({\n        name: 'delegate-confirm',\n        data: delegate\n      });\n    } else {\n      this.messageServcie.addError(`Invalid baker address: ${delegate?.address}`);\n    }\n  }\n\n  round(val): string {\n    return Math.round(Number(val)).toString();\n  }\n\n  toPercent(val): string {\n    return parseFloat((Number(val) * 100).toFixed(2)).toString() + '%';\n  }\n\n  toggleCustom(): void {\n    this.isShowingCustom = this.isShowingCustom ? false : true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccountViewComponent } from './account-view/account-view.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { DelegatePageComponent } from './delegate-page/delegate-page.component';\nimport { ActivateComponent } from '../start/activate/activate.component';\n\nconst routes: Routes = [\n  { path: ':address', component: AccountViewComponent },\n  { path: ':address/settings', component: SettingsComponent },\n  { path: ':address/stakers', component: DelegatePageComponent },\n  { path: 'activate', component: ActivateComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoggedInRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { SendComponent } from '../../misc/send/send.component';\nimport { ReceiveComponent } from '../../modals/receive/receive.component';\nimport { DelegateComponent } from '../../modals/delegate/delegate.component';\nimport { DelegatePageComponent } from './delegate-page/delegate-page.component';\nimport { ActivateComponent } from '../start/activate/activate.component';\nimport { NewImplicitComponent } from '../../modals/new-implicit/new-implicit.component';\nimport { UriHandlerComponent } from '../../misc/uri-handler/uri-handler.component';\nimport { PermissionRequestComponent } from '../../modals/permission-request/permission-request.component';\nimport { PermissionRequestDropdownComponent } from '../../ui/dropdown/permission-request/permission-request.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { QrScannerComponent } from '../../modals/qr-scanner/qr-scanner.component';\nimport { SignExprComponent } from '../../modals/sign-expr/sign-expr.component';\nimport { ConfirmSendComponent } from '../../modals/send/confirm/send-confirmation.component';\nimport { PrepareSendComponent } from '../../modals/send/prepare/prepare-send.component';\nimport { OriginateComponent } from '../../modals/originate/originate.component';\nimport { LoggedInComponent } from './logged-in.component';\nimport { LoggedInRoutingModule } from './logged-in-routing.module';\nimport { ConfirmSendEmbedComponent } from '../embedded/confirm-send/confirm-send.component';\nimport { SignExprEmbedComponent } from '../embedded/sign-expr/sign-expr.component';\nimport { AdvancedToggleComponent } from '../../ui/button/toggle/advanced/advanced.component';\nimport { PrepareSendDropdownComponent } from '../../ui/dropdown/prepare-send/prepare-send-dropdown.component';\nimport { AssetComponent } from '../../ui/asset/asset.component';\nimport { NftsBodyComponent } from './account-view/nfts/body/body.component';\nimport { NftsTokenComponent } from './account-view/nfts/token/token.component';\nimport { AccountListComponent } from '../../modals/account-list/list.component';\nimport { AccountListBodyComponent } from '../../modals/account-list/body/body.component';\nimport { ListComponent } from '../../ui/generic/list.component';\nimport { SearchBarComponent } from '../../ui/search/search.component';\nimport { RemoveCommaPipe } from '../../../pipes/remove-comma.pipe';\nimport { ExprTemplateComponent } from '../embedded/sign-expr/template/template.component';\nimport { QueueEmbedComponent } from '../embedded/queue/queue.component';\nimport { SwapLiquidityComponent } from '../../modals/swap-liquidity/swap-liquidity.component';\nimport { SwapLiquidityService } from '../../../services/swap-liquidity/swap-liquidity.service';\nimport { InfoComponent } from '../../modals/info/info.component';\nimport { ExportMnemonicComponent } from '../../modals/export-mnemonic/export-mnemonic.component';\nimport { SwapLiquidityConfirmComponent } from '../../modals/swap-liquidity/swap-liquidity-confirm.component';\nimport { ChartComponent } from '../../ui/chart/chart.component';\nimport { ChartService } from '../../../../app/services/chart/chart.service';\nimport { BuyComponent } from './account-view/buy/buy.component';\nimport { BuyModalComponent } from '../../modals/buy/buy.component';\nimport { SessionSelectComponent } from '../../modals/session-select/session-select.component';\nimport { SessionSelectDropdownComponent } from '../../ui/dropdown/session-select/session-select.component';\n\n@NgModule({\n  declarations: [\n    SendComponent,\n    ReceiveComponent,\n    DelegatePageComponent,\n    SwapLiquidityComponent,\n    ActivateComponent,\n    LoggedInComponent,\n    NewImplicitComponent,\n    UriHandlerComponent,\n    PermissionRequestComponent,\n    PermissionRequestDropdownComponent,\n    SettingsComponent,\n    QrScannerComponent,\n    SignExprComponent,\n    OriginateComponent,\n    ConfirmSendComponent,\n    PrepareSendComponent,\n    DelegateComponent,\n    AdvancedToggleComponent,\n    ConfirmSendEmbedComponent,\n    SignExprEmbedComponent,\n    QueueEmbedComponent,\n    PrepareSendDropdownComponent,\n    AssetComponent,\n    NftsBodyComponent,\n    NftsTokenComponent,\n    AccountListComponent,\n    AccountListBodyComponent,\n    ListComponent,\n    SearchBarComponent,\n    RemoveCommaPipe,\n    ExprTemplateComponent,\n    SwapLiquidityConfirmComponent,\n    InfoComponent,\n    RemoveCommaPipe,\n    ExportMnemonicComponent,\n    ChartComponent,\n    BuyComponent,\n    BuyModalComponent,\n    SessionSelectComponent,\n    SessionSelectDropdownComponent\n  ],\n  imports: [CommonModule, LoggedInRoutingModule, HttpClientModule, FormsModule],\n  exports: [\n    BuyComponent,\n    BuyModalComponent,\n    AdvancedToggleComponent,\n    SendComponent,\n    ConfirmSendEmbedComponent,\n    SignExprEmbedComponent,\n    QueueEmbedComponent,\n    AssetComponent,\n    NftsBodyComponent,\n    NftsTokenComponent,\n    PermissionRequestComponent,\n    PermissionRequestDropdownComponent,\n    SessionSelectComponent,\n    SessionSelectDropdownComponent,\n    ListComponent,\n    AccountListComponent,\n    AccountListBodyComponent,\n    SearchBarComponent,\n    RemoveCommaPipe,\n    ExprTemplateComponent,\n    InfoComponent,\n    ChartComponent\n  ],\n  providers: [SwapLiquidityService, ChartService, EstimateService, RemoveCommaPipe]\n})\nexport class LoggedInModule {}\n","<form autocomplete=\"off\">\n  <div class=\"flex-column card\">\n    <a routerLink=\"/import/\" [state]=\"{ option: 2 }\"><button class=\"flex-row back\"><img\n          src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n    <div class=\"flex-column body\">\n      <h1>\n        Activate a Fundraiser wallet\n      </h1>\n      <p class=\"description\">Wallets created during the fundraiser need to be activated. No private key is required for\n        the activation process.</p>\n      <span class=\"description\">Your public key hash</span>\n      <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"pkh\" [placeholder]=\"'tz1...'\">\n      <span class=\"description\">Your activation code</span>\n      <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"secret\" [placeholder]=\"'Code'\">\n      <button class=\"button next\" (click)=\"activate()\">Activate</button>\n      <span *ngIf=\"formInvalid\" class=\"description red\">\n        {{ formInvalid }}\n      </span>\n    </div>\n  </div>\n</form>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { OperationService } from '../../../../services/operation/operation.service';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-activate',\n  templateUrl: './activate.component.html',\n  styleUrls: ['../../../../../scss/components/views/start/login.component.scss']\n})\nexport class ActivateComponent implements OnInit, OnDestroy {\n  pkh: string;\n  secret: string;\n  formInvalid = '';\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    private messageService: MessageService,\n    private operationService: OperationService,\n    private inputValidationService: InputValidationService,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit(): void {}\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  activate(): void {\n    this.formInvalid = this.checkInput();\n    if (!this.formInvalid) {\n      const pkh = this.pkh;\n      const secret = this.secret;\n      this.pkh = '';\n      this.secret = '';\n      this.subscriptions.add(\n        this.operationService.activate(pkh, secret).subscribe(\n          (ans: any) => {\n            if (ans.success) {\n              if (ans.payload.opHash) {\n                this.subscriptions.add(\n                  this.translate.get('ACTIVATECOMPONENT.ACTIVATESUCCESS').subscribe(\n                    (res: string) => this.messageService.addSuccess(res) // 'Activation successfully broadcasted to the blockchain!'\n                  )\n                );\n              } else {\n                this.subscriptions.add(\n                  this.translate.get('ACTIVATECOMPONENT.RETRIEVEFAIL').subscribe(\n                    (res: string) => this.messageService.addWarning(res) // Could not retrieve an operation hash\n                  )\n                );\n              }\n            } else {\n              let errorMessage = '';\n              if (typeof ans.payload.msg === 'string') {\n                errorMessage = 'NodeError ' + ans.payload.msg;\n              } else {\n                errorMessage = 'NodeError ' + JSON.stringify(ans.payload.msg);\n              }\n              this.messageService.addError(errorMessage);\n              console.log(JSON.stringify(ans.payload.msg));\n            }\n          },\n          (err) => {\n            this.subscriptions.add(\n              this.translate.get('ACTIVATECOMPONENT.ACTIVATEFAIL').subscribe(\n                (res: string) => {\n                  let errorMessage = '';\n                  const activateFailed = res;\n                  if (typeof err.payload.msg === 'string') {\n                    errorMessage = activateFailed + ' ' + err.payload.msg;\n                  } else {\n                    errorMessage = activateFailed;\n                  }\n                  this.messageService.addError(errorMessage);\n                } // 'Failed to activate wallet!'\n              )\n            );\n            console.log(JSON.stringify(err));\n          }\n        )\n      );\n    }\n  }\n  checkInput(): string {\n    if (!this.inputValidationService.address(this.pkh)) {\n      return 'Invalid public key hash!';\n    } else if (!this.inputValidationService.code(this.secret)) {\n      return 'Invalid activation code!';\n    }\n    return '';\n  }\n}\n","import { Activity, Account as WalletAccount } from './services/wallet/wallet';\nimport { Asset, ContractType } from './services/token/token.service';\n\nexport { Activity };\n\nexport interface KeyPair {\n  sk: string | null;\n  pk: string | null;\n  pkh: string;\n}\nexport interface Wallet {\n  seed: null | string;\n  salt: null | string;\n  pk?: string;\n  encryptionVersion: number | null;\n  type: WalletType;\n  balance: Balance;\n  XTZrate: number | null;\n  accounts: Account[];\n  derivationPath?: string;\n}\nexport interface Account {\n  pkh: string | null;\n  delegate: string;\n  balance: Balance;\n  numberOfActivites: number;\n  activities: Activity[];\n}\nexport interface Balance {\n  balanceXTZ: number | null;\n  pendingXTZ: number | null;\n  balanceFiat: number | null;\n  pendingFiat: number | null;\n}\nexport enum WalletType {\n  LegacyWallet,\n  ViewOnlyWallet,\n  ObserverWallet,\n  LedgerWallet,\n  HdWallet\n}\nexport interface Baker {\n  baker_name: string;\n  image: string;\n  rolls: number;\n  identity: string;\n  vote: string;\n  vote2: string;\n  // vote: []\n}\nexport interface Vote {\n  voting_period: string;\n  period_kind: PeriodKind;\n  proposal_hash: string[];\n  proposal_alias: string[];\n  votes: number[];\n  operation: string[];\n}\nexport interface Period {\n  amendment: string;\n  period: number;\n  period_kind: string;\n  proposal_hash: string[];\n  proposal_alias: string[];\n  start_level: number;\n  end_level: number;\n  level: number;\n  progress: number;\n  remaining: number;\n}\nexport interface ParticipationPerPeriod {\n  proposal?: [\n    {\n      hash: string;\n      alias: string;\n      count: number;\n      votes: number;\n    }\n  ];\n  unused_count: number;\n  total_count: number;\n  unused_votes: number;\n  total_votes: number;\n}\nexport interface Ballot {\n  proposal: string;\n  nb_yay: number;\n  nb_nay: number;\n  nb_pass: number;\n  vote_yay: number;\n  vote_nay: number;\n  vote_pass: number;\n}\nexport enum PeriodKind {\n  Proposal,\n  Exploration,\n  Testing,\n  Promotion\n}\nexport interface DefaultTransactionParams {\n  gas: number;\n  storage: number;\n  fee: number;\n  burn: number;\n  reveal?: boolean;\n  customLimits?: {\n    gasLimit: number;\n    storageLimit: number;\n  }[];\n}\n\nexport enum DisplayLinkOption {\n  All,\n  DirectAuth,\n  None\n}\n\nexport interface OpLimits {\n  gas?: number;\n  storage?: number;\n}\n\nexport interface ExternalRequest {\n  operationRequest: any;\n  selectedAccount: WalletAccount;\n}\nexport interface Constants {\n  NAME: string;\n  TEZOS_DOMAIN: {\n    CONTRACT?: string; // deprecated?\n    TOP_DOMAINS: string[];\n  };\n  NETWORK: string;\n  MAINNET: boolean;\n  NODE_URL: string;\n  API_URL: string;\n  OBJKT_URL?: string;\n  BLOCK_EXPLORER_URL: string;\n  HARD_LIMITS: {\n    hard_gas_limit_per_operation: number;\n    hard_gas_limit_per_block: number;\n    hard_storage_limit_per_operation: number;\n  };\n  ASSETS: Record<string, ContractType>;\n  CONTRACT_OVERRIDES: Record<string, OpLimits>;\n  CONTRACT_ALIASES: Record<\n    string,\n    {\n      name?: string;\n      address: string[];\n      thumbnailUrl: Asset;\n      discoverUrl?: string;\n      zoomDiscoverImg?: boolean;\n      link?: string;\n      shouldDisplayLink: DisplayLinkOption;\n      category?: string[];\n      backgroundColor?: string;\n      description?: string;\n    }\n  >;\n  NFT_CONTRACT_OVERRIDES: string[];\n  FEATURE_CONTRACTS: {};\n}\n","import * as Bs58check from 'bs58check';\n\nconst prefix = {\n  tz1: new Uint8Array([6, 161, 159]),\n  tz2: new Uint8Array([6, 161, 161]),\n  tz3: new Uint8Array([6, 161, 164]),\n  edpk: new Uint8Array([13, 15, 37, 217]),\n  edsk: new Uint8Array([43, 246, 78, 7]),\n  edsig: new Uint8Array([9, 245, 205, 134, 18]),\n  sig: new Uint8Array([4, 130, 43]),\n  o: new Uint8Array([5, 116]),\n  B: new Uint8Array([1, 52]),\n  TZ: new Uint8Array([3, 99, 29]),\n  KT1: new Uint8Array([2, 90, 121])\n};\n\nconst mergebuf = (b: Uint8Array, wm = Uint8Array.from([3])): Uint8Array => {\n  const r = new Uint8Array(wm.length + b.length);\n  r.set(wm);\n  r.set(b, wm.length);\n  return r;\n};\n\nconst hexToBuf = (hex: string): Uint8Array => {\n  return Uint8Array.from(\n    hex.match(/[\\da-f]{2}/gi).map(function (h) {\n      return parseInt(h, 16);\n    })\n  );\n};\n\nconst bufToHex = (buffer: Uint8Array): string => {\n  const byteArray = Uint8Array.from(buffer),\n    hexParts = [];\n  for (let i = 0; i < byteArray.length; i++) {\n    const hex = byteArray[i].toString(16);\n    const paddedHex = ('00' + hex).slice(-2);\n    hexParts.push(paddedHex);\n  }\n  return hexParts.join('');\n};\n\nconst base58encode = (payload: Uint8Array, prefixx?: Uint8Array): string => {\n  const n = new Uint8Array(prefixx.length + payload.length);\n  n.set(prefixx);\n  n.set(payload, prefixx.length);\n  return Bs58check.encode(Buffer.from(bufToHex(n), 'hex'));\n};\n\nconst base58decode = (enc: string, prefixx: Uint8Array): Uint8Array => {\n  let n = Bs58check.decode(enc);\n  n = n.slice(prefixx.length);\n  return n;\n};\n\nconst hexToPk = (hex: string): string => {\n  return base58encode(hexToBuf(hex.slice(2, 66)), prefix.edpk);\n};\n\nexport { base58encode, base58decode, mergebuf, hexToBuf, hexToPk, bufToHex, prefix };\n","import * as bip39 from 'bip39';\nimport { blake2b } from 'blakejs';\nimport { sign as naclSign } from 'tweetnacl';\nimport { KeyPair, SignedOps } from './interfaces';\nimport { base58encode, base58decode, mergebuf, hexToBuf, bufToHex, prefix as _prefix } from './common';\n\nconst validBase58string = (base58string: string, prefix: string): boolean => {\n  try {\n    let b58prefix: Uint8Array;\n    if (base58string.slice(0, prefix.length) === prefix && Object.prototype.hasOwnProperty.call(_prefix, prefix)) {\n      b58prefix = _prefix[prefix];\n    } else {\n      return false;\n    }\n    base58decode(base58string, b58prefix);\n    return true;\n  } catch {\n    return false;\n  }\n};\n\nconst validImplicitAddress = (address: string): boolean => {\n  return address && address.length === 36 && (validBase58string(address, 'tz1') || validBase58string(address, 'tz2') || validBase58string(address, 'tz3'));\n};\n\nconst validContractAddress = (address: string): boolean => {\n  return address && address.length === 36 && validBase58string(address, 'KT1');\n};\n\nconst validAddress = (address: string): boolean => {\n  return validImplicitAddress(address) || validContractAddress(address);\n};\n\nconst validOperationHash = (opHash: string): boolean => {\n  return opHash.length === 51 && validBase58string(opHash, 'o');\n};\n\nconst validPublicKey = (pk: string): boolean => {\n  return pk && pk.length === 54 && validBase58string(pk, 'edpk');\n};\n\nconst validSecretKey = (sk: string): boolean => {\n  return sk && sk.length === 98 && validBase58string(sk, 'edsk');\n};\n\nconst generateMnemonic = (numberOfWords = 15): string => {\n  if ([15, 18, 21, 24].indexOf(numberOfWords) !== -1) {\n    return bip39.generateMnemonic((numberOfWords * 32) / 3);\n  } else {\n    throw new Error('InvalidNumberOfWords');\n  }\n};\n\nconst validMnemonic = (mnemonic: string): boolean => {\n  return bip39.validateMnemonic(mnemonic);\n};\n\nconst mnemonicToSeed = (mnemonic: string, passphrase = '', bip32Seed = false): Buffer => {\n  if (!validMnemonic(mnemonic)) {\n    throw new Error('InvalidMnemonic');\n  }\n  return bip39.mnemonicToSeedSync(mnemonic, passphrase).slice(0, bip32Seed ? 64 : 32);\n};\n\nconst mnemonicToEntropy = (mnemonic: string): Uint8Array => {\n  if (!validMnemonic(mnemonic)) {\n    throw new Error('InvalidMnemonic');\n  }\n  return hexToBuf(bip39.mnemonicToEntropy(mnemonic));\n};\n\nconst entropyToMnemonic = (entropy: Uint8Array): string => {\n  return bip39.entropyToMnemonic(bufToHex(entropy));\n};\n\nconst seedToKeyPair = (seed: Buffer): KeyPair => {\n  if (!seed || !(seed.length === 32 || seed.length === 64)) {\n    throw new Error('Invalid seed');\n  }\n  const keyPair = naclSign.keyPair.fromSeed(seed);\n  return {\n    sk: base58encode(keyPair.secretKey, _prefix.edsk),\n    pk: base58encode(keyPair.publicKey, _prefix.edpk),\n    pkh: base58encode(blake2b(keyPair.publicKey, null, 20), _prefix.tz1)\n  };\n};\n\nconst secretKeyToKeyPair = (sk: string): KeyPair => {\n  if (!validSecretKey) {\n    throw new Error('Invalid secret key');\n  }\n  const keyPair = naclSign.keyPair.fromSecretKey(base58decode(sk, _prefix.edsk));\n  return {\n    sk: base58encode(keyPair.secretKey, _prefix.edsk),\n    pk: base58encode(keyPair.publicKey, _prefix.edpk),\n    pkh: base58encode(blake2b(keyPair.publicKey, null, 20), _prefix.tz1)\n  };\n};\n\nconst deriveContractAddress = (sopBytes: string, n = 0): string => {\n  const hash = blake2b(mergebuf(hexToBuf(sopBytes)), null, 32);\n  const index = new Uint8Array([0, 0, 0, n]);\n  const hash2 = blake2b(mergebuf(index, hash), null, 32);\n  return base58encode(hash2, _prefix.KT1);\n};\n\nconst addressToHex = (address: string): string => {\n  if (!validAddress(address)) {\n    throw new TypeError('Invalid address');\n  } else if (address.slice(0, 2) === 'KT') {\n    return '01' + bufToHex(base58decode(address, _prefix.KT1)) + '00';\n  } else if (address.slice(0, 3) === 'tz1') {\n    return '0000' + bufToHex(base58decode(address, _prefix.tz1));\n  } else if (address.slice(0, 3) === 'tz2') {\n    return '0001' + bufToHex(base58decode(address, _prefix.tz2));\n  } else if (address.slice(0, 3) === 'tz3') {\n    return '0002' + bufToHex(base58decode(address, _prefix.tz3));\n  } else {\n    throw new Error('Base58DecodingError');\n  }\n};\n\nconst sign = (bytes: string, sk: string): SignedOps => {\n  const hash = blake2b(mergebuf(hexToBuf(bytes)), null, 32);\n  const sig = naclSign.detached(hash, base58decode(sk, _prefix.edsk));\n  const edsig = base58encode(sig, _prefix.edsig);\n  const sbytes = bytes + bufToHex(sig);\n  return {\n    bytes,\n    sig,\n    edsig,\n    sbytes\n  };\n};\n\nconst pkToPkh = (pk: string): string => {\n  if (!validPublicKey(pk)) {\n    throw new Error('Invalid public key');\n  }\n  const pkDecoded = base58decode(pk, _prefix.edpk);\n  return base58encode(blake2b(pkDecoded, null, 20), _prefix.tz1);\n};\n\nexport {\n  generateMnemonic,\n  mnemonicToSeed,\n  seedToKeyPair,\n  validMnemonic,\n  validAddress,\n  validImplicitAddress,\n  validContractAddress,\n  validOperationHash,\n  validPublicKey,\n  validSecretKey,\n  validBase58string,\n  deriveContractAddress,\n  sign,\n  addressToHex,\n  pkToPkh,\n  secretKeyToKeyPair,\n  mnemonicToEntropy,\n  entropyToMnemonic\n};\n","import { sign as naclSign } from 'tweetnacl';\nimport { full as naclAuthFull } from 'tweetnacl-auth';\nimport { blake2b } from 'blakejs';\nimport { base58encode, prefix as _prefix } from './common';\nimport { KeyPair, Node } from './interfaces';\n\n/*\n    Hardened HD derivations for Tezos (bip32-ed25519)\n\n    https://github.com/satoshilabs/slips/blob/master/slip-0010.md\n    https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n    https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki\n    https://github.com/satoshilabs/slips/blob/master/slip-0044.md\n\n    https://github.com/LedgerHQ/ledger-live-common/blob/master/src/derivation.js#L84\n    m / 44' / 1729' / account_index' / 0'\n*/\n\nconst deriveNode = (message: Buffer, key: Buffer): Node => {\n  const hmac = naclAuthFull(message, key);\n  return {\n    privateKey: hmac.slice(0, 32),\n    chainCode: hmac.slice(32)\n  };\n};\n\nconst deriveRootNode = (seed: Buffer): Node => {\n  if (seed.length !== 64) {\n    throw new Error('Invalid seed size');\n  }\n  const domainSeperator = Buffer.from('ed25519 seed');\n  return deriveNode(seed, domainSeperator);\n};\n\nconst deriveChildNode = (node: Node, index: number): Node => {\n  const indexBuf: Buffer = Buffer.allocUnsafe(4);\n  indexBuf.writeUInt32BE(index, 0);\n  const message: Buffer = Buffer.concat([Buffer.alloc(1, 0), Buffer.from(node.privateKey), indexBuf]);\n  return deriveNode(message, Buffer.from(node.chainCode));\n};\n\nconst derivationPathToArray = (derivationPath: string): number[] => {\n  derivationPath = derivationPath.replace('m/', '').replace(/'/g, 'h');\n  if (!derivationPath.match(/^44h\\/1(729)?(h\\/[0-9]+)+h$/g)) {\n    throw new Error('Invalid derivation path. Only hardened derivation paths on Tezos domain space is supported.');\n  }\n  return derivationPath.split('/').map((level: string) => {\n    level = level.slice(0, -1);\n    if (Number(level) >= Number('0x80000000')) {\n      throw new Error('Invalid derivation path. Out of bound.');\n    }\n    return Number(level) + Number('0x80000000');\n  });\n};\n\nconst seedToKeyPair = (seed: Buffer, derivationPath: string): KeyPair => {\n  const pathArray = derivationPathToArray(derivationPath);\n  let node = deriveRootNode(seed);\n  for (const index of pathArray) {\n    node = deriveChildNode(node, index);\n  }\n  const { secretKey, publicKey } = naclSign.keyPair.fromSeed(Buffer.from(node.privateKey));\n  return {\n    sk: base58encode(secretKey, _prefix.edsk),\n    pk: base58encode(publicKey, _prefix.edpk),\n    pkh: base58encode(blake2b(publicKey, null, 20), _prefix.tz1)\n  };\n};\n\nconst keyPairFromAccountIndex = (seed: Buffer, accountIndex: number): KeyPair => {\n  return seedToKeyPair(seed, `44h/1729h/${accountIndex}h/0h`);\n};\n\nexport { seedToKeyPair, keyPairFromAccountIndex };\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/*\n    Informs users on most common errors\n    RPC errors doc: http://tezos.gitlab.io/mainnet/api/errors.html\n*/\n\n@Pipe({\n  name: 'errorHandling'\n})\nexport class ErrorHandlingPipe implements PipeTransform {\n  ERROR_LIST = [\n    {\n      msg: 'A fatal assertion failed',\n      id: 'proto.alpha.assertion'\n    },\n    {\n      msg: \"The block's proof-of-work stamp is insufficient\",\n      id: 'proto.alpha.baking.insufficient_proof_of_work'\n    },\n    {\n      msg: 'A block was not signed with the expected private key.',\n      id: 'proto.alpha.baking.invalid_block_signature'\n    },\n    {\n      msg: 'The gap of fitness is out of bounds',\n      id: 'proto.alpha.baking.invalid_fitness_gap'\n    },\n    {\n      msg: \"The block's signature is invalid\",\n      id: 'proto.alpha.baking.invalid_signature'\n    },\n    {\n      msg: 'The block timestamp is before the first slot for this baker at this level',\n      id: 'proto.alpha.baking.timestamp_too_early'\n    },\n    {\n      msg: 'The operation is signed by a delegate without endorsement rights.',\n      id: 'proto.alpha.baking.unexpected_endorsement'\n    },\n    {\n      msg: 'A double-baking evidence is inconsistent (two distinct delegates)',\n      id: 'proto.alpha.block.inconsistent_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is inconsistent (two distinct delegates)',\n      id: 'proto.alpha.block.inconsistent_double_endorsement_evidence'\n    },\n    {\n      msg: 'The block header has invalid commitment.',\n      id: 'proto.alpha.block.invalid_commitment'\n    },\n    {\n      msg: 'A double-baking evidence is inconsistent (two distinct level)',\n      id: 'proto.alpha.block.invalid_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is malformed',\n      id: 'proto.alpha.block.invalid_double_endorsement_evidence'\n    },\n    {\n      msg: 'A manager operation should not contain more than one revelation',\n      id: 'proto.alpha.block.multiple_revelation'\n    },\n    {\n      msg: 'A double-baking evidence is outdated.',\n      id: 'proto.alpha.block.outdated_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is outdated.',\n      id: 'proto.alpha.block.outdated_double_endorsement_evidence'\n    },\n    {\n      msg: 'A double-baking evidence is in the future',\n      id: 'proto.alpha.block.too_early_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is in the future',\n      id: 'proto.alpha.block.too_early_double_endorsement_evidence'\n    },\n    {\n      msg: 'A double-baking evidence is unrequired',\n      id: 'proto.alpha.block.unrequired_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is unrequired',\n      id: 'proto.alpha.block.unrequired_double_endorsement_evidence'\n    },\n    {\n      msg: 'Unexpected JSON object.',\n      id: 'proto.alpha.context.failed_to_decode_parameter'\n    },\n    {\n      msg: 'The protocol parameters are not valid JSON.',\n      id: 'proto.alpha.context.failed_to_parse_parameter'\n    },\n    {\n      msg: 'An error that should never happen unless something has been deleted or corrupted in the database.',\n      id: 'proto.alpha.context.storage_error'\n    },\n    {\n      msg: 'An operation tried to spend more tez than the account has',\n      id: 'proto.alpha.contract.balance_too_low'\n    },\n    {\n      msg: 'The storage fee is higher than the contract balance',\n      id: 'proto.alpha.contract.cannot_pay_storage_fee'\n    },\n    {\n      msg: 'An operation assumed a contract counter in the future',\n      id: 'proto.alpha.contract.counter_in_the_future'\n    },\n    {\n      msg: 'An operation assumed a contract counter in the past',\n      id: 'proto.alpha.contract.counter_in_the_past'\n    },\n    {\n      msg: 'Forbidden to credit 0ꜩ to a contract without code.',\n      id: 'proto.alpha.contract.empty_transaction'\n    },\n    {\n      msg: 'Unexpected contract storage error',\n      id: 'proto.alpha.contract.failure'\n    },\n    {\n      msg: 'A malformed contract notation was given to an RPC or in a script.',\n      id: 'proto.alpha.contract.invalid_contract_notation'\n    },\n    {\n      msg: 'Change is not enough to consume a roll.',\n      id: 'proto.alpha.contract.manager.consume_roll_change'\n    },\n    {\n      msg: 'A revealed manager public key is inconsistent with the announced hash',\n      id: 'proto.alpha.contract.manager.inconsistent_hash'\n    },\n    {\n      msg: 'A provided manager public key is different with the public key stored in the contract',\n      id: 'proto.alpha.contract.manager.inconsistent_public_key'\n    },\n    {\n      msg: 'Delegate has no roll.',\n      id: 'proto.alpha.contract.manager.no_roll_for_delegate'\n    },\n    {\n      msg: 'A snapshot of the rolls distribution does not exist for this cycle.',\n      id: 'proto.alpha.contract.manager.no_roll_snapshot_for_cycle'\n    },\n    {\n      msg: 'A contract cannot be delegated to an unregistered delegate',\n      id: 'proto.alpha.contract.manager.unregistered_delegate'\n    },\n    {\n      msg: 'A contract handle is not present in the context (either it never was or it has been destroyed)',\n      id: 'proto.alpha.contract.non_existing_contract'\n    },\n    {\n      msg: 'One tried to revealed twice a manager public key',\n      id: 'proto.alpha.contract.previously_revealed_key'\n    },\n    {\n      msg: 'One tried to apply a manager operation without revealing the manager public key',\n      id: 'proto.alpha.contract.unrevealed_key'\n    },\n    {\n      msg: 'An operation tried to spend tokens from an unspendable contract',\n      id: 'proto.alpha.contract.unspendable_contract'\n    },\n    {\n      msg: 'Useless delegate reactivation',\n      id: 'proto.alpha.delegate.already_active'\n    },\n    {\n      msg: 'Cannot freeze deposit when the balance is too low',\n      id: 'proto.alpha.delegate.balance_too_low_for_deposit'\n    },\n    {\n      msg: 'Cannot register a delegate when its implicit account is empty',\n      id: 'proto.alpha.delegate.empty_delegate_account'\n    },\n    {\n      msg: 'Tried to unregister a delegate',\n      id: 'proto.alpha.delegate.no_deletion'\n    },\n    {\n      msg: 'Contract already delegated to the given delegate',\n      id: 'proto.alpha.delegate.unchanged'\n    },\n    {\n      msg: 'Proposal lists cannot be empty.',\n      id: 'proto.alpha.empty_proposal'\n    },\n    {\n      msg: 'The sum of gas consumed by all the operations in the block exceeds the hard gas limit per block',\n      id: 'proto.alpha.gas_exhausted.block'\n    },\n    {\n      msg: 'Gas limit was not high enough to deserialize the transaction parameters or origination script code or initial storage, making the operation impossible to parse within the provided gas bounds.',\n      id: 'proto.alpha.gas_exhausted.init_deserialize'\n    },\n    {\n      msg: 'An operation tried to exceed the gas limit',\n      id: 'proto.alpha.gas_exhausted.operation'\n    },\n    {\n      msg: 'A transaction tried to exceed the hard limit on gas',\n      id: 'proto.alpha.gas_limit_too_high'\n    },\n    {\n      msg: 'No manager operations are allowed on an empty account. Make sure you have enough balance.',\n      id: 'proto.alpha.implicit.empty_implicit_contract'\n    },\n    {\n      msg: 'Emptying an implicit delegated account is not allowed.',\n      id: 'proto.alpha.implicit.empty_implicit_delegated_contract'\n    },\n    {\n      msg: 'The number of endorsements must be non-negative and at most the endosers_per_block constant.',\n      id: 'proto.alpha.incorrect_number_of_endorsements'\n    },\n    {\n      msg: 'Block priority must be non-negative.',\n      id: 'proto.alpha.incorrect_priority'\n    },\n    {\n      msg: 'An internal operation was emitted twice by a script',\n      id: 'proto.alpha.internal_operation_replay'\n    },\n    {\n      msg: 'A compile-time constant was invalid for its expected form.',\n      id: 'proto.alpha.invalidSyntacticConstantError'\n    },\n    {\n      msg: 'Negative multiple of periods are not allowed.',\n      id: 'proto.alpha.invalid_arg'\n    },\n    {\n      msg: 'Could not deserialize some piece of data from its binary representation',\n      id: 'proto.alpha.invalid_binary_format'\n    },\n    {\n      msg: 'Fitness representation should be exactly 8 bytes long.',\n      id: 'proto.alpha.invalid_fitness'\n    },\n    {\n      msg: 'Ballot provided for a proposal that is not the current one.',\n      id: 'proto.alpha.invalid_proposal'\n    },\n    {\n      msg: 'Period is negative.',\n      id: 'proto.alpha.malformed_period'\n    },\n    {\n      msg: 'Either no parameter was supplied to a contract with a non-unit parameter type, a non-unit parameter was passed to an account, or a parameter was supplied of the wrong type',\n      id: 'proto.alpha.michelson_v1.bad_contract_parameter'\n    },\n    {\n      msg: 'Unexpected stack at the end of a lambda or script.',\n      id: 'proto.alpha.michelson_v1.bad_return'\n    },\n    {\n      msg: 'The stack has an unexpected length or contents.',\n      id: 'proto.alpha.michelson_v1.bad_stack'\n    },\n    {\n      msg: 'The type of a stack item is unexpected (this error is always accompanied by a more precise one).',\n      id: 'proto.alpha.michelson_v1.bad_stack_item'\n    },\n    {\n      msg: 'The error was too big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_error'\n    },\n    {\n      msg: 'Argument of FAILWITH was too big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_failure'\n    },\n    {\n      msg: 'Execution trace with stacks was to big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_log'\n    },\n    {\n      msg: 'The returned storage was too big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_storage'\n    },\n    {\n      msg: 'A non comparable type was used in a place where only comparable types are accepted.',\n      id: 'proto.alpha.michelson_v1.comparable_type_expected'\n    },\n    {\n      msg: 'A deprecated instruction usage is disallowed in newly created contracts',\n      id: 'proto.alpha.michelson_v1.deprecated_instruction'\n    },\n    {\n      msg: 'Two entrypoints have the same name.',\n      id: 'proto.alpha.michelson_v1.duplicate_entrypoint'\n    },\n    {\n      msg: 'Map literals cannot contain duplicated keys',\n      id: 'proto.alpha.michelson_v1.duplicate_map_keys'\n    },\n    {\n      msg: 'When parsing script, a field was found more than once',\n      id: 'proto.alpha.michelson_v1.duplicate_script_field'\n    },\n    {\n      msg: 'Set literals cannot contain duplicate elements, but a duplicae was found while parsing.',\n      id: 'proto.alpha.michelson_v1.duplicate_set_values_in_literal'\n    },\n    {\n      msg: 'An entrypoint name exceeds the maximum length of 31 characters.',\n      id: 'proto.alpha.michelson_v1.entrypoint_name_too_long'\n    },\n    {\n      msg: 'There is non trivial garbage code after a FAIL instruction.',\n      id: 'proto.alpha.michelson_v1.fail_not_in_tail_position'\n    },\n    {\n      msg: 'The toplevel error thrown when trying to parse a type expression (always followed by more precise errors).',\n      id: 'proto.alpha.michelson_v1.ill_formed_type'\n    },\n    {\n      msg: 'The toplevel error thrown when trying to typecheck a contract code against given input, output and storage types (always followed by more precise errors).',\n      id: 'proto.alpha.michelson_v1.ill_typed_contract'\n    },\n    {\n      msg: 'The toplevel error thrown when trying to typecheck a data expression against a given type (always followed by more precise errors).',\n      id: 'proto.alpha.michelson_v1.ill_typed_data'\n    },\n    {\n      msg: 'The annotations on two types could not be merged',\n      id: 'proto.alpha.michelson_v1.inconsistent_annotations'\n    },\n    {\n      msg: 'The specified field does not match the field annotation in the type',\n      id: 'proto.alpha.michelson_v1.inconsistent_field_annotations'\n    },\n    {\n      msg: 'A stack was of an unexpected length (this error is always in the context of a located error).',\n      id: 'proto.alpha.michelson_v1.inconsistent_stack_lengths'\n    },\n    {\n      msg: 'The two types contain annotations that do not match',\n      id: 'proto.alpha.michelson_v1.inconsistent_type_annotations'\n    },\n    {\n      msg: 'This is the basic type clash error, that appears in several places where the equality of two types have to be proven, it is always accompanied with another error that provides more context.',\n      id: 'proto.alpha.michelson_v1.inconsistent_types'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was applied to an unsupported number of arguments.',\n      id: 'proto.alpha.michelson_v1.invalid_arity'\n    },\n    {\n      msg: 'A script or data expression references a big_map that does not exist or assumes a wrong type for an existing big_map.',\n      id: 'proto.alpha.michelson_v1.invalid_big_map'\n    },\n    {\n      msg: 'A data expression was invalid for its expected type.',\n      id: 'proto.alpha.michelson_v1.invalid_constant'\n    },\n    {\n      msg: 'A script or data expression references a contract that does not exist or assumes a wrong type for an existing contract.',\n      id: 'proto.alpha.michelson_v1.invalid_contract'\n    },\n    {\n      msg: 'In a script or data expression, an expression was of the wrong kind (for instance a string where only a primitive applications can appear).',\n      id: 'proto.alpha.michelson_v1.invalid_expression_kind'\n    },\n    {\n      msg: 'The body of an ITER instruction must result in the same stack type as before the ITER.',\n      id: 'proto.alpha.michelson_v1.invalid_iter_body'\n    },\n    {\n      msg: 'FAIL cannot be the only instruction in the body. The propper type of the return list cannot be inferred.',\n      id: 'proto.alpha.michelson_v1.invalid_map_block_fail'\n    },\n    {\n      msg: 'The body of a map block did not match the expected type',\n      id: 'proto.alpha.michelson_v1.invalid_map_body'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was unknown.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive'\n    },\n    {\n      msg: 'In a script or data expression, a primitive name is unknown or has a wrong case.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive_name'\n    },\n    {\n      msg: 'In a script or data expression, a primitive name is neither uppercase, lowercase or capitalized.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive_name_case'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was of the wrong namespace.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive_namespace'\n    },\n    {\n      msg: 'When parsing script, a field was expected, but not provided',\n      id: 'proto.alpha.michelson_v1.missing_script_field'\n    },\n    {\n      msg: 'An entrypoint was not found when calling a contract.',\n      id: 'proto.alpha.michelson_v1.no_such_entrypoint'\n    },\n    {\n      msg: 'Toplevel error for all runtime script errors',\n      id: 'proto.alpha.michelson_v1.runtime_error'\n    },\n    {\n      msg: 'A FAIL instruction was reached due to the detection of an overflow',\n      id: 'proto.alpha.michelson_v1.script_overflow'\n    },\n    {\n      msg: 'A FAILWITH instruction was reached',\n      id: 'proto.alpha.michelson_v1.script_rejected'\n    },\n    {\n      msg: 'A SELF instruction was encountered in a lambda expression.',\n      id: 'proto.alpha.michelson_v1.self_in_lambda'\n    },\n    {\n      msg: 'An instruction generated a type larger than the limit.',\n      id: 'proto.alpha.michelson_v1.type_too_large'\n    },\n    {\n      msg: 'A binary operation is called on operands of types over which it is not defined.',\n      id: 'proto.alpha.michelson_v1.undefined_binop'\n    },\n    {\n      msg: 'A unary operation is called on an operand of type over which it is not defined.',\n      id: 'proto.alpha.michelson_v1.undefined_unop'\n    },\n    {\n      msg: 'A node in the syntax tree was impropperly annotated',\n      id: 'proto.alpha.michelson_v1.unexpected_annotation'\n    },\n    {\n      msg: 'When parsing script, a big_map type was found in a position where it could end up stored inside a big_map, which is forbidden for now.',\n      id: 'proto.alpha.michelson_v1.unexpected_bigmap'\n    },\n    {\n      msg: 'When parsing script, a contract type was found in the storage or parameter field.',\n      id: 'proto.alpha.michelson_v1.unexpected_contract'\n    },\n    {\n      msg: 'When parsing script, an operation type was found in the storage or parameter field.',\n      id: 'proto.alpha.michelson_v1.unexpected_operation'\n    },\n    {\n      msg: 'Annotations of the same kind must be grouped',\n      id: 'proto.alpha.michelson_v1.ungrouped_annotations'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was unknown.',\n      id: 'proto.alpha.michelson_v1.unknown_primitive_name'\n    },\n    {\n      msg: 'At the join point at the end of two code branches the stacks have inconsistent lengths or contents.',\n      id: 'proto.alpha.michelson_v1.unmatched_branches'\n    },\n    {\n      msg: 'Map keys must be in strictly increasing order',\n      id: 'proto.alpha.michelson_v1.unordered_map_literal'\n    },\n    {\n      msg: 'Set values must be in strictly increasing order',\n      id: 'proto.alpha.michelson_v1.unordered_set_literal'\n    },\n    {\n      msg: 'An entrypoint in the contract is not reachable.',\n      id: 'proto.alpha.michelson_v1.unreachable_entrypoint'\n    },\n    {\n      msg: 'Duplicated revelation for a nonce.',\n      id: 'proto.alpha.nonce.previously_revealed'\n    },\n    {\n      msg: 'Nonce revelation happens before cycle end',\n      id: 'proto.alpha.nonce.too_early_revelation'\n    },\n    {\n      msg: 'Nonce revelation happens too late',\n      id: 'proto.alpha.nonce.too_late_revelation'\n    },\n    {\n      msg: 'The provided nonce is inconsistent with the committed nonce hash.',\n      id: 'proto.alpha.nonce.unexpected'\n    },\n    {\n      msg: 'The operation is ill-formed or for another protocol version',\n      id: 'proto.alpha.operation.cannot_parse'\n    },\n    {\n      msg: 'Two endorsements received from same delegate',\n      id: 'proto.alpha.operation.duplicate_endorsement'\n    },\n    {\n      msg: 'The given key and secret do not correspond to any existing preallocated contract',\n      id: 'proto.alpha.operation.invalid_activation'\n    },\n    {\n      msg: 'The level of an endorsement is inconsistent with the provided block hash.',\n      id: 'proto.alpha.operation.invalid_endorsement_level'\n    },\n    {\n      msg: 'The operation signature is ill-formed or has been made with the wrong public key',\n      id: 'proto.alpha.operation.invalid_signature'\n    },\n    {\n      msg: 'The operation is of a kind that must be signed, but the signature is missing',\n      id: 'proto.alpha.operation.missing_signature'\n    },\n    {\n      msg: 'The block being validated does not include the required minimum number of endorsements for this priority.',\n      id: 'proto.alpha.operation.not_enought_endorsements_for_priority'\n    },\n    {\n      msg: 'Trying to include an endorsement in a block that is not the successor of the endorsed one',\n      id: 'proto.alpha.operation.wrong_endorsement_predecessor'\n    },\n    {\n      msg: 'Trying to onclude a proposal or ballot meant for another voting period',\n      id: 'proto.alpha.operation.wrong_voting_period'\n    },\n    {\n      msg: 'The requested seed is not available',\n      id: 'proto.alpha.seed.unknown_seed'\n    },\n    {\n      msg: 'A script or one of its callee wrote more bytes than the operation said it would',\n      id: 'proto.alpha.storage_exhausted.operation'\n    },\n    {\n      msg: 'A transaction tried to exceed the hard limit on storage',\n      id: 'proto.alpha.storage_limit_too_high'\n    },\n    {\n      msg: 'An addition of two tez amounts overflowed',\n      id: 'proto.alpha.tez.addition_overflow'\n    },\n    {\n      msg: 'Multiplication of a tez amount by a non positive integer',\n      id: 'proto.alpha.tez.invalid_divisor'\n    },\n    {\n      msg: 'A multiplication of a tez amount by an integer overflowed',\n      id: 'proto.alpha.tez.multiplication_overflow'\n    },\n    {\n      msg: 'Multiplication of a tez amount by a negative integer',\n      id: 'proto.alpha.tez.negative_multiplicator'\n    },\n    {\n      msg: 'An subtraction of two tez amounts underflowed',\n      id: 'proto.alpha.tez.subtraction_underflow'\n    },\n    {\n      msg: 'Overflow when adding timestamps.',\n      id: 'proto.alpha.timestamp_add'\n    },\n    {\n      msg: 'Substracting timestamps resulted in negative period.',\n      id: 'proto.alpha.timestamp_sub'\n    },\n    {\n      msg: 'A transaction exceeded the hard limit of internal operations it can emit',\n      id: 'proto.alpha.too_many_internal_operations'\n    },\n    {\n      msg: 'The delegate reached the maximum number of allowed proposals.',\n      id: 'proto.alpha.too_many_proposals'\n    },\n    {\n      msg: 'The delegate provided for the ballot is not in the voting listings.',\n      id: 'proto.alpha.unauthorized_ballot'\n    },\n    {\n      msg: 'The delegate provided for the proposal is not in the voting listings.',\n      id: 'proto.alpha.unauthorized_proposal'\n    },\n    {\n      msg: 'An origination was attemped out of the scope of a manager operation',\n      id: 'proto.alpha.undefined_operation_nonce'\n    },\n    {\n      msg: 'Ballot recorded outside of a voting period.',\n      id: 'proto.alpha.unexpected_ballot'\n    },\n    {\n      msg: 'Level must be non-negative.',\n      id: 'proto.alpha.unexpected_level'\n    },\n    {\n      msg: 'Nonce length is incorrect.',\n      id: 'proto.alpha.unexpected_nonce_length'\n    },\n    {\n      msg: 'Proposal recorded outside of a proposal period.',\n      id: 'proto.alpha.unexpected_proposal'\n    },\n    {\n      msg: 'Block locator is invalid.',\n      id: 'node.bootstrap_pipeline.invalid_locator'\n    },\n    {\n      msg: 'Block locator is too short.',\n      id: 'node.bootstrap_pipeline.too_short_locator'\n    },\n    {\n      msg: 'IO error: connection with a peer is closed.',\n      id: 'node.p2p_io_scheduler.connection_closed'\n    },\n    {\n      msg: 'Fail to connect with a peer: a connection is already established.',\n      id: 'node.p2p_pool.connected'\n    },\n    {\n      msg: 'Connection was refused.',\n      id: 'node.p2p_pool.connection_refused'\n    },\n    {\n      msg: 'The peer identity you tried to connect is banned.',\n      id: 'node.p2p_pool.peer_banned'\n    },\n    {\n      msg: 'Fail to connect with a peer: a connection is already pending.',\n      id: 'node.p2p_pool.pending_connection'\n    },\n    {\n      msg: 'The address you tried to connect is banned.',\n      id: 'node.p2p_pool.point_banned'\n    },\n    {\n      msg: 'Node is in private mode.',\n      id: 'node.p2p_pool.private_mode'\n    },\n    {\n      msg: 'Connection to peer was rejected by us.',\n      id: 'node.p2p_pool.rejected'\n    },\n    {\n      msg: 'Too many connections.',\n      id: 'node.p2p_pool.too_many_connections'\n    },\n    {\n      msg: 'An error occurred while deciphering.',\n      id: 'node.p2p_socket.decipher_error'\n    },\n    {\n      msg: 'An error occurred while decoding.',\n      id: 'node.p2p_socket.decoding_error'\n    },\n    {\n      msg: 'An error occurred while encoding.',\n      id: 'node.p2p_socket.encoding_error'\n    },\n    {\n      msg: 'Rejected peer connection: invalid authentication.',\n      id: 'node.p2p_socket.invalid_auth'\n    },\n    {\n      msg: 'Size of chunks is not valid.',\n      id: 'node.p2p_socket.invalid_chunks_size'\n    },\n    {\n      msg: 'The size of the message to be written is invalid.',\n      id: 'node.p2p_socket.invalid_message_size'\n    },\n    {\n      msg: 'Remote peer is actually yourself.',\n      id: 'node.p2p_socket.myself'\n    },\n    {\n      msg: 'Remote peer cannot be authenticated: not enough proof of work.',\n      id: 'node.p2p_socket.not_enough_proof_of_work'\n    },\n    {\n      msg: 'Rejected peer connection: The peer rejected the socket connection by Nack with a list of alternative peers.',\n      id: 'node.p2p_socket.rejected_by_nack'\n    },\n    {\n      msg: 'Rejected peer connection: rejected socket connection as we have no common network protocol with the peer.',\n      id: 'node.p2p_socket.rejected_no_common_protocol'\n    },\n    {\n      msg: 'Rejected peer connection: rejected socket connection.',\n      id: 'node.p2p_socket.rejected_socket_connection'\n    },\n    {\n      msg: 'Rejecting peer connection with motive.',\n      id: 'node.p2p_socket.rejecting_incoming'\n    },\n    {\n      msg: \"Known invalid block found in the peer's chain\",\n      id: 'node.peer_validator.known_invalid'\n    },\n    {\n      msg: \"Unknown ancestor block found in the peer's chain\",\n      id: 'node.peer_validator.unknown_ancestor'\n    },\n    {\n      msg: 'The block was annotated with a time too far in the future.',\n      id: 'node.prevalidation.future_block_header'\n    },\n    {\n      msg: 'The operation size is bigger than allowed.',\n      id: 'node.prevalidation.oversized_operation'\n    },\n    {\n      msg: 'Raised when an operation has not been parsed correctly during prevalidation.',\n      id: 'node.prevalidation.parse_error'\n    },\n    {\n      msg: 'The prevalidation context is full.',\n      id: 'node.prevalidation.too_many_operations'\n    },\n    {\n      msg: 'Invalid protocol.',\n      id: 'node.protocol_validator.invalid_protocol'\n    },\n    {\n      msg: 'The data directory could not be read. This could be because it was generated with an old version of the tezos-node program. Deleting and regenerating this directory may fix the problem.',\n      id: 'node.state.bad_data_dir'\n    },\n    {\n      msg: 'When commiting the context of a block, the announced context hash was not the one computed at commit time.',\n      id: 'node.state.block.inconsistent_context_hash'\n    },\n    {\n      msg: 'The invalid block to be unmarked was not actually invalid.',\n      id: 'node.state.block_not_invalid'\n    },\n    {\n      msg: 'The chain identifier could not be found in the chain identifiers table.',\n      id: 'node.state.unknown_chain'\n    },\n    {\n      msg: 'The block belongs to a branch that is not compatible with the current checkpoint.',\n      id: 'node.validator.checkpoint_error'\n    },\n    {\n      msg: 'Attempted validation of a block from an inactive chain.',\n      id: 'node.validator.inactive_chain'\n    },\n    {\n      msg: 'Incorrect history mode switch.',\n      id: 'node_config_file.incorrect_history_mode_switch'\n    },\n    {\n      msg: 'Missing key in store',\n      id: 'raw_store.unknown'\n    },\n    {\n      msg: 'The provided list of operations is inconsistent with the block header.',\n      id: 'validator.inconsistent_operations_hash'\n    },\n    {\n      msg: 'Invalid block.',\n      id: 'validator.invalid_block'\n    },\n    {\n      msg: 'Missing test protocol when forking the test chain',\n      id: 'validator.missing_test_protocol'\n    },\n    {\n      msg: 'The protocol required for validating a block is missing.',\n      id: 'validator.unavailable_protocol'\n    },\n    {\n      msg: 'Failed to validate block using exteranl validation process.',\n      id: 'validator.validation_process_failed'\n    },\n    {\n      msg: 'An operation on a worker could not complete before it was shut down.',\n      id: 'worker.closed'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an annotation exceeded the maximum length (255).',\n      id: 'micheline.parse_error.annotation_exceeds_max_length'\n    },\n    {\n      msg: 'Tried to interpret an empty piece or Micheline source as a single expression.',\n      id: 'micheline.parse_error.empty_expression'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an extra semi colon or parenthesis was encountered.',\n      id: 'micheline.parse_error.extra_token'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a sequence of bytes that is not valid UTF-8 was encountered.',\n      id: 'micheline.parse_error.invalid_utf8_sequence'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an expression was not aligned with its siblings of the same mother application or sequence.',\n      id: 'micheline.parse_error.misaligned_node'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a number was not visually separated from its follower token, leading to misreadability.',\n      id: 'micheline.parse_error.missing_break_after_number'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, the length of a byte sequence (0x...) was not a multiple of two, leaving a trailing half byte.',\n      id: 'micheline.parse_error.odd_lengthed_bytes'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a parenthesis or a brace was unclosed.',\n      id: 'micheline.parse_error.unclosed_token'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an unexpected escape sequence was encountered in a string.',\n      id: 'micheline.parse_error.undefined_escape_sequence'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an unexpected character was encountered.',\n      id: 'micheline.parse_error.unexpected_character'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an unexpected token was encountered.',\n      id: 'micheline.parse_error.unexpected_token'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a commentX was not terminated.',\n      id: 'micheline.parse_error.unterminated_comment'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an integer was not terminated.',\n      id: 'micheline.parse_error.unterminated_integer'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a string was not terminated.',\n      id: 'micheline.parse_error.unterminated_string'\n    },\n    {\n      msg: 'Wrong hash given',\n      id: 'Bad_hash'\n    },\n    {\n      msg: 'The context checkout failed using a given hash',\n      id: 'Block_validator_process.failed_to_checkout_context'\n    },\n    {\n      msg: 'Cannot reconstruct',\n      id: 'CannotReconstruct'\n    },\n    {\n      msg: 'Cannot find context corresponding to hash',\n      id: 'Context_not_found'\n    },\n    {\n      msg: 'The imported block is not the expected one.',\n      id: 'InconsistentImportedBlock'\n    },\n    {\n      msg: 'The operations given do not match their hashes.',\n      id: 'InconsistentOperationHashes'\n    },\n    {\n      msg: 'The data provided by the snapshot is inconsistent',\n      id: 'Inconsistent_snapshot_data'\n    },\n    {\n      msg: 'Error while opening snapshot file',\n      id: 'Inconsistent_snapshot_file'\n    },\n    {\n      msg: 'Invalid specification of block to import',\n      id: 'InvalidBlockSpecification'\n    },\n    {\n      msg: 'The version of the snapshot to import is not valid',\n      id: 'Invalid_snapshot_version'\n    },\n    {\n      msg: 'Mandatory data missing while reaching end of snapshot file.',\n      id: 'Missing_snapshot_data'\n    },\n    {\n      msg: 'RPC lookup failed. Block has been pruned and requested data deleted.',\n      id: 'RPC_context.Gone'\n    },\n    {\n      msg: 'RPC lookup failed. No RPC exists at the URL or the RPC tried to access non-existent data.',\n      id: 'RPC_context.Not_found'\n    },\n    {\n      msg: 'Internal error while restoring the context',\n      id: 'Restore_context_failure'\n    },\n    {\n      msg: 'The imported snapshot is malformed.',\n      id: 'SnapshotImportFailure'\n    },\n    {\n      msg: 'Failed to read file',\n      id: 'System_read_error'\n    },\n    {\n      msg: 'The validator failed because of a system error',\n      id: 'Validator_process.system_error_while_validating'\n    },\n    {\n      msg: 'Cannot write in file for context dump',\n      id: 'Writing_error'\n    },\n    {\n      msg: 'The block to export in the snapshot is not valid.',\n      id: 'WrongBlockExport'\n    },\n    {\n      msg: 'Wrong protocol hash',\n      id: 'WrongProtocolHash'\n    },\n    {\n      msg: 'Snapshot exports is not compatible with the current configuration.',\n      id: 'WrongSnapshotExport'\n    },\n    {\n      msg: 'A fatal assertion failed',\n      id: 'assertion'\n    },\n    {\n      msg: 'A promise was unexpectedly canceled',\n      id: 'canceled'\n    },\n    {\n      msg: 'A key has been provided with an invalid uri.',\n      id: 'cli.key.invalid_uri'\n    },\n    {\n      msg: 'The signer produced an invalid signature',\n      id: 'cli.signature_mismatch'\n    },\n    {\n      msg: 'A key has been provided with an unregistered scheme (no corresponding plugin)',\n      id: 'cli.unregistered_key_scheme'\n    },\n    {\n      msg: 'The byte sequence references a multisig counter that does not match the one currently stored in the given multisig contract',\n      id: 'client.alpha.Bad deserialized counter'\n    },\n    {\n      msg: 'When trying to deserialise an action from a sequence of bytes, we got an expression that does not correspond to a known multisig action',\n      id: 'client.alpha.actionDeserialisation'\n    },\n    {\n      msg: 'When trying to deserialise an action from a sequence of bytes, we got an action for another multisig contract',\n      id: 'client.alpha.badDeserializedContract'\n    },\n    {\n      msg: 'invalid duration in -endorsement-delay',\n      id: 'client.alpha.badEndorsementDelayArg'\n    },\n    {\n      msg: 'invalid priority in -max-priority',\n      id: 'client.alpha.badMaxPriorityArg'\n    },\n    {\n      msg: 'invalid duration in -max-waiting-time',\n      id: 'client.alpha.badMaxWaitingTimeArg'\n    },\n    {\n      msg: 'invalid fee threshold in -fee-threshold',\n      id: 'client.alpha.badMinimalFeesArg'\n    },\n    {\n      msg: 'invalid number of levels in -preserved-levels',\n      id: 'client.alpha.badPreservedLevelsArg'\n    },\n    {\n      msg: 'Invalid ꜩ notation in parameter.',\n      id: 'client.alpha.badTezArg'\n    },\n    {\n      msg: 'When trying to deserialise an action from a sequence of bytes, we got an error',\n      id: 'client.alpha.bytesDeserialisation'\n    },\n    {\n      msg: 'A multisig command has referenced a scriptless smart contract instead of a multisig smart contract.',\n      id: 'client.alpha.contractHasNoScript'\n    },\n    {\n      msg: 'A multisig command has referenced a smart contract without storage instead of a multisig smart contract.',\n      id: 'client.alpha.contractHasNoStorage'\n    },\n    {\n      msg: 'A multisig command has referenced a smart contract whose storage is of a different shape than the expected one.',\n      id: 'client.alpha.contractHasUnexpectedStorage'\n    },\n    {\n      msg: 'Attempt to get the code of a contract failed because it has nocode. No scriptless contract should remain.',\n      id: 'client.alpha.contractWithoutCode'\n    },\n    {\n      msg: 'A signature was given for a multisig contract that matched none of the public keys of the contract signers',\n      id: 'client.alpha.invalidSignature'\n    },\n    {\n      msg: 'A wrong number of arguments was provided to a macro',\n      id: 'client.alpha.michelson.macros.bas_arity'\n    },\n    {\n      msg: 'An macro expects a sequence, but a sequence was not provided',\n      id: 'client.alpha.michelson.macros.sequence_expected'\n    },\n    {\n      msg: 'A macro had an annotation, but no annotation was permitted on this macro.',\n      id: 'client.alpha.michelson.macros.unexpected_annotation'\n    },\n    {\n      msg: 'A multisig threshold should be a positive number',\n      id: 'client.alpha.nonPositiveThreshold'\n    },\n    {\n      msg: 'A multisig command has referenced a smart contract whose script is not one of the known multisig contract scripts.',\n      id: 'client.alpha.notASupportedMultisigContract'\n    },\n    {\n      msg: 'To run an action on a multisig contract, you should provide at least as many signatures as indicated by the threshold stored in the multisig contract.',\n      id: 'client.alpha.notEnoughSignatures'\n    },\n    {\n      msg: 'The given threshold is higher than the number of keys, this would lead to a frozen multisig contract',\n      id: 'client.alpha.thresholdTooHigh'\n    },\n    {\n      msg: 'Cannot recover from a corrupted context.',\n      id: 'context.non_recoverable_context'\n    },\n    {\n      msg: '<gf>context_dump.read.cannot_open'\n    },\n    {\n      msg: '<gf>context_dump.read.suspicious'\n    },\n    {\n      msg: '<gf>context_dump.write.cannot_open'\n    },\n    {\n      msg: 'Exception safely wrapped in an error',\n      id: 'failure'\n    },\n    {\n      msg: 'Activation of an Internal Event SINK with an URI failed',\n      id: 'internal-event-activation-error'\n    },\n    {\n      msg: 'The raw context extraction depth argument must be positive.',\n      id: 'raw_context.invalid_depth'\n    },\n    {\n      msg: 'No protocol was registered with the requested hash.',\n      id: 'registered_protocol.unregistered_protocol'\n    },\n    {\n      msg: 'The fetch of a Operation_hash has been canceled',\n      id: 'requester.Operation_hash.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a Operation_hash has timed out',\n      id: 'requester.Operation_hash.fetch_timeout'\n    },\n    {\n      msg: 'Some Operation_hash is missing from the requester',\n      id: 'requester.Operation_hash.missing'\n    },\n    {\n      msg: 'The fetch of a Protocol_hash has been canceled',\n      id: 'requester.Protocol_hash.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a Protocol_hash has timed out',\n      id: 'requester.Protocol_hash.fetch_timeout'\n    },\n    {\n      msg: 'Some Protocol_hash is missing from the requester',\n      id: 'requester.Protocol_hash.missing'\n    },\n    {\n      msg: 'The fetch of a block_hash has been canceled',\n      id: 'requester.block_hash.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a block_hash has timed out',\n      id: 'requester.block_hash.fetch_timeout'\n    },\n    {\n      msg: 'Some block_hash is missing from the requester',\n      id: 'requester.block_hash.missing'\n    },\n    {\n      msg: 'The fetch of a operation_hashes has been canceled',\n      id: 'requester.operation_hashes.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a operation_hashes has timed out',\n      id: 'requester.operation_hashes.fetch_timeout'\n    },\n    {\n      msg: 'Some operation_hashes is missing from the requester',\n      id: 'requester.operation_hashes.missing'\n    },\n    {\n      msg: 'The fetch of a operations has been canceled',\n      id: 'requester.operations.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a operations has timed out',\n      id: 'requester.operations.fetch_timeout'\n    },\n    {\n      msg: 'Some operations is missing from the requester',\n      id: 'requester.operations.missing'\n    },\n    {\n      msg: 'Error while decoding a remote signer message',\n      id: 'signer.decoding_error'\n    },\n    {\n      msg: 'Error while encoding a remote signer message',\n      id: 'signer.encoding_error'\n    },\n    {\n      msg: 'Block not found',\n      id: 'state.block.contents_not_found'\n    },\n    {\n      msg: 'Block not found',\n      id: 'state.block.not_found'\n    },\n    {\n      msg: 'Unix System_info failure',\n      id: 'unix.system_info'\n    },\n    {\n      msg: 'An unhandled unix exception',\n      id: 'unix_error'\n    },\n    {\n      msg: 'Canceled',\n      id: 'utils.Canceled'\n    },\n    {\n      msg: 'Timeout',\n      id: 'utils.Timeout'\n    },\n    {\n      msg: 'Fee exceeded hard cap!',\n      id: 'TooHighFee'\n    },\n    {\n      msg: 'Node error: Timeout has occurred! Please try again later.',\n      id: 'Timeout has occurred'\n    }\n  ];\n  transform(errorId: string, withObj?: any, location?: number): any {\n    const protocol = errorId.match(/[0-9]{3}-P\\w{7}/g);\n    if (protocol && protocol[0]) {\n      errorId = errorId.replace(protocol[0], 'alpha');\n    }\n    let errorMessage = '';\n    const index = this.ERROR_LIST.findIndex((s) => s.id === errorId);\n    console.log('errorId', errorId);\n    if (errorId === 'proto.alpha.michelson_v1.script_rejected' && withObj) {\n      if (withObj.string) {\n        errorMessage = `${this.ERROR_LIST[index].msg} | ${withObj.string}`;\n      } else if (withObj?.int === '4' && location === 206) {\n        errorMessage = 'Tokens deposited is greater than maximum tokens deposited. Please retry in a while.';\n      } else {\n        let jsonWith = JSON.stringify(withObj);\n        if (jsonWith.length > 200) {\n          jsonWith = '[...]';\n          console.error('FAILWITH', withObj);\n        }\n        errorMessage = `${this.ERROR_LIST[index].msg} ${jsonWith}`;\n      }\n      console.log(withObj);\n    } else if (index !== -1) {\n      errorMessage = this.ERROR_LIST[index].msg;\n    } else {\n      if (errorId.indexOf('branch refused (Error:') !== -1 && errorId.indexOf('already used for contract') !== -1) {\n        errorMessage =\n          'Counter error: Another operation in mempool is blocking your operation. Wait for it to be included in a block or pruned from mempool (up to 60 minutes).';\n      } else {\n        if (errorId?.startsWith('Failed to parse the request body')) {\n          const lines = errorId.split('At /kind, unexpected string instead of ');\n          for (let line of lines) {\n            if (line.startsWith('reveal\\n  Unhandled error')) {\n              return line.replace('reveal\\n  ', '');\n            }\n          }\n        }\n        errorMessage = 'Unrecognized error: ' + errorId;\n      }\n    }\n    return errorMessage;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'removeComma'\n})\nexport class RemoveCommaPipe implements PipeTransform {\n  transform(value: string): string {\n    if (value !== undefined && value !== null) {\n      return value.replace(/,/g, '');\n    } else {\n      return '';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core'; // Multiple instances created ?\nimport * as timediff from 'timediff';\n\n@Pipe({\n  name: 'timeAgo',\n  pure: true // if false pipe will be called at each changes - necessary for translation - is there a better way?\n})\nexport class TimeAgoPipe implements PipeTransform {\n  constructor(private translate: TranslateService) {}\n  transform(timestamp: number): string {\n    const now = this.translate.instant('TIMEAGOPIPE.JUSTNOW');\n    const sec = this.translate.instant('TIMEAGOPIPE.SEC');\n    const secs = sec;\n    const mn = this.translate.instant('TIMEAGOPIPE.MINUTE');\n    const mns = mn;\n    const hr = this.translate.instant('TIMEAGOPIPE.HOUR');\n    const hrs = this.translate.instant('TIMEAGOPIPE.HOURS');\n    const day = this.translate.instant('TIMEAGOPIPE.DAY');\n    const days = this.translate.instant('TIMEAGOPIPE.DAYS');\n    const month = this.translate.instant('TIMEAGOPIPE.MONTH');\n    const months = this.translate.instant('TIMEAGOPIPE.MONTHS');\n    const year = this.translate.instant('TIMEAGOPIPE.YEAR');\n    const years = this.translate.instant('TIMEAGOPIPE.YEARS');\n\n    const timeNow = new Date().getTime();\n    const diff = timediff(timestamp, timeNow, 'YMDHmS');\n\n    const keys = Object.keys(diff);\n    let count = 0;\n    let output = '';\n\n    for (const key of keys) {\n      if (diff[key] || count) {\n        if (count) {\n          output = output + ' ';\n        }\n        switch (key) {\n          case 'years':\n            output = `${diff[key]}${diff[key] === 1 ? year : years}`;\n            break;\n          case 'months':\n            output = output + `${diff[key]}${diff[key] === 1 ? month : months}`;\n            break;\n          case 'days':\n            output = output + `${diff[key]}${diff[key] === 1 ? day : days}`;\n            break;\n          case 'hours':\n            output = output + `${diff[key]}${diff[key] === 1 ? hr : hrs}`;\n            break;\n          case 'minutes':\n            output = output + `${diff[key]}${diff[key] === 1 ? mn : mns}`;\n            break;\n          case 'seconds':\n            if (!diff.minutes && diff.seconds < 60) {\n              output = now;\n            } else if (diff.minutes < 2) {\n              output = output + `${diff[key]}${diff[key] === 1 ? sec : secs}`;\n            }\n            break;\n        }\n        if (count++) {\n          break;\n        }\n      }\n    }\n    return output;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet/wallet.service';\nimport { of, Observable, from as fromPromise } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\nimport { delay, takeUntil } from 'rxjs/operators';\nimport { Activity, Account, OpStatus } from '../wallet/wallet';\nimport { MessageService } from '../message/message.service';\nimport { LookupService } from '../lookup/lookup.service';\nimport { IndexerService } from '../indexer/indexer.service';\nimport { TokenService } from '../token/token.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { SubjectService } from '../subject/subject.service';\n\n@Injectable()\nexport class ActivityService {\n  readonly maxTransactions = 10;\n  public tokenBalanceUpdated = new BehaviorSubject(null);\n  constructor(\n    private walletService: WalletService,\n    private messageService: MessageService,\n    private lookupService: LookupService,\n    private indexerService: IndexerService,\n    private tokenService: TokenService,\n    private subjectService: SubjectService\n  ) {}\n  updateTransactions(pkh): Observable<any> {\n    try {\n      const account = this.walletService.wallet.getAccount(pkh);\n      return this.getTransactonsCounter(account).pipe(\n        flatMap((ans: any) => {\n          return of(ans);\n        })\n      );\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  getTransactonsCounter(account: Account): Observable<any> {\n    const knownTokenIds: string[] = this.tokenService.knownTokenIds();\n    return fromPromise(this.indexerService.accountInfo(account.address, knownTokenIds)).pipe(\n      flatMap((data) => {\n        const counter = data.counter;\n        const unknownTokenIds = data.unknownTokenIds ? data.unknownTokenIds : [];\n        this.tokenService.searchAllMetadata(unknownTokenIds);\n        this.tokenService.recheckMetadata(data?.tokens);\n        if (account.state !== counter) {\n          if (data.tokens) {\n            this.updateTokenBalances(account, data.tokens);\n          } else {\n            this.updateTokenBalances(account, []);\n          }\n          return this.getAllTransactions(account, counter);\n        } else {\n          if (!account.state) {\n            if (!account.activities || !account.tokens) {\n              if (!account.activities) {\n                account.activities = [];\n              }\n              if (!account.tokens) {\n                account.tokens = [];\n              }\n              this.updateTokenBalances(account, []);\n              this.walletService.storeWallet();\n            }\n          }\n          return of({\n            upToDate: true,\n            balance: data?.balance ? data.balance : 0\n          });\n        }\n      })\n    );\n  }\n  async updateTokenBalances(account, tokens) {\n    if (Array.isArray(tokens)) {\n      const idsWithBalance: string[] = [];\n      if (!tokens.length) {\n        account.updateTokenBalance('', '');\n      } else {\n        for (const token of tokens) {\n          idsWithBalance.push(token.tokenId);\n          account.updateTokenBalance(token.tokenId, token.balance.toString());\n        }\n        const currentTokenIds = account.getTokenBalances().map((token) => {\n          return token.tokenId;\n        });\n        for (const tokenId of currentTokenIds) {\n          if (!idsWithBalance.includes(tokenId)) {\n            account.updateTokenBalance(tokenId, '0');\n          }\n        }\n      }\n      this.tokenBalanceUpdated.next(true);\n      this.walletService.storeWallet();\n    }\n  }\n  getAllTransactions(account: Account, counter: string): Observable<any> {\n    const knownTokenIds: string[] = this.tokenService.knownTokenIds();\n    return fromPromise(this.indexerService.getOperations(account.address, knownTokenIds, this.walletService.wallet)).pipe(\n      flatMap((resp) => {\n        const operations = resp.operations;\n        this.tokenService.searchAllMetadata(resp.unknownTokenIds);\n        if (Array.isArray(operations)) {\n          const oldActivities = account.activities;\n          const unconfirmedOps = [];\n          if (oldActivities && oldActivities.length) {\n            for (let op of oldActivities) {\n              if (op.status === OpStatus.UNCONFIRMED || op.status === OpStatus.HALF_CONFIRMED) {\n                let save = true;\n                for (const opNew of operations) {\n                  if (opNew.hash === op.hash) {\n                    save = false;\n                    break;\n                  }\n                }\n                if (save) {\n                  unconfirmedOps.push(op);\n                }\n              }\n            }\n          }\n          account.activities = unconfirmedOps.concat(operations);\n          const oldState = account.state;\n          account.state = counter;\n          this.walletService.storeWallet();\n          if (oldState !== '') {\n            // Exclude inital loading\n            this.promptNewActivities(account, oldActivities, operations);\n          }\n          for (const activity of operations) {\n            const counterParty = this.getCounterparty(activity, account, false);\n            this.lookupService.check(counterParty);\n          }\n        }\n        return of({\n          upToDate: false\n        });\n      })\n    );\n  }\n  promptNewActivities(account: Account, oldActivities: Activity[], newActivities: Activity[]) {\n    for (const activity of newActivities) {\n      const index = oldActivities.findIndex((a) => a.hash === activity.hash && a.status === OpStatus.CONFIRMED);\n      if (index === -1) {\n        const now = new Date().getTime();\n        const timeDiff = now - (activity?.timestamp ? activity.timestamp : now);\n        if (timeDiff < 1800000) {\n          // 1/2 hour\n          if (activity.hash) {\n            setTimeout(() => {\n              this.subjectService.confirmedOp.next(activity.hash);\n            }, 0);\n          }\n          if (activity.type === 'transaction') {\n            if (account.address === activity.source.address) {\n              this.messageService.addSuccess(account.shortAddress() + ': Sent ' + this.tokenService.formatAmount(activity.tokenId, activity.amount.toString()));\n            }\n            if (account.address === activity.destination.address) {\n              const ref = activity.tokenId ? Date.now().toString() + activity.tokenId : '';\n              this.messageService.addSuccess(\n                (account.shortAddress() + ': Received ' + this.tokenService.formatAmount(activity.tokenId, activity.amount.toString())).replace(\n                  '[Unknown token]',\n                  'Token'\n                ),\n                undefined,\n                ref\n              );\n              if (activity.tokenId && this.tokenService.getAsset(activity.tokenId) === null) {\n                // unknown token\n                this.subjectService.metadataUpdated.pipe(takeUntil(of(true).pipe(delay(8000)))).subscribe((token: any) => {\n                  // unsub after 8s\n                  if (token?.contractAddress && token.id !== undefined) {\n                    const tokenId = token.contractAddress + ':' + token.id.toString();\n                    if (activity.tokenId === tokenId) {\n                      this.messageService.modify(\n                        account.shortAddress() + ': Received ' + this.tokenService.formatAmount(activity.tokenId, activity.amount.toString()),\n                        ref\n                      );\n                    }\n                  }\n                });\n              }\n            }\n          } else if (activity.type === 'delegation') {\n            this.messageService.addSuccess(account.shortAddress() + ': Delegate updated');\n          } else if (activity.type === 'origination') {\n            this.messageService.addSuccess(account.shortAddress() + ': Contract originated');\n          } else if (activity.type === 'activation') {\n            this.messageService.addSuccess(account.shortAddress() + ': Account activated');\n          }\n          const counter = this.getCounterparty(activity, account, false);\n          if (counter?.address) {\n            this.lookupService.check(counter.address, true);\n          }\n        }\n      }\n    }\n  }\n  getCounterparty(transaction: Activity, account: Account, withLookup = true): any {\n    let counterParty = { address: '' };\n    if (transaction.type === 'delegation') {\n      if (transaction.destination) {\n        counterParty = transaction.destination;\n      } else {\n        counterParty = { address: '' }; // User has undelegated\n      }\n    } else if (transaction.type === 'transaction') {\n      if (account.address === transaction.source.address) {\n        counterParty = transaction.destination; // to\n      } else {\n        counterParty = transaction.source; // from\n      }\n    } else if (transaction.type === 'origination') {\n      if (account.address === transaction.source.address) {\n        counterParty = transaction.destination ? transaction.destination : { address: '' };\n      } else {\n        counterParty = transaction.source;\n      }\n    } else {\n      counterParty = { address: '' };\n    }\n    if (withLookup) {\n      return this.lookupService.resolve(counterParty);\n    } else {\n      return counterParty;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet/wallet.service';\nimport { TzrateService } from '../tzrate/tzrate.service';\nimport { OperationService } from '../operation/operation.service';\nimport { Account } from '../wallet/wallet';\n\n@Injectable()\nexport class BalanceService {\n  constructor(private walletService: WalletService, private tzrateService: TzrateService, private operationService: OperationService) {}\n\n  getBalanceAll() {\n    for (const account of this.walletService.wallet.getAccounts()) {\n      this.getAccountBalance(account);\n    }\n  }\n  getAccountBalance(account: Account) {\n    console.log('for ' + account.address);\n    this.operationService.getBalance(account.address).subscribe((ans: any) => {\n      if (ans.success) {\n        this.updateAccountBalance(account, Number(ans.payload.balance));\n      } else {\n        console.log('Balance Error: ' + JSON.stringify(ans.payload.msg));\n      }\n    });\n  }\n  updateAccountBalance(account: Account, newBalance: number) {\n    if (account && (account.balanceXTZ === null || account.balanceXTZ === undefined || newBalance !== account.balanceXTZ)) {\n      account.balanceXTZ = newBalance;\n      this.updateTotalBalance();\n      this.tzrateService.updateFiatBalances();\n      this.walletService.storeWallet();\n    }\n  }\n  updateTotalBalance() {\n    let balance = 0;\n    let change = false;\n    for (const account of this.walletService.wallet.getAccounts()) {\n      if (!(account.balanceXTZ === null || account.balanceXTZ === undefined)) {\n        balance = balance + Number(account.balanceXTZ);\n        change = true;\n      }\n    }\n    if (change) {\n      this.walletService.wallet.totalBalanceXTZ = balance;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MessageService } from '../../services/message/message.service';\nimport {\n  WalletClient,\n  BeaconMessageType,\n  PermissionResponseInput,\n  SignPayloadResponseInput,\n  P2PPairingRequest,\n  BeaconErrorType,\n  BEACON_VERSION,\n  ErrorResponse,\n  getSenderId,\n  ExtendedP2PPairingResponse\n} from '@airgap/beacon-sdk';\nimport { Asset } from '../token/token.service';\nimport { TzktService } from '../indexer/tzkt/tzkt.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BeaconService {\n  client: WalletClient = null;\n  peers = [];\n  permissions = [];\n  constructor(private messageService: MessageService, private tzktService: TzktService) {}\n  preNotifyPairing(pairInfoJson: string) {\n    const pairInfo: P2PPairingRequest = JSON.parse(pairInfoJson);\n    if (this.isNewPairingRequest(pairInfo)) {\n      this.messageService.addBeaconWait(`Pairing with ${pairInfo.name}. Please wait!`);\n    }\n  }\n  isNewPairingRequest(pairInfo: P2PPairingRequest): boolean {\n    const peersJson = localStorage.getItem('beacon:communication-peers-wallet');\n    let newPublicKey = true;\n    if (peersJson) {\n      const peers = JSON.parse(peersJson);\n      if (peers && peers.length > 0 && pairInfo.publicKey) {\n        for (const peer of peers) {\n          if (peer.publicKey && peer.publicKey === pairInfo.publicKey) {\n            newPublicKey = false;\n            console.log('Existing public key found!');\n            break;\n          }\n        }\n      }\n    }\n    return newPublicKey;\n  }\n  async addPeer(pairInfoJson: string, force = true) {\n    const pairInfo = JSON.parse(pairInfoJson);\n    console.log('PairInfo', pairInfo);\n    await this.client.addPeer(pairInfo, force);\n    this.syncBeaconState();\n    this.messageService.removeBeaconMsg();\n  }\n  async syncBeaconState() {\n    this.peers = await this.getPeers();\n    this.permissions = await this.getPermissions();\n  }\n  async removePeers() {\n    while (this.peers.length > 0) {\n      await this.removePeer(0);\n    }\n  }\n  async removePeer(index: number) {\n    const pairInfo: P2PPairingRequest = this.peers[index];\n    const senderId = await getSenderId(pairInfo.publicKey);\n    const peerResponse: ExtendedP2PPairingResponse = {\n      ...pairInfo,\n      type: 'p2p-pairing-response',\n      senderId\n    };\n    await this.client.removePeer(peerResponse);\n    await this.client.removeAppMetadata(senderId);\n    this.syncBeaconState();\n  }\n  async removePermissions() {\n    await this.client.removeAllPermissions();\n    this.syncBeaconState();\n  }\n  async removePermission(index: number) {\n    await this.client.removePermission(this.permissions[index].accountIdentifier);\n    this.syncBeaconState();\n  }\n  async getPeers(): Promise<any> {\n    return await this.client.getPeers();\n  }\n  async getPermissions(): Promise<any> {\n    return await this.client.getPermissions();\n  }\n  async getAppMetadataList(): Promise<any> {\n    return await this.client.getAppMetadataList();\n  }\n  async rejectOnPermission(message: any) {\n    await this.respondWithError(BeaconErrorType.NOT_GRANTED_ERROR, message);\n  }\n  async rejectOnNetwork(message: any) {\n    await this.respondWithError(BeaconErrorType.NETWORK_NOT_SUPPORTED, message);\n  }\n  async rejectOnUserAbort(message: any) {\n    await this.respondWithError(BeaconErrorType.ABORTED_ERROR, message);\n  }\n  async rejectOnSourceAddress(message: any) {\n    await this.respondWithError(BeaconErrorType.NO_PRIVATE_KEY_FOUND_ERROR, message);\n  }\n  async rejectOnTooManyOps(message: any) {\n    await this.respondWithError(BeaconErrorType.TOO_MANY_OPERATIONS, message);\n  }\n  async rejectOnUnknown(message: any) {\n    await this.respondWithError(BeaconErrorType.UNKNOWN_ERROR, message);\n  }\n  async rejectOnParameters(message: any) {\n    await this.respondWithError(BeaconErrorType.PARAMETERS_INVALID_ERROR, message);\n  }\n  async rejectOnBroadcastError(message: any) {\n    await this.respondWithError(BeaconErrorType.BROADCAST_ERROR, message);\n  }\n  async respondWithError(errorType: BeaconErrorType, requestMessage: any) {\n    if (requestMessage) {\n      const response: ErrorResponse = {\n        type: BeaconMessageType.Error,\n        errorType,\n        version: BEACON_VERSION,\n        id: requestMessage.id,\n        senderId: await this.client.beaconId\n      };\n      await this.client.respond(response);\n    }\n  }\n  async approvePermissionRequest(message: any, publicKey: string) {\n    const response: PermissionResponseInput = {\n      type: BeaconMessageType.PermissionResponse,\n      network: message.network,\n      scopes: message.scopes,\n      id: message.id,\n      publicKey: publicKey\n    };\n    await this.client.respond(response);\n  }\n  async approveSignPayloadRequest(message: any, signature: string) {\n    const response: SignPayloadResponseInput = {\n      type: BeaconMessageType.SignPayloadResponse,\n      id: message.id,\n      signingType: message.signingType,\n      signature\n    };\n    await this.client.respond(response);\n  }\n  async responseSync() {\n    localStorage.setItem('beacon:request-response', 'true');\n    localStorage.removeItem('beacon:request-response');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ChartSeries } from '../../../app/components/ui/chart/chart.component';\nimport { SwapLiquidityService } from '../swap-liquidity/swap-liquidity.service';\n\nexport enum ChartTitle {\n  XTZtzBTC = 'XTZ/tzBTC',\n  tzBTCXTZ = 'tzBTC/XTZ',\n  totalValueLocked = 'Total Value Locked'\n}\n\nlet width, height, gradient;\nfunction getGradientBackground(ctx, chartArea) {\n  const style = getComputedStyle(document.body);\n  const theme = style.getPropertyValue('--theme').replace(/[ \\\"]/g, '');\n  const chartWidth = chartArea.right - chartArea.left;\n  const chartHeight = chartArea.bottom - chartArea.top;\n  if (gradient === null || width !== chartWidth || height !== chartHeight) {\n    width = chartWidth;\n    height = chartHeight;\n    gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n    if (theme === 'dark') {\n      gradient.addColorStop(1, '#383d7d');\n      gradient.addColorStop(0.5, '#2e304f');\n      gradient.addColorStop(0, '#2a2c3f');\n    } else {\n      gradient.addColorStop(1, '#c2c5fc');\n      gradient.addColorStop(0.5, '#e0e1fb');\n      gradient.addColorStop(0, '#e8eafb');\n    }\n  }\n\n  return gradient;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ChartService {\n  ChartTitle = ChartTitle;\n  stats = null;\n  constructor(private swapLiquidityService: SwapLiquidityService) {}\n\n  async fetchLBGraphData(series: ChartSeries = ChartSeries.day): Promise<{ labels: any[]; datasets: any[] }> {\n    let tzbtc = await this.fetchHistoricalQuotesByContract(this.swapLiquidityService.tzBTCContract + '_0', series);\n    let stats = (this.stats = !this.stats ? await this.fetchHistoricalStatsByContract(this.swapLiquidityService.lqdContract, series) : this.stats);\n    let interval = 1000 * 60 * 60 * 24;\n    const a = [];\n    const b = [];\n    const d = [];\n    const labels = [];\n    let now = new Date().getTime();\n    if (series === ChartSeries.month) {\n      interval = 1000 * 60 * 60 * 24;\n      tzbtc = tzbtc.slice(0, 32);\n      stats = stats.slice(0, 32);\n    } else if (series === ChartSeries.day) {\n      interval = 1000 * 60 * 60;\n      tzbtc = tzbtc.slice(0, 25);\n      stats = stats.slice(0, 25);\n    } else if (series === ChartSeries.week) {\n      interval = 1000 * 60 * 60 * 4;\n      tzbtc = tzbtc.slice(0, 7 * 24).filter((e, i) => i % 4 === 0);\n      stats = stats.slice(0, 7 * 24).filter((e, i) => i % 4 === 0);\n    } else if (series === ChartSeries.year) {\n      interval = 1000 * 60 * 60 * 24 * 31;\n      tzbtc = tzbtc.slice(0, 365).filter((e, i) => i % 31 === 0);\n      stats = stats.slice(0, 365).filter((e, i) => i % 31 === 0);\n    }\n    tzbtc = tzbtc.reverse();\n    stats = stats.reverse();\n    for (let i = 0; i < tzbtc.length; ++i) {\n      a.push(1 / parseFloat(tzbtc[i].close));\n      b.push(parseFloat(tzbtc[i].close));\n      if (stats[i]?.tvlUsd) {\n        d.push(parseFloat(stats[i].tvlUsd));\n      }\n      const c = new Date((now -= interval));\n      if (series === ChartSeries.month) {\n        labels.push(c.toLocaleString('en-US', { month: 'short' }) + ' ' + c.getDate());\n      } else if (series === ChartSeries.day) {\n        labels.push('' + c.getHours() + ':00');\n      } else if (series === ChartSeries.week) {\n        labels.push(c.toLocaleString('en-US', { month: 'short' }) + ' ' + c.getDate() + ' ' + (c.getHours() + 1) + ':00');\n      } else if (series === ChartSeries.year) {\n        labels.push(c.toLocaleString('en-US', { month: 'short' }) + ' ' + c.getDate());\n      }\n    }\n    const defaultDatasetValues = {\n      hidden: true,\n      backgroundColor: function (context) {\n        const chart = context.chart;\n        const { ctx, chartArea } = chart;\n\n        if (!chartArea) {\n          return null;\n        }\n        return getGradientBackground(ctx, chartArea);\n      },\n      borderColor: '#5963ff88',\n      borderRadius: 1,\n      borderWidth: 3,\n      pointBorderWidth: 0,\n      pointBackgroundColor: '#5963ff88',\n      pointBorderColor: '#5963ff88',\n      pointRadius: 0,\n      pointHoverBorderWidth: 6,\n      pointHoverColor: '#5963ff88',\n      pointHitRadius: 6,\n      fill: true\n    };\n    const datasets = [\n      {\n        label: ChartTitle.XTZtzBTC,\n        data: a,\n        ...defaultDatasetValues\n      },\n      {\n        label: ChartTitle.tzBTCXTZ,\n        data: b,\n        ...defaultDatasetValues\n      },\n      {\n        label: ChartTitle.totalValueLocked,\n        data: d,\n        ...defaultDatasetValues\n      }\n    ];\n    return { datasets, labels: labels.reverse() };\n  }\n\n  async fetchHistoricalQuotesByContract(\n    contract: string = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5',\n    series: ChartSeries = ChartSeries.day,\n    offset: number = 0\n  ): Promise<any> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    let req;\n    if (series === ChartSeries.month || series === ChartSeries.year) {\n      req = {\n        query: `{quotes1d(offset: ${offset} limit: 100 where: {exchangeId:{_eq: \"${this.swapLiquidityService.lqdContract}\"} tokenId: {_eq: \"${contract}\"}, close: {_is_null: false}}) { close }}`\n      };\n    } else if (series === ChartSeries.day || series === ChartSeries.week) {\n      req = {\n        query: `{quotes1h(offset: ${offset} limit: 100 where: {exchangeId:{_eq: \"${this.swapLiquidityService.lqdContract}\"} tokenId: {_eq: \"${contract}\"}, close: {_is_null: false}}) { close }}`\n      };\n    }\n    try {\n      let result = await (\n        await fetch(baseUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json();\n      if (series === ChartSeries.week) {\n        if (result.data?.quotes1h.length === 100) {\n          result = result?.data?.quotes1h;\n          offset += 100;\n          return result.concat(await this.fetchHistoricalQuotesByContract(this.swapLiquidityService.tzBTCContract + '_0', series, offset));\n        } else {\n          return result?.data?.quotes1h;\n        }\n      }\n      if (series === ChartSeries.month) {\n        return result?.data?.quotes1d;\n      } else if (series === ChartSeries.day) {\n        return result?.data?.quotes1h;\n      } else if (series === ChartSeries.year) {\n        if (result.data?.quotes1d.length === 100) {\n          result = result?.data?.quotes1d;\n          offset += 100;\n          return result.concat(await this.fetchHistoricalQuotesByContract(this.swapLiquidityService.tzBTCContract + '_0', series, offset));\n        } else {\n          return result?.data?.quotes1d;\n        }\n      }\n    } catch (e) {\n      return [];\n    }\n  }\n\n  async fetchHistoricalStatsByContract(\n    contract: string = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5',\n    series: string = 'day',\n    offset: number = 0\n  ): Promise<Array<any>> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    let req;\n    if (series === 'day') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    } else if (series === 'week') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    } else if (series === 'month') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    } else if (series === 'year') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    }\n    try {\n      let result = await (\n        await fetch(baseUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json();\n      if (series === ChartSeries.week) {\n        if (result.data?.stats1d.length === 100) {\n          result = result?.data?.stats1d;\n          offset += 100;\n          return result.concat(await this.fetchHistoricalStatsByContract(this.swapLiquidityService.tzBTCContract + '_0', series, offset));\n        } else {\n          return result?.data?.stats1d;\n        }\n      }\n      if (series === ChartSeries.month) {\n        return result?.data?.stats1d;\n      } else if (series === ChartSeries.day) {\n        return result?.data?.stats1d;\n      } else if (series === ChartSeries.year) {\n        return result?.data?.stats1d;\n      }\n    } catch {\n      return [];\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { WalletService } from '../../wallet/wallet.service';\nimport { Account, OpStatus } from '../../wallet/wallet';\nimport { ActivityService } from '../../activity/activity.service';\nimport { OperationService } from '../../operation/operation.service';\nimport { BalanceService } from '../../balance/balance.service';\nimport { DelegateService } from '../../delegate/delegate.service';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalService {\n  connection: any = null;\n  constructor(\n    private walletService: WalletService,\n    private activityService: ActivityService,\n    private operationService: OperationService,\n    private balanceService: BalanceService,\n    private delegateService: DelegateService\n  ) {}\n  async init() {\n    this.connection = new HubConnectionBuilder().withUrl(`${CONSTANTS.API_URL}/events`).build();\n    this.connection.on('operations', (msg) => {\n      for (const op of msg.data) {\n        if (op?.status === 'applied') {\n          console.log('%csignalR msg', 'color: green;', op);\n          const sender: string = op?.sender?.address ?? '';\n          const target: string = op?.target?.address ?? '';\n          const opHash: string = op?.hash ?? '';\n          const invoke: boolean = !!op?.parameter;\n          this.confirmStatus(opHash, sender, op.timestamp, invoke);\n          this.confirmStatus(opHash, target, op.timestamp, invoke);\n        }\n      }\n    });\n    this.connection.onclose(async () => {\n      await this.start();\n    });\n    this.start();\n  }\n  confirmStatus(opHash: string, address: string, timestamp: string, invoke: boolean) {\n    if (opHash && address && this.walletService.wallet) {\n      if (this.walletService.wallet) {\n        const account: Account = this.walletService.wallet.getAccount(address);\n        if (account) {\n          for (let i in account.activities) {\n            if (account.activities[i].hash === opHash && account.activities[i].status === OpStatus.UNCONFIRMED) {\n              account.activities[i].timestamp = new Date(timestamp).getTime();\n              if (invoke) {\n                account.activities[i].status = OpStatus.HALF_CONFIRMED;\n              } else {\n                account.activities[i].status = OpStatus.CONFIRMED;\n                this.activityService.promptNewActivities(account, [], [account.activities[i]]);\n                this.updateAccountData(address);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  updateAccountData(pkh: string) {\n    this.operationService.getAccount(pkh).subscribe((ans: any) => {\n      if (ans.success) {\n        this.balanceService.updateAccountBalance(this.walletService.wallet?.getAccount(pkh), Number(ans.payload.balance));\n        const acc = this.walletService.wallet?.getAccount(pkh);\n        this.delegateService.handleDelegateResponse(acc, ans.payload.delegate);\n      } else {\n      }\n    });\n  }\n\n  async start() {\n    try {\n      if (!!this.connection?.start) {\n        await this.connection?.start();\n        console.log('%cSignalR Connected!', 'color:green;');\n      } else {\n        setTimeout(() => {\n          this.start();\n        }, 5000);\n      }\n    } catch (err) {\n      console.log(err);\n      setTimeout(() => {\n        this.start();\n      }, 5000);\n    }\n  }\n\n  async subscribeToAccount(address: string) {\n    console.log('Listen to: ' + address);\n    try {\n      await this.connection.invoke('SubscribeToOperations', {\n        address,\n        types: 'transaction,delegation,origination'\n      });\n    } catch (e) {}\n  }\n  ngOnDestroy(): void {\n    try {\n      this.connection.stop();\n      console.log('%cSignalR Disconnected!', 'color:red;');\n    } catch (e) {}\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivityService } from '../activity/activity.service';\nimport { TzrateService } from '../tzrate/tzrate.service';\nimport { BalanceService } from '../balance/balance.service';\nimport { WalletService } from '../wallet/wallet.service';\nimport { DelegateService } from '../delegate/delegate.service';\nimport { OperationService } from '../operation/operation.service';\nimport { Account, OpStatus, TorusWallet } from '../wallet/wallet';\nimport Big from 'big.js';\nimport { TokenService } from '../token/token.service';\nimport { LookupService } from '../lookup/lookup.service';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { SubjectService } from '../subject/subject.service';\nimport { interval } from 'rxjs';\nimport { SignalService } from '../indexer/signal/signal.service';\nimport { UnlockableService } from '../unlockable/unlockable.service';\nimport { DipDupService } from '../indexer/dipdup/dipdup.service';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nexport interface ScheduleData {\n  pkh: string;\n  state: State;\n  interval: any;\n  stateCounter: number;\n}\nenum State {\n  UpToDate,\n  Wait,\n  Updating\n}\n\n@Injectable()\nexport class CoordinatorService {\n  scheduler: Map<string, any> = new Map<string, any>(); // pkh + delay\n  defaultDelayActivity = CONSTANTS.MAINNET ? 30000 : 15000; // 30/15s\n  shortDelayActivity = 5000; // 5s\n  longDelayActivity = 120000; // 2m\n  defaultDelayPrice = 300000; // 5m\n  tzrateInterval: any;\n  accounts: Account[];\n  constructor(\n    private activityService: ActivityService,\n    private tzrateService: TzrateService,\n    private walletService: WalletService,\n    private balanceService: BalanceService,\n    private delegateService: DelegateService,\n    private operationService: OperationService,\n    private tokenService: TokenService,\n    private dipdupService: DipDupService,\n    private lookupService: LookupService,\n    private subjectService: SubjectService,\n    private signalService: SignalService,\n    private unlockableService: UnlockableService,\n    public router: Router,\n    private location: Location\n  ) {\n    this.subjectService.logout.subscribe((o) => {\n      if (!!o) {\n        this.stopAll();\n      }\n    });\n    this.subjectService.activeAccount.subscribe((activeAccount) => {\n      if (this.walletService.wallet) {\n        this.accounts = this.walletService.wallet.getAccounts();\n        this.accounts.forEach(({ address }) => {\n          if (address === activeAccount?.address) {\n            this.start(activeAccount.address, this.defaultDelayActivity);\n          } else {\n            this.start(address, this.longDelayActivity);\n          }\n        });\n        this.startXTZ();\n      }\n    });\n  }\n  startXTZ() {\n    if (!this.tzrateInterval) {\n      console.debug('Start scheduler XTZ');\n      this.signalService.init();\n      const update = () => {\n        this.tzrateService.getTzrate();\n        this.dipdupService.fetchTokensMidPrice();\n        this.lookupService.recheckWalletAddresses(true);\n      };\n      this.tzrateInterval = interval(this.defaultDelayPrice).subscribe(() => update());\n      update();\n    }\n  }\n  async start(pkh: string, delay: number) {\n    this.unlockableService.restoreFeatures();\n    if (pkh && !this.scheduler.get(pkh)) {\n      this.accounts = this.walletService.wallet.getAccounts();\n      console.debug('Start scheduler ' + this.scheduler.size + ' ' + pkh);\n      const scheduleData: ScheduleData = {\n        pkh: pkh,\n        state: State.UpToDate,\n        interval: interval(this.defaultDelayActivity).subscribe(() => this.update(pkh)),\n        stateCounter: 0\n      };\n      this.scheduler.set(pkh, scheduleData);\n      this.update(pkh);\n      this.updateAccountData(pkh);\n    } else if (pkh && this.scheduler.get(pkh)) {\n      this.setDelay(pkh, delay);\n    }\n  }\n  async boost(pkh: string, metadata: any = null) {\n    const path = this.location.path();\n    const embedded = path.startsWith('/embedded');\n    if (embedded) {\n      return;\n    }\n    // Expect action\n    console.log('boost ' + pkh);\n    if (this.walletService.addressExists(pkh)) {\n      if (metadata) {\n        this.addUnconfirmedOperations(pkh, metadata);\n      }\n      if (!this.scheduler.get(pkh)) {\n        await this.start(pkh, this.defaultDelayActivity);\n      }\n      this.signalService.subscribeToAccount(pkh);\n      if (this.scheduler.get(pkh).state !== State.Wait) {\n        this.changeState(pkh, State.Wait);\n        this.update(pkh);\n        const counter = this.scheduler.get(pkh).stateCounter;\n        setTimeout(() => {\n          // Failsafe\n          if (this.scheduler?.size && this.scheduler.get(pkh).stateCounter === counter) {\n            console.log('Timeout from wait state');\n            this.changeState(pkh, State.UpToDate);\n          }\n        }, 75000);\n      }\n    }\n  }\n  async update(pkh) {\n    this.setDelay(pkh, this.defaultDelayActivity);\n    this.activityService.updateTransactions(pkh).subscribe(\n      (ans: any) => {\n        switch (this.scheduler.get(pkh) ? this.scheduler.get(pkh).state : -1) {\n          case State.UpToDate: {\n            if (!ans.upToDate) {\n              this.changeState(pkh, State.Updating);\n            } else if (ans?.balance) {\n              const balance = this.walletService.wallet?.getAccount(pkh).balanceXTZ;\n              if (balance !== ans.balance) {\n                console.log('recheck balance');\n                this.updateAccountData(pkh);\n              }\n            }\n            break;\n          }\n          case State.Wait: {\n            if (!ans.upToDate) {\n              this.changeState(pkh, State.Updating);\n            } else {\n              this.setDelay(pkh, this.shortDelayActivity);\n            }\n            break;\n          }\n          case State.Updating: {\n            if (ans.upToDate) {\n              this.changeState(pkh, State.UpToDate);\n            } else {\n              this.setDelay(pkh, this.shortDelayActivity);\n            }\n            break;\n          }\n          default: {\n            console.log('No state found!');\n            break;\n          }\n        }\n        const acc = this.walletService.wallet?.getAccount(pkh);\n        if (acc?.activities?.length) {\n          const latestActivity = acc.activities[0];\n          if (latestActivity.status === OpStatus.UNCONFIRMED) {\n            const age = new Date().getTime() - new Date(latestActivity.timestamp).getTime();\n            if (age > 3600000) {\n              // 60m\n              acc.activities.shift();\n              this.walletService.storeWallet();\n            }\n          }\n        }\n        if (this.walletService.wallet instanceof TorusWallet) {\n          this.walletService.wallet.checkSkExpiration();\n        }\n      },\n      (err) => {\n        console.log('Error in update()');\n        console.error(err);\n      },\n      () => {\n        console.debug(\n          `account[${this.accounts.findIndex((a) => a.address === pkh)}][${\n            typeof this.scheduler.get(pkh)?.state !== 'undefined' ? this.scheduler.get(pkh).state : '*'\n          }]: <<`\n        );\n      }\n    );\n  }\n  changeState(pkh: string, newState: State) {\n    const scheduleData: ScheduleData = this.scheduler.get(pkh);\n    scheduleData.state = newState;\n    if (newState === State.UpToDate || newState === State.Updating) {\n      this.updateAccountData(pkh);\n    }\n    if (newState === State.Wait || newState === State.Updating) {\n      scheduleData.interval.unsubscribe();\n      scheduleData.interval = interval(this.shortDelayActivity).subscribe(() => this.update(pkh));\n    }\n    scheduleData.stateCounter++;\n    this.scheduler.set(pkh, scheduleData);\n  }\n  setDelay(pkh: string, time: number) {\n    const scheduleData: ScheduleData = this.scheduler.get(pkh);\n    if (scheduleData.interval) {\n      scheduleData.interval.unsubscribe();\n    }\n    scheduleData.interval = interval(time).subscribe(() => this.update(pkh));\n    this.scheduler.set(pkh, scheduleData);\n  }\n  stopAll() {\n    if (this.walletService.wallet) {\n      if (this.accounts?.length) {\n        console.log('Stop all schedulers');\n        for (const account of this.accounts) {\n          this.stop(account.address);\n        }\n      }\n      if (this.tzrateInterval) {\n        this.tzrateInterval.unsubscribe();\n        this.tzrateInterval = null;\n      }\n    }\n  }\n  async stop(pkh) {\n    console.log('Stop scheduler ' + this.accounts.findIndex((a) => a.address === pkh));\n    if (this.scheduler.get(pkh)) {\n      this.scheduler.get(pkh).interval.unsubscribe();\n      this.scheduler.get(pkh).interval = null;\n      this.scheduler.delete(pkh);\n    }\n  }\n  updateAccountData(pkh: string) {\n    // Maybe also check for originations to account?\n    console.debug('update account data for ' + pkh);\n    this.operationService.getAccount(pkh).subscribe((ans: any) => {\n      if (ans.success) {\n        this.balanceService.updateAccountBalance(this.walletService.wallet?.getAccount(pkh), Number(ans.payload.balance));\n        const acc = this.walletService.wallet?.getAccount(pkh);\n        this.delegateService.handleDelegateResponse(acc, ans.payload.delegate);\n      } else {\n        console.log('updateAccountData -> getAccount failed ', ans.payload.msg);\n      }\n    });\n  }\n  addUnconfirmedOperations(from: string, metadata: any) {\n    const account = this.walletService.wallet?.getAccount(from);\n    if (!account.activities) {\n      return;\n    }\n    if (metadata.transactions) {\n      console.log('Unconfirmed transactions:');\n      console.log(metadata.transactions);\n      const decimals =\n        metadata.tokenTransfer && this.tokenService.getAsset(metadata.tokenTransfer) ? this.tokenService.getAsset(metadata.tokenTransfer).decimals : 6;\n      for (const op of metadata.transactions) {\n        const transaction = {\n          type: 'transaction',\n          status: OpStatus.UNCONFIRMED,\n          amount: Big(op.amount)\n            .times(10 ** decimals)\n            .toString(),\n          fee: null,\n          source: { address: from },\n          destination: { address: op.destination },\n          hash: metadata.opHash,\n          block: null,\n          timestamp: new Date().getTime(),\n          tokenId: metadata.tokenTransfer ? metadata.tokenTransfer : undefined,\n          entrypoint: op.parameters?.entrypoint ? op.parameters.entrypoint : ''\n        };\n        account.activities.unshift(transaction);\n        const destinationAccount = this.walletService.wallet?.getAccount(op.destination);\n        if (destinationAccount) {\n          destinationAccount.activities.unshift({ ...transaction });\n        }\n      }\n    } else if (metadata.delegate !== undefined) {\n      const delegation = {\n        type: 'delegation',\n        status: OpStatus.UNCONFIRMED,\n        amount: null,\n        fee: null,\n        source: { address: from },\n        destination: { address: metadata.delegate },\n        hash: metadata.opHash,\n        block: null,\n        timestamp: new Date().getTime()\n      };\n      account?.activities.unshift(delegation);\n    } else if (metadata.origination !== undefined) {\n      const origination = {\n        type: 'origination',\n        status: OpStatus.UNCONFIRMED,\n        amount: metadata.origination.balance,\n        fee: null,\n        source: { address: from },\n        destination: { address: metadata.kt1 },\n        hash: metadata.opHash,\n        block: null,\n        timestamp: new Date().getTime()\n      };\n      account?.activities.unshift(origination);\n    } else {\n      console.log('Unknown metadata', metadata);\n    }\n    this.walletService.storeWallet();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { OperationService } from '../operation/operation.service';\nimport { WalletService } from '../../services/wallet/wallet.service';\nimport { MessageService } from '../../services/message/message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeeplinkService {\n  private pairingJson = '';\n  constructor(private operationService: OperationService, private walletService: WalletService, private messageService: MessageService) {}\n  set(params: Params) {\n    console.log(params);\n    this.pairingJson = this.extractPairingJson(params);\n    if (this.pairingJson && !this.walletService.wallet) {\n      this.messageService.addWarning('Access your wallet to complete the pairing');\n    }\n    console.log(this.pairingJson);\n  }\n  extractPairingJson(params: Params): string {\n    if (params.type === 'tzip10' && params.data) {\n      try {\n        return this.operationService.b58cdecode(params.data, '').toString();\n      } catch (e) {\n        return '';\n      }\n    } else if (params?.uri && params.uri.startsWith('wc:')) {\n      return params.uri;\n    }\n    return '';\n  }\n  popPairingJson(): string {\n    const pairingJson = this.pairingJson;\n    this.pairingJson = '';\n    return pairingJson;\n  }\n  QRtoPairingJson(qrPayload: string): string {\n    if (qrPayload.length > 26 && qrPayload.slice(0, 26) === 'tezos://?type=tzip10&data=') {\n      qrPayload = qrPayload.slice(26);\n    }\n    try {\n      return this.operationService.b58cdecode(qrPayload, '').toString();\n    } catch {}\n    return '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet/wallet.service';\nimport { OperationService } from '../operation/operation.service';\nimport { Account } from '../wallet/wallet';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Injectable()\nexport class DelegateService {\n  public readonly bb = 'https://api.baking-bad.org/v2';\n  public delegates = new BehaviorSubject<any>([]);\n\n  constructor(private walletService: WalletService, private operationService: OperationService, public router: Router, private location: Location) {\n    const path = this.location.path();\n    const embedded = path.startsWith('/embedded');\n    if (!embedded) {\n      this.getDelegates();\n    }\n  }\n  getDelegate(account: Account) {\n    this.operationService.getDelegate(account.address).subscribe(\n      (data: any) => {\n        if (data.success) {\n          this.handleDelegateResponse(account, data.payload.delegate);\n        }\n      },\n      (err) => console.log(JSON.stringify(err))\n    );\n  }\n  handleDelegateResponse(account: Account, data: any) {\n    if (data) {\n      if (account.delegate !== data) {\n        account.delegate = data;\n        this.walletService.storeWallet();\n      } else {\n        console.debug('delegate for ' + account.address + ' up to date');\n      }\n    } else {\n      if (account.delegate !== '') {\n        account.delegate = '';\n        this.walletService.storeWallet();\n      }\n    }\n  }\n  getDelegates(): void {\n    if (CONSTANTS.NETWORK !== 'ghostnet') {\n      fetch(`${this.bb}/bakers`)\n        .then((response) => response.json())\n        .then((d) => this.delegates.next(d));\n    } else {\n      fetch('https://api.ghostnet.tzkt.io/v1/accounts/tz1Kukaiq96AJyqaHWn69XxTBrjUEB4sXSBq')\n        .then((r) => r.json())\n        .then((k) => {\n          const freeSpace = Math.round((k.balance * 10 - k.stakingBalance) / 10 ** 6);\n          this.delegates.next([\n            {\n              address: 'tz1Kukaiq96AJyqaHWn69XxTBrjUEB4sXSBq',\n              estimatedRoi: 0,\n              fee: 0,\n              freeSpace,\n              logo: `${window.location.origin}/assets/img/header-logo.png`,\n              minDelegation: 0,\n              name: 'Kukai Baker',\n              openForDelegation: true,\n              payoutAccuracy: 'precise',\n              serviceType: 'tezos_only'\n            }\n          ]);\n        });\n    }\n  }\n\n  resolveDelegateByAddress(address: string): Promise<any> {\n    return new Promise((resolve) => {\n      this.delegates.pipe(take(1)).subscribe((d) => resolve(d?.find((d) => d?.address === address)));\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as pbkdf2 from 'pbkdf2';\nimport * as AES from 'aes-js';\nimport * as scrypt from 'scryptsy';\nimport * as cryptob from 'crypto-browserify';\nimport * as forge from 'node-forge';\ndeclare const Buffer;\n@Injectable()\nexport class EncryptionService {\n  constructor() {}\n  async encrypt(plaintext: any, password: string, version: number, salt: string = null): Promise<any> {\n    if (version === 1) {\n      throw new Error('Encryption version no longer supported');\n    } else if (version === 2) {\n      return this.encrypt_v2(plaintext, password);\n    } else if (version === 3) {\n      return this.encrypt_v2(plaintext, password, salt);\n    } else {\n      throw new Error('Unrecognized encryption format');\n    }\n  }\n  async decrypt(chiphertext: string, password: string, salt: string, version: number): Promise<any> {\n    if (version === 1) {\n      return this.decrypt_v1(chiphertext, password, salt);\n    } else if (version === 2 || version === 3) {\n      return this.decrypt_v2(chiphertext, password, salt);\n    } else {\n      throw new Error('Unrecognized encryption format');\n    }\n  }\n  // Version 1\n  async encrypt_v1(plaintext: any, password: string, salt: string): Promise<string> {\n    return new Promise((resolve) => {\n      try {\n        if (!password || !salt) {\n          throw new Error('Missing password or salt');\n        }\n        pbkdf2.pbkdf2(password, salt, 10000, 32, 'sha512', (err, key) => {\n          if (err) {\n            throw err;\n          }\n          const aesCtr = new AES.ModeOfOperation.ctr(key);\n          let chiphertext = aesCtr.encrypt(plaintext);\n          chiphertext = AES.utils.hex.fromBytes(chiphertext);\n          resolve(chiphertext);\n        });\n      } catch (e) {\n        console.warn(e);\n        resolve('');\n      }\n    });\n  }\n  async decrypt_v1(chiphertext: string, password: string, salt: string): Promise<any> {\n    return new Promise((resolve) => {\n      try {\n        if (!password || !salt) {\n          throw new Error('Missing password or salt');\n        }\n        pbkdf2.pbkdf2(password, salt, 10000, 32, 'sha512', (err, key) => {\n          if (err) {\n            throw err;\n          }\n          chiphertext = AES.utils.hex.toBytes(chiphertext);\n          const aesCtr = new AES.ModeOfOperation.ctr(key);\n          const plaintext = aesCtr.decrypt(chiphertext);\n          resolve(plaintext);\n        });\n      } catch (e) {\n        resolve('');\n      }\n    });\n  }\n  // Version 2\n  async encrypt_v2(plaintext: any, password: string, salt?: string): Promise<any> {\n    if (!password) {\n      throw new Error('Missing password');\n    }\n    let salty;\n    if (salt) {\n      salty = new Buffer(salt, 'hex');\n    } else {\n      salty = cryptob.randomBytes(16);\n    }\n    const key = await scrypt.async(password, salty, 65536, 8, 1, 32);\n    const cipher: any = forge.cipher.createCipher('AES-GCM', key.toString('binary'));\n    cipher.start({\n      iv: salty\n    });\n    const byteStringBuffer = forge.util.createBuffer(plaintext.toString('binary'), 'utf-8');\n    cipher.update(byteStringBuffer);\n    cipher.finish();\n    const chiphertext = cipher.output.toHex() + '==' + cipher.mode.tag.toHex();\n    return { chiphertext: chiphertext, iv: salty.toString('hex') };\n  }\n  async decrypt_v2(chipher: string, password: string, salt: string): Promise<string> {\n    try {\n      if (!password || !salt) {\n        throw new Error('Missing password or salt');\n      }\n      const parts = chipher.split('==');\n      const chiphertext = parts[0];\n      const tag = parts[1];\n      const key = await scrypt.async(password, new Buffer(salt, 'hex'), 65536, 8, 1, 32);\n      const decipher: any = forge.cipher.createDecipher('AES-GCM', key.toString('binary'));\n      decipher.start({\n        iv: new Buffer(salt, 'hex'),\n        tag: forge.util.createBuffer(new Buffer(tag, 'hex').toString('binary'), 'utf-8') // authentication tag from encryption\n      });\n      decipher.update(forge.util.createBuffer(new Buffer(chiphertext, 'hex').toString('binary'), 'utf-8'));\n      const pass = decipher.finish();\n      if (pass) {\n        return new Buffer(decipher.output.toHex(), 'hex');\n      } else {\n        return null;\n      }\n    } catch (err) {\n      return null;\n    }\n  }\n  shiftIV(salt: string, offset: number) {\n    if (!Number.isInteger(offset) || offset > 255 || offset < 1) {\n      throw new Error('Invalid offset for IV');\n    }\n    const buf = new Buffer(salt, 'hex');\n    buf[13] = (buf[13] + offset) % 256;\n    return buf.toString('hex');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { OperationService } from '../operation/operation.service';\nimport { flatMap, catchError } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { DefaultTransactionParams, OpLimits } from '../../interfaces';\nimport Big from 'big.js';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { InputValidationService } from '../input-validation/input-validation.service';\n\nconst httpOptions = { headers: { 'Content-Type': 'application/json' } };\n@Injectable()\nexport class EstimateService {\n  readonly costPerByte = '250';\n  readonly revealGasLimit = 200;\n  readonly extraGas = 25;\n  readonly contractsOverride: Record<string, OpLimits>;\n  queue = [];\n  nodeURL = CONSTANTS.NODE_URL;\n  pkh: string;\n  pk: string;\n  hash: string;\n  chainId: string;\n  manager: string;\n  counter: number;\n  constructor(private http: HttpClient, private operationService: OperationService, private imputValidationService: InputValidationService) {\n    this.contractsOverride = CONSTANTS.CONTRACT_OVERRIDES;\n  }\n  init(hash: string, chainId: string, counter: number, manager: string, pk: string, pkh: string) {\n    this.hash = hash;\n    this.chainId = chainId;\n    this.counter = counter;\n    this.manager = manager;\n    this.pk = pk;\n    this.pkh = pkh;\n  }\n  async preLoadData(pkh: string, pk: string) {\n    this.pkh = pkh;\n    this.pk = pk;\n    const [head, counter, manager] = await Promise.all([this.operationService.getHeader().toPromise(), this.getCounter(pkh), this.getManager(pkh)]);\n    if (head && counter && (manager || manager === null)) {\n      this.init(head.hash, head.chain_id, counter, manager, pk, pkh);\n    }\n  }\n  public async estimateTransactions(transactions: any, from: string, tokenTransfer: string = '', callback) {\n    this.estimate(transactions, from, tokenTransfer, callback, false);\n  }\n  public async estimateOrigination(origination: any, from: string, callback) {\n    this.estimate([origination], from, '', callback, true);\n  }\n  private async estimate(transactions: any, from: string, tokenTransfer: string = '', callback, isOrigination: boolean) {\n    this.queue.push({ transactions, from, callback });\n    if (this.queue.length === 1) {\n      while (this.queue.length > 0) {\n        while (this.queue.length > 1) {\n          this.queue[0].callback(null);\n          this.queue.shift();\n        }\n        let retry = false;\n        for (let i = 0; i < 1 || (retry && i < 2); i++) {\n          await this._estimate(this.queue[0].transactions, this.queue[0].from, tokenTransfer, isOrigination)\n            .then((res) => {\n              this.queue[0].callback(res);\n            })\n            .catch(async (error) => {\n              if (error.message && error.message === 'An operation assumed a contract counter in the past' && !retry) {\n                console.log('Update counter');\n                await this.preLoadData(this.pkh, this.pk);\n                retry = true;\n              } else {\n                this.queue[0].callback({ error });\n              }\n            });\n        }\n        this.queue.shift();\n      }\n    }\n  }\n  private async _estimate(operations: any, from: string, tokenTransfer: string, isOrigination: boolean = false): Promise<any> {\n    if (!this.hash) {\n      return null;\n    }\n    const simulation = {\n      fee: 0,\n      gasLimit: Math.min(\n        CONSTANTS.HARD_LIMITS.hard_gas_limit_per_operation,\n        Math.floor(CONSTANTS.HARD_LIMITS.hard_gas_limit_per_block / (operations.length + 1))\n      ),\n      storageLimit: CONSTANTS.HARD_LIMITS.hard_storage_limit_per_operation\n    };\n    for (const tx of operations) {\n      console.log(tx);\n      if (!isOrigination) {\n        if (!tx.amount) {\n          tx.amount = 0;\n        }\n        if (tx.destination.slice(0, 3) !== 'KT1' && !tokenTransfer) {\n          tx.amount = 0.000001;\n        }\n      }\n      tx.gasLimit = simulation.gasLimit;\n      tx.storageLimit = simulation.storageLimit;\n    }\n    if (this.hash && this.counter && (this.manager || this.manager === null)) {\n      const op = isOrigination\n        ? this.operationService.createOriginationObject(this.hash, this.counter, this.manager, operations[0], simulation.fee, this.pk, this.pkh)\n        : this.operationService.createTransactionObject(\n            this.hash,\n            this.counter,\n            this.manager,\n            operations,\n            this.pkh,\n            this.pk,\n            from,\n            simulation.fee,\n            tokenTransfer\n          );\n      const result = await this.simulate(op)\n        .toPromise()\n        .catch((e) => {\n          console.warn(e);\n          return null;\n        });\n      if (result && result.contents) {\n        let reveal = false;\n        const limits = [];\n        for (const i in result.contents) {\n          if (result.contents[i].kind === 'reveal') {\n            reveal = true;\n          } else if (['transaction', 'origination'].includes(result.contents[i].kind) && result.contents[i].metadata.operation_result.status === 'applied') {\n            const index: number = Number(i) + (result.contents[0]?.kind === 'reveal' ? -1 : 0);\n            const opObj = index > -1 ? operations[index] : null;\n            const { gas, storage } = this.getOpUsage(result.contents[i], opObj);\n            limits.push({ gasLimit: gas, storageLimit: storage });\n          } else {\n            return null;\n          }\n        }\n        return await this.operationService\n          .localForge(op)\n          .pipe(\n            flatMap((fop) => {\n              const bytes = fop.length / 2 + 64;\n              const gas = this.totalGasLimit(limits);\n              const storage = this.totalStorageLimit(limits);\n              const dtp: DefaultTransactionParams = {\n                customLimits: limits,\n                fee: this.recommendFee(limits, reveal, bytes),\n                burn: this.burnFee(limits),\n                gas,\n                storage,\n                reveal\n              };\n              console.log(JSON.stringify(dtp));\n              return of(dtp);\n            })\n          )\n          .toPromise();\n      } else if (typeof result?.success === 'boolean' && result.success === false) {\n        console.log(result);\n        throw new Error(result.payload.msg);\n      }\n    }\n    return null;\n  }\n  getOpUsage(content: any, op: any): OpLimits {\n    let gasUsage = 0;\n    let burn = Big(0);\n    if (content.source && content.source === this.pkh) {\n      burn = burn.minus(content.amount ? content.amount : '0');\n      burn = burn.minus(content.fee ? content.fee : '0');\n      burn = burn.minus(content.balance ? content.balance : '0');\n    }\n    if (content.destination && content.destination === this.pkh) {\n      burn = burn.plus(content.amount ? content.amount : '0');\n    }\n    if (content.metadata.operation_result.balance_updates) {\n      for (const balanceUpdate of content.metadata.operation_result.balance_updates) {\n        if (balanceUpdate.contract === this.pkh) {\n          burn = burn.minus(balanceUpdate.change);\n        }\n      }\n    }\n    if (content.metadata.balance_updates) {\n      for (const balanceUpdate of content.metadata.balance_updates) {\n        if (balanceUpdate.contract === this.pkh) {\n          burn = burn.minus(balanceUpdate.change);\n        }\n      }\n    }\n    gasUsage += content.metadata.operation_result.consumed_milligas ? Math.ceil(Number(content.metadata.operation_result.consumed_milligas) / 1000) : 0;\n    if (content.metadata.internal_operation_results) {\n      for (const internalResult of content.metadata.internal_operation_results) {\n        if (internalResult.result) {\n          if (internalResult.result.consumed_milligas) {\n            gasUsage +=\n              internalResult.result && internalResult.result.consumed_milligas ? Math.ceil(Number(internalResult.result.consumed_milligas) / 1000) : 0;\n          }\n          if (internalResult.result.balance_updates) {\n            for (const balanceUpdate of internalResult.result.balance_updates) {\n              if (balanceUpdate.contract === this.pkh && balanceUpdate.change.slice(0, 1) === '-') {\n                burn = burn.minus(balanceUpdate.change);\n              }\n            }\n          }\n        }\n      }\n    }\n    const storageUsage = Math.round(burn / Number(this.costPerByte));\n    if (\n      gasUsage < 0 ||\n      gasUsage > CONSTANTS.HARD_LIMITS.hard_gas_limit_per_operation ||\n      storageUsage < 0 ||\n      storageUsage > CONSTANTS.HARD_LIMITS.hard_storage_limit_per_operation\n    ) {\n      throw new Error('InvalidUsageCalculation');\n    }\n    return this.getOpLimits(content, op, gasUsage, storageUsage);\n  }\n  /*\n    Need to be updated when fee market appear or default behavior for bakers changes\n  */\n  recommendFee(limits: any, reveal: boolean, bytes: number): number {\n    const minimalFee = 100;\n    const feePerByte = 1;\n    const feePerGasUnit = 0.1;\n    let gasUnits = 0;\n    let numberOfOperations = 0;\n    if (reveal) {\n      gasUnits += this.revealGasLimit;\n      numberOfOperations++;\n    }\n    for (const data of limits) {\n      gasUnits += data.gasLimit;\n      numberOfOperations++;\n    }\n    bytes += 10 * numberOfOperations; // add 10 extra bytes for variation in amount & fee\n    return Number(\n      Big(Math.ceil(minimalFee + feePerByte * bytes + feePerGasUnit * gasUnits))\n        .div(1000000)\n        .toString()\n    );\n  }\n  totalGasLimit(limits: any): number {\n    let totalGasLimit = 0;\n    for (const data of limits) {\n      totalGasLimit += data.gasLimit;\n    }\n    return totalGasLimit;\n  }\n  totalStorageLimit(limits: any): number {\n    let totalStorageLimit = 0;\n    for (const data of limits) {\n      totalStorageLimit += data.storageLimit;\n    }\n    return totalStorageLimit;\n  }\n  burnFee(limits: any): number {\n    let totalStorageLimit = Big(0);\n    for (const data of limits) {\n      totalStorageLimit = totalStorageLimit.plus(data.storageLimit);\n    }\n    return Number(Big(totalStorageLimit).times(this.costPerByte).div('1000000').toString());\n  }\n  simulate(op: any): Observable<any> {\n    op.signature = 'edsigtXomBKi5CTRf5cjATJWSyaRvhfYNHqSUGrn4SdbYRcGwQrUGjzEfQDTuqHhuA8b2d8NarZjz8TRf65WkpQmo423BtomS8Q';\n    return this.operationService\n      .postRpc('chains/main/blocks/head/helpers/scripts/run_operation', {\n        operation: op,\n        chain_id: this.chainId\n      })\n      .pipe(\n        flatMap((res) => {\n          this.operationService.checkApplied([res]);\n          return of(res);\n        })\n      )\n      .pipe(\n        catchError((err) => {\n          return this.operationService.errHandler(err);\n        })\n      );\n  }\n  private getOpLimits(content: any, op: any, gasUsage: number, storageUsage: number): OpLimits {\n    // check for hardcoded override\n    let limit: OpLimits = {};\n    const entrypoint = content?.parameters?.entrypoint;\n    const destination = content?.destination;\n    if (entrypoint && destination) {\n      const contractOverride: OpLimits = this.contractsOverride[`${destination}:${entrypoint}`];\n      if (contractOverride) {\n        limit = contractOverride;\n      }\n    }\n    // gas\n    if (!limit.gas) {\n      let gasRecommendation: number = 0;\n      if (op?.gasRecommendation) {\n        if (this.imputValidationService.gas(op.gasRecommendation)) {\n          gasRecommendation = Number(op.gasRecommendation);\n        } else if (this.imputValidationService.relativeLimit(op.gasRecommendation)) {\n          let percentage: number = Number(op.gasRecommendation.slice(1, -1));\n          percentage = Math.min(Math.max(percentage, 2), 900);\n          gasRecommendation = Math.round(gasUsage * (1 + percentage / 100));\n        }\n      }\n      const gasEstimation = Math.max(Math.ceil(gasUsage * 1.02), Math.round(gasUsage + this.extraGas));\n      limit.gas = Math.max(gasRecommendation, gasEstimation); // make sure dapps don't underestimate (ithaca side effect)\n    }\n    // storage\n    if (!limit.storage) {\n      let storageRecommendation: number = 0;\n      if (op?.storageRecommendation) {\n        if (this.imputValidationService.storage(op.storageRecommendation)) {\n          storageRecommendation = Number(op.storageRecommendation);\n        } else if (this.imputValidationService.relativeLimit(op.storageRecommendation)) {\n          const percentage: number = Number(op.storageRecommendation.slice(1, -1));\n          storageRecommendation = Math.round(storageUsage * (1 + percentage / 100));\n        }\n      }\n      const storageEstimation = Math.round(storageUsage);\n      limit.storage = Math.max(storageRecommendation, storageEstimation);\n    }\n    return limit;\n  }\n  private async getCounter(pkh: string): Promise<number> {\n    return this.operationService.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/counter`).toPromise();\n  }\n  private async getManager(pkh: string): Promise<string> {\n    return this.operationService.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/manager_key`).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SubjectService } from '../../subject/subject.service';\nimport { SwapLiquidityService } from '../../swap-liquidity/swap-liquidity.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DipDupService {\n  private readonly storeKey = 'dipdup';\n  private readonly maxTokensReturned = 1000;\n  public tokens = new Map<string, any>();\n  constructor(private subjectService: SubjectService) {\n    this.rehydrate();\n  }\n  async fetchTokensMidPrice(offset = 0): Promise<void> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    const req = {\n      query: `{\n            token(where: {} offset: ${offset}) {\n              exchanges(where: {_not: {name: {_eq: \"lb\"}}}) {\n                midPrice,\n                sharesTotal,\n                token {\n                  address,\n                  tokenId\n                }\n              }\n      }}`\n    };\n    const response = await (\n      await fetch(baseUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(req)\n      })\n    ).json();\n    if (response?.data?.token?.length) {\n      if (offset === 0) {\n        this.tokens = new Map<string, any>();\n      }\n      for (const t of response.data.token) {\n        const exchange = t.exchanges.reduce((p, c) =>\n          (!!c?.sharesTotal && !!p?.sharesTotal && Number(c.sharesTotal) > Number(p.sharesTotal)) || (c?.sharesTotal && !p?.sharesTotal) ? c : p\n        );\n        this.tokens.set(`${exchange.token.address}:${exchange.token.tokenId}`, Boolean(Number(exchange?.midPrice)) ? exchange?.midPrice : '0');\n      }\n    }\n    if (response?.data?.token?.length >= this.maxTokensReturned) {\n      this.fetchTokensMidPrice(offset + this.maxTokensReturned);\n    } else if (this.tokens.size) {\n      this.store();\n    }\n    return;\n  }\n  store() {\n    const obj = Object.fromEntries(this.tokens);\n    localStorage.setItem(\n      this.storeKey,\n      JSON.stringify({\n        midPrices: obj\n      })\n    );\n    this.subjectService.refreshTokens.next(null);\n  }\n  rehydrate() {\n    const json = localStorage.getItem(this.storeKey);\n    if (json) {\n      const parsed = JSON.parse(json);\n      if (parsed?.midPrices) {\n        for (const key of Object.keys(parsed.midPrices)) {\n          this.tokens.set(key, parsed.midPrices[key]);\n        }\n        this.subjectService.refreshTokens.next(null);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TzktService, MetadataSource } from './tzkt/tzkt.service';\nimport { WalletObject } from '../wallet/wallet';\nimport { Asset } from '../token/token.service';\n\nexport interface Indexer {\n  getContractAddresses(pkh: string): Promise<any>;\n  accountInfo(address: string, knownTokenIds: string[], init: boolean): Promise<any>;\n  getOperations(address: string, knownTokenIds: string[], wallet: WalletObject): Promise<any>;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndexerService {\n  constructor(public tzktService: TzktService) {}\n  async isUsedAccount(address: string): Promise<boolean> {\n    return this.tzktService.isUsedAccount(address);\n  }\n  async getContractAddresses(address: string): Promise<any> {\n    return this.tzktService.getContractAddresses(address);\n  }\n  async accountInfo(address: string, knownTokenIds: string[] = []): Promise<any> {\n    return this.tzktService.accountInfo(address, knownTokenIds);\n  }\n  async getOperations(address: string, knownTokenIds: string[], wallet: WalletObject): Promise<any> {\n    return this.tzktService.getOperations(address, knownTokenIds, wallet);\n  }\n  async getTokenMetadata(contractAddress: string, id: string, metadataSource = MetadataSource.Any): Promise<any> {\n    return this.tzktService.getTokenMetadata(contractAddress, id, metadataSource);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { UtilsService } from '../../utils/utils.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObjktService {\n  private queue = [];\n  pending = false;\n  constructor(private utilsService: UtilsService) {}\n\n  async resolveToken(contractAddress, id) {\n    const req = {\n      query: `{\n        token(where: {fa_contract: {_eq: \"${contractAddress}\"}, token_id: {_eq: \"${id}\"}}) {\n          highest_offer\n          lowest_ask\n          metadata\n          name\n          attributes {\n            attribute {\n              name,\n              value,\n              attribute_counts(where: {fa_contract: {_eq: \"${contractAddress}\"}}) {\n                editions\n              }\n            }\n          }\n        }\n        event(\n          where: {token: {fa_contract: {_eq: \"${contractAddress}\"}, token_id: {_eq: \"${id}\"}}}\n          order_by: {level: asc, timestamp: desc}\n          limit: 1\n        ) {\n          price_xtz\n        }\n        fa(where: {contract: {_eq: \"${contractAddress}\"}}) {\n          editions\n          floor_price\n        }\n      }`\n    };\n    try {\n      const result = await (\n        await fetch(CONSTANTS.OBJKT_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json();\n      return {\n        ...result?.data?.token[0],\n        last_sale: result?.data?.event[0]?.price_xtz,\n        floor_price: result?.data?.fa[0]?.floor_price,\n        editions: result?.data?.fa[0]?.editions\n      };\n    } catch (e) {\n      console.error(e);\n      return undefined;\n    }\n  }\n  async resolveCollection(address): Promise<any> {\n    if (!CONSTANTS.MAINNET) {\n      return {};\n    }\n    while (this.queue.length >= 500) {\n      // max 500 results per call\n      await this.utilsService.sleep(3000);\n    }\n    if (!this.pending) {\n      this.pending = true;\n      this.collect();\n    }\n    return new Promise((resolve, reject) => {\n      this.queue.push({ address, resolve, reject });\n    });\n  }\n\n  async collect() {\n    setTimeout(async () => {\n      this.pending = false;\n      const queue = this.queue;\n      this.queue = [];\n      const addresses = queue.map((q) => {\n        return q.address;\n      });\n      const items = await this.resolveCollections(addresses).catch((e) => {\n        for (const q of queue) {\n          q.reject(e);\n          throw e;\n        }\n      });\n      while (queue.length) {\n        const promise = queue.shift();\n        if (items[promise.address]?.name) {\n          promise.resolve(items[promise.address]);\n        } else {\n          promise.resolve(null);\n        }\n      }\n    }, 3000);\n  }\n\n  async resolveCollections(contractAddresses: string[]) {\n    if (!CONSTANTS?.OBJKT_URL) {\n      return;\n    }\n    const req = {\n      query: `{\n        fa(where: {contract: {_in: ${JSON.stringify(contractAddresses)}}}) {\n          contract\n          name\n          logo\n        }\n      }`\n    };\n    const _objkts = (\n      await (\n        await fetch(CONSTANTS.OBJKT_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json()\n    )?.data?.fa;\n    const objkts: any = {};\n    if (_objkts) {\n      for (const objkt of _objkts) {\n        objkts[objkt.contract] = { name: objkt.name, logo: objkt.logo };\n      }\n    }\n    console.log('resolveCollections', objkts);\n    return objkts;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CONSTANTS, MODEL_3D_WHITELIST, BLACKLISTED_TOKEN_CONTRACTS } from '../../../../environments/environment';\nimport { Indexer } from '../indexer.service';\nimport * as cryptob from 'crypto-browserify';\nimport { WalletObject, Activity, OpStatus, Token } from '../../wallet/wallet';\nimport { TezosToolkit } from '@taquito/taquito';\nimport { Tzip12Module, tzip12 } from '@taquito/tzip12';\nimport { TezosStorageHandler } from '@taquito/tzip16';\nimport { Handler, IpfsHttpHandler, MetadataProvider } from '@taquito/tzip16';\nimport { SubjectService } from '../../subject/subject.service';\nimport Big from 'big.js';\n\ninterface TokenMetadata {\n  name: string;\n  tokenType: 'FA2' | 'FA1.2';\n  decimals: number;\n  symbol?: string;\n  description?: string;\n  artifactUri?: string;\n  displayUri?: string;\n  thumbnailUri?: string;\n  category?: string;\n  isTransferable?: boolean;\n  shouldPreferSymbol?: boolean;\n  isBooleanAmount?: boolean;\n  series?: string;\n  ttl?: number;\n  mintingTool: string;\n}\n\nexport enum MetadataSource {\n  Any = 0,\n  TzktOnly = 1,\n  TaquitoOnly = 2\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TzktService implements Indexer {\n  tokenBalanceCache = {};\n  readonly TZKT_TOKEN_QUERY_SIZE: number = 10000;\n  Tezos: TezosToolkit;\n  constructor(private subjectService: SubjectService) {\n    this.Tezos = new TezosToolkit(CONSTANTS.NODE_URL);\n    const customHandlers = new Map<string, Handler>([\n      ['ipfs', new IpfsHttpHandler('cloudflare-ipfs.com')],\n      ['tezos-storage', new TezosStorageHandler()]\n    ]);\n    const customMetadataProvider = new MetadataProvider(customHandlers);\n    this.Tezos.addExtension(new Tzip12Module(customMetadataProvider));\n  }\n  async getContractAddresses(pkh: string): Promise<any> {\n    return fetch(`${CONSTANTS.API_URL}/operations/originations?contractManager=${pkh}`)\n      .then((response) => response.json())\n      .then((data) =>\n        data\n          .map((op: any) => {\n            return op?.status === 'applied' && op?.originatedContract?.kind === 'delegator_contract' ? op.originatedContract.address : '';\n          })\n          .filter((address: string) => address.length)\n      );\n  }\n\n  async getHashAndBlockByIds(transactionIds: number[]): Promise<any> {\n    if (!transactionIds?.length) {\n      return {};\n    }\n    return fetch(`${CONSTANTS.API_URL}/operations/transactions?id.in=${transactionIds.join(',')}`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((o) => {\n        let res = {};\n        for (let i = 0; i < o.length; i++) {\n          if (o[i]?.id && o[i].hash && o[i].block) {\n            res[`t${o[i].id}`] = { hash: o[i].hash, block: o[i].block };\n          }\n        }\n        return res;\n      });\n  }\n  async accountInfo(address: string, knownTokenIds: string[]): Promise<any> {\n    const unknownTokenIds = [];\n    const data = await (await fetch(`${CONSTANTS.API_URL}/accounts/${address}`)).json();\n    const tokenBalances = address.startsWith('tz') ? await this.getAllTokenBalances(address) : [];\n    if (data) {\n      if (tokenBalances?.length) {\n        for (const token of tokenBalances) {\n          if (!knownTokenIds.includes(token.tokenId)) {\n            unknownTokenIds.push(token.tokenId);\n          }\n        }\n      }\n      tokenBalances.sort(function (a: any, b: any) {\n        if (a.tokenId < b.tokenId) {\n          return -1;\n        } else {\n          return 1;\n        }\n      });\n      const payload: string = (data.balance ? data.balance : '') + (data.counter ? data.counter : '') + (tokenBalances ? JSON.stringify(tokenBalances) : '');\n      const input = Buffer.from(payload);\n      const hash = cryptob.createHash('sha512').update(input).digest('hex');\n      if (payload && payload !== '[]') {\n        const balance = data?.balance !== undefined ? data.balance : 0;\n        return { counter: hash, unknownTokenIds, tokens: tokenBalances, balance };\n      }\n    }\n    return { counter: '', tokens: tokenBalances };\n  }\n  async isUsedAccount(address: string): Promise<boolean> {\n    const accountInfo = await (await fetch(`${CONSTANTS.API_URL}/accounts/${address}`)).json();\n    return Boolean(accountInfo && (accountInfo?.type === 'user' || accountInfo?.balance || accountInfo?.tokenBalancesCount));\n  }\n  async getOperations(address: string, knownTokenIds: string[], wallet: WalletObject): Promise<any> {\n    const ops = await fetch(`${CONSTANTS.API_URL}/accounts/${address}/operations?limit=20&type=delegation,origination,transaction`)\n      .then((response) => response.json())\n      .then((data) =>\n        data\n          .map((op) => {\n            if (!op.hasInternals || !wallet.getAccount(op.target.address)) {\n              const status: OpStatus = op.status === 'applied' ? OpStatus.CONFIRMED : OpStatus.FAILED;\n              let destination = { address: '' };\n              let amount = '0';\n              let entrypoint = '';\n              let opId = '';\n              switch (op.type) {\n                case 'transaction':\n                  if (address !== op.target.address && address !== op.sender.address) {\n                    return null;\n                  }\n                  destination = op.target;\n                  amount = op.amount.toString();\n                  entrypoint = this.extractEntrypoint(op);\n                  opId = op?.id ? `t${op.id}` : '';\n                  break;\n                case 'delegation':\n                  if (address !== op.sender.address) {\n                    return null;\n                  }\n                  destination = op.newDelegate ? op.newDelegate : { address: '' };\n                  amount = '0';\n                  opId = op?.id ? `d${op.id}` : '';\n                  break;\n                case 'origination':\n                  destination = op.originatedContract;\n                  if (op.contractBalance) {\n                    amount = op.contractBalance.toString();\n                  }\n                  opId = op?.id ? `o${op.id}` : '';\n                  break;\n                default:\n                  console.log(`Ignoring kind ${op.type}`);\n                  return null;\n              }\n              const activity: Activity = {\n                type: op.type,\n                block: op.block,\n                status,\n                amount,\n                source: op.sender,\n                destination,\n                hash: op.hash,\n                counter: op.counter,\n                timestamp: new Date(op.timestamp).getTime(),\n                entrypoint,\n                opId\n              };\n              return activity;\n            }\n          })\n          .filter((obj) => obj)\n      );\n    const unknownTokenIds: string[] = [];\n    const tokenTxs = await (await fetch(`${CONSTANTS.API_URL}/tokens/transfers?anyof.from.to=${address}&limit=20&offset=0&sort.desc=id`)).json();\n    const tokenArr = [];\n    const opIds = [];\n    for (let i = 0; i < tokenTxs.length; ++i) {\n      if (BLACKLISTED_TOKEN_CONTRACTS.includes(tokenTxs[i].token.contract.address)) {\n        continue;\n      }\n      const tokenId = `${tokenTxs[i].token.contract.address}:${tokenTxs[i].token.tokenId}`;\n      if (tokenTxs[i].token.contract && tokenId) {\n        if (!knownTokenIds.includes(tokenId)) {\n          unknownTokenIds.push(tokenId);\n        }\n        const source: any = { address: tokenTxs[i].from?.address };\n        if (tokenTxs[i].from === '' && tokenTxs[i].token.contract) {\n          source.address = tokenTxs[i].contract.address;\n        }\n        if (tokenTxs[i].transactionId) {\n          opIds.push(tokenTxs[i].transactionId);\n        }\n        const activity: Activity = {\n          type: 'transaction',\n          block: '',\n          hash: '',\n          status: OpStatus.CONFIRMED,\n          amount: tokenTxs[i].amount,\n          tokenId,\n          source,\n          destination: { address: tokenTxs[i].to?.address ?? '' },\n          timestamp: new Date(tokenTxs[i].timestamp).getTime(),\n          opId: tokenTxs[i].transactionId ? `t${tokenTxs[i].transactionId}` : undefined\n        };\n        tokenArr.push(activity);\n      }\n    }\n    const extra = await this.getHashAndBlockByIds(opIds);\n    for (const token of tokenArr) {\n      if (extra[token?.opId]) {\n        token.block = extra[token?.opId].block;\n        token.hash = extra[token?.opId].hash;\n      }\n    }\n    let operations = tokenArr\n      .concat(ops)\n      .filter((op) => op?.entrypoint !== 'transfer' && op?.entrypoint !== 'claim')\n      .sort(function (a: any, b: any) {\n        if (b.timestamp === a.timestamp && a.opId && b.opId) {\n          return parseInt(new Big(b.opId.substring(1)).minus(a.opId.substring(1)).toString());\n        }\n        return b.timestamp - a.timestamp;\n      });\n    return { operations, unknownTokenIds };\n  }\n  private extractEntrypoint(op: any): string {\n    return op?.entrypoint ?? op?.parameter?.entrypoint ?? '';\n  }\n  async getTokenMetadata(contractAddress: string, id: string, metadataSource: MetadataSource): Promise<TokenMetadata> {\n    let meta;\n    let tokenType = 'FA2';\n    const tokenId = `${contractAddress}:${id}`;\n    if (this.tokenBalanceCache[tokenId]) {\n      meta = this.tokenBalanceCache[tokenId].token.metadata;\n      tokenType = this.tokenBalanceCache[tokenId].token.standard && this.tokenBalanceCache[tokenId].token.standard === 'fa1.2' ? 'FA1.2' : 'FA2';\n    }\n    if (meta) {\n      this.normalizeMetadata(meta, contractAddress, id);\n      this.filterMetadata(meta);\n    }\n    if (!(meta && (meta.name || meta.symbol) && !isNaN(meta.decimals) && meta.decimals >= 0) || metadataSource === MetadataSource.TaquitoOnly) {\n      meta = null;\n    }\n    if (!meta && metadataSource !== MetadataSource.TzktOnly) {\n      console.debug('fallback on taquito', { contractAddress, id });\n      meta = await this.getTokenMetadataWithTaquito(contractAddress, id);\n      if (meta) {\n        this.normalizeMetadata(meta, contractAddress, id);\n        this.filterMetadata(meta);\n      }\n    }\n    if (!(meta && (meta.name || meta.symbol) && !isNaN(meta.decimals) && meta.decimals >= 0)) {\n      meta = null;\n    }\n    if (!meta) {\n      console.warn(`cannot find token_id ${id} for contract: ${contractAddress}`);\n      return null;\n    }\n    return { ...meta, tokenType };\n  }\n  async getTokenMetadataWithTaquito(contractAddress, id) {\n    try {\n      const contract = await this.Tezos.contract.at(contractAddress, tzip12);\n      let metadata: any;\n      if (['KT1TnVQhjxeNvLutGvzwZvYtC7vKRpwPWhc6'].includes(contractAddress)) {\n        // nl hotfix\n        const contract = await this.Tezos.contract.at(contractAddress);\n        const storage: any = await contract.storage();\n        const parsed_uri = storage.token_metadata_uri.replace('{tokenId}', id);\n        const response = await (await fetch(parsed_uri)).json();\n        if (response) {\n          response.tokenId = id;\n          metadata = response;\n        }\n      } else {\n        metadata = await contract.tzip12().getTokenMetadata(Number(id));\n      }\n      return metadata;\n    } catch (e) {\n      return null;\n    }\n  }\n  async getAllTokenBalances(address: string): Promise<Array<Token>> {\n    const fetchToken = async (offset: number): Promise<Array<any>> => {\n      let res = await (\n        await fetch(`${CONSTANTS.API_URL}/tokens/balances?account=${address}&offset=${offset}&limit=${this.TZKT_TOKEN_QUERY_SIZE}&balance.ne=0`)\n      ).json();\n      if (res?.length) {\n        if (res.length === this.TZKT_TOKEN_QUERY_SIZE) {\n          // get more if limit reached\n          return [...res, ...(await fetchToken(offset + this.TZKT_TOKEN_QUERY_SIZE))];\n        } else {\n          return res;\n        }\n      } else {\n        return [];\n      }\n    };\n    let tzktTokensResponse = await fetchToken(0);\n    const tokenBalances: Token[] = [];\n    for (let i = 0; i < tzktTokensResponse.length; ++i) {\n      if (tzktTokensResponse[i]?.balance && tzktTokensResponse[i].token?.contract?.address && tzktTokensResponse[i].token?.tokenId !== undefined) {\n        const tokenId: string = `${tzktTokensResponse[i].token.contract.address}:${tzktTokensResponse[i].token.tokenId}`;\n        tokenBalances.push({ tokenId, balance: tzktTokensResponse[i].balance });\n        this.tokenBalanceCache[tokenId] = tzktTokensResponse[i];\n      }\n    }\n    return tokenBalances;\n  }\n  private filterMetadata(meta: any) {\n    const keys = [\n      { key: 'name', type: 'string' },\n      { key: 'balance', type: 'string' },\n      { key: 'symbol', type: 'string' },\n      { key: 'contractAddress', type: 'string' },\n      { key: 'id', type: 'string' },\n      { key: 'decimals', type: 'string' },\n      { key: 'description', type: 'string' },\n      { key: 'artifactUri', type: 'string', toAsset: true },\n      { key: 'displayUri', type: 'string', toAsset: true },\n      { key: 'thumbnailUri', type: 'string', toAsset: true },\n      { key: 'isTransferable', type: 'boolean' },\n      { key: 'shouldPreferSymbol', type: 'boolean' },\n      { key: 'isBooleanAmount', type: 'boolean' },\n      { key: 'series', type: 'string' },\n      { key: 'ttl', type: 'string' },\n      { key: 'mintingTool', type: 'string' }\n    ];\n    let metadata: any = {};\n    for (const a of keys) {\n      if (typeof meta[a.key] === a.type) {\n        if (a.toAsset) {\n          // extract mime type\n          if (meta?.formats?.length && Array.isArray(meta?.formats)) {\n            const index = meta.formats.findIndex((b) => b.uri === meta[a.key]);\n            if (index !== -1 && meta.formats[index].uri && meta.formats[index].mimeType) {\n              meta[a.key] = { uri: meta[a.key], mimeType: meta.formats[index].mimeType };\n            }\n          }\n          if (typeof meta[a.key] === 'string') {\n            meta[a.key] = { uri: meta[a.key], mimeType: 'unknown' };\n          }\n        }\n        metadata[a.key] = meta[a.key];\n      }\n    }\n    return metadata;\n  }\n  private normalizeMetadata(meta: any, contractAddress: string, id: string) {\n    mutableConvertObjectPropertiesSnakeToCamel(meta);\n    for (let key of Object.keys(meta)) {\n      if (typeof meta[key] === 'number') {\n        meta[key] = `${meta[key]}`;\n      }\n    }\n    this.handleMetadataExceptions(meta, contractAddress, id);\n    if (meta?.isTransferable && typeof meta?.isTransferable === 'string') {\n      meta.isTransferable = meta.isTransferable?.toLowerCase() === 'false' ? false : meta.isTransferable?.toLowerCase() === 'true' ? true : undefined;\n    }\n    if (meta?.shouldPreferSymbol && typeof meta?.shouldPreferSymbol === 'string') {\n      meta.shouldPreferSymbol =\n        meta.shouldPreferSymbol?.toLowerCase() === 'false' ? false : meta.shouldPreferSymbol?.toLowerCase() === 'true' ? true : undefined;\n    }\n    if (meta?.isBooleanAmount && typeof meta?.isBooleanAmount === 'string') {\n      meta.isBooleanAmount = meta.isBooleanAmount?.toLowerCase() === 'false' ? false : meta.isBooleanAmount?.toLowerCase() === 'true' ? true : undefined;\n    }\n  }\n  handleMetadataExceptions(meta: any, contractAddress: string, id: string) {\n    // hen\n    if (meta?.symbol === 'OBJKT') {\n      if (!meta.displayUri && meta.formats?.length) {\n        meta.displayUri = meta.formats[0].uri;\n      }\n      if (meta.displayUri && meta.thumbnailUri) {\n        delete meta.thumbnailUri;\n      }\n    }\n    if (['KT1NVvPsNDChrLRH5K2cy6Sc9r1uuUwdiZQd', 'KT1CAbPGHUWvkSA9bxMPkqSgabgsjtmRYEda'].includes(contractAddress) /* Dogami */ && meta?.formats) {\n      if (typeof meta.formats[0] === 'string') {\n        meta.formats = JSON.parse(meta.formats);\n      }\n    }\n    // fxHash\n    if (contractAddress === 'KT1U6EHmNxJTkvaWJ4ThczG4FSDaHC21ssvi' && meta?.artifactUri) {\n      delete meta.artifactUri;\n    }\n    // Plenty + HEH\n    if (!meta.displayUri && !meta.thumbnailUri && meta?.icon) {\n      meta.thumbnailUri = { uri: meta.icon, mimeType: 'unknown' };\n    }\n    if (\n      (contractAddress === 'KT1AWoUQAuUudqpc75cGukWufbfim3GRn8h6' /* Flex */ ||\n        contractAddress === 'KT1Lz7Jd6Sh1zUE66nDGS7hGnjwcyTBCiYbF' /* BV */ ||\n        contractAddress === 'KT1D1XtWFoQDPtuYzbkeRJhcDgH6CDem2FkZ' /* BV */ ||\n        contractAddress === 'KT1NVvPsNDChrLRH5K2cy6Sc9r1uuUwdiZQd') /* Dogami */ &&\n      meta?.formats?.length\n    ) {\n      meta.displayUri = meta.artifactUri = meta.formats?.find((f) => f?.mimeType?.startsWith('model/')) ?? meta.displayUri;\n    }\n    if (contractAddress === 'KT1NVvPsNDChrLRH5K2cy6Sc9r1uuUwdiZQd') {\n      // override wrong mimeType\n      meta.thumbnailUri = { uri: meta.thumbnailUri, mimeType: 'video/mp4' };\n    }\n    // Rarible\n    if (contractAddress === 'KT18pVpRXKPY2c4U2yFEGSH3ZnhB2kL8kwXS') {\n      meta.thumbnailUri = meta.displayUri = meta.formats[0].uri;\n    }\n  }\n  async getEntrypointMicheline(contract: string, entrypoint: string) {\n    return (await (await fetch(`${CONSTANTS.API_URL}/contracts/${contract}/entrypoints/${entrypoint}?micheline=true&json=false`)).json())?.michelineParameters;\n  }\n}\nexport function mutableConvertObjectPropertiesSnakeToCamel(data: Object) {\n  for (const key in data) {\n    if (key.charAt(0).toLowerCase() !== key.charAt(0)) {\n      data[key.charAt(0).toLowerCase() + key.slice(1)] = data[key];\n    }\n    if (key.indexOf('_') !== -1) {\n      const aryCamelKey = [];\n      for (let i = 0; i < key.length; i++) {\n        const char = key.charAt(i);\n        if (char === '_') {\n          aryCamelKey.push(key.charAt(i + 1).toUpperCase());\n          i++;\n        } else {\n          aryCamelKey.push(char);\n        }\n      }\n      const camelKey = aryCamelKey.join('');\n      if (!data.hasOwnProperty(camelKey)) {\n        data[camelKey] = data[key];\n        delete data[key];\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OperationService } from '../operation/operation.service';\nimport * as zxcvbn from 'zxcvbn';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { TranslateService } from '@ngx-translate/core';\nimport { valueDecoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { Uint8ArrayConsumer } from '@taquito/local-forging/dist/lib/uint8array-consumer';\nimport { utils } from '../../libraries/index';\nimport * as bip39 from 'bip39';\n@Injectable()\nexport class InputValidationService {\n  constructor(private operationService: OperationService, private translate: TranslateService) {}\n  /*\n    Input validations\n  */\n  mnemonics(mnemonics: string): boolean {\n    return this.operationService.validMnemonic(mnemonics);\n  }\n  password(password: string): boolean {\n    return zxcvbn(password).score === 4;\n  }\n  passwordStrengthDisplay(password: string): string {\n    if (!password) {\n      return '';\n    }\n    switch (zxcvbn(password).score) {\n      case 0: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.CATASTROPHIC'); // 'Catastrophic!'\n      }\n      case 1: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.VERYWEAK'); // 'Very weak!'\n      }\n      case 2: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.WEAK'); // 'Weak!'\n      }\n      case 3: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.WEAK'); // 'Weak!'\n      }\n      case 4: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.STRONG'); // 'Strong!'\n      }\n      default: {\n        return '';\n      }\n    }\n  }\n  address(address: string): Boolean {\n    return this.operationService.validAddress(address);\n  }\n  validDelegationAddress(address: string): Boolean {\n    return this.operationService.validAddress(address) && address.slice(0, 3) !== 'tz4';\n  }\n  torusAccount(verifierId: string, loginType: string): Boolean {\n    switch (loginType) {\n      case 'google':\n        return this.email(verifierId);\n      case 'email':\n        return this.email(verifierId);\n      case 'reddit':\n        return this.redditAccount(verifierId);\n      case 'twitter':\n        return this.twitterAccount(verifierId);\n      case 'domain':\n        return this.tezosDomain(verifierId);\n      default:\n        return false;\n    }\n  }\n  redditAccount(username: string) {\n    // Letters, numbers, dashes, and underscores only\n    // Username must be between 3 and 20 characters\n    const re = /^[0-9a-zA-Z\\-\\_]{3,20}$/;\n    return re.test(username);\n  }\n  email(email: string): Boolean {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n  tezosDomain(domain: string) {\n    const a = domain.split('.');\n    // basic validation that is in the correct format\n    for (const sub of a) {\n      if (!sub.length) {\n        return false;\n      }\n    }\n    return a.length >= 2 && CONSTANTS.TEZOS_DOMAIN.TOP_DOMAINS.includes(a[a.length - 1]);\n  }\n  twitterAccount(username: string) {\n    // The only characters you can use are uppercase and lowercase letters, numbers, and the underscore character ( _ ).\n    const re = /^\\@{1}[0-9a-zA-Z\\_]{1,15}$/;\n    return re.test(username);\n  }\n  twitterId(id: string) {\n    const re = /^[0-9]+$/;\n    return re.test(id);\n  }\n  passphrase(passphrase: string): Boolean {\n    return true;\n  }\n  amount(amount: string, decimals: number = 6): Boolean {\n    const decimalsPart = decimals ? `(\\.[0-9]{1,${decimals}}){0,1}` : '';\n    const expr = new RegExp(`^(0|[1-9][0-9]*)${decimalsPart}$`, 'g');\n    if (amount === '' || amount === '0') {\n      // default value / zero\n      return true;\n    } else if (Number(amount) && amount.match(expr)) {\n      // Positive number\n      return true;\n    }\n    return false;\n  }\n  fee(fee: string): Boolean {\n    return this.amount(fee); // same as amount\n  }\n  gas(amount: string): Boolean {\n    if (amount === '' || amount === '0') {\n      // default value / zero\n      return true;\n    } else if (Number(amount) && 0 < Number(amount) && Number(amount) % 1 === 0) {\n      // Positive integer\n      return true;\n    } else {\n      return false;\n    }\n  }\n  storage(amount: string) {\n    return this.gas(amount);\n  }\n  relativeLimit(limit: string) {\n    if (limit?.length > 2 && limit.startsWith('+') && limit.endsWith('%')) {\n      return this.gas(limit.slice(1, -1));\n    }\n    return false;\n  }\n  code(code: string): Boolean {\n    if (code && code.length === 40 && code.match(/^[0-9a-f]*$/g)) {\n      // 40 hex chars\n      return true;\n    } else {\n      return false;\n    }\n  }\n  derivationPath(path: string): Boolean {\n    const m = path.match(/^44\\'\\/1729(\\'\\/[0-9]+)+\\'$/g);\n    if (m || path === \"44'/1729'\") {\n      return true;\n    }\n    return false;\n  }\n  hexString(hex: string): Boolean {\n    if (hex && hex.match(/^[a-f0-9]*$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  isMessageSigning(payload: string): boolean {\n    if (payload.match(/^0501[a-f0-9]{8}54657a6f73205369676e6564204d6573736167653a20[a-f0-9]*$/)) {\n      return true;\n    }\n    return false;\n  }\n  isMichelineExpr(hex: string) {\n    try {\n      if (!this.hexString(hex)) {\n        throw new Error('Not a hex string');\n      }\n      if (hex.slice(0, 2) !== '05') {\n        throw new Error('invalid prefix');\n      }\n      const parsedPayload = valueDecoder(Uint8ArrayConsumer.fromHexString(hex.slice(2)));\n      console.log('Parsed sign payload', parsedPayload);\n    } catch (e) {\n      console.warn(e.message ? 'Decoding: ' + e.message : e);\n      return false;\n    }\n    return true;\n  }\n  invalidMnemonic(words: string): string {\n    if (utils.validMnemonic(words)) {\n      return '';\n    }\n    // number of words\n    const wordCount = words?.split(' ').filter((w) => w?.length > 0).length;\n    if (![12, 15, 18, 21, 24].includes(wordCount)) {\n      let extra = '';\n      if (wordCount >= 11 && wordCount <= 25) {\n        const rest = (wordCount % 3) - 1;\n        extra = rest ? ', missing one word?' : ', one word too many?';\n      }\n      return `Invalid number of words: ${wordCount}${extra}`;\n    }\n    // words in wordlist\n    if (words?.split(' ')) {\n      for (let word of words?.split(' ').filter((w) => w?.length > 0)) {\n        const r = bip39.wordlists.english.filter((w) => w === word);\n        if (r.length === 0 && word) {\n          return `Invalid seed word: ${word}`;\n        }\n      }\n    }\n    // checksum\n    return 'Invalid checksum! Double-check the order of the seed words.';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OperationService } from '../../services/operation/operation.service';\nimport { TorusService } from '../../services/torus/torus.service';\nimport { WalletService } from '../../services/wallet/wallet.service';\nimport { InputValidationService } from '../../services/input-validation/input-validation.service';\nimport { TezosDomainsService } from '../../services/tezos-domains/tezos-domains.service';\n\nexport enum LookupType { // ordered in priority\n  AddressBook,\n  TezosDomains,\n  Google,\n  Reddit,\n  Twitter,\n  Alias\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LookupService {\n  public records: {\n    address: string;\n    data: { name: string; lookupType: LookupType }[];\n  }[] = [];\n  private pendingLookups: Record<string, number> = {};\n  constructor(\n    private operationService: OperationService,\n    private torusService: TorusService,\n    private walletService: WalletService,\n    private inputValidationService: InputValidationService,\n    private tezosDomainsService: TezosDomainsService\n  ) {\n    this.initCheck();\n  }\n  initCheck() {\n    if (!this.records.length && this.walletService.wallet && this.walletService.wallet.lookups.length) {\n      console.debug('### Loading lookups from memory');\n      this.records = this.walletService.wallet.lookups;\n    }\n  }\n  add(address: string, name: string, lookupType: LookupType) {\n    console.debug('#name ' + name, lookupType);\n    const { x, y } = this.index(address, lookupType);\n    if (x !== -1) {\n      if (y === -1) {\n        this.records[x].data.push({ name, lookupType });\n      } else if (lookupType === LookupType.TezosDomains) {\n        this.records[x].data[y] = { name, lookupType };\n      }\n    } else {\n      this.records.push({ address, data: [{ name, lookupType }] });\n    }\n    this.walletService.wallet.lookups = this.records;\n    this.walletService.storeWallet();\n  }\n  clear() {\n    this.records = [];\n    this.pendingLookups = {};\n  }\n  mark(address: string) {\n    const { x, y } = this.indexTop(address);\n    if (x === -1) {\n      this.records.push({ address, data: [] });\n    }\n    this.walletService.storeWallet();\n  }\n  async recheckWalletAddresses(force: boolean) {\n    console.debug('lookup wallet addresses');\n    for (const address of this.walletService.wallet.getImplicitAccounts()) {\n      this.check(address, force);\n    }\n  }\n  async check(address: any, force: boolean = false) {\n    if (address?.address !== undefined) {\n      address = address.address;\n    }\n    if (typeof address !== 'string') {\n      return;\n    }\n    this.initCheck();\n    if (force) {\n      console.debug('Forced recheck for: ' + address);\n    }\n    if (address && !this.pendingLookups[address]) {\n      const { x } = this.index(address, 0);\n      if (x === -1 || force) {\n        // DirectAuth - disabled\n        // if (address && address.slice(0, 3) === 'tz2') {\n        //   if (x === -1) {\n        //     this.pendingLookups[address]++;\n        //     this.torusLookup(address);\n        //   }\n        // }\n        // Tezos Domains\n        this.pendingLookups[address]++;\n        let domain = '';\n        try {\n          domain = await this.tezosDomainsService.getDomainFromAddress(address);\n        } catch (e) {\n          console.log(address, e);\n          this.pendingLookups[address]--;\n          return;\n        }\n        this.pendingLookups[address]--;\n        if (domain || domain === '') {\n          this.add(address, domain, LookupType.TezosDomains);\n        } else {\n          this.mark(address);\n        }\n      }\n    }\n  }\n  torusLookup(address: string) {\n    this.operationService.torusKeyLookup(address).subscribe(async (ans: any) => {\n      if (ans) {\n        if (ans.result && ans.result.Verifiers) {\n          const keys = Object.keys(ans.result.Verifiers);\n          const verifierMap = this.torusService.verifierMap;\n          for (const key of keys) {\n            if (key === verifierMap['google'].verifier) {\n              this.add(address, ans.result.Verifiers[verifierMap['google'].verifier][0], LookupType.Google);\n            } else if (key === verifierMap['reddit'].verifier) {\n              this.add(address, ans.result.Verifiers[verifierMap['reddit'].verifier][0], LookupType.Reddit);\n            } else if (key === verifierMap['twitter'].verifier) {\n              const verifierId = ans.result.Verifiers[verifierMap['twitter'].verifier][0];\n              const verifierArray = verifierId.split('|');\n              if (verifierArray[0] === 'twitter' && this.inputValidationService.twitterId(verifierArray[1])) {\n                const twitterId = verifierArray[1];\n                const { username } = await this.torusService.twitterLookup(undefined, twitterId);\n                if (username) {\n                  this.add(address, '@' + username, LookupType.Twitter);\n                }\n              }\n            } else {\n              console.log('Unhandled verifier result', ans);\n            }\n          }\n          this.pendingLookups[address]--;\n        } else if (!ans.noReveal) {\n          this.mark(address);\n        }\n      }\n    });\n  }\n  torusEntryExist(address: string): boolean {\n    const record = this.records[address];\n    if (record) {\n      for (const entry of record) {\n        if (entry.lookupType > 1) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  index(address: string, lookupType: LookupType) {\n    let [x, y] = Array(2).fill(-1);\n    for (let i = 0; i < this.records.length; i++) {\n      if (this.records[i].address === address) {\n        x = i;\n        for (let j = 0; j < this.records[i].data.length; j++) {\n          if (this.records[i].data[j].lookupType === lookupType) {\n            y = j;\n          }\n        }\n      }\n    }\n    return { x, y };\n  }\n  indexTop(address: string) {\n    let [x, y] = Array(2).fill(-1);\n    for (let i = 0; i < this.records.length; i++) {\n      if (this.records[i].address === address) {\n        x = i;\n        for (let j = 0; j < this.records[i].data.length; j++) {\n          if (this.records[i].data[j].lookupType < y || y === -1) {\n            if (this.records[i].data[j].lookupType !== LookupType.TezosDomains || this.records[i].data[j].name) {\n              // skip empty domain records\n              y = j;\n            }\n          }\n        }\n      }\n    }\n    return { x, y };\n  }\n  resolve(party: any): any {\n    this.initCheck();\n    const { x, y } = this.indexTop(party?.address);\n    if (x !== -1 && y !== -1) {\n      return {\n        name: this.records[x].data[y].name,\n        lookupType: this.records[x].data[y].lookupType,\n        address: party.address\n      };\n    } else if (party?.alias) {\n      this.add(party.address, party.alias, LookupType.Alias);\n      return this.resolve(party);\n    }\n    return { address: party?.address };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\n\n@Injectable()\nexport class MessageService {\n  spinnerOn = false;\n  spinnerText = '';\n  messages: any[] = [];\n  defaultTime = 10;\n  checked: Observable<boolean>;\n  beaconResponse = new Subject<boolean>();\n  readonly pairingCompleteMsg = 'Pairing complete! Waiting for permission request...';\n  add(message: string, seconds: number = this.defaultTime) {\n    const type = 'info';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000\n    });\n  }\n  addError(message: string, seconds: number = this.defaultTime) {\n    const type = 'danger';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000\n    });\n  }\n  addWarning(message: string, seconds: number = this.defaultTime) {\n    const type = 'warning';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000\n    });\n  }\n  addSuccess(message: string, seconds: number = this.defaultTime, ref: string = '') {\n    if (ref) {\n      console.log('ref set', ref);\n    }\n    const type = 'success';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000,\n      ref\n    });\n  }\n  modify(newMessage: string, ref: string) {\n    if (ref) {\n      for (const message of this.messages) {\n        if (message.ref === ref) {\n          message.msg = newMessage;\n        }\n      }\n    }\n  }\n  emailNotify(email: string, amount: string) {\n    console.log(email);\n    const type = 'success';\n    this.messages.push({\n      type: type,\n      timeout: 0,\n      msg: 'email',\n      email,\n      amount\n    });\n  }\n  redditNotify(username: string, amount: string) {\n    console.log(username);\n    const type = 'success';\n    this.messages.push({\n      type: type,\n      timeout: 0,\n      msg: 'Reddit',\n      username,\n      amount\n    });\n  }\n  twitterNotify(twitterId: string, handler: string, amount: string) {\n    console.log(twitterId);\n    const type = 'success';\n    this.messages.push({\n      type: type,\n      timeout: 0,\n      msg: 'Twitter',\n      twitterId,\n      handler,\n      amount\n    });\n  }\n  addBeaconWait(message: string) {\n    const type = 'info';\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: 30 * 1000,\n      loader: true\n    });\n  }\n  async removeBeaconMsg(delay = false) {\n    setTimeout(\n      () => {\n        for (let i = 0; i < this.messages.length; i++) {\n          if (this.messages[i].loader) {\n            this.messages.splice(i, 1);\n            this.addSuccess(this.pairingCompleteMsg, 10);\n            break;\n          } else if (this.messages[i].msg === this.pairingCompleteMsg) {\n            this.messages.splice(i, 1);\n            break;\n          }\n        }\n      },\n      delay ? 500 : 0\n    );\n  }\n  clear() {\n    this.messages = [];\n  }\n  async startSpinner(text: string = '') {\n    this.spinnerText = text;\n    this.spinnerOn = true;\n  }\n  async stopSpinner(): Promise<void> {\n    this.spinnerText = '';\n    this.spinnerOn = false;\n    return;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of, Observable, MonoTypeOperatorFunction, from as fromPromise, iif, throwError } from 'rxjs';\nimport { catchError, retryWhen, flatMap, timeout, delay as delayOperator, debounceTime, concatMap } from 'rxjs/operators';\nimport { Buffer } from 'buffer';\nimport { blake2b } from 'blakejs';\nimport { sign as naclSign } from 'tweetnacl';\nimport * as Bs58check from 'bs58check';\nimport * as bip39 from 'bip39';\nimport Big from 'big.js';\nimport { localForger } from '@taquito/local-forging';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { ErrorHandlingPipe } from '../../pipes/error-handling.pipe';\nimport * as elliptic from 'elliptic';\nimport { instantiateSecp256k1, hexToBin, binToHex } from '@bitauth/libauth';\nimport { TokenService } from '../token/token.service';\nimport { isEqual } from 'lodash';\n\nconst httpOptions = { headers: { 'Content-Type': 'application/json' } };\n\nexport interface KeyPair {\n  sk: string | null;\n  pk: string | null;\n  pkh: string;\n}\n@Injectable()\nexport class OperationService {\n  nodeURL = CONSTANTS.NODE_URL;\n  prefix = {\n    tz1: new Uint8Array([6, 161, 159]),\n    tz2: new Uint8Array([6, 161, 161]),\n    tz3: new Uint8Array([6, 161, 164]),\n    tz4: new Uint8Array([6, 161, 166]),\n    edpk: new Uint8Array([13, 15, 37, 217]),\n    sppk: new Uint8Array([3, 254, 226, 86]),\n    edsk: new Uint8Array([43, 246, 78, 7]),\n    spsk: new Uint8Array([17, 162, 224, 201]),\n    edsig: new Uint8Array([9, 245, 205, 134, 18]),\n    spsig: new Uint8Array([13, 115, 101, 19, 63]),\n    sig: new Uint8Array([4, 130, 43]),\n    o: new Uint8Array([5, 116]),\n    B: new Uint8Array([1, 52]),\n    TZ: new Uint8Array([3, 99, 29]),\n    KT: new Uint8Array([2, 90, 121])\n  };\n  microTez = new Big(1000000);\n  feeHardCap = 100; //tez\n  constructor(private http: HttpClient, private errorHandlingPipe: ErrorHandlingPipe, private tokenService: TokenService) {}\n  /*\n    Returns an observable for the activation of an ICO identity\n  */\n  activate(pkh: string, secret: string): Observable<any> {\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          const fop: any = {\n            branch: header.hash,\n            contents: [\n              {\n                kind: 'activate_account',\n                pkh: pkh,\n                secret: secret\n              }\n            ]\n          };\n          return this.postRpc('chains/main/blocks/head/helpers/forge/operations', fop).pipe(\n            flatMap((opbytes: any) => {\n              const sopbytes: string = opbytes + Array(129).join('0');\n              fop.protocol = header.protocol;\n              fop.signature = 'edsigtXomBKi5CTRf5cjATJWSyaRvhfYNHqSUGrn4SdbYRcGwQrUGjzEfQDTuqHhuA8b2d8NarZjz8TRf65WkpQmo423BtomS8Q';\n              return this.postRpc('chains/main/blocks/head/helpers/preapply/operations', [fop]).pipe(\n                flatMap((preApplyResult: any) => {\n                  console.log(JSON.stringify(preApplyResult));\n                  return this.postRpc('injection/operation', JSON.stringify(sopbytes)).pipe(\n                    flatMap((final: any) => {\n                      return this.opCheck(final);\n                    })\n                  );\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  opCheck(final: any, newPkh: string = null): Observable<any> {\n    if (typeof final === 'string' && final.length === 51) {\n      return of({\n        success: true,\n        payload: {\n          opHash: final,\n          newPkh: newPkh\n        }\n      });\n    } else {\n      return of({\n        success: false,\n        payload: {\n          opHash: null,\n          msg: final\n        }\n      });\n    }\n  }\n  /*\n    Returns an observable for the origination of new accounts.\n  */\n  originate(origination: any, fee: number = 0, keys: KeyPair): Observable<any> {\n    console.log(fee, origination);\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/counter`).pipe(\n            flatMap((actions: number) => {\n              return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/manager_key`).pipe(\n                flatMap((manager: any) => {\n                  if (fee > this.feeHardCap) {\n                    throw new Error('TooHighFee');\n                  }\n                  const counter: number = Number(actions);\n                  const fop = this.createOriginationObject(header.hash, counter, manager, origination, fee, keys.pk, keys.pkh);\n                  return this.operation(fop, header, keys, true);\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  createOriginationObject(hash: string, counter: number, manager: string, origination: any, fee: number, pk: string, pkh: string): any {\n    const fop: any = {\n      branch: hash,\n      contents: []\n    };\n    const gas_limit = origination.gasLimit.toString();\n    const storage_limit = origination.storageLimit.toString();\n    if (manager === null) {\n      // Reveal\n      fop.contents.push({\n        kind: 'reveal',\n        source: pkh,\n        fee: '0',\n        counter: (++counter).toString(),\n        gas_limit: '200',\n        storage_limit: '0',\n        public_key: pk\n      });\n    }\n    fop.contents.push({\n      kind: 'origination',\n      source: pkh,\n      fee: this.microTez.times(fee).toString(),\n      counter: (++counter).toString(),\n      gas_limit,\n      storage_limit,\n      balance: this.microTez.times(origination.balance).toString(),\n      script: origination.script\n    });\n    return fop;\n  }\n  /*\n    Returns an observable for the transaction of tez.\n  */\n  transfer(from: string, transactions: any, fee: number, keys: KeyPair, tokenTransfer: string = ''): Observable<any> {\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/counter`).pipe(\n            flatMap((actions: any) => {\n              return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/manager_key`).pipe(\n                flatMap((manager: any) => {\n                  if (fee > this.feeHardCap) {\n                    throw new Error('TooHighFee');\n                  }\n                  const counter: number = Number(actions);\n                  const fop = this.createTransactionObject(header.hash, counter, manager, transactions, keys.pkh, keys.pk, from, fee, tokenTransfer);\n                  return this.operation(fop, header, keys);\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  createTransactionObject(\n    hash: string,\n    counter: number,\n    manager: string,\n    transactions: any,\n    pkh: string,\n    pk: string,\n    from: string,\n    fee: number,\n    tokenTransfer: string\n  ): any {\n    const fop: any = {\n      branch: hash,\n      contents: []\n    };\n    if (manager === null) {\n      // Reveal\n      fop.contents.push({\n        kind: 'reveal',\n        source: pkh,\n        fee: '0',\n        counter: (++counter).toString(),\n        gas_limit: '200',\n        storage_limit: '0',\n        public_key: pk\n      });\n    }\n    for (let i = 0; i < transactions.length; i++) {\n      const currentFee = i === transactions.length - 1 ? this.microTez.times(fee).toString() : '0';\n      const gasLimit = transactions[i].gasLimit.toString();\n      const storageLimit = transactions[i].storageLimit.toString();\n      if (tokenTransfer) {\n        console.log('Invoke contract: ' + tokenTransfer);\n        let invocation: any;\n        const { kind, decimals, contractAddress, id } = this.tokenService.getAsset(tokenTransfer);\n        const txAmount = Big(10 ** decimals).times(transactions[i].amount);\n        if (!txAmount.mod(1).eq(0)) {\n          throw new Error(`the amount ${transactions[i].amount} is not within ${decimals} decimals`);\n        }\n        if (kind === 'FA1.2') {\n          invocation = this.getFA12Transaction(pkh, transactions[i].destination, txAmount.toFixed(0));\n        } else if (kind === 'FA2') {\n          invocation = this.getFA2Transaction(pkh, transactions[i].destination, txAmount.toFixed(0), id);\n        } else {\n          throw new Error('Unrecognized token kind');\n        }\n        fop.contents.push({\n          kind: 'transaction',\n          source: pkh,\n          fee: currentFee,\n          counter: (++counter).toString(),\n          gas_limit: gasLimit,\n          storage_limit: storageLimit,\n          amount: '0',\n          destination: contractAddress,\n          parameters: invocation\n        });\n      } else if (from.slice(0, 2) === 'tz') {\n        const transactionOp: any = {\n          kind: 'transaction',\n          source: from,\n          fee: currentFee,\n          counter: (++counter).toString(),\n          gas_limit: gasLimit,\n          storage_limit: storageLimit,\n          amount: this.microTez.times(transactions[i].amount).toString(),\n          destination: transactions[i].destination\n        };\n        if (transactions[i].parameters) {\n          transactionOp.parameters = transactions[i].parameters;\n        }\n        fop.contents.push(transactionOp);\n      } else if (from.slice(0, 2) === 'KT') {\n        if (transactions[i].parameters) {\n          throw new Error('Unsupported Operation');\n        }\n        if (transactions[i].destination.slice(0, 2) === 'tz') {\n          const managerTransaction = this.getContractPkhTransaction(transactions[i].destination, this.microTez.times(transactions[i].amount).toString());\n          fop.contents.push({\n            kind: 'transaction',\n            source: pkh,\n            fee: currentFee,\n            counter: (++counter).toString(),\n            gas_limit: gasLimit,\n            storage_limit: storageLimit,\n            amount: '0',\n            destination: from,\n            parameters: managerTransaction\n          });\n        } else if (transactions[i].destination.slice(0, 2) === 'KT') {\n          const managerTransaction = this.getContractKtTransaction(transactions[i].destination, this.microTez.times(transactions[i].amount).toString());\n          fop.contents.push({\n            kind: 'transaction',\n            source: pkh,\n            fee: currentFee,\n            counter: (++counter).toString(),\n            gas_limit: gasLimit,\n            storage_limit: storageLimit,\n            amount: '0',\n            destination: from,\n            parameters: managerTransaction\n          });\n        }\n      }\n    }\n    return fop;\n  }\n  /*\n    Returns an observable for the delegation of baking rights.\n  */\n  delegate(from: string, to: string, fee: number = 0, keys: KeyPair): Observable<any> {\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/counter`).pipe(\n            flatMap((actions: any) => {\n              return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/manager_key`).pipe(\n                flatMap((manager: any) => {\n                  if (fee > this.feeHardCap) {\n                    throw new Error('TooHighFee');\n                  }\n                  let counter: number = Number(actions);\n                  let delegationOp: any;\n                  if (from.slice(0, 2) === 'tz') {\n                    delegationOp = {\n                      kind: 'delegation',\n                      source: from,\n                      fee: this.microTez.times(fee).toString(),\n                      counter: (++counter).toString(),\n                      gas_limit: '200',\n                      storage_limit: '0'\n                    };\n                    if (to !== '') {\n                      delegationOp.delegate = to;\n                    }\n                  } else if (from.slice(0, 2) === 'KT') {\n                    delegationOp = {\n                      kind: 'transaction',\n                      source: keys.pkh,\n                      fee: this.microTez.times(fee).toString(),\n                      counter: (++counter).toString(),\n                      gas_limit: '4380',\n                      storage_limit: '0',\n                      amount: '0',\n                      destination: from,\n                      parameters: to !== '' ? this.getContractDelegation(to) : this.getContractUnDelegation()\n                    };\n                  }\n                  const fop: any = {\n                    branch: header.hash,\n                    contents: [delegationOp]\n                  };\n                  if (manager === null) {\n                    fop.contents[1] = fop.contents[0];\n                    fop.contents[0] = {\n                      kind: 'reveal',\n                      source: keys.pkh,\n                      fee: '0',\n                      counter: counter.toString(),\n                      gas_limit: '200',\n                      storage_limit: '0',\n                      public_key: keys.pk\n                    };\n                    fop.contents[1].counter = (Number(fop.contents[1].counter) + 1).toString();\n                  }\n                  return this.operation(fop, header, keys);\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  /*\n  Help function for operations\n  */\n  operation(fop: any, header: any, keys: KeyPair, origination: boolean = false): Observable<any> {\n    console.log('fop to send: ' + JSON.stringify(fop));\n    return this.postRpc('chains/main/blocks/head/helpers/forge/operations', fop).pipe(\n      flatMap((opbytes: any) => {\n        return this.localForge(fop).pipe(\n          flatMap((localOpbytes: string) => {\n            if (opbytes !== localOpbytes) {\n              throw new Error('ValidationError');\n            }\n            if (!keys.sk) {\n              fop.signature = 'edsigtXomBKi5CTRf5cjATJWSyaRvhfYNHqSUGrn4SdbYRcGwQrUGjzEfQDTuqHhuA8b2d8NarZjz8TRf65WkpQmo423BtomS8Q';\n              return this.postRpc('chains/main/blocks/head/helpers/scripts/run_operation', { operation: fop, chain_id: header.chain_id }).pipe(\n                flatMap((applied: any) => {\n                  console.log('applied: ' + JSON.stringify(applied));\n                  this.checkApplied([applied]);\n                  return of({\n                    success: true,\n                    payload: {\n                      unsignedOperation: opbytes\n                    }\n                  });\n                })\n              );\n            } else {\n              fop.protocol = header.protocol;\n              const signed = this.sign('03' + opbytes, keys.sk);\n              const sopbytes = signed.sbytes;\n              fop.signature = signed.edsig;\n              return this.postRpc('chains/main/blocks/head/helpers/preapply/operations', [fop]).pipe(\n                flatMap((applied: any) => {\n                  console.log('applied: ' + JSON.stringify(applied));\n                  this.checkApplied(applied);\n                  console.log('sop: ' + sopbytes);\n                  return this.postRpc('injection/operation', JSON.stringify(sopbytes))\n                    .pipe(timeout(30000))\n                    .pipe(\n                      flatMap((final: any) => {\n                        let newPkh = null;\n                        if (origination) {\n                          newPkh = applied[0].contents[fop.contents.length - 1].metadata.operation_result.originated_contracts[0];\n                        }\n                        return this.opCheck(final, newPkh);\n                      })\n                    );\n                })\n              );\n            }\n          })\n        );\n      })\n    );\n  }\n  /*\n    Broadcast a signed operation to the network\n  */\n  broadcast(sopbytes: string): Observable<any> {\n    console.log('Broadcast...');\n    const opbytes = sopbytes.slice(0, sopbytes.length - 128);\n    const edsig = this.sig2edsig(sopbytes.slice(sopbytes.length - 128));\n    return fromPromise(localForger.parse(opbytes))\n      .pipe(\n        flatMap((fop: any) => {\n          fop.signature = edsig;\n          return this.getHeader().pipe(\n            flatMap((header: any) => {\n              fop.protocol = header.protocol;\n              return this.postRpc('chains/main/blocks/head/helpers/preapply/operations', [fop]).pipe(\n                flatMap((parsed: any) => {\n                  let newPkh = null;\n                  for (let i = 0; i < parsed[0].contents.length; i++) {\n                    if (parsed[0].contents[i].kind === 'origination') {\n                      newPkh = parsed[0].contents[i].metadata.operation_result.originated_contracts[0];\n                    }\n                  }\n                  return this.postRpc('injection/operation', JSON.stringify(sopbytes)).pipe(\n                    flatMap((final: any) => {\n                      return this.opCheck(final, newPkh);\n                    })\n                  );\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  torusKeyLookup(tz2address: string): Observable<any> {\n    // Make it into Promise\n    // Zero padding\n    if (tz2address.length !== 36 || tz2address.slice(0, 3) !== 'tz2') {\n      throw new Error('InvalidTorusAddress');\n    }\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${tz2address}/manager_key`).pipe(\n      flatMap((manager: any) => {\n        if (manager === null) {\n          return of({ noReveal: true });\n        } else {\n          return fromPromise(this.decompress(manager)).pipe(\n            flatMap((pk: any) => {\n              const torusReq = {\n                jsonrpc: '2.0',\n                method: 'KeyLookupRequest',\n                id: 10,\n                params: {\n                  pub_key_X: pk.X,\n                  pub_key_Y: pk.Y\n                }\n              };\n              const url = CONSTANTS.NETWORK === 'mainnet' ? 'https://torus-19.torusnode.com/jrpc' : 'https://teal-15-1.torusnode.com/jrpc';\n              return this.http.post(url, JSON.stringify(torusReq), httpOptions).pipe(\n                flatMap((ans: any) => {\n                  try {\n                    if (ans.result.PublicKey.X === pk.X && ans.result.PublicKey.Y === pk.Y) {\n                      return of(ans);\n                    } else {\n                      return of(null);\n                    }\n                  } catch {\n                    return of(null);\n                  }\n                })\n              );\n            })\n          );\n        }\n      })\n    );\n  }\n  checkApplied(applied: any) {\n    let failed = false;\n    for (let i = 0; i < applied[0].contents.length; i++) {\n      if (applied[0].contents[i].metadata.operation_result.status !== 'applied') {\n        failed = true;\n        if (applied[0].contents[i].metadata.operation_result.errors) {\n          console.log('Error in operation_result');\n          throw applied[0].contents[i].metadata.operation_result.errors[applied[0].contents[i].metadata.operation_result.errors.length - 1];\n        } else if (applied[0].contents[i].metadata.internal_operation_results) {\n          for (const ior of applied[0].contents[i].metadata.internal_operation_results) {\n            if (ior?.result?.status === 'failed') {\n              console.log('Error in internal_operation_results', ior);\n              throw ior.result.errors[ior.result.errors.length - 1];\n            }\n          }\n        }\n      }\n    }\n    if (failed) {\n      console.error(applied);\n      throw new Error('Uncaught error in applied');\n    }\n  }\n  errHandler(error: any): Observable<any> {\n    console.log(error);\n    if (error.error && typeof error.error === 'string') {\n      // parsing errors\n      error = error.error;\n      const lines = error.split('\\n').map((line: string) => {\n        return line.trim();\n      });\n      if (lines?.length) {\n        for (const i in lines) {\n          if (lines[i].startsWith('At /') && !lines[i].startsWith('At /kind')) {\n            const n = Number(i) + 1;\n            if (lines[n]) {\n              error = `${lines[i]} ${lines[n]}`;\n            }\n          }\n        }\n      }\n    }\n    if (error.error && error.error[0]) {\n      error = error.error[0];\n    }\n    if (error.message) {\n      error = this.errorHandlingPipe.transform(error.message);\n    } else if (error.id) {\n      if (error.with) {\n        error = this.errorHandlingPipe.transform(error.id, error.with, error?.location);\n      } else if (error.id === 'failure' && error.msg) {\n        error = this.errorHandlingPipe.transform(error.msg);\n      } else {\n        error = this.errorHandlingPipe.transform(error.id);\n      }\n    } else if (error.statusText) {\n      error = error.statusText;\n    } else if (typeof error === 'string') {\n      error = this.errorHandlingPipe.transform(error);\n    } else {\n      console.warn('Error not categorized', error);\n      error = 'Unrecogized error';\n    }\n    return of({\n      success: false,\n      payload: {\n        msg: error\n      }\n    });\n  }\n  // Local forge with Taquito\n  localForge(operation: any): Observable<string> {\n    return fromPromise(localForger.forge(operation)).pipe(\n      flatMap((localForgedBytes: string) => {\n        return of(localForgedBytes);\n      })\n    );\n  }\n  getHeader(): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head~3/header`);\n  }\n  getBalance(pkh: string): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/balance`)\n      .pipe(\n        flatMap((balance: any) => {\n          return of({\n            success: true,\n            payload: {\n              balance: balance\n            }\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  getDelegate(pkh: string): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}`)\n      .pipe(\n        flatMap((contract: any) => {\n          let delegate = '';\n          if (contract.delegate) {\n            delegate = contract.delegate;\n          }\n          return of({\n            success: true,\n            payload: {\n              delegate: delegate\n            }\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  getVotingRights(): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/votes/listings`)\n      .pipe(\n        flatMap((listings: any) => {\n          return of({\n            success: true,\n            payload: listings\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  isRevealed(pkh: string): Observable<boolean> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/manager_key`)\n      .pipe(\n        flatMap((manager: any) => {\n          if (manager === null) {\n            return of(false);\n          } else {\n            return of(true);\n          }\n        })\n      )\n      .pipe(\n        catchError((err) => {\n          return of(true);\n        })\n      ); // conservative action\n  }\n  getManager(pkh: string): Observable<string> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/manager_key`).pipe(\n      flatMap((pk: string) => {\n        return of(pk ?? '');\n      })\n    );\n  }\n  getAccount(pkh: string): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}`)\n      .pipe(\n        flatMap((contract: any) => {\n          let delegate = '';\n          if (contract.delegate) {\n            delegate = contract.delegate;\n          }\n          return of({\n            success: true,\n            payload: {\n              balance: contract.balance,\n              manager: contract.manager,\n              delegate: delegate,\n              counter: contract.counter\n            }\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  getVerifiedOpBytes(operationLevel, operationHash, pkh, pk): Observable<string> {\n    return this.getRpc(`chains/main/blocks/${operationLevel}/operation_hashes`).pipe(\n      flatMap((opHashes: any) => {\n        const opIndex = opHashes[3].findIndex((a) => a === operationHash);\n        return this.getRpc(`chains/main/blocks/${operationLevel}/operations`).pipe(\n          flatMap((op: any) => {\n            let ans = '';\n            op = op[3][opIndex];\n            const sig = op.signature;\n            delete op.chain_id;\n            delete op.signature;\n            delete op.hash;\n            delete op.protocol;\n            for (let i = 0; i < op.contents.length; i++) {\n              delete op.contents[i].metadata;\n              if (op.contents[i].managerPubkey) {\n                // Fix for mainnet\n                op.contents[i].manager_pubkey = op.contents[i].managerPubkey;\n                delete op.contents[i].managerPubkey;\n              }\n            }\n            return this.postRpc('chains/main/blocks/head/helpers/forge/operations', op).pipe(\n              flatMap((opBytes: any) => {\n                if (this.pk2pkh(pk) === pkh) {\n                  if (this.verify(opBytes, sig, pk)) {\n                    ans = opBytes + this.buf2hex(this.b58cdecode(sig, this.prefix.sig));\n                  } else {\n                    throw new Error('InvalidSignature');\n                  }\n                } else {\n                  throw new Error('InvalidPublicKey');\n                }\n                return of(ans);\n              })\n            );\n          })\n        );\n      })\n    );\n  }\n  getConstants(): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/constants`);\n  }\n  seed2keyPair(seed: Buffer): KeyPair {\n    if (!seed) {\n      throw new Error('NullSeed');\n    }\n    const keyPair = naclSign.keyPair.fromSeed(seed);\n    return {\n      sk: this.b58cencode(keyPair.secretKey, this.prefix.edsk),\n      pk: this.b58cencode(keyPair.publicKey, this.prefix.edpk),\n      pkh: this.b58cencode(blake2b(keyPair.publicKey, null, 20), this.prefix.tz1)\n    };\n  }\n  mnemonic2seed(mnemonic: string, passphrase: string = '') {\n    if (!this.validMnemonic(mnemonic)) {\n      throw new Error('InvalidMnemonic');\n    }\n    return bip39.mnemonicToSeedSync(mnemonic, passphrase).slice(0, 32);\n  }\n  mnemonic2entropy(mnemonic: string, passphrase: string = '') {\n    if (!this.validMnemonic(mnemonic)) {\n      throw new Error('InvalidMnemonic');\n    }\n    return bip39.mnemonicToEntropy(mnemonic);\n  }\n  validMnemonic(mnemonic: string) {\n    return bip39.validateMnemonic(mnemonic);\n  }\n  validAddress(address: string) {\n    try {\n      this.b58cdecode(address, this.prefix.tz1);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  pk2pkh(pk: string): string {\n    if (pk.length === 54 && pk.slice(0, 4) === 'edpk') {\n      const pkDecoded = this.b58cdecode(pk, this.prefix.edpk);\n      return this.b58cencode(blake2b(pkDecoded, null, 20), this.prefix.tz1);\n    } else if (pk.length === 55 && pk.slice(0, 4) === 'sppk') {\n      const pkDecoded = this.b58cdecode(pk, this.prefix.edpk);\n      return this.b58cencode(blake2b(pkDecoded, null, 20), this.prefix.tz2);\n    }\n    throw new Error('Invalid public key');\n  }\n  spPrivKeyToKeyPair(secretKey: string) {\n    let sk;\n    if (secretKey.match(/^[0-9a-f]{64}$/g)) {\n      sk = this.b58cencode(this.hex2buf(secretKey), this.prefix.spsk);\n    } else if (secretKey.match(/^spsk[1-9a-km-zA-HJ-NP-Z]{50}$/g)) {\n      sk = secretKey;\n    } else {\n      throw new Error('Invalid private key');\n    }\n    const keyPair = new elliptic.ec('secp256k1').keyFromPrivate(new Uint8Array(this.b58cdecode(sk, this.prefix.spsk)));\n    const yArray = keyPair.getPublic().getY().toArray();\n    const prefixVal = yArray[yArray.length - 1] % 2 ? 3 : 2; // Y odd / even\n    const pad = new Array(32).fill(0); // Zero-padding\n    const publicKey = new Uint8Array([prefixVal].concat(pad.concat(keyPair.getPublic().getX().toArray()).slice(-32)));\n    const pk = this.b58cencode(publicKey, this.prefix.sppk);\n    if (yArray.length < 32 && prefixVal === 3 && this.isInvertedPk(pk)) {\n      return this.spPrivKeyToKeyPair(this.invertSpsk(sk));\n    }\n    const pkh = this.pk2pkh(pk);\n    return { sk, pk, pkh };\n  }\n  isInvertedPk(pk: string): boolean {\n    /*\n      Detect keys with flipped sign and correct them.\n    */\n    const invertedPks = [\n      'sppk7cqh7BbgUMFh4yh95mUwEeg5aBPG1MBK1YHN7b9geyygrUMZByr', // test variable\n      'sppk7bMTva1MwF7cXjrcfoj6XVfcYgjrVaR9JKP3JxvPB121Ji5ftHT',\n      'sppk7bLtXf9CAVZh5jjDACezPnuwHf9CgVoAneNXQFgHknNtCyE5k8A'\n    ];\n    return invertedPks.includes(pk);\n  }\n  invertSpsk(sk: string) {\n    const x = new Uint8Array([...new Uint8Array(32).fill(0), ...this.b58cdecode(sk, this.prefix.spsk)]).slice(-32);\n    const p = this.hex2buf('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141'.toLowerCase());\n    let inv = []; // p - x\n    let remainder = 0;\n    for (let i = 31; i >= 0; i--) {\n      let sub = p[i] - x[i] - remainder;\n      if (sub < 0) {\n        sub += 256;\n        remainder = 1;\n      } else {\n        remainder = 0;\n      }\n      inv.push(sub);\n    }\n    if (remainder) {\n      throw new Error('Invalid X');\n    }\n    inv = inv.reverse();\n    return this.buf2hex(inv);\n  }\n  spPointsToPkh(pubX: string, pubY: string): string {\n    const key = new elliptic.ec('secp256k1').keyFromPublic({\n      x: pubX,\n      y: pubY\n    });\n    const yArray = key.getPublic().getY().toArray();\n    const prefixVal = yArray[yArray.length - 1] % 2 ? 3 : 2;\n    const pad = new Array(32).fill(0);\n    let publicKey = new Uint8Array([prefixVal].concat(pad.concat(key.getPublic().getX().toArray()).slice(-32)));\n    let pk = this.b58cencode(publicKey, this.prefix.sppk);\n    if (yArray.length < 32 && prefixVal === 3 && this.isInvertedPk(pk)) {\n      publicKey = new Uint8Array([2].concat(pad.concat(key.getPublic().getX().toArray()).slice(-32)));\n      pk = this.b58cencode(publicKey, this.prefix.sppk);\n    }\n    const pkh = this.pk2pkh(pk);\n    return pkh;\n  }\n  async decompress(pk: string): Promise<any> {\n    const decodedPk = this.b58cdecode(pk, this.prefix.sppk);\n    const hexPk = this.buf2hex(decodedPk);\n    const secp256k1 = await instantiateSecp256k1();\n    const compressed = hexToBin(hexPk);\n    const uncompressed = secp256k1.uncompressPublicKey(compressed);\n    const xy = binToHex(uncompressed).slice(2);\n    return { X: xy.slice(0, 64), Y: xy.slice(64, 128) };\n  }\n  hex2pk(hex: string): string {\n    return this.b58cencode(this.hex2buf(hex.slice(2, 66)), this.prefix.edpk);\n  }\n  hex2buf(hex) {\n    return new Uint8Array(\n      hex.match(/[\\da-f]{2}/gi).map(function (h) {\n        return parseInt(h, 16);\n      })\n    );\n  }\n  buf2hex(buffer) {\n    const byteArray = new Uint8Array(buffer),\n      hexParts = [];\n    for (let i = 0; i < byteArray.length; i++) {\n      const hex = byteArray[i].toString(16);\n      const paddedHex = ('00' + hex).slice(-2);\n      hexParts.push(paddedHex);\n    }\n    return hexParts.join('');\n  }\n  b58cencode(payload: any, prefixx?: Uint8Array) {\n    const n = new Uint8Array(prefixx.length + payload.length);\n    n.set(prefixx);\n    n.set(payload, prefixx.length);\n    return Bs58check.encode(Buffer.from(this.buf2hex(n), 'hex'));\n  }\n  b58cdecode(enc, prefixx) {\n    let n = Bs58check.decode(enc);\n    n = n.slice(prefixx.length);\n    return n;\n  }\n  ledgerPreHash(opbytes: string): string {\n    return this.buf2hex(blake2b(this.hex2buf(opbytes), null, 32));\n  }\n  sign(bytes: string, sk: string): any {\n    if (!['03', '05', '80'].includes(bytes.slice(0, 2))) {\n      throw new Error('Invalid prefix');\n    }\n    if (sk.slice(0, 4) === 'spsk') {\n      const hash = blake2b(this.hex2buf(bytes), null, 32);\n      bytes = bytes.slice(2);\n      const key = new elliptic.ec('secp256k1').keyFromPrivate(new Uint8Array(this.b58cdecode(sk, this.prefix.spsk)));\n      let sig = key.sign(hash, { canonical: true });\n      const pad = new Array(32).fill(0);\n      const r = pad.concat(sig.r.toArray()).slice(-32);\n      const s = pad.concat(sig.s.toArray()).slice(-32);\n      sig = new Uint8Array(r.concat(s));\n      const spsig = this.b58cencode(sig, this.prefix.spsig);\n      const sbytes = bytes + this.buf2hex(sig);\n      return {\n        bytes: bytes,\n        sig: sig,\n        edsig: spsig,\n        sbytes: sbytes\n      };\n    } else {\n      const hash = blake2b(this.hex2buf(bytes), null, 32);\n      bytes = bytes.slice(2);\n      const sig = naclSign.detached(hash, this.b58cdecode(sk, this.prefix.edsk));\n      const edsig = this.b58cencode(sig, this.prefix.edsig);\n      const sbytes = bytes + this.buf2hex(sig);\n      return {\n        bytes: bytes,\n        sig: sig,\n        edsig: edsig,\n        sbytes: sbytes\n      };\n    }\n  }\n  hexsigToEdsig(hex: string): string {\n    return this.b58cencode(this.hex2buf(hex), this.prefix.edsig);\n  }\n  verify(bytes: string, sig: string, pk: string): Boolean {\n    console.log('bytes', bytes);\n    const hash = blake2b(this.hex2buf(bytes), null, 32);\n    const signature = this.b58cdecode(sig, this.prefix.edsig);\n    const publicKey = this.b58cdecode(pk, this.prefix.edpk);\n    return naclSign.detached.verify(signature, hash, publicKey);\n  }\n  sig2edsig(sig: string): any {\n    return this.b58cencode(this.hex2buf(sig), this.prefix.edsig);\n  }\n  decodeString(bytes: string): string {\n    return Buffer.from(this.hex2buf(bytes)).toString('utf-8');\n  }\n  zarithDecode(hex: string): any {\n    let count = 0;\n    let value = 0;\n    while (1) {\n      const byte = Number('0x' + hex.slice(0 + count * 2, 2 + count * 2));\n      value += (byte & 127) * 128 ** count;\n      count++;\n      if ((byte & 128) !== 128) {\n        break;\n      }\n    }\n    return {\n      value: value,\n      count: count\n    };\n  }\n  zarithDecodeInt(hex: string): any {\n    let count = 0;\n    let value = Big(0);\n    while (1) {\n      const byte = Number('0x' + hex.slice(0 + count * 2, 2 + count * 2));\n      if (count === 0) {\n        value = Big((byte & 63) * 128 ** count).add(value);\n      } else {\n        value = Big(((byte & 127) * 2) >> 1)\n          .times(64 * 128 ** (count - 1))\n          .add(value);\n      }\n      count++;\n      if ((byte & 128) !== 128) {\n        break;\n      }\n    }\n    return {\n      value: value,\n      count: count\n    };\n  }\n  getContractDelegation(pkh: string) {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        {\n          prim: 'NIL',\n          args: [{ prim: 'operation' }]\n        },\n        {\n          prim: 'PUSH',\n          args: [\n            { prim: 'key_hash' },\n            {\n              string: pkh\n            }\n          ]\n        },\n        { prim: 'SOME' },\n        { prim: 'SET_DELEGATE' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getContractUnDelegation() {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        {\n          prim: 'NIL',\n          args: [{ prim: 'operation' }]\n        },\n        {\n          prim: 'NONE',\n          args: [{ prim: 'key_hash' }]\n        },\n        { prim: 'SET_DELEGATE' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getContractPkhTransaction(to: string, amount: string) {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\n        {\n          prim: 'PUSH',\n          args: [\n            { prim: 'key_hash' },\n            {\n              string: to\n            }\n          ]\n        },\n        { prim: 'IMPLICIT_ACCOUNT' },\n        {\n          prim: 'PUSH',\n          args: [{ prim: 'mutez' }, { int: amount }]\n        },\n        { prim: 'UNIT' },\n        { prim: 'TRANSFER_TOKENS' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getContractKtTransaction(to: string, amount: string) {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\n        {\n          prim: 'PUSH',\n          args: [{ prim: 'address' }, { string: to }]\n        },\n        { prim: 'CONTRACT', args: [{ prim: 'unit' }] },\n        [\n          {\n            prim: 'IF_NONE',\n            args: [[[{ prim: 'UNIT' }, { prim: 'FAILWITH' }]], []]\n          }\n        ],\n        {\n          prim: 'PUSH',\n          args: [{ prim: 'mutez' }, { int: amount }]\n        },\n        { prim: 'UNIT' },\n        { prim: 'TRANSFER_TOKENS' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getManagerScript(pkh: string) {\n    let pkHex: string;\n    if (pkh.slice(0, 2) === 'tz') {\n      pkHex = '00' + this.buf2hex(this.b58cdecode(pkh, this.prefix.tz1));\n    } else {\n      pkHex = pkh;\n    }\n    return {\n      code: [\n        {\n          prim: 'parameter',\n          args: [\n            {\n              prim: 'or',\n              args: [\n                {\n                  prim: 'lambda',\n                  args: [\n                    {\n                      prim: 'unit'\n                    },\n                    {\n                      prim: 'list',\n                      args: [\n                        {\n                          prim: 'operation'\n                        }\n                      ]\n                    }\n                  ],\n                  annots: ['%do']\n                },\n                {\n                  prim: 'unit',\n                  annots: ['%default']\n                }\n              ]\n            }\n          ]\n        },\n        {\n          prim: 'storage',\n          args: [\n            {\n              prim: 'key_hash'\n            }\n          ]\n        },\n        {\n          prim: 'code',\n          args: [\n            [\n              [\n                [\n                  {\n                    prim: 'DUP'\n                  },\n                  {\n                    prim: 'CAR'\n                  },\n                  {\n                    prim: 'DIP',\n                    args: [\n                      [\n                        {\n                          prim: 'CDR'\n                        }\n                      ]\n                    ]\n                  }\n                ]\n              ],\n              {\n                prim: 'IF_LEFT',\n                args: [\n                  [\n                    {\n                      prim: 'PUSH',\n                      args: [\n                        {\n                          prim: 'mutez'\n                        },\n                        {\n                          int: '0'\n                        }\n                      ]\n                    },\n                    {\n                      prim: 'AMOUNT'\n                    },\n                    [\n                      [\n                        {\n                          prim: 'COMPARE'\n                        },\n                        {\n                          prim: 'EQ'\n                        }\n                      ],\n                      {\n                        prim: 'IF',\n                        args: [\n                          [],\n                          [\n                            [\n                              {\n                                prim: 'UNIT'\n                              },\n                              {\n                                prim: 'FAILWITH'\n                              }\n                            ]\n                          ]\n                        ]\n                      }\n                    ],\n                    [\n                      {\n                        prim: 'DIP',\n                        args: [\n                          [\n                            {\n                              prim: 'DUP'\n                            }\n                          ]\n                        ]\n                      },\n                      {\n                        prim: 'SWAP'\n                      }\n                    ],\n                    {\n                      prim: 'IMPLICIT_ACCOUNT'\n                    },\n                    {\n                      prim: 'ADDRESS'\n                    },\n                    {\n                      prim: 'SENDER'\n                    },\n                    [\n                      [\n                        {\n                          prim: 'COMPARE'\n                        },\n                        {\n                          prim: 'EQ'\n                        }\n                      ],\n                      {\n                        prim: 'IF',\n                        args: [\n                          [],\n                          [\n                            [\n                              {\n                                prim: 'UNIT'\n                              },\n                              {\n                                prim: 'FAILWITH'\n                              }\n                            ]\n                          ]\n                        ]\n                      }\n                    ],\n                    {\n                      prim: 'UNIT'\n                    },\n                    {\n                      prim: 'EXEC'\n                    },\n                    {\n                      prim: 'PAIR'\n                    }\n                  ],\n                  [\n                    {\n                      prim: 'DROP'\n                    },\n                    {\n                      prim: 'NIL',\n                      args: [\n                        {\n                          prim: 'operation'\n                        }\n                      ]\n                    },\n                    {\n                      prim: 'PAIR'\n                    }\n                  ]\n                ]\n              }\n            ]\n          ]\n        }\n      ],\n      storage: { bytes: pkHex }\n    };\n  }\n  getFA12Transaction(from: string, to: string, amount: string) {\n    return {\n      entrypoint: 'transfer',\n      value: {\n        args: [\n          {\n            string: from\n          },\n          {\n            args: [\n              {\n                string: to\n              },\n              {\n                int: amount\n              }\n            ],\n            prim: 'Pair'\n          }\n        ],\n        prim: 'Pair'\n      }\n    };\n  }\n  getFA2Transaction(from: string, to: string, amount: string, id: string) {\n    return {\n      entrypoint: 'transfer',\n      value: [\n        {\n          prim: 'Pair',\n          args: [\n            {\n              string: from\n            },\n            [\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    string: to\n                  },\n                  {\n                    prim: 'Pair',\n                    args: [\n                      {\n                        int: id.toString()\n                      },\n                      {\n                        int: amount\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          ]\n        }\n      ]\n    };\n  }\n  getApproveAmountParameters(from: string, amount: string) {\n    return {\n      entrypoint: 'approve',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            int: amount\n          }\n        ]\n      }\n    };\n  }\n  getRevokeAmountParameters(from: string) {\n    return {\n      entrypoint: 'approve',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            int: '0'\n          }\n        ]\n      }\n    };\n  }\n  getXTZToTokenParameters(from: string, minimum: string, expirationTime: string) {\n    return {\n      entrypoint: 'xtzToToken',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimum\n              },\n              {\n                string: expirationTime\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n  getTokenToXTZParameters(from: string, minimumToken: string, minimumXTZ: string, expirationTime: string) {\n    return {\n      entrypoint: 'tokenToXtz',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimumToken\n              },\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    int: minimumXTZ\n                  },\n                  {\n                    string: expirationTime\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n\n  getAddLiquidityParameters(from: string, minimumLqt: string, minimumToken: string, expirationTime: string) {\n    return {\n      entrypoint: 'addLiquidity',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimumLqt\n              },\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    int: minimumToken\n                  },\n                  {\n                    string: expirationTime\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n\n  getRemoveLiquidityParameters(from: string, lqtBurn: string, minXtzWithdrawn: string, minTokensWithdrawn: string, expirationTime: string) {\n    return {\n      entrypoint: 'removeLiquidity',\n\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: lqtBurn\n              },\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    int: minXtzWithdrawn\n                  },\n                  {\n                    prim: 'Pair',\n                    args: [\n                      {\n                        int: minTokensWithdrawn\n                      },\n                      {\n                        string: expirationTime\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n\n  getTezToTokenPaymentParameters(from: string, minimumToken: string) {\n    return {\n      entrypoint: 'tezToTokenPayment',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            int: minimumToken\n          },\n          {\n            string: from\n          }\n        ]\n      }\n    };\n  }\n\n  getTokenToTezPaymentParameters(from: string, minimumXtz: string, minimumToken: string) {\n    return {\n      entrypoint: 'tokenToTezPayment',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimumToken\n              },\n              {\n                int: minimumXtz\n              }\n            ]\n          },\n          {\n            string: from\n          }\n        ]\n      }\n    };\n  }\n\n  parseTokenTransfer(op: any): { tokenId: string; to: string; amount: string } {\n    const opJson = JSON.stringify(op.parameters);\n    const addresses = opJson.match(/\\{\\\"string\\\":\\\"[^\\\"]*/g)?.map((s) => {\n      return s.slice(11);\n    });\n    const amounts = opJson.match(/\\{\\\"int\\\":\\\"[^\\\"]*/g)?.map((i) => {\n      return i.slice(8);\n    });\n    if (!addresses || !amounts) {\n      return null;\n    }\n    if (addresses.length === 2) {\n      if (amounts.length === 1) {\n        const fa12ref = this.getFA12Transaction(addresses[0], addresses[1], amounts[0]);\n        if (isEqual(fa12ref, op.parameters)) {\n          return {\n            tokenId: `${op.destination}:0`,\n            to: addresses[1],\n            amount: amounts[0]\n          };\n        }\n      } else if (amounts.length === 2) {\n        const fa2ref = this.getFA2Transaction(addresses[0], addresses[1], amounts[1], String(amounts[0]));\n        if (isEqual(fa2ref, op.parameters)) {\n          return {\n            tokenId: `${op.destination}:${amounts[0]}`,\n            to: addresses[1],\n            amount: amounts[1]\n          };\n        }\n      }\n    }\n    return null;\n  }\n  postRpc(path: string, payload: any): Observable<any> {\n    return this.http.post(`${this.nodeURL}/${path}`, payload, httpOptions).pipe(this.retryPipeline(path));\n  }\n  getRpc(path: string): Observable<any> {\n    return this.http.get(`${this.nodeURL}/${path}`).pipe(this.retryPipeline(path));\n  }\n  private retryPipeline(path: string, retries: number = 3): MonoTypeOperatorFunction<unknown> {\n    const retryWithWarning = (i, e) => {\n      if (i < retries) {\n        console.warn(`Retry ${i + 1}: ${path}`, e);\n      }\n      return of(e).pipe(delayOperator(250));\n    };\n    return retryWhen((errors) =>\n      errors.pipe(concatMap((e, i) => iif(() => i >= retries || !(e?.name === 'HttpErrorResponse'), throwError(e), retryWithWarning(i, e))))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { TokenData } from '../token/token.service';\nimport { Account } from '../wallet/wallet';\n\ninterface PrepareTokenTransfer {\n  account: Account;\n  tokenTransfer: string;\n  symbol: string;\n}\nexport enum BuyProvider {\n  Coinbase = 0,\n  Transak,\n  MoonPay\n}\ninterface MetadataUpdated {\n  contractAddress: string;\n  id: string;\n  token: TokenData;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n  public activeAccount = new BehaviorSubject(null);\n  public walletUpdated = new BehaviorSubject(null);\n  public metadataUpdated: BehaviorSubject<MetadataUpdated>;\n  public refreshTokens: BehaviorSubject<null>;\n  public confirmedOp: Subject<string>;\n  public prepareTokenTransfer: Subject<PrepareTokenTransfer>;\n  public nftsUpdated: BehaviorSubject<any>;\n  public origin: BehaviorSubject<string>;\n  public beaconResponse: Subject<boolean>;\n  public login: Subject<boolean>;\n  public logout: Subject<boolean>;\n  public buy: Subject<BuyProvider>;\n  public wc2: Subject<any>;\n  constructor() {\n    this.init();\n    this.logout.subscribe((o) => {\n      if (o) {\n        this.reset();\n      }\n    });\n  }\n  init() {\n    this.metadataUpdated = new BehaviorSubject<MetadataUpdated>(null);\n    this.refreshTokens = new BehaviorSubject<any>([]);\n    this.confirmedOp = new Subject<string>();\n    this.prepareTokenTransfer = new Subject<PrepareTokenTransfer>();\n    this.refreshTokens = new BehaviorSubject<null>(null);\n    this.nftsUpdated = new BehaviorSubject<any>(undefined);\n    this.origin = new BehaviorSubject<string>(null);\n    this.beaconResponse = new Subject<boolean>();\n    this.login = new Subject<boolean>();\n    this.logout = new Subject<boolean>();\n    this.buy = new Subject<BuyProvider>();\n    this.wc2 = new Subject<any>();\n  }\n  reset() {\n    this.metadataUpdated.next(null);\n    this.refreshTokens.next(null);\n    this.nftsUpdated.next(undefined);\n  }\n}\n","import Big from 'big.js';\n\nexport class Amount {\n  decimalPlaces: number = 6;\n  internalBigInt: Big = Big(0);\n  internalNormalised: number = 0;\n\n  constructor(c: any) {\n    if (c?.rpcAmount === undefined && c?.normalisedAmount === undefined) {\n      return;\n    }\n    this.decimalPlaces = c.decimalPlaces;\n    if (!!c?.rpcAmount) {\n      let multiplierIntValue = Math.round(Math.pow(10, this.decimalPlaces));\n      this.internalNormalised = parseFloat(Big(c.rpcAmount).div(multiplierIntValue).toString() || 0);\n      this.internalBigInt = Big(c.rpcAmount);\n    } else if (!!c?.normalisedAmount) {\n      let multiplierIntValue = Math.round(Math.pow(10, this.decimalPlaces));\n      this.internalNormalised = parseFloat(Big(c.normalisedAmount).toString() || 0);\n      this.internalBigInt = Big(c.normalisedAmount).times(multiplierIntValue);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport dexterCalculations from 'dexCalcs/dist/index-mobile.min';\nimport { Amount } from './classes/Amount';\nimport Big from 'big.js';\nimport { ChartSeries } from '../../../app/components/ui/chart/chart.component';\nimport { CONSTANTS } from '../../../environments/environment';\n@Injectable({ providedIn: 'root' })\nexport class SwapLiquidityService {\n  readonly lqdTokenContract = 'KT1AafHA1C1vk959wvHWBispY9Y2f3fxBUUo';\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  public storage = {};\n  public dipdupContracts = [];\n\n  constructor() {}\n\n  async fetchContracts(offset = 0): Promise<void> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    const req = {\n      query: `{dipdupContract(where: {}, offset: ${offset}) {address, name, typename, updatedAt, createdAt}}`\n    };\n    try {\n      const response = await (\n        await fetch(baseUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json();\n      if (response?.data?.dipdupContract?.length > 0) {\n        this.dipdupContracts.concat(response.data.dipdupContract);\n        await this.fetchContracts(offset + 100);\n      } else if (offset === 0) {\n        throw new Error();\n      }\n      return;\n    } catch (e) {\n      throw new Error();\n    }\n  }\n\n  async fetchStorage(contract): Promise<void> {\n    try {\n      return await fetch(`${CONSTANTS.API_URL}/contracts/${contract}/storage`)\n        .then((r) => r.json())\n        .then((r) => {\n          this.storage[contract] = {};\n          this.storage[contract].total_pool = r['lqtTotal'];\n          this.storage[contract].tez_pool = r['xtzPool'];\n          this.storage[contract].token_pool = r['tokenPool'];\n        });\n    } catch (e) {\n      throw new Error();\n    }\n  }\n\n  settings(dex: string): {\n    fee: string;\n    burn: string;\n    includeSubsidy: boolean;\n  } {\n    switch (dex) {\n      case 'liquidityBaking':\n        return { fee: '0.1', burn: '0.1', includeSubsidy: false };\n      case 'quipuswap':\n        return { fee: '0.3', burn: '0', includeSubsidy: false };\n      default:\n        return { fee: '0.3', burn: '0', includeSubsidy: false };\n    }\n  }\n\n  createPoolAmounts(): { xtzPool: Amount; tokenPool: Amount } {\n    const xtzPool = new Amount({\n      rpcAmount: parseFloat(this.storage[this.lqdContract]?.tez_pool),\n      decimalPlaces: 6\n    });\n    const tokenPool = new Amount({\n      rpcAmount: parseFloat(this.storage[this.lqdContract]?.token_pool),\n      decimalPlaces: 8\n    });\n    return { xtzPool, tokenPool };\n  }\n\n  calculateXtzToToken(xtzToSell, xtzPool, tokenPool, maxSlippage, dex): { expected; minimum; rate; impactDouble } {\n    const expected = this.xtzToTokenExpectedReturn(xtzToSell, xtzPool, tokenPool, dex);\n    const minimum = this.xtzToTokenMinimumReturn(expected, maxSlippage);\n    const rate = this.xtzToTokenExchangeRateDisplay(xtzToSell, xtzPool, tokenPool, dex);\n    const priceImpact = this.xtzToTokenPriceImpact(xtzToSell, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { expected, minimum, rate, impactDouble };\n  }\n\n  calculateXtzToTokenFromToken(tokenToSell, xtzPool, tokenPool, maxSlippage, dex): { xtz; token } {\n    const result = this.calculateTokenToXTZ(tokenToSell, xtzPool, tokenPool, maxSlippage, dex);\n    const expected = this.xtzToTokenExpectedReturn(result.expected, xtzPool, tokenPool, dex);\n    const minimum = this.xtzToTokenMinimumReturn(expected, maxSlippage);\n    const rate = this.xtzToTokenExchangeRateDisplay(result.expected, xtzPool, tokenPool, dex);\n    const priceImpact = this.xtzToTokenPriceImpact(result.expected, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { xtz: result, token: { expected, minimum, rate, impactDouble } };\n  }\n\n  calculateTokenToXTZ(tokenToSell, xtzPool, tokenPool, maxSlippage, dex): { expected; minimum; rate; impactDouble } {\n    const expected = this.tokenToXtzExpectedReturn(tokenToSell, xtzPool, tokenPool, dex);\n    const minimum = this.tokenToXtzMinimumReturn(expected, maxSlippage);\n    const rate = this.tokenToXtzExchangeRateDisplay(tokenToSell, xtzPool, tokenPool, dex);\n    const priceImpact = this.tokenToXtzPriceImpact(tokenToSell, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { expected, minimum, rate, impactDouble };\n  }\n\n  calculateTokenToXTZFromXTZ(xtzToSell, xtzPool, tokenPool, maxSlippage, dex): { xtz; token } {\n    const result = this.calculateXtzToToken(xtzToSell, xtzPool, tokenPool, maxSlippage, dex);\n    const expected = this.tokenToXtzExpectedReturn(result.expected, xtzPool, tokenPool, dex);\n    const minimum = this.tokenToXtzMinimumReturn(expected, maxSlippage);\n    const rate = this.tokenToXtzExchangeRateDisplay(result.expected, xtzPool, tokenPool, dex);\n    const priceImpact = this.tokenToXtzPriceImpact(result.expected, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { xtz: { expected, minimum, rate, impactDouble }, token: result };\n  }\n\n  calculateAddLiquidityXTZ(xtz, xtzPool, tokenPool, totalLiquidity, maxSlippage, dex): { liquidityExpected; liquidityMinimum; tokenRequired; exchangeRate } {\n    const tokenRequired = this.addLiquidityTokenRequired(xtz, xtzPool, tokenPool, dex);\n    const liquidityReturned = this.addLiquidityReturn(xtz, xtzPool, totalLiquidity, maxSlippage, dex);\n    const exchangeRate = this.xtzToTokenExchangeRateDisplay(xtz, xtzPool, tokenPool, dex);\n    return {\n      liquidityExpected: liquidityReturned?.expected,\n      liquidityMinimum: liquidityReturned?.minimum,\n      tokenRequired,\n      exchangeRate\n    };\n  }\n\n  calculateAddLiquidityToken(token, xtzPool, tokenPool, totalLiquidity, maxSlippage, dex): { liquidityExpected; liquidityMinimum; xtzRequired; exchangeRate } {\n    const xtzRequired = this.addLiquidityXtzRequired(token, xtzPool, tokenPool, dex);\n    const liquidityReturned = this.addLiquidityReturn(xtzRequired, xtzPool, totalLiquidity, maxSlippage, dex);\n    const exchangeRate = this.xtzToTokenExchangeRateDisplay(xtzRequired, xtzPool, tokenPool, dex);\n    return {\n      liquidityExpected: liquidityReturned?.expected,\n      liquidityMinimum: liquidityReturned?.minimum,\n      xtzRequired,\n      exchangeRate\n    };\n  }\n\n  calculateRemoveLiquidity(\n    liquidityBurned,\n    xtzPool,\n    tokenPool,\n    totalLiquidity,\n    maxSlippage,\n    dex\n  ): { xtzExpected; xtzMinimum; tokenExpected; tokenMinimum; exchangeRate } {\n    const xtzOut = this.removeLiquidityXtzReceived(liquidityBurned, totalLiquidity, xtzPool, maxSlippage, dex);\n    const tokenOut = this.removeLiquidityTokenReceived(liquidityBurned, totalLiquidity, tokenPool, maxSlippage);\n    const exchangeRate = this.xtzToTokenExchangeRateDisplay(xtzOut.expected, xtzPool, tokenPool, dex);\n\n    return {\n      xtzExpected: xtzOut?.expected,\n      xtzMinimum: xtzOut?.minimum,\n      tokenExpected: tokenOut?.expected,\n      tokenMinimum: tokenOut?.minimum,\n      exchangeRate\n    };\n  }\n\n  xtzToTokenExpectedReturn(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const xtz = xtzToSell.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n    const result = dexterCalculations.xtzToTokenTokenOutput(\n      xtz.toString(),\n      xPool.toString(),\n      tPool.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({\n      rpcAmount: result?.toString() || '0',\n      decimalPlaces: tokenPool.decimalPlaces\n    });\n  }\n\n  xtzToTokenMinimumReturn(tokenAmount: Amount, slippage: number): Amount {\n    const token = tokenAmount.internalBigInt;\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'xtzToTokenMinimumReturn' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n    const result = dexterCalculations.xtzToTokenMinimumTokenOutput(token.toString(), slippage);\n    return new Amount({\n      rpcAmount: result?.value?.toString() || '0',\n      decimalPlaces: tokenAmount.decimalPlaces\n    });\n  }\n\n  xtzToTokenRequiredXtzFor(tokenAmount: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const tokenRequired = tokenAmount.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.xtzToTokenXtzInput(\n      tokenRequired,\n      xtzPoolRpc,\n      tokenPoolRpc,\n      tokenAmount.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({ rpcAmount: result.toString() });\n  }\n\n  xtzToTokenExchangeRate(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const xtz = xtzToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.xtzToTokenExchangeRate(xtz, xtzPoolRpc, tokenPoolRpc, dex.fee.toString(), dex.burn.toString(), dex.includeSibsidy);\n    return parseFloat(result.toString());\n  }\n\n  xtzToTokenExchangeRateDisplay(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): string {\n    const xtz = xtzToSell.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n    const result = dexterCalculations.xtzToTokenExchangeRateForDisplay(\n      xtz.toString(),\n      xPool.toString(),\n      tPool.toString(),\n      tokenPool.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return result?.toString() ?? '0';\n  }\n\n  xtzToTokenPriceImpact(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const xtz = xtzToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.xtzToTokenPriceImpact(\n      xtz.toString(),\n      xtzPoolRpc.toString(),\n      tokenPoolRpc.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return parseFloat(result?.toString() ?? 0);\n  }\n\n  tokenToXtzExpectedReturn(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const token = tokenToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n    const result = dexterCalculations.tokenToXtzXtzOutput(\n      token.toString(),\n      xtzPoolRpc.toString(),\n      tokenPoolRpc.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({\n      rpcAmount: result?.toString() || '0',\n      decimalPlaces: 6\n    });\n  }\n\n  tokenToXtzMinimumReturn(xtzAmount: Amount, slippage: number): Amount {\n    const xtz = xtzAmount.internalBigInt;\n\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'tokenToXtzMinimumReturn' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const result = dexterCalculations.tokenToXtzMinimumXtzOutput(xtz.toString(), slippage);\n    return new Amount({\n      rpcAmount: result?.toString() || '0',\n      decimalPlaces: 6\n    });\n  }\n\n  tokenToXtzRequiredTokenFor(xtzAmount: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const xtzRequired = xtzAmount.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzTokenInput(\n      xtzRequired,\n      xPool,\n      tPool,\n      tokenPool.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({\n      rpcAmount: result.toString(),\n      decimalPlaces: tokenPool.decimalPlaces\n    });\n  }\n\n  tokenToXtzExchangeRate(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const token = tokenToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzExchangeRate(\n      token.toString(),\n      xtzPoolRpc,\n      tokenPoolRpc,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return parseFloat(result.toString());\n  }\n\n  tokenToXtzExchangeRateDisplay(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): string {\n    const token = tokenToSell.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzExchangeRateForDisplay(\n      token.toString(),\n      xPool.toString(),\n      tPool.toString(),\n      tokenPool.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return result?.toString() ?? '0';\n  }\n\n  tokenToXtzMarketRate(xtzPool: Amount, tokenPool: Amount): number {\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzMarketRate(xPool, tPool, tokenPool.decimalPlaces);\n    return parseFloat(parseFloat(result.toString()).toFixed(tokenPool.decimalPlaces));\n  }\n\n  tokenToXtzPriceImpact(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const token = tokenToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzPriceImpact(\n      token.toString(),\n      xtzPoolRpc.toString(),\n      tokenPoolRpc.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return parseFloat(result?.toString() ?? 0);\n  }\n\n  addLiquidityReturn(xtzToDeposit: Amount, xtzPool: Amount, totalLiquidity: Amount, slippage: number, dex): { expected: Amount; minimum: Amount } {\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'addLiquidityReturn' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const xtzIn = xtzToDeposit.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const totalLqt = totalLiquidity;\n\n    const result = dexterCalculations.addLiquidityLiquidityCreated(xtzIn.toString(), xPool.toString(), totalLqt.toString(), dex.includeSubsidy);\n    const expected = new Amount({\n      rpcAmount: result?.value ?? 0,\n      decimalPlaces: 0\n    });\n    const minimum = expected.internalNormalised - expected.internalNormalised * slippage;\n    const minAmount = new Amount({\n      normalisedAmount: minimum ?? 0,\n      decimalPlaces: 0\n    });\n    return { expected, minimum: minAmount };\n  }\n\n  addLiquidityTokenRequired(xtzToDeposit: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const xtzIn = xtzToDeposit.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.addLiquidityTokenIn(xtzIn.toString(), xPool.toString(), tPool.toString(), dex.includeSubsidy);\n    return new Amount({\n      rpcAmount: result?.toString() ?? '0',\n      decimalPlaces: tokenPool.decimalPlaces\n    });\n  }\n\n  addLiquidityXtzRequired(tokenToDeposit: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const tokenIn = tokenToDeposit.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.addLiquidityXtzIn(tokenIn.toString(), xPool.toString(), tPool.toString(), dex.includeSubsidy);\n    return new Amount({ rpcAmount: result?.toString() ?? '0', decimalPlaces: xtzPool.decimalPlaces });\n  }\n\n  removeLiquidityTokenReceived(liquidityBurned: Amount, totalLiquidity: Amount, tokenPool: Amount, slippage: number): { expected: Amount; minimum: Amount } {\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'removeLiquidityTokenReceived' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const lqtBurned = liquidityBurned.internalBigInt;\n    const tLqt = totalLiquidity;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.removeLiquidityTokenOut(lqtBurned.toString(), tLqt.toString(), tPool.toString());\n\n    if (!!Big(result?.value).toString()) {\n      const expected = new Amount({\n        rpcAmount: result?.value ?? 0,\n        decimalPlaces: 8\n      });\n      const minimum = expected.internalNormalised - expected.internalNormalised * slippage;\n      const minAmount = new Amount({\n        normalisedAmount: minimum,\n        decimalPlaces: 8\n      });\n      return { expected, minimum: minAmount };\n    } else {\n      return undefined;\n    }\n  }\n\n  removeLiquidityXtzReceived(liquidityBurned: Amount, totalLiquidity: Amount, xtzPool: Amount, slippage: number, dex): { expected: Amount; minimum: Amount } {\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'removeLiquidityXtzReceived' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const lqtBurned = liquidityBurned.internalBigInt;\n    const tLqt = totalLiquidity;\n    const xPool = xtzPool.internalBigInt;\n\n    const result = dexterCalculations.removeLiquidityXtzOut(lqtBurned.toString(), tLqt.toString(), xPool.toString(), dex.includeSubsidy);\n\n    if (!!Big(result?.value).toString()) {\n      const expected = new Amount({\n        rpcAmount: result?.value,\n        decimalPlaces: 6\n      });\n      const minimum = expected.internalNormalised - expected.internalNormalised * slippage;\n      const minAmount = new Amount({\n        normalisedAmount: minimum,\n        decimalPlaces: 6\n      });\n      return { expected, minimum: minAmount };\n    } else {\n      return undefined;\n    }\n  }\n  estimateLiquidityBakingAPY() {\n    return 'APY: ' + dexterCalculations.estimateLiquidityBakingAPY(this.storage[this.lqdContract]?.tez_pool).toFixed(2) + '%';\n  }\n}\n","// https://gitlab.com/tezos-domains/client\nimport { TezosToolkit } from '@taquito/taquito';\nimport { TaquitoTezosDomainsClient } from '@tezos-domains/taquito-client';\nimport { Tzip16Module } from '@taquito/tzip16';\nimport { Injectable } from '@angular/core';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { SupportedNetworkType } from '@tezos-domains/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TezosDomainsService {\n  private client: TaquitoTezosDomainsClient;\n  unsupportedNetwork = false;\n  private queue = [];\n  pending = false;\n  constructor() {\n    const tezosToolkit = new TezosToolkit(CONSTANTS.NODE_URL);\n    tezosToolkit.addExtension(new Tzip16Module());\n    const options = { caching: { enabled: false } };\n    try {\n      this.client = new TaquitoTezosDomainsClient({\n        tezos: tezosToolkit,\n        network: <SupportedNetworkType>CONSTANTS.NETWORK,\n        ...options\n      });\n    } catch (e) {\n      if (e?.message && e.message.includes('Supported built-in networks are:') && !CONSTANTS.MAINNET) {\n        console.error(e);\n        console.warn('Falling back on Ghostnet as network for Tezos Domains initialization');\n        this.unsupportedNetwork = true;\n        this.client = new TaquitoTezosDomainsClient({\n          tezos: tezosToolkit,\n          network: <SupportedNetworkType>'ghostnet',\n          ...options\n        });\n      } else {\n        throw e;\n      }\n    }\n  }\n  async getAddressFromDomain(domain: string) {\n    if (this.unsupportedNetwork) {\n      return { pkh: '' };\n    }\n    const address = await this.client.resolver.resolveNameToAddress(domain);\n    if (!address) {\n      return { pkh: '' };\n    }\n    return { pkh: address };\n  }\n  async getDomainFromAddress(address: string): Promise<string> {\n    if (!this.pending) {\n      this.pending = true;\n      this.collect();\n    }\n    return new Promise((resolve, reject) => {\n      this.queue.push({ address, resolve, reject });\n    });\n  }\n  async collect() {\n    setTimeout(async () => {\n      this.pending = false;\n      const queue = this.queue;\n      this.queue = [];\n      const addresses = queue.map((q) => {\n        return q.address;\n      });\n      const items = await this.getDomainFromAddresses(addresses).catch((e) => {\n        for (const q of queue) {\n          q.reject(e);\n          throw e;\n        }\n      });\n      while (queue.length) {\n        const promise = queue.shift();\n        if (items[promise.address]) {\n          promise.resolve(items[promise.address]);\n        } else {\n          promise.resolve('');\n        }\n      }\n    }, 100);\n  }\n  async getDomainFromAddresses(addresses: any) {\n    if (this.unsupportedNetwork) {\n      return {};\n    }\n    const baseUrl = CONSTANTS.MAINNET ? 'https://api.tezos.domains/graphql' : `https://${CONSTANTS.NETWORK}-api.tezos.domains/graphql`;\n    const req = {\n      query: `{reverseRecords(where: {address: {in: ${JSON.stringify(addresses)}}}) {items {address domain: domain {id, name}}}}`\n    };\n    const response = await (\n      await fetch(baseUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(req)\n      })\n    ).json();\n    const r = {};\n    if (response.data) {\n      for (const item of response.data.reverseRecords.items) {\n        if (item?.address && item?.domain?.name) {\n          r[item.address] = item.domain.name;\n        }\n      }\n    }\n    return r;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TokenResponseType, TokenService } from '../token/token.service';\nimport { ActivityService } from '../activity/activity.service';\nimport { WalletService } from '../wallet/wallet.service';\nimport { Account } from '../wallet/wallet';\nimport Big from 'big.js';\nimport { CONSTANTS, BLACKLISTED_TOKEN_CONTRACTS } from '../../../environments/environment';\nimport { decode } from 'blurhash';\nimport { combineLatest } from 'rxjs';\nimport { sampleTime } from 'rxjs/operators';\nimport { SubjectService } from '../subject/subject.service';\nimport { DipDupService } from '../indexer/dipdup/dipdup.service';\n\ninterface TokenWithBalance extends TokenResponseType {\n  balance: string;\n  price: string;\n}\ninterface ContractWithImg {\n  name: string;\n  thumbnailUrl: string;\n  visitUrl: string;\n  tokens: TokenWithBalance[];\n  hidden?: boolean;\n}\ntype ContractsWithBalance = Record<string, ContractWithImg>;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenBalancesService {\n  xtzUsdRate: number;\n  balances: TokenWithBalance[] = [];\n  nfts: ContractsWithBalance = null;\n  activeAccount: Account = null;\n  _thumbnailsToCreate = [];\n  constructor(\n    private tokenService: TokenService,\n    private activityService: ActivityService,\n    private walletService: WalletService,\n    private subjectService: SubjectService,\n    private dipdupService: DipDupService\n  ) {\n    combineLatest([\n      this.subjectService.activeAccount,\n      this.subjectService.metadataUpdated,\n      this.activityService.tokenBalanceUpdated,\n      this.subjectService.refreshTokens\n    ])\n      .pipe(sampleTime(10))\n      .subscribe(([a, b, c]) => {\n        if (this.activeAccount !== a) {\n          this.activeAccount = a;\n        }\n        this.reload();\n      });\n    this.reload();\n    this.subjectService.logout.subscribe((o) => {\n      if (!!o) {\n        this.destroy();\n      }\n    });\n  }\n  destroy() {\n    this.balances = [];\n    this.nfts = null;\n  }\n  resolveAsset(token, balances, nfts) {\n    const asset: TokenResponseType = this.tokenService.getAsset(token.tokenId);\n    if (BLACKLISTED_TOKEN_CONTRACTS.includes(asset?.contractAddress)) {\n      return;\n    }\n    if (asset) {\n      if (this.isNFT(asset)) {\n        // token balance or NFT?\n        let contractAddress = asset.contractAddress;\n        if (asset?.contractAddress === 'KT1RJ6PbjHpwc3M5rw5s2Nbmefwbuwbdxton' && asset?.mintingTool === 'https://teia.art/mint') {\n          contractAddress = contractAddress + '@teia';\n        }\n        const contractAlias = this.getContractAlias(contractAddress) ?? contractAddress;\n        if (nfts[contractAlias] === undefined) {\n          const CONTRACT_ALIASES = CONSTANTS.CONTRACT_ALIASES[contractAlias as string];\n          if (!CONTRACT_ALIASES?.thumbnailUrl) {\n            if (this._thumbnailsToCreate.filter((obj) => obj.contractAlias === contractAlias).length === 0) {\n              this._thumbnailsToCreate.push({\n                contractAlias,\n                address: contractAddress\n              });\n            }\n          }\n          const name = CONTRACT_ALIASES?.name ? CONTRACT_ALIASES.name : this.tokenService.getContractName(contractAddress) ?? contractAlias;\n          nfts[contractAlias] = {\n            name,\n            thumbnailUrl: CONTRACT_ALIASES?.thumbnailUrl ?? this.tokenService.getContractLogo(contractAddress),\n            tokens: []\n          };\n          if (CONTRACT_ALIASES?.link) {\n            nfts[contractAlias].visitUrl = CONTRACT_ALIASES.link;\n          }\n        }\n        nfts[contractAlias].tokens.push({ ...asset, balance: token.balance });\n      } else if (!isNaN(asset.decimals)) {\n        const balance = Big(token.balance)\n          .div(10 ** asset.decimals)\n          .toFixed();\n        balances.push({ ...asset, balance });\n      }\n    } else {\n      if (nfts['unknown'] === undefined) {\n        const hidden = this.nfts !== null && this.nfts['unknown'] === undefined;\n        nfts['unknown'] = {\n          name: 'Unknown tokens',\n          thumbnailUrl: '../../../assets/img/unknown-token-grayscale.svg',\n          tokens: [],\n          hidden\n        };\n        if (hidden) {\n          setTimeout(() => {\n            if (this.nfts['unknown'] !== undefined) {\n              this.nfts['unknown'].hidden = false;\n            }\n          }, 10000);\n        }\n      }\n      const placeholder = this.tokenService.getPlaceholderToken(token.tokenId);\n      placeholder.name = `${placeholder.contractAddress.slice(0, 8)}... (${placeholder.id.toString()})`;\n      delete placeholder.decimals;\n      nfts['unknown'].tokens.push(placeholder);\n    }\n  }\n  reload() {\n    if (!this.activeAccount?.tokens || !this.tokenService.initialized) {\n      return;\n    }\n    const balances: TokenWithBalance[] = [];\n    const nfts: ContractsWithBalance = {};\n    for (let token of this.walletService.wallet.getAccount(this.activeAccount.address).tokens) {\n      if (token?.balance && token?.balance != '0') {\n        this.resolveAsset(token, balances, nfts);\n      }\n    }\n    this.balances = balances;\n    this.nfts = this.orderedNfts(nfts);\n    this.mergeMarket();\n\n    if (this._thumbnailsToCreate.length) {\n      this._thumbnailsToCreate.forEach(({ contractAlias, address }) => {\n        if (!this.nfts[contractAlias].thumbnailUrl) {\n          this.nfts[contractAlias].thumbnailUrl = this.getThumbnailUrl(address);\n        }\n      });\n      this._thumbnailsToCreate = [];\n    }\n    this.subjectService.nftsUpdated.next({ nfts: this.nfts, balances: this.balances });\n  }\n  orderedNfts(nfts: ContractsWithBalance): ContractsWithBalance {\n    const _nfts: ContractsWithBalance = {};\n    const aliases = Object.keys(CONSTANTS.CONTRACT_ALIASES);\n    for (let alias of aliases) {\n      if (nfts[alias]) {\n        _nfts[alias] = nfts[alias];\n        delete nfts[alias];\n      }\n    }\n    const keys = Object.keys(nfts);\n    for (let key of keys) {\n      if (key !== 'unknown') {\n        _nfts[key] = nfts[key];\n        delete nfts[key];\n      }\n    }\n    if (nfts['unknown']) {\n      // property last\n      _nfts['unknown'] = nfts['unknown'];\n      delete nfts['unknown'];\n    }\n    return _nfts;\n  }\n  getContractAlias(address: string) {\n    const keys = Object.keys(CONSTANTS.CONTRACT_ALIASES);\n    for (const key of keys) {\n      if (CONSTANTS.CONTRACT_ALIASES[key].address.includes(address)) {\n        return key;\n      }\n    }\n    return undefined;\n  }\n  getThumbnailUrl(address: string): string {\n    const pixels = decode(address.slice(0, 22), 5, 5);\n    const canvas = document.createElement('canvas');\n    canvas.width = canvas.height = 5;\n    const ctx = canvas.getContext('2d');\n    const imageData = ctx.createImageData(5, 5);\n    imageData.data.set(pixels);\n    ctx.putImageData(imageData, 0, 0);\n    return canvas.toDataURL();\n  }\n\n  isNFT(asset: TokenResponseType): boolean {\n    if (!asset) {\n      return false;\n    }\n    if (CONSTANTS.MAINNET) {\n      return (\n        (asset?.isBooleanAmount || asset?.decimals == 0) &&\n        !(\n          CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(`${asset.contractAddress}:${asset.id}`) ||\n          this.dipdupService.tokens.get(`${asset.contractAddress}:${asset.id}`)\n        )\n      );\n    } else {\n      return (asset?.isBooleanAmount || asset?.decimals == 0) && !CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(`${asset.contractAddress}`) ? true : false;\n    }\n  }\n  mergeMarket() {\n    Object.keys(this.balances).forEach((key) => {\n      let midPrice = undefined;\n      const tokenId: string = `${this.balances[key]?.contractAddress}:${this.balances[key]?.id}`;\n      if ((midPrice = this.dipdupService.tokens.get(tokenId))) {\n        this.balances[key].price = midPrice * parseFloat(this.balances[key].balance) * this.walletService.wallet.XTZrate;\n      }\n    });\n  }\n}\n","import Dexie from 'dexie';\n\nconst db: any = new Dexie('Kukai');\ndb.version(1).stores({\n  key_value_store: 'key'\n});\n\nconst saveToKvDb = async (key: string, value: any): Promise<void> => {\n  return new Promise((resolve) => {\n    if (db.key_value_store) db.key_value_store.clear();\n    db.key_value_store.add({ key: key, value }).then(() => {\n      resolve();\n    });\n  });\n};\nconst getFromKvDb = async (key: string): Promise<any> => {\n  const key_value_store = await db.key_value_store.where('key').equals(key).toArray();\n  if (key_value_store && key_value_store.length > 0) {\n    return key_value_store[0].value;\n  }\n  return null;\n};\nexport { saveToKvDb, getFromKvDb };\n","import { Injectable } from '@angular/core';\nimport { CONSTANTS, TRUSTED_TOKEN_CONTRACTS, BLACKLISTED_TOKEN_CONTRACTS, environment } from '../../../environments/environment';\nimport { IndexerService } from '../indexer/indexer.service';\nimport Big from 'big.js';\nimport { SubjectService } from '../subject/subject.service';\nimport { filter } from 'rxjs/operators';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { ObjktService } from '../indexer/objkt/objkt.service';\nimport { DipDupService } from '../indexer/dipdup/dipdup.service';\nimport { getFromKvDb, saveToKvDb } from './indexedDB';\nimport { MetadataSource } from '../indexer/tzkt/tzkt.service';\n\nexport interface TokenResponseType {\n  contractAddress: string;\n  id: string;\n  decimals: number;\n  artifactAsset?: Asset;\n  displayAsset: Asset;\n  thumbnailAsset: Asset;\n  name: string;\n  symbol: string;\n  description: string;\n  category: string;\n  kind: string;\n  isTransferable?: boolean;\n  isBooleanAmount?: boolean;\n  shouldPreferSymbol?: boolean;\n  series?: string;\n  ttl?: number;\n  mintingTool?: string;\n  status: Status;\n  isUnknownToken?: boolean;\n}\nexport type Asset = string | CachedAsset;\nexport interface CachedAsset {\n  uri: string;\n  mimeType: string;\n}\n\nexport type ContractsType = Record<string, ContractType>;\nexport type ContractType = FA12 | FA2;\nexport interface TokensInterface {\n  category: string;\n  objkt?: {\n    name?: string;\n    logo?: string;\n    updated: number;\n  };\n}\nenum Status {\n  Rejected = -1,\n  Pending = 0,\n  Approved = 1\n}\nexport interface TokenData {\n  name: string;\n  symbol: string;\n  decimals: number;\n  description: string;\n  artifactAsset?: Asset;\n  displayAsset: Asset;\n  thumbnailAsset: Asset;\n  isTransferable?: boolean;\n  isBooleanAmount?: boolean;\n  shouldPreferSymbol?: boolean;\n  series?: string;\n  ttl?: number;\n  mintingTool?: string;\n  status: Status;\n}\nexport interface FA12 extends TokensInterface {\n  kind: 'FA1.2';\n  tokens: {\n    0: TokenData;\n  };\n}\nexport interface FA2 extends TokensInterface {\n  kind: 'FA2';\n  tokens: Record<number | string, TokenData>;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  readonly AUTO_DISCOVER: boolean = true;\n  readonly version: string = '1.0.15';\n  private contracts: ContractsType = {};\n  public initialized = false;\n  private exploredIds: Record<string, { firstCheck: number; lastCheck: number; counter: number }> = {};\n  private pendingSave = null;\n  readonly storeKey = 'tokenMetadata';\n  readonly unlockablesKey = 'unlockables';\n  queue = [];\n  workers = 0;\n  constructor(\n    public indexerService: IndexerService,\n    private subjectService: SubjectService,\n    private dipdupService: DipDupService,\n    private router: Router,\n    private objktService: ObjktService\n  ) {\n    this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n      if (r.url.indexOf('/account') === -1) {\n        document.documentElement.className = '';\n      }\n    });\n    this.contracts = JSON.parse(JSON.stringify(CONSTANTS.ASSETS));\n    this.loadMetadata().then(() => {\n      this.initialized = true;\n      this.subjectService.metadataUpdated.next(null);\n      this.saveMetadata();\n    });\n  }\n  getAsset(tokenId: string): TokenResponseType {\n    if (!tokenId || !tokenId.includes(':')) {\n      return null;\n    }\n    const tokenIdArray = tokenId.split(':');\n    let contractAddress: string = tokenIdArray[0];\n    const id: string = tokenIdArray[1] ? String(tokenIdArray[1]) : null;\n    const contract: ContractType = this.contracts[contractAddress];\n    if (id != null) {\n      if (contract) {\n        let token: TokenResponseType = contract.tokens[id];\n        if (!token) {\n          // check ranges\n          const ids = Object.keys(contract.tokens);\n          for (const idx of ids) {\n            if (idx.includes('-')) {\n              const span = idx.split('-');\n              if (span.length === 2 && !isNaN(Number(span[0])) && !isNaN(Number(span[1]))) {\n                const first = Big(span[0]);\n                const last = Big(span[1]);\n                if (first.gte(id) && last.lte(id)) {\n                  token = JSON.parse(JSON.stringify(contract.tokens[idx]));\n                  token.name = `${JSON.parse(JSON.stringify(contract.tokens[idx].name))} #${Big(id).minus(first).plus(1)}`;\n                  break;\n                }\n              }\n            }\n          }\n        }\n        if (token) {\n          if (token.status < 0) {\n            return {\n              kind: contract.kind,\n              category: contract.category,\n              id,\n              contractAddress,\n              ...token,\n              thumbnailAsset: '',\n              displayAsset: ''\n            };\n          }\n          return {\n            kind: contract.kind,\n            category: contract.category,\n            id,\n            contractAddress,\n            ...token\n          };\n        }\n      }\n    }\n    return null;\n  }\n  getContractName(contractAddress: string) {\n    return this.contracts[contractAddress]?.objkt?.name ?? null;\n  }\n  getContractLogo(contractAddress: string) {\n    return this.contracts[contractAddress]?.objkt?.logo ?? null;\n  }\n  getContractAddressFromAsset(uri: string) {\n    const contractAddresses = Object.keys(this.contracts);\n    for (const contractAddress of contractAddresses) {\n      const tokens = this.contracts[contractAddress].tokens;\n      for (const id in tokens) {\n        if (tokens[id]?.thumbnailAsset?.uri === uri || tokens[id]?.displayAsset?.uri === uri || tokens[id]?.artifactAsset?.uri === uri) {\n          return contractAddress;\n        }\n      }\n    }\n    return '';\n  }\n  isKnownTokenId(tokenId: string): boolean {\n    return this.getAsset(tokenId) !== null;\n  }\n  knownTokenIds(): string[] {\n    const tokenIds: string[] = [];\n    const contractKeys = Object.keys(this.contracts);\n    if (contractKeys) {\n      for (const contractKey of contractKeys) {\n        const tokenKeys = Object.keys(this.contracts[contractKey].tokens);\n        if (tokenKeys) {\n          for (const tokenKey of tokenKeys) {\n            tokenIds.push(`${contractKey}:${tokenKey}`);\n          }\n        }\n      }\n    }\n    return tokenIds;\n  }\n  isCategoryType(address, regex: RegExp): boolean {\n    return regex.test(this.contracts[address]?.category);\n  }\n  isKnownTokenContract(address: string): boolean {\n    return this.contracts[address] !== undefined;\n  }\n  addAsset(contractAddress: string, contract: ContractType) {\n    if (!this.contracts[contractAddress]) {\n      this.contracts[contractAddress] = contract;\n      this.checkContractData(contractAddress, contract);\n    } else {\n      const currentKeys = Object.keys(this.contracts[contractAddress].tokens);\n      const newKeys = Object.keys(contract.tokens);\n      for (const key of newKeys) {\n        if (!currentKeys.includes(key)) {\n          this.contracts[contractAddress].tokens[key] = contract.tokens[key];\n        } else if (JSON.stringify(contract.tokens[key]) !== JSON.stringify(this.contracts[contractAddress].tokens[key])) {\n          this.contracts[contractAddress].tokens[key] = contract.tokens[key];\n        }\n      }\n    }\n  }\n\n  async checkContractData(contractAddress: string, contract: ContractType) {\n    let check = false;\n    if (!contract.objkt) {\n      check = true;\n    } else if (contract?.objkt?.updated) {\n      const diff = Date.now() - contract.objkt.updated;\n      if (!contract?.objkt?.name) {\n        if (diff > 1000 * 60 * 60 * 24) {\n          check = true;\n        }\n      }\n    }\n    if (check) {\n      const _objkt = await this.objktService.resolveCollection(contractAddress);\n      const objkt: any = { updated: Date.now() };\n      if (_objkt?.name) {\n        objkt.name = _objkt.name;\n        if (_objkt.logo) {\n          objkt.logo = _objkt.logo;\n        }\n      }\n      if (this.contracts[contractAddress]) {\n        this.contracts[contractAddress].objkt = objkt;\n      }\n      this.saveMetadata();\n      this.subjectService.metadataUpdated.next(null);\n    }\n  }\n  async searchAllMetadata(unknownTokenIds: any) {\n    if (unknownTokenIds.length) {\n      for (const tokenId of unknownTokenIds) {\n        this.searchMetadata(tokenId);\n      }\n    }\n  }\n  async recheckMetadata(tokens) {\n    if (tokens?.length) {\n      for (let token of tokens) {\n        try {\n          const tokenObject = this.getAsset(token.tokenId);\n          if (tokenObject?.ttl) {\n            const exp = this.exploredIds[token.tokenId];\n            const now = new Date().getTime();\n            if (now - exp.lastCheck > tokenObject.ttl * 1000) {\n              console.debug('recheck metadata for', token.tokenId);\n              this.exploredIds[token.tokenId].lastCheck = now;\n              this.exploredIds[token.tokenId].counter = ++exp.counter || 0;\n              this.saveMetadata();\n              if (!this.queue.includes(token.tokenId)) {\n                this.searchMetadata(token.tokenId, true);\n              }\n            }\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n  }\n  private async searchMetadata(tokenId: string, force = false) {\n    if ((!this.isKnownTokenId(tokenId) && !this.queue.includes(tokenId) && this.explore(tokenId)) || force) {\n      this.queue.push(tokenId);\n      if (this.workers < 2) {\n        this.startWorker();\n      }\n    }\n  }\n  async startWorker() {\n    this.workers++;\n    while (this.queue.length) {\n      const tokenId = this.queue.shift();\n      try {\n        const a = tokenId.split(':');\n        const contractAddress = a[0];\n        const id = String(a[1]);\n        const recentDay = this.exploredIds[tokenId]?.lastCheck - this.exploredIds[tokenId]?.firstCheck < 1000 * 3600 * 24;\n        const skipTzkt = this.isKnownTokenId(tokenId) && this.exploredIds[tokenId]?.counter % 5 === 3 && recentDay;\n        let metadataSource = skipTzkt ? MetadataSource.TaquitoOnly : MetadataSource.Any;\n        if (this.exploredIds[tokenId]?.counter === 0) {\n          metadataSource = MetadataSource.TzktOnly;\n        }\n        const metadata = await this.indexerService.getTokenMetadata(contractAddress, id, metadataSource);\n        this.handleMetadata(metadata, contractAddress, id);\n      } catch (e) {}\n    }\n    this.workers--;\n  }\n  handleMetadata(metadata: any, contractAddress: string, id: string) {\n    const tokenId = `${contractAddress}:${id}`;\n    if (metadata && (metadata.name || metadata.symbol) && !isNaN(metadata.decimals) && metadata.decimals >= 0) {\n      const contract: ContractType = {\n        kind: metadata.tokenType ? metadata.tokenType : 'FA2',\n        category: metadata.tokenCategory ? metadata.tokenCategory : '',\n        tokens: {}\n      };\n      const token: TokenData = {\n        name: metadata.name ? metadata.name : '',\n        symbol: metadata.symbol ? metadata.symbol : '',\n        decimals: Number(metadata.decimals),\n        description: metadata.description ? metadata.description : '',\n        artifactAsset: metadata.artifactUri ?? '',\n        displayAsset: metadata.displayUri ?? '',\n        thumbnailAsset: metadata.thumbnailUri ?? '',\n        isTransferable: metadata?.isTransferable === false ? metadata.isTransferable : true,\n        isBooleanAmount: metadata?.isBooleanAmount ? metadata.isBooleanAmount : false,\n        status:\n          TRUSTED_TOKEN_CONTRACTS.includes(contractAddress) || CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(tokenId) || this.dipdupService.tokens.get(tokenId)\n            ? 1\n            : 0\n      };\n      if (metadata?.ttl) {\n        token.ttl = Math.max(Number(metadata.ttl), 30);\n      }\n      if (metadata?.mintingTool) {\n        token.mintingTool = metadata.mintingTool;\n      }\n      if (metadata?.series) {\n        token.series = metadata.series;\n      }\n      if (CONSTANTS.ASSETS[contractAddress]?.tokens[id]) {\n        contract.tokens[id] = { ...token, ...CONSTANTS.ASSETS[contractAddress].tokens[id] };\n      } else {\n        contract.tokens[id] = token;\n      }\n      this.addAsset(contractAddress, contract);\n      this.saveMetadata();\n      this.subjectService.metadataUpdated.next({\n        contractAddress,\n        id,\n        token\n      });\n    }\n  }\n  explore(tokenId: string): boolean {\n    const now = new Date().getTime();\n    if (!this.exploredIds[tokenId]) {\n      this.exploredIds[tokenId] = {\n        firstCheck: now,\n        lastCheck: now,\n        counter: 0\n      };\n      this.saveMetadata();\n      return true;\n    } else {\n      const token = this.exploredIds[tokenId];\n      let t1 = 2 ** token.counter * 250;\n      t1 = t1 < 20000 ? 20000 : t1;\n      const t2 = now - token.lastCheck;\n      if (t1 > t2) {\n        return false;\n      }\n      this.exploredIds[tokenId].lastCheck = now;\n      this.exploredIds[tokenId].counter = ++token.counter;\n      this.saveMetadata();\n      return true;\n    }\n  }\n  private getCounter(tokenId: string) {\n    return this.exploredIds[tokenId].counter;\n  }\n  resetCounters() {\n    const ids = Object.keys(this.exploredIds);\n    if (ids) {\n      for (const id of ids) {\n        this.exploredIds[id].counter = 0;\n      }\n      this.saveMetadata(true);\n    }\n  }\n  async resetAllMetadata() {\n    this.exploredIds = {};\n    this.contracts = JSON.parse(JSON.stringify(CONSTANTS.ASSETS));\n    await this.saveMetadata(true);\n    this.queue = [];\n    await this.loadMetadata();\n    this.subjectService.metadataUpdated.next(null);\n  }\n  searchTimeMs(tokenId: string) {\n    if (this.exploredIds[tokenId]) {\n      const token = this.exploredIds[tokenId];\n      return token.lastCheck - token.firstCheck;\n    }\n    return 0;\n  }\n  getPlaceholderToken(tokenId: string): TokenResponseType {\n    const tokenIdArray = tokenId.split(':');\n    const contractAddress: string = tokenIdArray[0];\n    const id: string = tokenIdArray[1] ? String(tokenIdArray[1]) : '';\n    return {\n      contractAddress,\n      id,\n      decimals: 0,\n      displayAsset: '',\n      thumbnailAsset: '',\n      name: '[Unknown token]',\n      symbol: '',\n      description: '',\n      category: '',\n      kind: 'FA2',\n      status: 0,\n      isUnknownToken: true\n    };\n  }\n  async saveMetadata(force = false) {\n    if (force) {\n      await this._saveMetadata();\n      return;\n    }\n    if (!this.pendingSave) {\n      this.pendingSave = setTimeout(() => {\n        this.pendingSave = null;\n        this._saveMetadata();\n      }, 1000);\n    }\n  }\n  private async _saveMetadata() {\n    const data = {\n      contracts: this.contracts,\n      exploredIds: this.exploredIds,\n      version: this.version\n    };\n    try {\n      localStorage.setItem(this.storeKey, JSON.stringify(data));\n    } catch (e) {\n      localStorage.setItem(this.storeKey, 'KV_DB');\n      await saveToKvDb('tokenMetadata', data);\n    }\n  }\n  async loadMetadata() {\n    let metadataJson = localStorage.getItem(this.storeKey);\n    if (metadataJson) {\n      let metadata: any;\n      if (metadataJson === 'KV_DB') {\n        metadata = await getFromKvDb('tokenMetadata');\n      } else {\n        metadata = JSON.parse(metadataJson);\n      }\n      if (metadata?.version === this.version) {\n        if (metadata?.contracts) {\n          const contractAddresses = Object.keys(metadata.contracts);\n          for (const address of contractAddresses) {\n            for (const id of Object.keys(metadata.contracts[address].tokens)) {\n              if (metadata.contracts[address].tokens[id]?.status === 0) {\n                if (\n                  TRUSTED_TOKEN_CONTRACTS.includes(address) ||\n                  CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(`${address}:${id}`) ||\n                  this.dipdupService.tokens.get(`${address}:${id}`)\n                ) {\n                  metadata.contracts[address].tokens[id].status = 1; // flip status if it have been marked as trusted\n                }\n                if (BLACKLISTED_TOKEN_CONTRACTS.includes(address)) {\n                  metadata.contracts[address].tokens[id].status = -1;\n                }\n              }\n            }\n            this.addAsset(address, metadata.contracts[address]);\n          }\n        }\n        if (metadata?.exploredIds) {\n          this.exploredIds = metadata.exploredIds;\n        }\n      } else if (metadata?.version === '1.0.14') {\n        // Clear hen metadata for new teia alias\n        try {\n          delete metadata.contracts['KT1RJ6PbjHpwc3M5rw5s2Nbmefwbuwbdxton'];\n          metadata.version = '1.0.15';\n          await this.saveMetadata(true);\n          await this.loadMetadata();\n        } catch (e) {\n          console.error(e);\n        }\n      } else {\n        // clear all metadata\n      }\n    }\n  }\n  formatAmount(tokenKey: string, amount: string, baseUnit = true): string {\n    if (!tokenKey) {\n      return `${Big(amount)\n        .div(10 ** (baseUnit ? 6 : 0))\n        .toFixed()} tez`;\n    } else {\n      const token = this.getAsset(tokenKey);\n      if (token) {\n        if ((!token.shouldPreferSymbol && token.name) || !token.symbol) {\n          if (token.isBooleanAmount) {\n            if (parseInt(amount) > 1) {\n              return `${amount} ${token.name}`;\n            }\n            return `${token.name}`;\n          } else {\n            return `${Big(amount)\n              .div(10 ** (baseUnit ? token.decimals : 0))\n              .toFixed()} ${token.name}`;\n          }\n        } else {\n          return `${Big(amount)\n            .div(10 ** (baseUnit ? token.decimals : 0))\n            .toFixed()} ${token.symbol}`;\n        }\n      } else {\n        return '[Unknown token]';\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport DirectWebSdk from 'customauth';\nimport NodeDetailManager, { TORUS_NETWORK } from '@toruslabs/fetch-node-details';\nimport TorusUtils from '@toruslabs/torus.js';\nimport { OperationService } from '../../services/operation/operation.service';\nimport { InputValidationService } from '../../services/input-validation/input-validation.service';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { MessageService } from '../message/message.service';\n\nconst GOOGLE = 'google';\nconst REDDIT = 'reddit';\nconst TWITTER = 'twitter';\nconst FACEBOOK = 'facebook';\nconst EMAIL = 'email';\nconst AUTH_DOMAIN = 'https://dev-0li4gssz.eu.auth0.com';\nconst AUTH_DOMAIN_MAINNET = 'https://kukai.eu.auth0.com';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TorusService {\n  torus: any = undefined;\n  nodeDetails: { torusNodeEndpoints: string[]; torusNodePub: any[] } = null;\n  public readonly verifierMap: any;\n  private readonly proxy: any;\n  verifierMaps = {\n    testnet: {\n      [GOOGLE]: {\n        name: 'Google',\n        typeOfLogin: 'google',\n        clientId: '952872982551-od475jfe3ach7dghacin634rbkcqhpll.apps.googleusercontent.com',\n        verifier: 'kukai-google',\n        subVerifier: 'web-kukai',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [REDDIT]: {\n        name: 'Reddit',\n        typeOfLogin: 'jwt',\n        clientId: '7xLcBa3xd4VTmlGbClU3qXeBZGta3OvM',\n        verifier: 'tezos-reddit-testnet',\n        subVerifier: 'web-kukai',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [TWITTER]: {\n        name: 'Twitter',\n        typeOfLogin: 'twitter',\n        clientId: 'vKFgnaYZzKLUnhxnX5xqTqeMcumdVTz1',\n        verifier: 'tezos-twitter-test',\n        caseSensitiveVerifierID: false,\n        lookups: true\n      },\n      [FACEBOOK]: {\n        name: 'Facebook',\n        typeOfLogin: 'facebook',\n        clientId: '213778980232619',\n        verifier: 'tezos-facebook-testnet',\n        caseSensitiveVerifierID: false\n      },\n      [EMAIL]: {\n        name: 'Email',\n        typeOfLogin: 'jwt',\n        clientId: 'L98HOmUY0hxLGX9k8AHEZxb1dj9Y3uZw',\n        verifier: 'kukai-google',\n        subVerifier: 'web-kukai-email',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      }\n    },\n    mainnet: {\n      [GOOGLE]: {\n        name: 'Google',\n        typeOfLogin: 'google',\n        clientId: '952872982551-49mfvktoios59oj2kmiknlltfq9pvi6c.apps.googleusercontent.com',\n        verifier: 'tezos-google',\n        subVerifier: 'kukai-web',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [REDDIT]: {\n        name: 'Reddit',\n        typeOfLogin: 'jwt',\n        clientId: 'zyQ9tnKfdg3VNyj6MGhZq4dHbBzbmEvl',\n        verifier: 'tezos-reddit',\n        subVerifier: 'web-kukai',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [TWITTER]: {\n        name: 'Twitter',\n        typeOfLogin: 'twitter',\n        clientId: '3aCoxh3pw8g8JeFsdlJNUGwdgtLwdwgE',\n        verifier: 'tezos-twitter',\n        caseSensitiveVerifierID: false,\n        lookups: true\n      },\n      [FACEBOOK]: {\n        name: 'Facebook',\n        typeOfLogin: 'facebook',\n        clientId: '523634882377310',\n        verifier: 'tezos-facebook',\n        caseSensitiveVerifierID: false\n      },\n      [EMAIL]: {\n        name: 'Email',\n        typeOfLogin: 'jwt',\n        clientId: 'LTg6fVsacafGmhv14TZlrWF1EavwQoDZ',\n        verifier: 'tezos-google',\n        subVerifier: 'web-kukai-email',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      }\n    }\n  };\n  verifierMapKeys: any;\n  constructor(private operationService: OperationService, private inputValidationService: InputValidationService, private messageService: MessageService) {\n    if (CONSTANTS.MAINNET) {\n      this.verifierMap = this.verifierMaps.mainnet;\n      this.proxy = {\n        address: NodeDetailManager.PROXY_ADDRESS_MAINNET,\n        network: TORUS_NETWORK.MAINNET\n      };\n    } else {\n      this.verifierMap = this.verifierMaps.testnet;\n      this.proxy = {\n        address: NodeDetailManager.PROXY_ADDRESS_TESTNET,\n        network: TORUS_NETWORK.TESTNET\n      };\n    }\n    this.verifierMapKeys = Object.keys(this.verifierMap);\n  }\n  async initTorus() {\n    if (this.torus === undefined) {\n      this.torus = null;\n      try {\n        const torusdirectsdk = new DirectWebSdk({\n          baseUrl: `${location.origin}/serviceworker`,\n          redirectToOpener: true,\n          enableLogging: !(this.proxy.network === 'mainnet'),\n          proxyContractAddress: this.proxy.address,\n          network: this.proxy.network\n        });\n        await torusdirectsdk.init({ skipSw: false });\n        this.torus = torusdirectsdk;\n      } catch (error) {\n        this.torus = undefined;\n        console.error(error, 'oninit caught');\n      }\n    }\n  }\n  async lookupPkh(selectedVerifier: string, verifierId: string): Promise<any> {\n    const fetchNodeDetails = new NodeDetailManager({\n      network: this.proxy.network,\n      proxyAddress: this.proxy.address\n    });\n    const torus = new TorusUtils();\n    let sanitizedVerifierId = verifierId;\n    if (!this.verifierMap[selectedVerifier].caseSensitiveVerifierID && selectedVerifier !== 'twitter') {\n      sanitizedVerifierId = sanitizedVerifierId.toLocaleLowerCase();\n    }\n    let twitterId = '';\n    if (selectedVerifier === 'twitter') {\n      const username = sanitizedVerifierId.replace('@', '');\n      const { id } = await this.twitterLookup(username);\n      if (this.inputValidationService.twitterId(id)) {\n        sanitizedVerifierId = `twitter|${id}`;\n        twitterId = id;\n      } else {\n        throw new Error('Twitter handle not found');\n      }\n    }\n    const verifier = this.verifierMap[selectedVerifier].verifier;\n    if (!this.nodeDetails) {\n      const { torusNodeEndpoints, torusNodePub, torusIndexes } = await fetchNodeDetails.getNodeDetails({ verifier, verifierId: sanitizedVerifierId });\n      this.nodeDetails = { torusNodeEndpoints, torusNodePub }; // Cache node details\n    }\n    const pk: any = await torus.getPublicAddress(\n      this.nodeDetails.torusNodeEndpoints,\n      this.nodeDetails.torusNodePub,\n      { verifier, verifierId: sanitizedVerifierId },\n      true\n    );\n    const pkh = this.operationService.spPointsToPkh(pk.X, pk.Y);\n    return { pkh, twitterId };\n  }\n  async twitterLookup(username?: string, id?: string) {\n    let req = {};\n    if ((id && username) || (!id && !username)) {\n      console.log({ username, id });\n      throw new Error('Invalid input');\n    } else if (id) {\n      req = { id };\n    } else {\n      req = { username: username.replace('@', '') };\n    }\n    return await fetch(`https://backend.kukai.network/twitter-lookup`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify(req)\n    }).then((ans) => {\n      return ans.json();\n    });\n  }\n  async loginTorus(selectedVerifier: string, verifierId = '', skipTorusKey = 0, checkIfNewKey = false): Promise<any> {\n    if (!CONSTANTS.MAINNET && document?.location?.host === 'localhost:4200' && !['google', 'twitter', 'email'].includes(selectedVerifier)) {\n      return this.mockLogin(selectedVerifier); // mock locally\n    }\n    try {\n      const jwtParams: any = this._loginToConnectionMap()[selectedVerifier] || {};\n      if (verifierId && selectedVerifier === GOOGLE) {\n        jwtParams.login_hint = verifierId;\n        console.log('login_hint: ' + verifierId);\n      }\n      if (verifierId && selectedVerifier === EMAIL) {\n        jwtParams.login_hint = verifierId;\n      }\n      const { typeOfLogin, clientId, verifier, aggregated } = this.verifierMap[selectedVerifier];\n      const loginDetails = aggregated\n        ? await this.torus.triggerAggregateLogin({\n            login_hint: verifierId,\n            aggregateVerifierType: 'single_id_verifier',\n            verifierIdentifier: verifier,\n            subVerifierDetailsArray: [\n              {\n                clientId,\n                typeOfLogin: typeOfLogin,\n                verifier: this.verifierMap[selectedVerifier].subVerifier,\n                jwtParams\n              }\n            ],\n            skipTorusKey,\n            checkIfNewKey\n          })\n        : await this.torus.triggerLogin({\n            verifier,\n            typeOfLogin,\n            clientId,\n            jwtParams,\n            skipTorusKey,\n            checkIfNewKey\n          });\n      if (aggregated) {\n        loginDetails.userInfo = loginDetails.userInfo[0];\n      }\n      if (selectedVerifier === FACEBOOK) {\n        console.log('Invalidating access token...');\n        fetch(`https://graph.facebook.com/me/permissions?access_token=${loginDetails.userInfo.accessToken}`, { method: 'DELETE', mode: 'cors' });\n      }\n      const keyPair = skipTorusKey && !loginDetails?.privateKey ? { pk: '', pkh: '' } : this.operationService.spPrivKeyToKeyPair(loginDetails.privateKey);\n      console.log('DirectAuth KeyPair 2', keyPair);\n      if (loginDetails?.existingPk) {\n        loginDetails.userInfo.preexistingPkh = this.operationService.spPointsToPkh(loginDetails.existingPk.X, loginDetails.existingPk.Y);\n        loginDetails.userInfo.isNewKey = !loginDetails?.existingPk;\n      }\n      if (loginDetails?.userInfo?.typeOfLogin === 'jwt') {\n        loginDetails.userInfo.typeOfLogin = selectedVerifier;\n      }\n      console.log('DirectAuth UserInfo', loginDetails.userInfo);\n      return { keyPair, userInfo: loginDetails.userInfo };\n    } catch (e) {\n      console.error(e, 'login caught');\n      return { keyPair: null, userInfo: null };\n    }\n  }\n  async getTorusKeyPair(selectedVerifier: string, verifierId: string): Promise<any> {\n    const { keyPair } = await this.loginTorus(selectedVerifier, verifierId);\n    return keyPair;\n  }\n  _loginToConnectionMap = () => {\n    return {\n      [TWITTER]: {\n        domain: CONSTANTS.MAINNET ? AUTH_DOMAIN_MAINNET : AUTH_DOMAIN\n      },\n      [FACEBOOK]: {\n        scope: 'public_profile email'\n      },\n      [REDDIT]: {\n        domain: CONSTANTS.MAINNET ? AUTH_DOMAIN_MAINNET : AUTH_DOMAIN,\n        connection: 'Reddit',\n        verifierIdField: 'name',\n        isVerifierIdCaseSensitive: false\n      },\n      [EMAIL]: {\n        domain: CONSTANTS.MAINNET ? AUTH_DOMAIN_MAINNET : AUTH_DOMAIN,\n        connection: '',\n        verifierIdField: 'name',\n        isVerifierCaseSensitive: false\n      }\n    };\n  };\n  private async mockLogin(typeOfLogin: string): Promise<any> {\n    const keyPair = {\n      sk: 'spsk1VfCfhixtzGvUSKDre6jwyGbXFm6aoeLGnxeVLCouueZmkgtJF',\n      pk: 'sppk7cZsZeBApsFgYEdWuSwj92YCWkJxMmBfkN3FeKRmEB7Lk5pmDrT',\n      pkh: 'tz2WKg52VqnYXH52TZbSVjT4hcc8YGVKi7Pd'\n    };\n    const userInfo = {\n      typeOfLogin,\n      verifierId: typeOfLogin !== 'google' ? 'MockUser' : 'mock@user.com',\n      name: typeOfLogin !== 'twitter' ? 'Mock User' : '@MockUser'\n    };\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({ keyPair, userInfo });\n      }, 1000);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { WalletService } from '../wallet/wallet.service';\nimport { CONSTANTS } from '../../../environments/environment';\n\n@Injectable()\nexport class TzrateService {\n  public apiUrl = 'https://api.coingecko.com/api/v3/simple/price?ids=tezos&vs_currencies=usd';\n  constructor(private http: HttpClient, private walletService: WalletService) {}\n\n  getTzrate() {\n    if (CONSTANTS.MAINNET) {\n      this.http.get(this.apiUrl).subscribe(\n        (price: any) => {\n          this.walletService.wallet.XTZrate = price.tezos.usd;\n          this.updateFiatBalances();\n        },\n        (err) => console.log('Failed to get xtz price: ' + JSON.stringify(err))\n      );\n    } else {\n      this.walletService.wallet.XTZrate = 0;\n      this.updateFiatBalances();\n    }\n  }\n  updateFiatBalances() {\n    const accounts = this.walletService.wallet.getAccounts();\n    let tot = 0;\n    let change = false;\n    for (const account of accounts) {\n      if (account.balanceXTZ !== null) {\n        account.balanceUSD = Number((account.balanceXTZ / 1000000) * this.walletService.wallet.XTZrate);\n        tot += account.balanceUSD;\n        change = true;\n      }\n    }\n    if (change) {\n      this.walletService.wallet.totalBalanceUSD = Number(tot);\n      this.walletService.storeWallet();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IndexerService } from '../indexer/indexer.service';\nimport { filter } from 'rxjs/operators';\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnlockableService {\n  readonly settingsKey = 'settings';\n  unlockables: any;\n  queue = [];\n  workers = 0;\n  constructor(public indexerService: IndexerService, private router: Router) {\n    this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n      if (r.url.indexOf('/account') === -1) {\n        document.documentElement.className = '';\n      }\n    });\n  }\n\n  toggleFeature(type, feat): boolean {\n    this.unlockables = localStorage.getItem(this.settingsKey);\n    if (this.unlockables) {\n      try {\n        this.unlockables = JSON.parse(this.unlockables);\n        this.unlockables[type] = this.unlockables[type] === feat ? '' : feat;\n        localStorage.setItem(this.settingsKey, JSON.stringify(this.unlockables));\n        if (this.unlockables[type]) {\n          document.documentElement.classList.add(feat);\n        } else {\n          document.documentElement.classList.remove(feat);\n        }\n        return this.unlockables[type];\n      } catch (e) {\n        return false;\n      }\n    } else {\n      this.unlockables = {};\n      this.unlockables[type] = feat;\n      localStorage.setItem(this.settingsKey, JSON.stringify(this.unlockables));\n      document.documentElement.classList.add(feat);\n      return true;\n    }\n  }\n  restoreFeatures() {\n    this.unlockables = localStorage.getItem(this.settingsKey);\n    if (this.unlockables) {\n      try {\n        this.unlockables = JSON.parse(this.unlockables);\n        for (let feat of Object.keys(this.unlockables)) {\n          if (!!this.unlockables[feat]) {\n            document.documentElement.classList.add(this.unlockables[feat]);\n          }\n        }\n      } catch (e) {}\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n  constructor() {}\n  async sleep(ms: number) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  promiseWithTimeout<T>(promise: Promise<T>, timeout: number): Promise<T> {\n    return Promise.race([\n      promise,\n      new Promise<T>((_, reject) => {\n        setTimeout(() => {\n          reject(new Error(`Timeout after ${timeout}ms`));\n        }, timeout);\n      })\n    ]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { BroadcastChannel, createLeaderElection, LeaderElector } from 'broadcast-channel';\nexport enum MessageKind {\n  PropagateRequest = 'wc_propagate_request',\n  PropagateResponse = 'wc_propagate_response',\n  DeleteRequest = 'wc_delete_request',\n  PairingRequest = 'wc_pairing_request',\n  UpdateRequest = 'wc_session_update'\n}\nexport type Message =\n  | {\n      kind: MessageKind.PairingRequest;\n      payload: string;\n    }\n  | {\n      kind: MessageKind.DeleteRequest;\n      payload: string;\n    }\n  | {\n      kind: MessageKind.PropagateRequest;\n      payload: any;\n    }\n  | {\n      kind: MessageKind.PropagateResponse;\n      payload: any;\n    }\n  | {\n      kind: MessageKind.UpdateRequest;\n      payload: any;\n    };\n@Injectable({\n  providedIn: 'root'\n})\nexport class BcService {\n  private _initAsLeader;\n  private channel: BroadcastChannel<Message>;\n  private elector: LeaderElector;\n  private _elected: any;\n  public elected: Promise<void> = new Promise((resolve) => {\n    this._elected = resolve;\n  });\n  private _initDone: any;\n  private initDone: Promise<void> = new Promise((resolve) => {\n    this._initDone = resolve;\n  });\n  subject: any = {\n    wc_pairing_request: new Subject<any>(),\n    wc_delete_request: new Subject<any>(),\n    wc_propagate_request: new Subject<any>(),\n    wc_propagate_response: new Subject<any>(),\n    wc_session_update: new Subject<any>(),\n    test: new Subject<any>(),\n    all: new Subject<Message>()\n  };\n  constructor() {\n    this.channel = new BroadcastChannel('tab-sync');\n    this.channel.onmessage = (msg) => this.handleMessage(msg);\n    this.waitOnLeadership().then(() => this._elected());\n  }\n  private async waitOnLeadership(): Promise<void> {\n    this.elector = createLeaderElection(this.channel);\n    this.elector.onduplicate = () => {\n      console.warn('duplicate leaders!');\n    };\n    this.elector.hasLeader().then((hasLeader) => {\n      console.log(`%c# ${hasLeader ? 'WC2 leader already exist' : 'No WC2 leader found'} #`, 'color: darkblue');\n      this._initAsLeader = !hasLeader;\n      this._initDone();\n    });\n    await this.elector.awaitLeadership();\n    console.log('%c# This tab is now elected wc2 leader #', 'color: darkgreen');\n  }\n  public async initAsLeader(): Promise<boolean> {\n    !this.initDone || (await this.initDone);\n    if (this._initAsLeader !== undefined) {\n      return this._initAsLeader;\n    }\n    const hasLeader = await this.elector.hasLeader();\n    return (this._initAsLeader = !hasLeader);\n  }\n  private handleMessage(msg: Message) {\n    console.log('bc-message received', msg);\n    if (!this.subject[msg.kind]) {\n      throw new Error('Invalid MessageKind: ' + msg?.kind);\n    }\n    this.subject[msg?.kind].next(msg.payload);\n    this.subject.all.next(msg);\n  }\n  public broadcast(message: Message) {\n    console.log('bc-message broadcasted', message);\n    this.channel.postMessage(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport Client, { ENGINE_RPC_OPTS, SignClient } from '@walletconnect/sign-client';\nimport { SignClientTypes, PairingTypes, SessionTypes, ISession } from '@walletconnect/types';\n// https://github.com/WalletConnect/walletconnect-monorepo/blob/bc6f6632b7c665d868bcd59669281c1ead2dd31a/packages/utils/src/errors.ts#L10\nimport { ErrorResponse, formatJsonRpcResult, formatJsonRpcRequest, formatJsonRpcError, getErrorByCode, getError } from '@walletconnect/jsonrpc-utils';\nimport { getSdkError } from '@walletconnect/utils';\nimport { CONSTANTS, environment } from '../../../environments/environment';\nimport { SubjectService } from '../subject/subject.service';\nimport { OperationService } from '../operation/operation.service';\nimport { BcService, MessageKind } from '../bc/bc.service';\nimport { WalletService } from '../wallet/wallet.service';\nimport { Subscription } from 'rxjs';\nimport { UtilsService } from '../utils/utils.service';\nimport { isEqual } from 'lodash';\n\nconst SESSION_STORAGE_KEY = 'wc@2:client:0.3//session';\nconst PAIRING_STORAGE_KEY = 'wc@2:core:0.3//pairing';\nconst KEYCHAIN_STORAGE_KEY = 'wc@2:core:0.3//keychain';\ninterface Pairings {\n  expanded: boolean;\n  size: number;\n  dapp: Record<string, DPairings>;\n}\ninterface DPairings {\n  expanded: boolean;\n  p: DPairing[];\n}\ninterface DPairing {\n  name: string;\n  topic: string;\n  expiry: number;\n}\ninterface Sessions {\n  expanded: boolean;\n  size: number;\n  dapp: Record<string, DSessions>;\n}\ninterface DSessions {\n  expanded: boolean;\n  s: DSession[];\n}\ninterface DSession {\n  name: string;\n  address: string;\n  topic: string;\n  expiry: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class WalletConnectService {\n  readonly supportedMethods = ['tezos_send', 'tezos_sign', 'tezos_getAccounts'];\n  readonly supportedEvents = [];\n  private enableWc2: any;\n  client: Client;\n  initDoneAt: number;\n  private subscriptions: Subscription;\n  delayedPairing: any;\n  sessions: Sessions = { expanded: false, size: 0, dapp: {} };\n  pairings: Pairings = { expanded: false, size: 0, dapp: {} };\n  display: {\n    pairing: Record<string, { offset: number; expanded: boolean }>;\n    session: Record<string, { offset: number; expanded: boolean }>;\n    pairingsExpanded: boolean;\n    sessionsExpanded: boolean;\n  } = { pairing: {}, session: {}, pairingsExpanded: false, sessionsExpanded: false };\n  constructor(\n    private subjectService: SubjectService,\n    private operationService: OperationService,\n    private bcService: BcService,\n    private walletService: WalletService,\n    private utilsService: UtilsService\n  ) {\n    (async () => {\n      this.subjectService.login.subscribe(() => {\n        if (this.client) {\n          console.log('open transport');\n          this.client.core.relayer.transportOpen();\n        }\n      });\n      this.subjectService.logout.subscribe(() => {\n        if (this.client) {\n          console.log('close transport');\n          this.client.core.relayer.transportClose();\n        }\n      });\n      this.initBcSubscriptions();\n      this.refresh();\n      window.addEventListener('storage', this.storageEventHandler);\n      await this.bcService.elected;\n      if (!localStorage.getItem('wc2_activated')) {\n        await new Promise((resolve) => {\n          this.enableWc2 = resolve;\n        });\n      }\n      this.startClient();\n    })();\n  }\n  storageEventHandler = (ev) => {\n    if ([SESSION_STORAGE_KEY, PAIRING_STORAGE_KEY].includes(ev?.key)) {\n      this.refresh();\n    }\n  };\n  ngOnDestroy(): void {\n    this.subscriptions?.unsubscribe();\n    window.removeEventListener('storage', this.storageEventHandler);\n  }\n  private async initBcSubscriptions() {\n    this.subscriptions = new Subscription();\n    this.subscriptions.add(\n      this.bcService.subject[MessageKind.PairingRequest].subscribe(async (pairingString) => {\n        if (this.client || (await this.bcService.initAsLeader()) || this.enableWc2) {\n          this.pair(pairingString);\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.bcService.subject[MessageKind.DeleteRequest].subscribe((topic) => {\n        if (this.client) {\n          this.delete(topic);\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.bcService.subject[MessageKind.PropagateRequest].subscribe((request) => {\n        console.log('propagated request:', request.type, request);\n        this.subjectService.wc2.next(request);\n      })\n    );\n    this.subscriptions.add(\n      this.bcService.subject[MessageKind.UpdateRequest].subscribe((request) => {\n        if (this.client) {\n          this.updateSession(request.topic, request.newAddress);\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.bcService.subject[MessageKind.PropagateResponse].subscribe((response) => {\n        if (this.client) {\n          console.log('propagated response:', response);\n          if (response.pairingApproved !== undefined) {\n            if (response.pairingApproved) {\n              this.approvePairing(response.request, response.publicKey);\n            } else {\n              this.rejectPairing(response.request);\n            }\n          } else {\n            this.wcResponse(response.request, response.hash, response.success);\n          }\n        }\n      })\n    );\n  }\n  async startClient() {\n    console.log('Starting wc2 client...');\n    this.client = await this.createClient();\n    this.initDoneAt = new Date().getTime();\n    this.subscribeToEvents();\n    if (this.delayedPairing) {\n      await this.delayedPairing();\n    }\n    this.refresh();\n  }\n  async createClient() {\n    const opts: SignClientTypes.Options = {\n      projectId: '97f804b46f0db632c52af0556586a5f3',\n      relayUrl: 'wss://relay.walletconnect.com',\n      logger: 'warn', //'debug',\n      metadata: {\n        name: 'Kukai Wallet',\n        description: 'Manage your digital assets and seamlessly connect with experiences and apps on Tezos.',\n        url: `${location.origin}`,\n        icons: []\n      }\n    };\n    return Client.init(opts);\n  }\n  subscribeToEvents() {\n    this.client.on('session_proposal', (data) => this.proposalHandler(data));\n    this.client.on('session_request', async (data) => {\n      // If multiple pending messages after init, we drop all expect the most recent one\n      const diffMs = new Date().getTime() - this.initDoneAt;\n      if (diffMs < 1000) {\n        await this.utilsService.sleep(100);\n        const pending = this.client.getPendingSessionRequests();\n        if (pending?.length && pending[pending.length - 1].id !== data?.id) {\n          if (data?.params?.request?.method !== 'tezos_getAccounts') {\n            console.log('drop old wc2 message', data);\n            return;\n          }\n        }\n      }\n      this.requestHandler(data);\n    });\n    this.client.on('session_delete', (data) => {\n      console.log('delete', data);\n      this.refresh();\n    });\n    this.client.on('session_expire', (data) => {\n      console.log('expire', data);\n      this.refresh();\n    });\n    this.client.core.pairing.events.on('pairing_delete', (data) => {\n      console.log('delete', data);\n      this.refresh();\n    });\n    this.client.core.pairing.events.on('pairing_expire', (data) => {\n      console.log('expire', data);\n      this.refresh();\n    });\n    // this.client.core.heartbeat.events.on('heartbeat_pulse', (data) => {\n    //   console.log('heartbeat', data);\n    // })\n    const unhandledSignClientEvents: SignClientTypes.Event[] = [\n      'session_update',\n      'session_extend',\n      'session_ping',\n      //'session_delete',\n      //'session_expire',\n      //'pairing_delete',\n      //'session_request',\n      'session_event',\n      'proposal_expire'\n    ];\n    const unhandledPairingEvents: string[] = ['pairing_ping'];\n    for (const event of unhandledSignClientEvents) {\n      this.client.on(event, (data: any) => console.log(event, data));\n    }\n    for (const event of unhandledPairingEvents) {\n      this.client.core.pairing.events.on(event, (data: any) => console.log(event, data));\n    }\n    /*\n    session_extend: \"session_extend\",\n    pairing_ping: \"pairing_ping\",\n    session_expire: \"session_expire\",\n    pairing_delete: \"pairing_delete\",\n    pairing_expire: \"pairing_expire\",\n    proposal_expire: \"proposal_expire\",\n    */\n  }\n  async proposalHandler(data) {\n    const message: any = {\n      id: data.id,\n      version: 0,\n      type: 'permission_request',\n      appMetadata: {\n        name: data?.params?.proposer?.metadata?.name,\n        icon: data?.params?.proposer?.metadata?.icons[0]\n      },\n      wcData: data\n    };\n    if (data.params.requiredNamespaces.tezos.chains.includes(`tezos:${CONSTANTS.NETWORK}`)) {\n      message.network = { type: CONSTANTS.NETWORK };\n    } else {\n      console.log(data.params.requiredNamespaces.tezos.chains);\n      throw new Error('wrong network');\n    }\n    message.scopes = { methods: data.params.requiredNamespaces.tezos.methods, events: data.params.requiredNamespaces.tezos.events };\n    this.subjectService.wc2.next(message);\n    this.bcService.broadcast({ kind: MessageKind.PropagateRequest, payload: message });\n    console.log('proposal', data);\n  }\n  async approvePairing(request: any, publicKey: string) {\n    if (this.client) {\n      const data = request.wcData;\n      const namespaces: SessionTypes.Namespaces = {};\n      const address = this.operationService.pk2pkh(publicKey);\n      const accounts: string[] = [`tezos:${CONSTANTS.NETWORK}:${address}`];\n      const methods = data.params.requiredNamespaces?.tezos?.methods\n        ?.filter((method) => this.supportedMethods.includes(method))\n        .concat(data.params.optionalNamespaces?.tezos?.methods?.filter((method) => this.supportedMethods.includes(method)))\n        .filter((m) => m);\n      const events = data.params.requiredNamespaces?.tezos?.events\n        ?.filter((event) => this.supportedEvents.includes(event))\n        .concat(data.params.optionalNamespaces?.tezos?.events?.filter((event) => this.supportedEvents.includes(event)))\n        .filter((e) => e);\n      const sessionProperties = {\n        algo: address.startsWith('tz1') ? 'ed25519' : address.startsWith('tz2') ? 'secp256k1' : 'unknown',\n        address: address,\n        pubkey: publicKey\n      };\n      namespaces.tezos = {\n        accounts,\n        methods: [...new Set<string>(methods)], // deduplicate\n        events: [...new Set<string>(events)]\n      };\n      const { topic, acknowledged } = await this.client.approve({\n        id: data.id,\n        relayProtocol: data.params.relays[0].protocol,\n        namespaces,\n        sessionProperties\n      });\n      this.refresh();\n      await acknowledged();\n      //this.bcService.broadcast({ kind: MessageKind.PropagateResponse, payload: null })\n      this.refresh();\n    } else {\n      this.bcService.broadcast({ kind: MessageKind.PropagateResponse, payload: { request, publicKey, pairingApproved: true } });\n    }\n  }\n  async wcResponse(request: any, hash: string, success: boolean) {\n    if (hash === 'silent') {\n      return;\n    }\n    console.log('wcResponse', hash);\n    if (this.client) {\n      const data = request.wcData;\n      // hash, operation_hash, transaction_hash??\n      let msg = {};\n      if (request.type === 'operation_request') {\n        // this is not a transaction hash, but need this property name to get it working with Beacon\n        msg = { transactionHash: hash };\n      } else if (request.type === 'sign_payload_request') {\n        msg = { signature: hash };\n      } else {\n        throw new Error('Unknown request type');\n      }\n      const result = formatJsonRpcResult(data.id, msg);\n      const error = formatJsonRpcError(data.id, getSdkError('USER_REJECTED').message);\n      await this.client.respond({\n        topic: data.topic,\n        response: success ? result : error\n      });\n    } else {\n      // if not silent\n      this.bcService.broadcast({ kind: MessageKind.PropagateResponse, payload: { request, hash, success } });\n    }\n  }\n  async rejectPairing(request: any) {\n    const data = request.wcData;\n    if (this.client) {\n      await this.client.reject({\n        id: data.id,\n        reason: getSdkError('USER_REJECTED')\n      });\n    } else {\n      this.bcService.broadcast({ kind: MessageKind.PropagateResponse, payload: { request, pairingApproved: false } });\n    }\n  }\n  private async requestHandler(data: any) {\n    if (!this.walletService.wallet) {\n      const error = formatJsonRpcError(data.id, getSdkError('USER_REJECTED').message);\n      await this.client.respond({\n        topic: data.topic,\n        response: error\n      });\n    }\n    console.log('requestHandler', data);\n    const session = this.client.session.get(data.topic);\n    const allowedAccounts = session?.namespaces?.tezos?.accounts || [];\n    const allowedMethods = session.namespaces.tezos.methods || [];\n    const account = `${data.params.chainId}:${data.params.request.params.account}`;\n    const method = data.params.request.method;\n    if (!allowedMethods.includes(method)) {\n      throw new Error(`Method not allowed: ${method}`);\n    }\n    if (!allowedAccounts.includes(account) && !['tezos_getAccounts'].includes(method)) {\n      throw new Error(`Account not allowed: ${account}`);\n    }\n    switch (method) {\n      case 'tezos_send':\n        const send_req = {\n          type: 'operation_request',\n          version: 0,\n          sourceAddress: data.params.request.params.account,\n          operationDetails: data.params.request.params.operations,\n          network: { type: data.params.chainId.split(':')[1] },\n          wcData: data\n        };\n        this.subjectService.wc2.next(send_req);\n        this.bcService.broadcast({ kind: MessageKind.PropagateRequest, payload: send_req });\n        break;\n      case 'tezos_sign':\n        const sign_req = {\n          type: 'sign_payload_request',\n          version: 0,\n          sourceAddress: data.params.request.params.account,\n          signingType: 'raw',\n          payload: data.params.request.params.payload,\n          wcData: data\n        };\n        this.subjectService.wc2.next(sign_req);\n        this.bcService.broadcast({ kind: MessageKind.PropagateRequest, payload: sign_req });\n        break;\n      case 'tezos_getAccounts':\n        try {\n          const session = this.client.session.get(data.topic);\n          const accounts: { algo: string; address: string; pubkey: string }[] = session.namespaces.tezos.accounts.map((account) => {\n            const address: string = account.split(':')[2];\n            const impAcc = this.walletService.wallet.getImplicitAccount(address);\n            if (!impAcc) {\n              throw new Error('User is not logged in with the requested account');\n            }\n            const algo: string = address.startsWith('tz1') ? 'ed25519' : address.startsWith('tz2') ? 'secp256k1' : 'unknown';\n            const pubkey = impAcc.pk;\n            return { algo, address, pubkey };\n          });\n          await this.client.respond({\n            topic: data.topic,\n            response: formatJsonRpcResult(data.id, accounts)\n          });\n        } catch (e) {\n          console.error(e.message);\n          const error = formatJsonRpcError(data.id, getSdkError('USER_REJECTED').message);\n          await this.client.respond({\n            topic: data.topic,\n            response: error\n          });\n        }\n        break;\n      default:\n        console.warn('Unhandled request');\n    }\n    this.client.extend({ topic: data.topic });\n    this.refresh();\n  }\n  async pair(pairingString: string) {\n    if (!this.client) {\n      const initAsLeader = await this.bcService.initAsLeader();\n      if (!initAsLeader && !this.enableWc2) {\n        console.log('broadcast pairing string =>');\n        this.bcService.broadcast({ kind: MessageKind.PairingRequest, payload: pairingString });\n        return;\n      } else {\n        if (!localStorage.getItem('wc2_activated')) {\n          localStorage.setItem('wc2_activated', JSON.stringify(true));\n        }\n        if (this.enableWc2) {\n          this.enableWc2();\n        }\n      }\n      await new Promise((resolve, reject) => {\n        this.delayedPairing = resolve;\n      });\n    }\n    console.log('Start pairing...');\n    const paired = await this.client.pair({ uri: pairingString });\n    console.log('paired', paired);\n  }\n  refresh(n = 0) {\n    const lsS = localStorage.getItem(SESSION_STORAGE_KEY);\n    const lsP = localStorage.getItem(PAIRING_STORAGE_KEY);\n    const _session = this.client ? this.client?.session?.getAll() : lsS ? JSON.parse(lsS) : [];\n    const _pairing = this.client ? this.client?.core?.pairing?.getPairings() : lsP ? JSON.parse(lsP) : [];\n\n    const sessionsList: DSession[] = _session\n      .map((session) => {\n        let inKeychain = false; // We should not need this check. But seem to be a bit buggy otherwise\n        if (this.client) {\n          inKeychain = this.client.core.crypto.keychain.has(session?.topic);\n        } else {\n          const kc = localStorage.getItem(KEYCHAIN_STORAGE_KEY);\n          inKeychain = !kc ? false : !!JSON.parse(kc)[session?.topic];\n        }\n        if (session?.acknowledged && inKeychain) {\n          const accountAddress = session?.namespaces?.tezos?.accounts[0].split(':')[2];\n          return { name: session?.peer?.metadata?.name, address: accountAddress, topic: session.topic, expiry: session.expiry };\n        }\n      })\n      .filter((s) => s);\n    const _sessions: Sessions = { expanded: this.sessions.expanded, size: sessionsList.length, dapp: {} };\n    for (const dSession of sessionsList) {\n      if (_sessions.dapp[dSession['name']]) {\n        _sessions.dapp[dSession['name']].s.push(dSession);\n      } else {\n        const expanded = this.sessions.dapp[dSession['name']]?.expanded ?? false;\n        _sessions.dapp[dSession['name']] = { expanded, s: [dSession] };\n      }\n    }\n    const pairingsList: DPairing[] = _pairing\n      .map((pairing) => {\n        let inKeychain;\n        if (this.client) {\n          inKeychain = this.client.core.crypto.keychain.has(pairing?.topic);\n        } else {\n          const kc = localStorage.getItem(KEYCHAIN_STORAGE_KEY);\n          inKeychain = !kc ? false : !!JSON.parse(kc)[pairing?.topic];\n        }\n        if (pairing.active && inKeychain) {\n          return { name: pairing?.peerMetadata?.name, topic: pairing.topic, expiry: pairing.expiry };\n        }\n      })\n      .filter((p) => p);\n    const _pairings: Pairings = { expanded: this.pairings.expanded, size: pairingsList.length, dapp: {} };\n    for (const dPairing of pairingsList) {\n      if (_pairings.dapp[dPairing['name']]) {\n        _pairings.dapp[dPairing['name']].p.push(dPairing);\n      } else {\n        const expanded = this.pairings.dapp[dPairing['name']]?.expanded ?? false;\n        _pairings.dapp[dPairing['name']] = { expanded, p: [dPairing] };\n      }\n    }\n    if (!isEqual(this.pairings, _pairings)) {\n      this.pairings = _pairings;\n      console.log('pairings', _pairings);\n    }\n    if (!isEqual(this.sessions, _sessions)) {\n      this.sessions = _sessions;\n      console.log('sessions', _sessions);\n    }\n    if (++n < 5) {\n      setTimeout(() => {\n        this.refresh(n);\n      }, n ** 2 * 100);\n    }\n  }\n  public async updateSession(topic: string, newAddress: string) {\n    if (this.client) {\n      const session = this.client.session.get(topic);\n      let namespaces = session.namespaces;\n      let acc = namespaces.tezos.accounts[0].split(':');\n      acc[2] = newAddress;\n      namespaces.tezos.accounts[0] = acc.join(':');\n      const { acknowledged } = await this.client.update({ topic, namespaces });\n      this.refresh();\n      await acknowledged();\n      console.log('session update acknowledged');\n    } else {\n      this.bcService.broadcast({ kind: MessageKind.UpdateRequest, payload: { topic, newAddress } });\n    }\n  }\n  public async deleteSession(topic: string) {\n    await this.delete(topic);\n  }\n  public async deletePairing(topic: string) {\n    await this.delete(topic);\n  }\n  public async delete(topic: string) {\n    try {\n      if (this.client) {\n        await this.disconnect(topic);\n      } else {\n        this.bcService.broadcast({ kind: MessageKind.DeleteRequest, payload: topic });\n      }\n    } catch (e) {\n      console.error(e);\n      this.refresh();\n    }\n  }\n  public async deletePairings(pairings) {\n    for (const pairing of pairings) {\n      try {\n        await this.deletePairing(pairing.topic);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    this.refresh();\n  }\n  public async deleteSessions(sessions) {\n    for (const session of sessions) {\n      try {\n        await this.deleteSession(session.topic);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    this.refresh();\n  }\n  private async disconnect(topic: string) {\n    console.log('delete', topic);\n    try {\n      await this.client.disconnect({\n        topic,\n        reason: getSdkError('USER_DISCONNECTED')\n      });\n    } catch (e) {\n      console.error(e);\n      console.log(this.pairings, this.sessions);\n    }\n    this.refresh();\n  }\n  private async stopClient() {\n    //https://github.com/WalletConnect/walletconnect-monorepo/blob/v2.0/packages/sign-client/test/shared/helpers.ts#L4\n    this.client?.core?.heartbeat?.stop();\n    await this.removeListeners();\n  }\n  private async removeListeners(path = []) {\n    const isObject = (val) => val && typeof val === 'object' && !Array.isArray(val);\n    let obj: any = this.client;\n    path.forEach((prop) => {\n      obj = obj[prop];\n    });\n    if (isObject(obj)) {\n      if (obj?.events?.eventNames()?.length) {\n        for (const key of obj.events.eventNames()) {\n          await obj.events.removeAllListeners(key as any);\n        }\n      }\n      Object.keys(obj).forEach((key: string) => {\n        if (!path.includes(key)) {\n          this.removeListeners([...path, key]);\n        }\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { KeyPair, WalletType, Activity } from './../../interfaces';\nimport {\n  WalletObject,\n  HdWallet,\n  FullWallet,\n  LegacyWalletV1,\n  LegacyWalletV2,\n  LegacyWalletV3,\n  ImplicitAccount,\n  LedgerWallet,\n  TorusWallet,\n  EmbeddedTorusWallet,\n  OriginatedAccount,\n  WatchWallet\n} from './wallet';\nimport { EncryptionService } from '../encryption/encryption.service';\nimport { OperationService } from '../operation/operation.service';\nimport { TorusService } from '../torus/torus.service';\nimport { utils, hd } from '../../libraries/index';\nimport { BehaviorSubject } from 'rxjs';\nimport { SubjectService } from '../subject/subject.service';\nimport { BLACKLISTED_TOKEN_CONTRACTS } from '../../../environments/environment';\n\n@Injectable()\nexport class WalletService {\n  storeKey = 'kukai-wallet';\n  storageId = 0;\n  wallet: WalletObject;\n\n  constructor(\n    private encryptionService: EncryptionService,\n    private operationService: OperationService,\n    private torusService: TorusService,\n    private subjectService: SubjectService\n  ) {}\n  /*\n    Wallet creation\n  */\n  createNewWallet(): string {\n    return utils.generateMnemonic(24);\n  }\n  async createEncryptedWallet(mnemonic: string, password: string, passphrase: string = '', hdSeed: boolean): Promise<any> {\n    const seed = utils.mnemonicToSeed(mnemonic, passphrase, hdSeed);\n    const entropy: Buffer = Buffer.from(utils.mnemonicToEntropy(mnemonic));\n    let keyPair: KeyPair;\n    if (!hdSeed) {\n      keyPair = this.operationService.seed2keyPair(seed);\n    } else {\n      keyPair = hd.keyPairFromAccountIndex(seed, 0);\n    }\n    const encrypted = await this.encryptionService.encrypt(seed, password, 3);\n    const encryptedSeed: string = encrypted.chiphertext;\n    const iv: string = encrypted.iv;\n    /*\n      Warning: Make sure to never reuse IV for AES-GCM\n    */\n    const iv2: string = this.encryptionService.shiftIV(iv, 1);\n    const encryptedEntropy: string = (await this.encryptionService.encrypt(entropy, password, 3, iv2)).chiphertext;\n    return {\n      data: this.exportKeyStoreInit(hdSeed ? WalletType.HdWallet : WalletType.LegacyWallet, encryptedSeed, encryptedEntropy, iv),\n      pkh: keyPair.pkh,\n      pk: keyPair.pk,\n      seed: seed\n    };\n  }\n  async getKeys(pwd: string, pkh?: string): Promise<KeyPair> {\n    let seed;\n    if (this.wallet instanceof LegacyWalletV1) {\n      seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, pwd, this.wallet.salt, 1);\n    } else if (this.wallet instanceof LegacyWalletV2) {\n      seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, pwd, this.wallet.IV, 2);\n    } else if (this.wallet instanceof LegacyWalletV3 || this.wallet instanceof HdWallet) {\n      seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, pwd, this.wallet.IV, 3);\n    } else if (this.wallet instanceof LedgerWallet) {\n      const keyPair: KeyPair = {\n        sk: null,\n        pk: this.wallet.implicitAccounts[0].pk,\n        pkh: this.wallet.implicitAccounts[0].pkh\n      };\n      return keyPair;\n    } else if (this.wallet instanceof EmbeddedTorusWallet) {\n      if (this.wallet?.sk) {\n        return this.operationService.spPrivKeyToKeyPair(this.wallet.sk);\n      } else {\n        const keyPair = await this.torusService.getTorusKeyPair(this.wallet.verifier, this.wallet.id);\n        if (this.wallet.getImplicitAccount(keyPair.pkh)) {\n          return keyPair;\n        } else {\n          throw new Error('Signed with wrong account');\n        }\n      }\n    } else if (this.wallet instanceof TorusWallet) {\n      const sk = this.wallet.getSk();\n      if (sk) {\n        console.log('Retrieving social login sk from memory');\n        this.wallet.updateSkExpiration();\n        return this.operationService.spPrivKeyToKeyPair(sk);\n      } else {\n        console.log('Need to query social login sk from torus');\n        const keyPair = await this.torusService.getTorusKeyPair(this.wallet.verifier, this.wallet.id);\n        if (this.wallet.getImplicitAccount(keyPair.pkh)) {\n          this.wallet.storeSk(keyPair.sk);\n          return keyPair;\n        } else {\n          throw new Error('Signed with wrong account');\n        }\n      }\n    } else {\n      return null;\n    }\n    if (!seed) {\n      return null;\n    }\n    if (this.wallet instanceof HdWallet) {\n      if (!pkh) {\n        throw new Error('No pkh provided');\n      }\n      const account = this.wallet.getImplicitAccount(pkh);\n      if (!account.derivationPath) {\n        throw new Error('No derivationPath found');\n      }\n      return hd.seedToKeyPair(seed, account.derivationPath);\n    } else if (this.wallet instanceof LegacyWalletV1) {\n      const keyPair = this.operationService.seed2keyPair(seed);\n      if (!keyPair.pkh || !pkh || keyPair.pkh !== pkh) {\n        return null;\n      } else {\n        return keyPair;\n      }\n    } else {\n      return this.operationService.seed2keyPair(seed);\n    }\n  }\n  async revealMnemonicPhrase(pwd: string): Promise<string> {\n    if (this.wallet && (this.wallet instanceof HdWallet || this.wallet instanceof LegacyWalletV3)) {\n      const iv = this.encryptionService.shiftIV(this.wallet.IV, 1);\n      const entropy = await this.encryptionService.decrypt(this.wallet.encryptedEntropy, pwd, iv, 3);\n      if (entropy) {\n        return utils.entropyToMnemonic(entropy);\n      } else {\n        console.log('Invalid password');\n      }\n    }\n    return '';\n  }\n  addImplicitAccount(pk: string, derivationPath?: string | number) {\n    let pkh;\n    console.log(pk);\n    if (pk && pk.slice(0, 4) === 'sppk') {\n      pkh = this.operationService.pk2pkh(pk);\n    } else {\n      pkh = utils.pkToPkh(pk);\n    }\n    if (pkh) {\n      this.wallet.implicitAccounts.push(new ImplicitAccount(pkh, pk, typeof derivationPath === 'number' ? `44'/1729'/${derivationPath}'/0'` : derivationPath));\n      console.log('Adding new implicit account...');\n      console.log(this.wallet.implicitAccounts[this.wallet.implicitAccounts.length - 1]);\n      this.storeWallet();\n    }\n  }\n  addOriginatedAccount(kt: string, manager: string) {\n    const implicitAccount = this.wallet.getImplicitAccount(manager);\n    if (implicitAccount) {\n      const origAcc = new OriginatedAccount(kt, implicitAccount.pkh, implicitAccount.pk);\n      implicitAccount.originatedAccounts.push(origAcc);\n      this.storeWallet();\n    } else {\n      console.warn(`Manager address $(manager) not found`);\n    }\n  }\n  /*addUnusedAccount(account: any) {\n    if (this.wallet instanceof HdWallet) {\n      this.wallet.unusedAccounts.push(account);\n    }\n  }*/\n  addressExists(address: string): boolean {\n    return this.wallet?.getAccounts().findIndex((a) => a.address === address) !== -1;\n  }\n  async incrementAccountIndex(password: string): Promise<string> {\n    if (this.wallet instanceof HdWallet) {\n      const seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, password, this.wallet.IV, 3);\n      if (seed) {\n        const keyPair: KeyPair = hd.seedToKeyPair(seed, `44'/1729'/${this.wallet.index}'/0'`);\n        this.addImplicitAccount(keyPair.pk, this.wallet.index);\n        this.wallet.index++;\n        this.storeWallet();\n        return keyPair.pkh;\n      } else {\n        return ''; // Wrong pwd\n      }\n    }\n  }\n  /*\n    Clear wallet data from browser\n  */\n  clearWallet(instanceId: string = '') {\n    if (this.wallet instanceof TorusWallet) {\n      this.wallet.removeSk();\n    }\n    this.wallet = null;\n    this.storageId = 0;\n    if (instanceId) {\n      sessionStorage.removeItem(instanceId);\n    } else {\n      localStorage.removeItem(this.storeKey);\n    }\n  }\n  /*\n  Used to decide wallet type\n  */\n  isFullWallet(): boolean {\n    return this.wallet instanceof FullWallet;\n  }\n  isViewOnlyWallet(): boolean {\n    return false;\n  }\n  isObserverWallet(): boolean {\n    return false;\n  }\n  isLedgerWallet(): boolean {\n    return this.wallet instanceof LedgerWallet;\n  }\n  isHdWallet(): boolean {\n    return this.wallet instanceof HdWallet;\n  }\n  isTorusWallet(): boolean {\n    return this.wallet instanceof TorusWallet;\n  }\n  isEmbeddedTorusWallet(): boolean {\n    return this.wallet instanceof EmbeddedTorusWallet;\n  }\n  isWatchWallet(): boolean {\n    return this.wallet instanceof WatchWallet;\n  }\n  isPwdWallet(): boolean {\n    return !this.isTorusWallet() && !this.isLedgerWallet() && !this.isWatchWallet();\n  }\n  exportKeyStoreInit(walletType: WalletType, encryptedSeed: string, encryptedEntropy: string, iv: string) {\n    const data: any = {\n      provider: 'Kukai',\n      version: 3.0,\n      walletType,\n      encryptedSeed,\n      encryptedEntropy,\n      iv\n    };\n    return data;\n  }\n  /*\n    Read and write to localStorage\n  */\n  initStorage(instanceId: string = '') {\n    this.storageId = Date.now();\n    if (instanceId) {\n      sessionStorage.setItem(instanceId, JSON.stringify({ localStorageId: this.storageId }));\n    } else {\n      localStorage.setItem(this.storeKey, JSON.stringify({ localStorageId: this.storageId }));\n    }\n  }\n  storeWallet() {\n    const localStorageId = this.getLocalStorageId();\n    if (this.storageId && localStorageId && this.storageId === localStorageId) {\n      let type = 'unknown';\n      if (this.wallet instanceof HdWallet) {\n        type = 'HdWallet';\n      } else if (this.wallet instanceof LegacyWalletV1) {\n        type = 'LegacyWalletV1';\n      } else if (this.wallet instanceof LegacyWalletV2) {\n        type = 'LegacyWalletV2';\n      } else if (this.wallet instanceof LegacyWalletV3) {\n        type = 'LegacyWalletV3';\n      } else if (this.wallet instanceof LedgerWallet) {\n        type = 'LedgerWallet';\n      } else if (this.wallet instanceof EmbeddedTorusWallet) {\n        type = 'EmbeddedTorusWallet';\n      } else if (this.wallet instanceof TorusWallet) {\n        type = 'TorusWallet';\n      } else if (this.wallet instanceof WatchWallet) {\n        type = 'WatchWallet';\n      }\n      this.getStorage().setItem(\n        this.wallet instanceof EmbeddedTorusWallet ? this.wallet.instanceId : this.storeKey,\n        JSON.stringify({\n          type,\n          localStorageId: this.storageId,\n          data: this.wallet\n        })\n      );\n    } else {\n      console.log('Outdated storage id');\n    }\n    this.subjectService.walletUpdated.next(null);\n  }\n  getLocalStorageId() {\n    const walletData = this.wallet instanceof EmbeddedTorusWallet ? sessionStorage.getItem(this.wallet.instanceId) : localStorage.getItem(this.storeKey);\n    if (walletData) {\n      const parsed = JSON.parse(walletData);\n      if (parsed && parsed.localStorageId) {\n        return parsed.localStorageId;\n      }\n    }\n    return 0;\n  }\n\n  loadStoredWallet(instanceId = '') {\n    const walletData = instanceId ? sessionStorage.getItem(instanceId) : localStorage.getItem(this.storeKey);\n    if (walletData && walletData !== 'undefined') {\n      const parsedWalletData = JSON.parse(walletData);\n      console.debug(parsedWalletData);\n      if (parsedWalletData.type && parsedWalletData.data && parsedWalletData.localStorageId) {\n        this.storageId = parsedWalletData.localStorageId;\n        const wd = parsedWalletData.data;\n        this.deserializeStoredWallet(wd, parsedWalletData.type);\n      } else {\n        console.log('couldnt load a wallet');\n        this.clearWallet(instanceId);\n      }\n    } else {\n      console.log('couldnt load a wallet');\n      this.clearWallet(instanceId);\n    }\n  }\n  deserializeStoredWallet(wd: any, type: string) {\n    switch (type) {\n      case 'HdWallet':\n        this.wallet = new HdWallet(wd.IV, wd.encryptedSeed, wd.encryptedEntropy);\n        if (this.wallet instanceof HdWallet) {\n          this.wallet.index = wd.index;\n        }\n        break;\n      case 'LegacyWalletV1':\n        this.wallet = new LegacyWalletV1(wd.salt, wd.encryptedSeed);\n        break;\n      case 'LegacyWalletV2':\n        this.wallet = new LegacyWalletV2(wd.IV, wd.encryptedSeed);\n        break;\n      case 'LegacyWalletV3':\n        this.wallet = new LegacyWalletV3(wd.IV, wd.encryptedSeed, wd.encryptedEntropy);\n        break;\n      case 'LedgerWallet':\n        this.wallet = new LedgerWallet();\n        break;\n      case 'TorusWallet':\n        this.wallet = new TorusWallet(wd.verifier, wd.id, wd.name);\n        this.torusService.initTorus();\n        break;\n      case 'EmbeddedTorusWallet':\n        this.wallet = new EmbeddedTorusWallet(wd.verifier, wd.id, wd.name, wd.origin, wd.sk, wd.instanceId);\n        this.torusService.initTorus();\n        break;\n      case 'WatchWallet':\n        this.wallet = new WatchWallet();\n      default:\n    }\n    this.wallet.XTZrate = wd.XTZrate;\n    this.wallet.totalBalanceUSD = wd.totalBalanceUSD;\n    this.wallet.totalBalanceXTZ = wd.totalBalanceXTZ;\n    if (wd.lookups) {\n      this.wallet.lookups = wd.lookups;\n    }\n    for (const implicit of wd.implicitAccounts) {\n      const impAcc: ImplicitAccount = new ImplicitAccount(implicit.pkh, implicit.pk, implicit.derivationPath ? implicit.derivationPath : null);\n      impAcc.balanceUSD = implicit.balanceUSD;\n      impAcc.balanceXTZ = implicit.balanceXTZ;\n      impAcc.delegate = implicit.delegate;\n      impAcc.state = implicit.state;\n      impAcc.activities = implicit.activities.filter((activity) => {\n        if (activity.tokenId && BLACKLISTED_TOKEN_CONTRACTS.includes(activity.tokenId.split(':')[0])) {\n          return false;\n        }\n        return true;\n      });\n      if (implicit.tokens) {\n        impAcc.tokens = implicit.tokens;\n      }\n      for (const originated of implicit.originatedAccounts) {\n        const origAcc = new OriginatedAccount(originated.address, impAcc.pkh, impAcc.pk);\n        origAcc.balanceUSD = originated.balanceUSD;\n        origAcc.balanceXTZ = originated.balanceXTZ;\n        origAcc.delegate = originated.delegate;\n        origAcc.state = originated.state;\n        origAcc.activities = originated.activities.filter((activity) => {\n          if (activity.tokenId && BLACKLISTED_TOKEN_CONTRACTS.includes(activity.tokenId.split(':')[0])) {\n            return false;\n          }\n          return true;\n        });\n        impAcc.originatedAccounts.push(origAcc);\n      }\n      this.wallet.implicitAccounts.push(impAcc);\n    }\n  }\n  private getStorage() {\n    return this.isEmbeddedTorusWallet() ? sessionStorage : localStorage;\n  }\n}\n","export type WalletObject = LegacyWalletV1 | LegacyWalletV2 | LegacyWalletV3 | LedgerWallet | HdWallet | TorusWallet | WatchWallet;\n\nexport class Wallet {\n  totalBalanceXTZ: number | null;\n  totalBalanceUSD: number | null;\n  XTZrate: number | null;\n  implicitAccounts: ImplicitAccount[];\n  lookups: any[];\n  constructor() {\n    this.totalBalanceXTZ = null;\n    this.totalBalanceUSD = null;\n    this.XTZrate = null;\n    this.implicitAccounts = [];\n    this.lookups = [];\n  }\n  getAccounts(): Account[] {\n    const accounts: Account[] = [];\n    if (this.implicitAccounts.length) {\n      for (const implicitAccount of this.implicitAccounts) {\n        accounts.push(implicitAccount);\n        if (implicitAccount.originatedAccounts.length) {\n          for (const originatedAccount of implicitAccount.originatedAccounts) {\n            accounts.push(originatedAccount);\n          }\n        }\n      }\n    }\n    return accounts;\n  }\n  getImplicitAccounts(): ImplicitAccount[] {\n    return this.implicitAccounts;\n  }\n  getAccount(address: string): Account {\n    if (this.implicitAccounts.length) {\n      for (const implicitAccount of this.implicitAccounts) {\n        if (implicitAccount.address === address) {\n          return implicitAccount;\n        }\n        if (implicitAccount.originatedAccounts.length) {\n          for (const originatedAccount of implicitAccount.originatedAccounts) {\n            if (originatedAccount.address === address) {\n              return originatedAccount;\n            }\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getImplicitAccount(pkh: string): ImplicitAccount {\n    if (this.implicitAccounts.length) {\n      for (const implicitAccount of this.implicitAccounts) {\n        if (implicitAccount.pkh === pkh) {\n          return implicitAccount;\n        }\n      }\n    }\n    return null;\n  }\n}\n\nexport class FullWallet extends Wallet {\n  encryptedSeed: string;\n  constructor(encryptedSeed: string) {\n    super();\n    this.encryptedSeed = encryptedSeed;\n  }\n}\n\nexport class LegacyWalletV1 extends FullWallet {\n  salt: string;\n  constructor(salt: string, encrypedSeed: string) {\n    super(encrypedSeed);\n    this.salt = salt;\n  }\n}\n\nexport class LegacyWalletV2 extends FullWallet {\n  IV: string;\n  constructor(IV: string, encryptedSeed: string) {\n    super(encryptedSeed);\n    this.IV = IV;\n  }\n}\n\nexport class LegacyWalletV3 extends FullWallet {\n  encryptedEntropy: string;\n  IV: string;\n  constructor(IV: string, encryptedSeed: string, encryptedEntropy: string) {\n    super(encryptedSeed);\n    this.IV = IV;\n    this.encryptedEntropy = encryptedEntropy;\n  }\n}\n\nexport class HdWallet extends FullWallet {\n  encryptedEntropy: string;\n  IV: string;\n  index: number;\n  constructor(IV: string, encryptedSeed: string, encryptedEntropy: string) {\n    super(encryptedSeed);\n    this.encryptedEntropy = encryptedEntropy;\n    this.IV = IV;\n    this.index = 0;\n  }\n}\n\nconst TORUS_WALLET_STORE_KEY = 'torus-sk-cache';\nconst ONE_HOUR = 3600000;\n\nexport class TorusWallet extends Wallet {\n  verifier: string;\n  id: string;\n  name: string;\n\n  constructor(verifier: string, id: string, name: string) {\n    super();\n    this.verifier = verifier;\n    this.id = id;\n    this.name = name;\n  }\n\n  displayName(): string {\n    if (['twitter', 'facebook'].includes(this.verifier)) {\n      return this.name;\n    }\n    return this.id;\n  }\n\n  removeSk(): void {\n    sessionStorage.removeItem(TORUS_WALLET_STORE_KEY);\n  }\n\n  private getStoredData(): null | { sk: string; expiration: number } {\n    const skData = sessionStorage.getItem(TORUS_WALLET_STORE_KEY);\n    if (skData) {\n      const parsed = JSON.parse(skData);\n      if (typeof parsed.sk === 'string' && typeof parsed.expiration === 'number') {\n        return parsed;\n      }\n    }\n\n    return null;\n  }\n\n  checkSkExpiration(): void {\n    const storedData = this.getStoredData();\n    if (storedData) {\n      const now = new Date().getTime();\n      if (storedData.expiration <= now) {\n        this.removeSk();\n      }\n    }\n  }\n\n  updateSkExpiration(): void {\n    const storedData = this.getStoredData();\n    if (storedData) {\n      const expiration = new Date().getTime() + ONE_HOUR;\n      sessionStorage.setItem(TORUS_WALLET_STORE_KEY, JSON.stringify({ ...storedData, expiration }));\n    }\n  }\n\n  storeSk(sk: string): void {\n    const expiration = new Date().getTime() + ONE_HOUR;\n    sessionStorage.setItem(TORUS_WALLET_STORE_KEY, JSON.stringify({ sk, expiration }));\n  }\n\n  getSk(): null | string {\n    const storedData = this.getStoredData();\n    if (storedData) {\n      return storedData.sk;\n    }\n\n    return null;\n  }\n}\n\nexport class EmbeddedTorusWallet extends TorusWallet {\n  origin: string;\n  sk: string;\n  instanceId: string;\n  constructor(verifier: string, id: string, name: string, origin: string, sk: string, instanceId: string) {\n    super(verifier, id, name);\n    this.origin = origin;\n    this.sk = sk;\n    this.instanceId = instanceId;\n  }\n}\nexport class LedgerWallet extends Wallet {\n  constructor() {\n    super();\n  }\n}\n\nexport class WatchWallet extends Wallet {\n  constructor() {\n    super();\n  }\n}\n\n// Accounts\n\nexport abstract class Account {\n  balanceXTZ: number | null;\n  balanceUSD: number | null;\n  delegate: string;\n  state: string;\n  activities: Activity[] | null;\n  tokens: Token[] | null;\n  pkh: string;\n  pk: string;\n  address: string;\n  constructor(pkh: string, pk: string, address: string) {\n    this.balanceXTZ = null;\n    this.balanceUSD = null;\n    this.activities = null;\n    this.tokens = null;\n    this.delegate = '';\n    this.state = '';\n    this.pkh = pkh;\n    this.pk = pk;\n    this.address = address;\n  }\n  public abstract isImplicit(): boolean;\n  shortAddress(): string {\n    return this.address.slice(0, 7) + '...' + this.address.slice(-4);\n  }\n  getTokenBalance(tokenId: string): string {\n    if (this.tokens?.length) {\n      for (const token of this.tokens) {\n        if (tokenId === token.tokenId) {\n          return token.balance;\n        }\n      }\n    }\n    return '';\n  }\n  getTokenBalances(): Token[] {\n    return this.tokens ?? [];\n  }\n  updateTokenBalance(tokenId: string, balance: string) {\n    if (!this.tokens || !tokenId) {\n      this.tokens = [];\n    }\n    if (tokenId && this.tokens.length) {\n      for (let i = 0; i < this.tokens.length; i++) {\n        if (tokenId === this.tokens[i].tokenId) {\n          if (this.tokens[i].balance !== balance) {\n            if (balance === '0' || (balance && balance.slice(0, 1) === '-')) {\n              this.tokens.splice(i, 1);\n            } else {\n              this.tokens[i].balance = balance;\n            }\n          }\n          return;\n        }\n      }\n    }\n    if (tokenId.length > 37 && balance && balance !== '0' && balance.slice(0, 1) !== '-') {\n      this.tokens.unshift({ tokenId, balance });\n    }\n  }\n}\n\nexport class ImplicitAccount extends Account {\n  originatedAccounts: OriginatedAccount[];\n  derivationPath?: string;\n  constructor(pkh: string, pk: string, derivationPath?: string) {\n    super(pkh, pk, pkh);\n    this.originatedAccounts = [];\n    if (derivationPath) {\n      this.derivationPath = derivationPath;\n    }\n  }\n  isImplicit(): boolean {\n    return true;\n  }\n}\n\nexport class OriginatedAccount extends Account {\n  constructor(ktAddress: string, managerPkh: string, managerPk: string) {\n    super(managerPkh, managerPk, ktAddress);\n  }\n  isImplicit(): boolean {\n    return false;\n  }\n}\n\nexport enum OpStatus {\n  FAILED = -1,\n  UNCONFIRMED = 0,\n  HALF_CONFIRMED = 0.5, // confirmed but not indexed fully yet\n  CONFIRMED = 1\n}\nexport class Activity {\n  type: string;\n  block: string;\n  status: OpStatus;\n  amount: string;\n  source: {\n    address: string;\n    alias?: string;\n  };\n  destination: {\n    address: string;\n    alias?: string;\n  };\n  fee?: string;\n  hash: string;\n  counter?: number;\n  timestamp: number | null;\n  tokenId?: string;\n  entrypoint?: string;\n  opId?: string;\n}\nexport class Token {\n  tokenId: string;\n  balance: string;\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\nimport { Constants, DisplayLinkOption } from '../app/interfaces';\n\nexport const environment = {\n  production: false\n};\nconst _CONSTANTS: Constants = {\n  NETWORK: 'ghostnet',\n  NAME: 'Testnet / Ghostnet',\n  TEZOS_DOMAIN: {\n    CONTRACT: 'KT1WffvKqRGaPtVWYR1ZkG2GQY42B7a8x3kk',\n    TOP_DOMAINS: ['gho']\n  },\n  MAINNET: false,\n  NODE_URL: 'https://ghostnet.ecadinfra.com',\n  API_URL: 'https://api.ghostnet.tzkt.io/v1',\n  BLOCK_EXPLORER_URL: 'https://ghostnet.tzkt.io',\n  HARD_LIMITS: {\n    hard_gas_limit_per_operation: 1040000,\n    hard_gas_limit_per_block: 2600000,\n    hard_storage_limit_per_operation: 60000\n  },\n  CONTRACT_ALIASES: {\n    admire: {\n      name: 'admire.art',\n      address: ['KT1AWnk45HxqcAgTdtgwCUae8FosYkttLxA4', 'KT1KTENwCZDnGqRhjQeUsECxozRvQeGtRCti'],\n      thumbnailUrl: '../../../assets/img/alias/admire.png',\n      shouldDisplayLink: DisplayLinkOption.None\n    }\n  },\n  ASSETS: {},\n  NFT_CONTRACT_OVERRIDES: [],\n  CONTRACT_OVERRIDES: {},\n  FEATURE_CONTRACTS: {}\n};\nconst _TRUSTED_TOKEN_CONTRACTS = [];\nconst _BLACKLISTED_TOKEN_CONTRACTS = [];\nconst _MODEL_3D_WHITELIST = [];\n\nexport const CONSTANTS = JSON.parse(JSON.stringify(_CONSTANTS));\nexport const TRUSTED_TOKEN_CONTRACTS = JSON.parse(JSON.stringify(_TRUSTED_TOKEN_CONTRACTS));\nexport const BLACKLISTED_TOKEN_CONTRACTS = JSON.parse(JSON.stringify(_BLACKLISTED_TOKEN_CONTRACTS));\nexport const MODEL_3D_WHITELIST = JSON.parse(JSON.stringify(_MODEL_3D_WHITELIST));\n","import { Constants } from './../app/interfaces';\nimport {\n  CONSTANTS as _CONSTANTS,\n  TRUSTED_TOKEN_CONTRACTS as _TTC,\n  BLACKLISTED_TOKEN_CONTRACTS as _BLTC,\n  MODEL_3D_WHITELIST as _M3DW\n} from './environment.ghostnet';\n\nexport const environment = {\n  production: false\n};\nexport const CONSTANTS: Constants = _CONSTANTS;\nexport const TRUSTED_TOKEN_CONTRACTS = _TTC;\nexport const BLACKLISTED_TOKEN_CONTRACTS = _BLTC;\nexport const MODEL_3D_WHITELIST = _M3DW;\n","import { Injectable } from '@angular/core';\nimport { KeyPair, WalletType } from './../../interfaces';\nimport { WalletService } from '../wallet/wallet.service';\nimport { CoordinatorService } from '../coordinator/coordinator.service';\nimport { LegacyWalletV1, LegacyWalletV2, LegacyWalletV3, HdWallet, LedgerWallet, TorusWallet, EmbeddedTorusWallet, WatchWallet } from '../wallet/wallet';\nimport { hd, utils } from '../../libraries/index';\nimport { EncryptionService } from '../encryption/encryption.service';\nimport { TorusService } from '../torus/torus.service';\nimport { IndexerService } from '../indexer/indexer.service';\nimport { OperationService } from '../operation/operation.service';\nimport { SubjectService } from '../subject/subject.service';\n\n@Injectable()\nexport class ImportService {\n  constructor(\n    private walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private indexerService: IndexerService,\n    private encryptionService: EncryptionService,\n    private torusService: TorusService,\n    private operationService: OperationService,\n    private subjectService: SubjectService\n  ) {}\n  pwdRequired(json: string) {\n    const walletData = JSON.parse(json);\n    if (walletData.provider !== 'Kukai') {\n      throw new Error(`Unsupported wallet format`);\n    }\n    if (walletData.walletType === WalletType.LegacyWallet || walletData.walletType === WalletType.HdWallet) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  async importWalletFromJson(json: any, pwd: string): Promise<boolean> {\n    // From file\n    let seed;\n    let walletData;\n    try {\n      walletData = JSON.parse(json);\n      if (walletData.walletType === WalletType.HdWallet && walletData.version === 3) {\n        //hd\n        seed = await this.encryptionService.decrypt(walletData.encryptedSeed, pwd, walletData.iv, 3);\n      } else if (walletData.walletType === WalletType.LegacyWallet) {\n        if (walletData.version === 1) {\n          console.log('v1');\n          seed = await this.encryptionService.decrypt(walletData.encryptedSeed, pwd, walletData.pkh.slice(3, 19), 1);\n          if (utils.seedToKeyPair(seed).pkh !== walletData.pkh) {\n            seed = '';\n          }\n        } else if (walletData.version === 2 || walletData.version === 3) {\n          seed = await this.encryptionService.decrypt(walletData.encryptedSeed, pwd, walletData.iv, walletData.version);\n        }\n      }\n    } catch (e) {\n      console.error(e);\n      throw new Error('Failed to decrypt keystore file');\n    }\n    if (seed) {\n      return this.importWalletFromObject(walletData, seed).then(\n        (ans) => {\n          return ans;\n        },\n        (e) => {\n          console.error(e);\n          throw new Error('Failed to fetch account(s). Please check your connection.');\n        }\n      );\n    } else {\n      throw new Error('Wrong password');\n    }\n  }\n  async importWalletFromObject(data: any, seed: any): Promise<boolean> {\n    try {\n      this.coordinatorService.stopAll();\n      if (data.walletType === WalletType.HdWallet && data.version === 3) {\n        // HD\n        this.walletService.wallet = new HdWallet(data.iv, data.encryptedSeed, data.encryptedEntropy);\n      } else if (data.walletType === WalletType.LegacyWallet) {\n        if (data.version === 3) {\n          this.walletService.wallet = new LegacyWalletV3(data.iv, data.encryptedSeed, data.encryptedEntropy);\n        } else if (data.version === 2) {\n          this.walletService.wallet = new LegacyWalletV2(data.iv, data.encryptedSeed);\n        } else if (data.version === 1) {\n          this.walletService.wallet = new LegacyWalletV1(data.pkh.slice(3, 19), data.encryptedSeed);\n        } else {\n          throw new Error('Unsupported wallet file');\n        }\n      } else {\n        throw new Error('Unsupported wallet file');\n      }\n      let keys: KeyPair;\n      if (seed.length === 32) {\n        keys = utils.seedToKeyPair(seed);\n      } else if (seed.length === 64) {\n        keys = hd.keyPairFromAccountIndex(seed, 0);\n      } else {\n        throw new Error('Invalid seed length');\n      }\n      this.walletService.initStorage();\n      if (this.walletService.wallet instanceof HdWallet) {\n        let index = 0;\n        let isUsedAccount: boolean = true;\n        while (isUsedAccount) {\n          keys = hd.keyPairFromAccountIndex(seed, index);\n          isUsedAccount = await this.indexerService.isUsedAccount(keys.pkh);\n          if (isUsedAccount || index === 0) {\n            this.walletService.addImplicitAccount(keys.pk, index++);\n            await this.findContracts(keys.pkh);\n          }\n        }\n        this.walletService.wallet.index = index;\n      } else {\n        this.walletService.addImplicitAccount(keys.pk);\n        await this.findContracts(keys.pkh);\n      }\n    } catch (e) {\n      this.walletService.clearWallet();\n      throw e;\n    }\n    this.subjectService.login.next(true);\n    return true;\n  }\n\n  async importWalletFromPk(pk: string, derivationPath: string, verifierDetails: any = null, sk: string = '', instanceId: string = ''): Promise<boolean> {\n    this.coordinatorService.stopAll();\n    if (derivationPath) {\n      return this.ledgerImport(pk, derivationPath);\n    } else if (verifierDetails) {\n      return this.torusImport(pk, verifierDetails, sk, instanceId);\n    }\n  }\n  async watch(pkh: string) {\n    if (this.operationService.validAddress(pkh)) {\n      const pk = await this.operationService.getManager(pkh).toPromise();\n      if (pk) {\n        this.walletService.initStorage();\n        this.walletService.wallet = new WatchWallet();\n        this.walletService.addImplicitAccount(pk);\n        this.findContracts(this.walletService.wallet.implicitAccounts[0].pkh);\n      } else {\n        console.error('Public key not found');\n      }\n    }\n  }\n  async ledgerImport(pk: string, derivationPath: string) {\n    try {\n      this.walletService.initStorage();\n      this.walletService.wallet = new LedgerWallet();\n      this.walletService.addImplicitAccount(pk, derivationPath);\n      await this.findContracts(this.walletService.wallet.implicitAccounts[0].pkh);\n      this.subjectService.login.next(true);\n      return true;\n    } catch (err) {\n      console.warn(err);\n      this.walletService.clearWallet();\n      return false;\n    }\n  }\n  async torusImport(pk: string, verifierDetails: any, sk: string = '', instanceId: string = '') {\n    try {\n      if (verifierDetails.embedded) {\n        this.walletService.initStorage(instanceId);\n        this.walletService.wallet = new EmbeddedTorusWallet(\n          verifierDetails.verifier,\n          verifierDetails.id,\n          verifierDetails.name,\n          verifierDetails.origin,\n          sk,\n          instanceId\n        );\n      } else {\n        this.walletService.initStorage();\n        const torusWallet = new TorusWallet(verifierDetails.verifier, verifierDetails.id, verifierDetails.name);\n        torusWallet.storeSk(sk);\n        this.walletService.wallet = torusWallet;\n      }\n      if (verifierDetails.verifier === 'twitter') {\n        this.updateTwitterName(verifierDetails.id);\n      }\n      if (pk || !verifierDetails?.embedded) {\n        this.walletService.addImplicitAccount(pk);\n      } else {\n        this.walletService.storeWallet();\n      }\n      this.subjectService.login.next();\n      return true;\n    } catch (err) {\n      console.warn(err);\n      this.walletService.clearWallet(instanceId);\n      return false;\n    }\n  }\n  async updateTwitterName(verifierId: string) {\n    const twitterId = verifierId.split('|')[1];\n    const { username } = await this.torusService.twitterLookup(undefined, twitterId);\n    if (username && this.walletService.wallet instanceof TorusWallet) {\n      this.walletService.wallet.name = '@' + username;\n    }\n  }\n  async findContracts(pkh: string) {\n    const addresses = await this.indexerService.getContractAddresses(pkh);\n    for (const KT of addresses) {\n      console.log('Found KT: ' + KT);\n      this.walletService.addOriginatedAccount(KT, pkh);\n    }\n    this.walletService.storeWallet();\n  }\n}\n","<div class=\"flex-row\" id=\"wrapper\">\n  <div class=\"flex-column left\">\n    <div class=\"flex-column top\">\n      <h1><ng-container *ngIf=\"isMobile\">&nbsp;</ng-container>A Secure Home&nbsp;<br />for your Digital Assets</h1>\n      <h3>Manage your digital assets and seamlessly&nbsp;<br *ngIf=\"!isMobile\" />connect with experiences and apps on Tezos.</h3>\n    </div>\n    <div class=\"flex-column login\">\n      <span>Sign in with social:</span>\n      <div class=\"flex-row social\">\n        <button class=\"flex-row google\" (click)=\"torusLogin('google')\"><img\n            src=\"../../../assets/img/google-logo.svg\">&nbsp;<span>CONTINUE WITH\n            GOOGLE</span></button>\n        <div class=\"flex-row torus\">\n          <img class=\"facebook\" src=\"../../../assets/img/facebook-logo.svg\" (click)=\"torusLogin('facebook')\">\n          <img class=\"twitter\" src=\"../../../assets//img/twitter-logo.svg\" (click)=\"torusLogin('twitter')\">\n          <img class=\"reddit\" src=\"../../../assets/img/reddit-logo.svg\" (click)=\"torusLogin('reddit')\">\n          <img class=\"email\" src=\"../../../assets/img/email-logo-start.svg\" (click)=\"torusLogin('email')\">\n        </div>\n      </div>\n    </div>\n    <div class=\"flex-column bottom\">\n      <img src=\"../../../assets/img/landing-hero.png\" id=\"bg-mobile\">\n      <div id=\"ribbon-mobile\"></div>\n    </div>\n  </div>\n  <div class=\"flex-column right\">\n    <img src=\"../../../assets/img/landing-hero.png\" id=\"bg\">\n    <div id=\"ribbon\"></div>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { ActivatedRoute } from '@angular/router';\nimport 'rxjs/add/operator/filter';\nimport { TorusService } from '../../../services/torus/torus.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ImportService } from '../../../services/import/import.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['../../../../scss/components/views/start/start.component.scss']\n})\nexport class StartComponent implements OnInit, OnDestroy {\n  isMobile = false;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private walletService: WalletService,\n    public translate: TranslateService,\n    public torusService: TorusService,\n    private importService: ImportService,\n    private messageService: MessageService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this.subscriptions.add(\n      this.route.queryParams.subscribe(async (params) => {\n        if (params?.devtool === 'watch') {\n          const address = prompt('Enter watch address');\n          if (address) {\n            try {\n              await this.importService.watch(address);\n              this.messageService.startSpinner();\n              this.router.navigate([`/account/${address}`]);\n            } finally {\n              this.messageService.stopSpinner();\n            }\n          }\n        }\n      })\n    );\n    if (!this.walletService.wallet) {\n      this.torusService.initTorus();\n    }\n\n    const e = () => {\n      this.isMobile = !!parseInt(getComputedStyle(document.documentElement).getPropertyValue('--is-mobile'));\n    };\n    window.addEventListener('resize', e);\n    e();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  async torusLogin(verifier: string, verifierId = ''): Promise<void> {\n    this.messageService.startSpinner('Loading wallet...');\n    // const { keyPair, userInfo } = await this.mockLogin();\n    const { keyPair, userInfo } = await this.torusService.loginTorus(verifier).catch(async (e) => await this.messageService.stopSpinner());\n    console.log('login done');\n    if (keyPair) {\n      await this.importService\n        .importWalletFromPk(\n          keyPair.pk,\n          '',\n          {\n            verifier: userInfo.typeOfLogin,\n            id: userInfo.verifierId,\n            name: userInfo.name\n          },\n          keyPair.sk\n        )\n        .then((success: boolean) => {\n          if (success) {\n            console.log('success');\n            this.router.navigate([`/account/`]);\n            this.messageService.stopSpinner();\n          } else {\n            this.messageService.addError('Torus import failed');\n            this.messageService.stopSpinner();\n          }\n        });\n    } else {\n      await this.messageService.stopSpinner();\n    }\n  }\n\n  private async mockLogin(): Promise<any> {\n    const keyPair = {\n      sk: 'spsk1VfCfhixtzGvUSKDre6jwyGbXFm6aoeLGnxeVLCouueZmkgtJF',\n      pk: 'sppk7cZsZeBApsFgYEdWuSwj92YCWkJxMmBfkN3FeKRmEB7Lk5pmDrT',\n      pkh: 'tz2WKg52VqnYXH52TZbSVjT4hcc8YGVKi7Pd'\n    };\n    const userInfo = {\n      typeOfLogin: 'google',\n      verifierId: 'mock.user@gmail.com',\n      name: 'Mock User'\n    };\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({ keyPair, userInfo });\n      }, 2000);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { saveAs } from 'file-saver';\n\n@Injectable()\nexport class ExportService {\n  constructor() {}\n  downloadWallet(data: any) {\n    const blob = new Blob([JSON.stringify(data, null, 4)], {\n      type: 'application/json'\n    });\n    let filename = 'wallet.tez';\n    if (data.walletType === 1) {\n      filename = 'view-only_wallet.tez';\n    } else if (data.walletType === 2) {\n      filename = 'observer_wallet.tez';\n    } else if (data.walletType === 3) {\n      filename = 'ledger_wallet.tez';\n    } else if (data.walletType === 4) {\n      filename = 'hd-wallet.tez';\n    }\n    saveAs(blob, filename);\n  }\n\n  downloadOperationData(hex: string, signed: boolean) {\n    const data = {\n      hex: hex,\n      signed: signed\n    };\n    let filename;\n    if (signed) {\n      filename = 'signed.tzop';\n    } else {\n      filename = 'unsigned.tzop';\n    }\n    const blob = new Blob([JSON.stringify(data, null, 4)], {\n      type: 'application/json'\n    });\n    saveAs(blob, filename);\n  }\n}\n","<form autocomplete=\"off\">\n  <div class=\"flex-column card\">\n    <a routerLink=\"/\"><button class=\"flex-row back\"><img\n          src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n    <div *ngIf=\"activePanel==1\" class=\"flex-column body\">\n      <h1>Back up your seed</h1>\n      <p class=\"description\">When you create a new wallet, new Tezos Recovery (Seed) Words are generated.<br />Your seed\n        words are\n        the\n        master key of your wallet accounts and any value they hold.</p>\n      <div class=\"whitebox\" (mouseout)=\"mouseOut($event)\" (touchstart)=\"$event.stopPropagation(); this.hideBlur = true;\"\n        (touchend)=\"checkSelection($event)\" (click)=\"$event.stopPropagation()\" (mouseup)=\"checkSelection($event)\">\n        {{ MNEMONIC.string }}<div *ngIf=\"!hideBlur\" class=\"flex-row seed-blur\"\n          (click)=\"$event.stopPropagation(); this.hideBlur = true;\">\n          <span>CLICK HERE TO REVEAL YOUR SEED WORDS</span>\n        </div>\n      </div>\n      <p class=\"description red\">\n        <span *ngIf=\"isSelectedMnemonic\" style=\"margin-top: -4rem\" class=\"warning red\">\n          WARNING: Copying the seed words to your clipboard can result in sensitive leakage. The clipboard is a shared\n          resource that can be monitored by other web pages or browser extensions.<br />\n        </span> Be sure sure to back it up (seed words), write it down, and keep it incredibly safe.\n      </p>\n      <button class=\"button next\" (click)=\"verifyView()\">Next</button>\n    </div>\n    <div *ngIf=\"activePanel==2\" class=\"flex-column body\">\n      <h1>Verify your seed</h1>\n      <p class=\"description\">{{ MNEMONIC.verify.length ? 'Fill in the ' + formatVerifyDescription(MNEMONIC.verify[0] +\n        1)\n        + ' to verify\n        your seed backup' : 'Recovery Words (seed) have been verified' }}</p>\n      <progress max=\"{{ MNEMONIC.wordsToVerify }}\"\n        value=\"{{ MNEMONIC.wordsToVerify - MNEMONIC.verify.length }}\"></progress>\n      <div *ngIf=\"MNEMONIC.verify.length\" class=\"flex-row word-verify\">\n        <div class=\"flex-column word-hint\">\n          <span class=\"word-index\">{{ indexFormat(MNEMONIC.verify[0] - 1) }}</span>\n          <span class=\"word-value\"><b>{{ valueFormat(MNEMONIC.verify[0] - 1) }}</b></span>\n        </div>\n        <div class=\"flex-column word-input\">\n          <span class=\"word-index\">\n            <ng-container *ngIf=\"MNEMONIC.verify.length\">Word {{ MNEMONIC.verify[0] + 1 }}</ng-container>\n          </span>\n          <input id=\"wordInput\" class=\"text\" name=\"none\" type=\"text\" (input)=\"checkWord()\" (change)=\"checkWord()\"\n            [(ngModel)]=\"wordInput\" [disabled]=\"!MNEMONIC.verify.length\" autofocus>\n        </div>\n        <div class=\"flex-column word-hint\">\n          <span class=\"word-index\">{{ indexFormat(MNEMONIC.verify[0] + 1) }}</span>\n          <span class=\"word-value\"><b>{{ valueFormat(MNEMONIC.verify[0] + 1) }}</b></span>\n        </div>\n      </div>\n      <button *ngIf=\"!MNEMONIC.verify.length\" class=\"button next\" (click)=\"pwdView()\">Next</button>\n    </div>\n    <div *ngIf=\"activePanel==3\" class=\"flex-column body\">\n      <h1>Set a password</h1>\n      <p class=\"description bold blue\">This password will be used to create an encrypted keystore file.</p>\n      <p class=\"description\">When performing operations that need to be signed with your\n        secret key, this password will be required</p>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.PASSWORD' | translate }}\" class=\"text\"\n        autocomplete=\"new-password\" [(ngModel)]=\"pwd1\" (keyup)=\"calcStrength()\">\n      <small class=\"strength\"> {{ 'NEWWALLETCOMPONENT.PASSWORDSTRENGTH' | translate }} — <b\n          [style.color]=\"pwdStrength === 'Catastrophic!' ? 'darkred' : pwdStrength === 'Very weak!' ? 'red' : pwdStrength === 'Weak!' ? 'orange' : pwdStrength === 'Strong!' ? 'green' : 'red'\">{{\n          pwdStrength }}</b></small>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.CONFIRMPASSWORD' | translate }}\" class=\"text\"\n        autocomplete=\"new-password\" [(ngModel)]=\"pwd2\" (keydown.enter)=\"encryptWallet($event)\">\n      <button class=\"button next\" [style.visibility]=\"!pwd1 ? 'hidden' : ''\" (click)=\"encryptWallet($event)\">Next</button>\n    </div>\n    <div *ngIf=\"activePanel==4\" class=\"flex-column body\">\n      <h1>Wallet created!</h1>\n      <p class=\"description bold\">Your wallet is now set up and ready to be used.</p>\n      <p class=\"description\">Download your encrypted keystore file and import it when you want to access your wallet.\n      </p>\n      <div class=\"whitebox final\">\n        <p class=\"description bold pkh\">Your public account address:<br />{{ getPkh() }}</p>\n      </div>\n      <button class=\"button next\" (click)=\"download()\">Download</button>\n      <button class=\"button next\" [style.visibility]=\"!ekfDownloaded ? 'hidden' : ''\" (click)=\"done()\">Open\n        Wallet</button>\n    </div>\n    <span class=\"flex-row step-counter\">\n      <ng-container *ngFor=\"let _ of [1, 2, 3, 4]\">\n        <div class=\"dot\" [class]=\"_ === activePanel ? 'selected' : ''\"></div>\n      </ng-container>\n    </span>\n  </div>\n</form>","import { Component, OnInit, Input, HostBinding } from '@angular/core';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { ExportService } from '../../../../../services/export/export.service';\nimport { ImportService } from '../../../../../services/import/import.service';\nimport { InputValidationService } from '../../../../../services/input-validation/input-validation.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-wallet',\n  templateUrl: './new-wallet.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/login.component.scss']\n})\nexport class NewWalletComponent implements OnInit {\n  wordInput: string;\n  @HostBinding('class.tacos') showTacos = false;\n  @Input() pwd1 = '';\n  @Input() pwd2 = '';\n  @Input() userMnemonic = '';\n  hideBlur = false;\n  isSelectedMnemonic = false;\n  pwdStrength = '';\n  ekfDownloaded = false;\n  activePanel = 0;\n  data: any;\n  seed: any;\n  pkh: string;\n  pk: string;\n  MNEMONIC: {\n    string: string;\n    array: string[];\n    verify: number[];\n    wordsToVerify: number;\n  };\n  longClickTs = 0;\n  constructor(\n    private translate: TranslateService,\n    private walletService: WalletService,\n    private messageService: MessageService,\n    private exportService: ExportService,\n    private importService: ImportService,\n    private inputValidationService: InputValidationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.generateSeed();\n  }\n  generateSeed(): void {\n    const mnemonic = this.walletService.createNewWallet();\n    this.MNEMONIC = {\n      string: mnemonic,\n      array: mnemonic.split(' '),\n      verify: [],\n      wordsToVerify: 5\n    };\n    // shuffle\n    const mnemonicLength = this.MNEMONIC.array.length;\n    while (this.MNEMONIC.verify.length < this.MNEMONIC.wordsToVerify) {\n      const index = Math.floor(Math.random() * Math.floor(mnemonicLength));\n      if (!this.MNEMONIC.verify.includes(index)) {\n        this.MNEMONIC.verify.push(index);\n      }\n    }\n    this.MNEMONIC.verify.sort((a, b) => a - b);\n    this.activePanel++;\n  }\n  checkWord(): void {\n    this.wordInput = this.wordInput.toLowerCase().trim();\n    if (this.wordInput === this.MNEMONIC.array[this.MNEMONIC.verify[0]]) {\n      this.MNEMONIC.verify.shift();\n      this.wordInput = '';\n    }\n    if (!this.MNEMONIC.verify) {\n      // Remove focus from input box\n      document.getElementById('wordInput').blur();\n    }\n  }\n  formatVerifyDescription(index: number): string {\n    if (this.MNEMONIC.verify.length === 0) {\n      return 'Seed backup has been verified!';\n    }\n    switch (index) {\n      case 1:\n      case 21:\n        return `${index}st word`;\n      case 2:\n      case 22:\n        return `${index}nd word`;\n      case 3:\n      case 23:\n        return `${index}rd word`;\n      default:\n        return `${index}th word`;\n    }\n  }\n  indexFormat(index: number): string {\n    if (this.MNEMONIC.verify.length === 0) {\n      return '';\n    } else if (index < 0 || index >= this.MNEMONIC.array.length) {\n      return '';\n    } else {\n      return 'Word ' + (index + 1);\n    }\n  }\n  valueFormat(index: number): string {\n    if (this.MNEMONIC.verify.length === 0) {\n      return '';\n    } else if (index < 0 || index > this.MNEMONIC.array.length) {\n      return '';\n    } else {\n      return this.MNEMONIC.array[index];\n    }\n  }\n  verifyView(): void {\n    if (this.MNEMONIC.verify.length) {\n      this.activePanel++;\n    } else {\n      throw new Error('Unexpected verify array');\n    }\n  }\n  pwdView(): void {\n    this.activePanel++;\n    this.userMnemonic = '';\n  }\n\n  mnemonicMatch(): boolean {\n    return this.MNEMONIC.string === this.userMnemonic;\n  }\n  async encryptWallet(e: Event): Promise<boolean> {\n    e.preventDefault();\n    if (this.validPwd()) {\n      this.messageService.startSpinner('Encrypting wallet...');\n      const pwd = this.pwd1;\n      this.pwd1 = '';\n      this.pwd2 = '';\n      const ans = await this.walletService.createEncryptedWallet(this.MNEMONIC.string, pwd, '', true);\n      this.seed = ans.seed;\n      this.data = ans.data;\n      this.pkh = ans.pkh;\n      this.pk = ans.pk;\n      this.MNEMONIC.string = '';\n      this.MNEMONIC.array = [];\n      this.MNEMONIC.verify = [];\n      this.activePanel++;\n      this.messageService.stopSpinner();\n      if (document.body.offsetWidth >= 480) {\n        this.showTacos = true;\n      }\n    }\n    return false;\n  }\n  validPwd(): boolean {\n    if (!this.inputValidationService.password(this.pwd1)) {\n      this.messageService.addWarning(this.translate.instant('MNEMONICIMPORTCOMPONENT.PASSWORDWEAK'), 5);\n      return false;\n    } else if (this.pwd1 !== this.pwd2) {\n      this.messageService.addWarning(this.translate.instant('MNEMONICIMPORTCOMPONENT.NOMATCHPASSWORDS'), 5);\n      return false;\n    } else {\n      return true;\n    }\n  }\n  calcStrength(): void {\n    this.pwdStrength = this.inputValidationService.passwordStrengthDisplay(this.pwd1);\n  }\n  async done(): Promise<void> {\n    const seed = this.seed;\n    this.seed = null;\n    await this.importService.importWalletFromObject(this.data, seed);\n    this.walletService.storeWallet();\n    this.data = null;\n    this.messageService.addSuccess('Your new wallet is now set up and ready to use!');\n    this.router.navigate([`/account/`]);\n  }\n  export(): string {\n    return JSON.stringify(this.data);\n  }\n  getPkh(): string {\n    return this.pkh;\n  }\n  download(): void {\n    this.exportService.downloadWallet(this.data);\n    this.ekfDownloaded = true;\n  }\n  mouseOut(e): void {\n    e.stopPropagation();\n    this.hideBlur = false;\n    window.getSelection()?.removeAllRanges();\n  }\n  checkSelection(ev): void {\n    ev.stopPropagation();\n    if (this.isTextSelected()) {\n      this.isSelectedMnemonic = true;\n    }\n  }\n  private isTextSelected(): boolean {\n    let selection: Selection;\n    if (window.getSelection) {\n      selection = window.getSelection();\n    } else if (document.getSelection) {\n      selection = document.getSelection();\n    } else return false;\n    return !selection?.isCollapsed;\n  }\n}\n","<div class=\"flex-column card\">\n  <a routerLink=\"/\"><button class=\"flex-row back\"><img src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n  <div *ngIf=\"activePanel === 0\" class=\"flex-column body\">\n    <h1>Import wallet</h1>\n    <div class=\"flex-row import-options\">\n      <span [class.selected]=\"importOption===0\" (click)=\"reset(); importOption = 0\">Keystore File</span>\n      <span [class.selected]=\"importOption===1\" (click)=\"reset(); importOption = 1\">Seed Words</span>\n      <span [class.selected]=\"importOption===2\" (click)=\"reset(); importOption = 2\">Fundraiser</span>\n    </div>\n    <ng-container *ngIf=\"importOption === 0\">\n      <form autocomplete=\"off\">\n        <p class=\"description\">\n          Import your wallet from an encrypted keystore file (<span style=\"text-transform: lowercase;\">.tez</span>)\n        </p>\n        <input #keyStore name=\"none\" type=\"file\" (change)=\"handleFileInput($event.target.files)\"\n          accept=\".tez{{ firefox ? ', application/json' : '' }}\" id=\"file\" name=\"file\">\n        <div class=\"flex-row button input-file-wrapper\">\n          <label for=\"file\" class=\"flex-row button input-file\" [class.loaded]=\"walletJson\"\n            (click)=\"keyStore?.nativeElement?.click();\">\n            <ng-container *ngIf=\"!walletJson\"><span class=\"b\">Browse</span><img\n                src=\"../../../../../assets/img/import-plus.png\" /></ng-container>\n            <ng-container *ngIf=\"walletJson\">\n              <div class=\"flex-row body\"><img src=\"../../../../../assets/img/lock.png\" />&nbsp;&nbsp;<span\n                  class=\"flex-row filename\">{{\n                  fileName\n                  }}</span>\n              </div>\n              <span class=\"b\">Browse</span>\n            </ng-container>\n          </label>\n        </div>\n        <input *ngIf=\"walletJson\" name=\"none\" type=\"password\" class=\"text\" autocomplete=\"current-password\"\n          (keydown.enter)='!messageService.spinnerOn ? checkImportPwd() : null' id=\"pwd\" [(ngModel)]=\"pwd\"\n          placeholder=\"Password\">\n        <button class=\"button next\" [style.visibility]=\"!walletJson ? 'hidden' : ''\"\n          (click)='!messageService.spinnerOn ? checkImportPwd() : null'>Import</button>\n      </form>\n    </ng-container>\n    <ng-container *ngIf=\"importOption > 0\">\n      <form autocomplete=\"off\">\n        <p class=\"description faucet\" *ngIf=\"importOption === 2\"><span>Please make sure to first <a\n              routerLink=\"/activate\">activate</a> your fundraiser wallet.</span></p>\n        <span class=\"description label\">RECOVERY (SEED) WORDS <span style=\"color: #98a0ab\">12-24 WORDS</span></span>\n        <textarea name=\"none\" class=\"text seed-word\" [(ngModel)]=\"mnemonic\" autocomplete=\"off\" spellcheck=\"false\"\n          [placeholder]=\"'Seed Words (required)'\" (keydown)=\"seedWordKeydown($event)\"></textarea>\n      </form>\n      <ng-container *ngIf=\"importOption === 1\">\n        <app-ui-toggle-advanced style=\"width: 13rem;\" [default]=\"false\" (stateChange)=\"advancedForm = $event\">\n        </app-ui-toggle-advanced>\n        <br /><br />\n        <form autocomplete=\"off\" *ngIf=\"advancedForm\" class=\"flex-row-wrap import-option-1\">\n          <div class=\"flex-column\">\n            <span class=\"label\"><b>If your seed words are protected by a passphrase, it needs to be entered\n                here</b></span>\n            <input name=\"none\" class=\"text\" type=\"password\" name=\"passphrase\" autocomplete=\"one-time-code\"\n              [(ngModel)]=\"passphrase\" [placeholder]=\"'Passphrase (optional)'\" readonly=\"true\"\n              (click)=\"clickPassword($event)\" (blur)=\"blurPassword($event)\">\n          </div>\n          <div class=\"flex-column\">\n            <span class=\"label\"><b>Provide the address to verify your passphrase is correct</b></span>\n            <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"pkh\"\n              [placeholder]='passphrase ? \"tz1... (required)\" : \"tz1... (optional)\"'>\n          </div>\n        </form>\n      </ng-container>\n      <ng-container *ngIf=\"importOption === 2\">\n        <form autocomplete=\"off\">\n          <span class=\"label\">The email used during the fundraiser</span>\n          <input name=\"none\" class=\"text\" type=\"text\" [(ngModel)]=\"email\" [placeholder]=\"'Email (required)'\">\n          <span class=\"label\">The password you chose during the fundraiser</span>\n          <input name=\"none\" class=\"text\" type=\"password\" name=\"tge-password\" autocomplete=\"one-time-code\"\n            [(ngModel)]=\"password\" [placeholder]=\"'Password (required)'\" readonly=\"true\" (click)=\"clickPassword($event)\"\n            (blur)=\"blurPassword($event)\">\n          <span class=\"label\">Provide the public key hash to verify your email and password are correct</span>\n          <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"pkh\" [placeholder]=\"'tz1... (recomended)'\">\n        </form>\n      </ng-container>\n      <button class=\"button next\" (click)=\"retrieve()\">Import</button>\n    </ng-container>\n  </div>\n  <div *ngIf=\"activePanel==1 && chooseWalletState === chooseWalletStateEnum.UserDoesNotNeedToChooseWallet\"\n    class=\"flex-column body\">\n    <form autocomplete=\"off\">\n      <h1>Set a password</h1>\n      <p class=\"description bold blue\">This password will be used to create an encrypted keystore file.</p>\n      <p class=\"description\">When performing operations that need to be signed with your\n        secret key, this password will be required</p>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.PASSWORD' | translate }}\" class=\"text\"\n        autocomplete=\"new-password\" [(ngModel)]=\"pwd1\" (keyup)=\"calcStrength()\">\n      <small class=\"strength\"> {{ 'NEWWALLETCOMPONENT.PASSWORDSTRENGTH' | translate }} — <b\n          [style.color]=\"pwdStrength === 'Catastrophic!' ? 'darkred' : pwdStrength === 'Very weak!' ? 'red' : pwdStrength === 'Weak!' ? 'orange' : pwdStrength === 'Strong!' ? 'green' : 'red'\">{{\n          pwdStrength }}</b></small>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.CONFIRMPASSWORD' | translate }}\"\n        class=\"text\" autocomplete=\"new-password\" [(ngModel)]=\"pwd2\">\n      <button class=\"button next\" [style.visibility]=\"!pwd1 ? 'hidden' : ''\"\n        (click)=\"setPwdOrConfirmWalletType()\">Next</button>\n    </form>\n  </div>\n  <div\n    *ngIf=\"importOption === 1 && activePanel === 1 && chooseWalletState !== chooseWalletStateEnum.UserDoesNotNeedToChooseWallet\"\n    class=\"body flex-column\">\n    <h1>Confirm Wallet Type</h1>\n    <p class=\"description\" *ngIf=\"chooseWalletState !== chooseWalletStateEnum.TzktErrorEncountered\">\n      You have used both the HD and Legacy wallets derived from the seed words. Please choose one.\n    </p>\n    <p class=\"description\" *ngIf=\"chooseWalletState === chooseWalletStateEnum.TzktErrorEncountered\">\n      We are currently unable to query information about your wallet. Please choose a wallet type.\n    </p>\n    <div class=\"radios flex-row\">\n      <div class=\"flex-column\">\n        <div class=\"wallet-type-option\">\n          <input name=\"none\" (change)=\"hdImport = !hdImport\" type=\"radio\" name=\"walletType\" value=\"hd\" checked>\n          <span>HD wallet</span>\n        </div>\n        <div>Address: {{hdCandidate.pkh}}</div>\n        <div>Tez Balance: {{hdCandidate.balance ?? '-'}}</div>\n      </div>\n      <div class=\"flex-column\">\n        <div class=\"wallet-type-option\">\n          <input name=\"none\" (change)=\"hdImport = !hdImport\" type=\"radio\" name=\"walletType\" value=\"legacy\">\n          <span>Legacy wallet</span>\n        </div>\n        <div>Address: {{legacyCandidate.pkh}}</div>\n        <div>Tez balance: {{legacyCandidate.balance ?? '-'}}</div>\n      </div>\n    </div>\n    <button class=\"button next\" (click)=\"setPwdAfterConfirmingWalletType()\">Confirm Wallet Type</button>\n  </div>\n  <div *ngIf=\"activePanel==2\" class=\"flex-column body\">\n    <h1>Wallet created!</h1>\n    <p class=\"description bold\">Your wallet is now set up and ready to be used.</p>\n    <p class=\"description\">Download your encrypted keystore file and import it when you want to access your wallet.\n    </p>\n    <div class=\"whitebox final\">\n      <p class=\"description bold pkh\">Your public account address:<br />{{ showPkh() }}</p>\n    </div>\n    <button class=\"button next\" (click)=\"download()\">Download</button>\n    <button class=\"button next\" [style.visibility]=\"!Downloaded ? 'hidden' : ''\" (click)=\"done()\">Open Wallet</button>\n  </div>\n</div>","import { Component, OnInit, HostBinding, Input, OnDestroy, AfterViewInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { ImportService } from '../../../../../services/import/import.service';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { ExportService } from '../../../../../services/export/export.service';\nimport { InputValidationService } from '../../../../../services/input-validation/input-validation.service';\nimport { IndexerService } from '../../../../../services/indexer/indexer.service';\nimport { OperationService } from '../../../../../services/operation/operation.service';\nimport { utils, hd } from '../../../../../libraries/index';\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport * as bip39 from 'bip39';\nimport Big from 'big.js';\n\ninterface WalletCandidate {\n  pkh: string;\n  used?: boolean;\n  balance?: string;\n}\n\nexport enum ChooseWalletState {\n  UserDoesNotNeedToChooseWallet,\n  UserNeedsToChooseWallet,\n  TzktErrorEncountered\n}\n\n@Component({\n  selector: 'app-mnemonic-import-wallet',\n  templateUrl: './mnemonic-import.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/login.component.scss']\n})\nexport class MnemonicImportComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.tacos') showTacos = false;\n  @Input('keyStore') keyStore;\n  MIN_PWD_LENGTH = 9;\n  mnemonic: string;\n  email: string;\n  password: string;\n  passphrase: string;\n  pkh: string;\n  importOption = 0;\n  activePanel = 0;\n  wallet: any;\n  walletJson: string;\n  pwd = '';\n  pwd1: string;\n  pwd2: string;\n  pwdStrength = '';\n  Downloaded = false;\n  fileName = '';\n  showWrongFileUploadMsg: false;\n  browser = 'unknown';\n  advancedForm = false;\n  bip39Wordlist = bip39.wordlists.english;\n\n  // data for seed word wallet import\n  hdImport = true;\n  chooseWalletStateEnum = ChooseWalletState;\n  chooseWalletState = ChooseWalletState.UserDoesNotNeedToChooseWallet;\n  legacyCandidate: null | WalletCandidate = null;\n  hdCandidate: null | WalletCandidate = null;\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private importService: ImportService,\n    private router: Router,\n    private messageService: MessageService,\n    private walletService: WalletService,\n    private exportService: ExportService,\n    private inputValidationService: InputValidationService,\n    private indexerService: IndexerService,\n    private operationService: OperationService\n  ) {\n    this.subscriptions.add(\n      this.router.events.pipe(filter((e) => e instanceof NavigationEnd && e.url.startsWith('/import'))).subscribe(() => {\n        const navigation = this.router.getCurrentNavigation();\n        this.importOption = navigation.extras?.state?.option ? navigation.extras.state.option : 0;\n      })\n    );\n  }\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    document.documentElement.addEventListener('dragover', this.allowDrop.bind(this));\n    document.documentElement.addEventListener('drop', this.handleFileDragAndDrop.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  clickPassword(e): void {\n    e.target.removeAttribute('readonly');\n    e.target.focus();\n  }\n\n  blurPassword(e): void {\n    e.target.setAttribute('readonly', true);\n  }\n\n  async retrieve(): Promise<void> {\n    // try to get the PKH from the user provided mnemonic\n    if (this.mnemonic) {\n      this.mnemonic = this.mnemonic\n        .toLowerCase()\n        .replace(/(\\r\\n|\\n|\\r)/gm, ' ') // replace \\n\n        .replace(/[^a-z| ]/gm, '') // remove forbidden characters\n        .replace(/\\s+/g, ' ') // remove extra whitespaces\n        .trim();\n    }\n    if (this.importOption === 2) {\n      this.passphrase = this.email + this.password;\n    }\n    const invalidMnemonic = this.inputValidationService.invalidMnemonic(this.mnemonic);\n    if (invalidMnemonic) {\n      this.messageService.addWarning(invalidMnemonic, 10);\n    } else if (this.importOption === 2 && !this.inputValidationService.email(this.email)) {\n      this.messageService.addWarning('Invalid email!', 10);\n    } else if (this.importOption === 2 && !this.password) {\n      this.messageService.addWarning('Invalid password!', 10);\n    } else if (!this.inputValidationService.passphrase(this.passphrase)) {\n      this.messageService.addWarning('Invalid passphrase!', 10);\n    } else if (this.pkh && !this.inputValidationService.address(this.pkh)) {\n      this.messageService.addWarning('Invalid public key hash!', 10);\n    } else if (this.importOption === 1 && this.passphrase && !this.pkh) {\n      this.messageService.addWarning('Address is required when importing with passphrase', 10);\n    } else {\n      // at this point we have validated the majority of the input and we can\n      // try to derive the PKH from mnemonic and the passphrase.\n\n      const passphrase = this.passphrase ? this.passphrase : '';\n      const legacyWalletAddress = utils.seedToKeyPair(utils.mnemonicToSeed(this.mnemonic, passphrase, false)).pkh;\n\n      if (this.importOption === 1) {\n        // seed word import screen\n\n        // from the mnemonic itself we cannot tell if the user prefers the HD or legacy wallet\n        // so we collect some data and run some checks\n        this.legacyCandidate = { pkh: legacyWalletAddress };\n        this.hdCandidate = { pkh: hd.keyPairFromAccountIndex(utils.mnemonicToSeed(this.mnemonic, passphrase, true), 0).pkh };\n        if (this.pkh && this.pkh !== '') {\n          // the user has provided a PKH and they expect the derivation from the seed words to match one\n          if (this.pkh === this.hdCandidate.pkh) {\n            this.hdImport = true;\n            this.hdCandidate.used = true;\n            this.legacyCandidate.used = false;\n            this.activePanel++;\n          } else if (this.pkh === this.legacyCandidate.pkh) {\n            this.hdImport = false;\n            this.legacyCandidate.used = true;\n            this.hdCandidate.used = false;\n            this.activePanel++;\n          } else {\n            this.messageService.addWarning(\n              'The provided address does not match the address derived from the seed words. Confirm that the address and passphrase are correct.',\n              5\n            );\n          }\n        } else {\n          // these API requests are run in the background and inspected later\n          Promise.all([this.indexerService.isUsedAccount(this.legacyCandidate.pkh), this.indexerService.isUsedAccount(this.hdCandidate.pkh)]).then((isUsed) => {\n            this.legacyCandidate.used = isUsed[0];\n            this.hdCandidate.used = isUsed[1];\n            // prefetch balances if both accounts are used\n            if (isUsed.every(Boolean)) {\n              this.getCandidateBalances();\n            } else {\n              console.table({ legacy: this.legacyCandidate, hd: this.hdCandidate });\n            }\n          });\n          this.activePanel++;\n        }\n      } else if (this.importOption === 2 && this.pkh && this.pkh !== legacyWalletAddress) {\n        // fundraiser screen if user provided pkh does not match the legacy wallet address\n        this.messageService.addWarning('Invalid email or password!', 5);\n      } else {\n        this.activePanel++;\n      }\n    }\n  }\n\n  getChooseWalletState(): ChooseWalletState {\n    if (this.importOption === 2) {\n      return ChooseWalletState.UserDoesNotNeedToChooseWallet;\n    }\n    if (this.legacyCandidate.used === undefined || this.hdCandidate.used === undefined) {\n      // Promises haven't resolved successfully in time (before the user have entered the passwords), fallback on manual wallet type selection\n      return ChooseWalletState.TzktErrorEncountered;\n    } else if (this.legacyCandidate.used) {\n      if (this.hdCandidate.used) {\n        return ChooseWalletState.UserNeedsToChooseWallet;\n      } else {\n        this.hdImport = false;\n      }\n    }\n    return ChooseWalletState.UserDoesNotNeedToChooseWallet;\n  }\n\n  async getCandidateBalances() {\n    if (!this.hdCandidate.balance) {\n      this.subscriptions.add(\n        this.operationService.getBalance(this.hdCandidate.pkh).subscribe((ans) => {\n          if (ans.success) {\n            this.hdCandidate.balance = Big(ans.payload.balance)\n              .div(10 ** 6)\n              .toString();\n            if (this.legacyCandidate.balance) console.table({ legacy: this.legacyCandidate, hd: this.hdCandidate });\n          }\n        })\n      );\n    }\n    if (!this.legacyCandidate.balance) {\n      this.subscriptions.add(\n        this.operationService.getBalance(this.legacyCandidate.pkh).subscribe((ans) => {\n          if (ans.success) {\n            this.legacyCandidate.balance = Big(ans.payload.balance)\n              .div(10 ** 6)\n              .toString();\n            if (this.hdCandidate.balance) console.table({ legacy: this.legacyCandidate, hd: this.hdCandidate });\n          }\n        })\n      );\n    }\n  }\n\n  async setPwd(): Promise<void> {\n    if (this.validPwd()) {\n      const password = this.pwd1;\n      this.pwd1 = '';\n      this.pwd2 = '';\n      await this.messageService.startSpinner('Encrypting wallet...');\n      try {\n        this.wallet = await this.walletService.createEncryptedWallet(this.mnemonic, password, this.passphrase, this.importOption === 1 && this.hdImport);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n      this.mnemonic = '';\n      this.passphrase = '';\n      this.email = '';\n      this.password = '';\n      this.activePanel++;\n    }\n  }\n\n  async setPwdOrConfirmWalletType() {\n    // after the user enters a password and clicks the next button, Kukai\n    // decides if they need to choose the wallet or if they can\n\n    this.chooseWalletState = this.getChooseWalletState();\n\n    if (this.chooseWalletState === ChooseWalletState.UserDoesNotNeedToChooseWallet) {\n      await this.setPwd();\n    } else {\n      this.getCandidateBalances();\n    }\n  }\n\n  async setPwdAfterConfirmingWalletType(): Promise<void> {\n    await this.setPwd();\n\n    // clean up\n    this.hdImport = true;\n    this.legacyCandidate = null;\n    this.hdCandidate = null;\n  }\n\n  validPwd(): boolean {\n    if (!this.inputValidationService.password(this.pwd1)) {\n      this.messageService.addWarning('Password is too weak!', 10);\n      return false;\n    } else if (this.pwd1 !== this.pwd2) {\n      this.messageService.addWarning(\"Passwords don't match!\", 10);\n      return false;\n    } else {\n      return true;\n    }\n  }\n  calcStrength(): void {\n    this.pwdStrength = this.inputValidationService.passwordStrengthDisplay(this.pwd1);\n  }\n  export(): string {\n    return JSON.stringify(this.wallet.data);\n  }\n  showPkh(): string {\n    return this.wallet.pkh;\n  }\n  download(): void {\n    this.exportService.downloadWallet(this.wallet.data);\n    this.Downloaded = true;\n  }\n  async done(): Promise<void> {\n    await this.messageService.startSpinner('Loading wallet...');\n    try {\n      await this.importService.importWalletFromObject(this.wallet.data, this.wallet.seed);\n    } catch (e) {\n      this.messageService.addError('ImportError: ' + e?.message);\n      throw e;\n    } finally {\n      this.messageService.stopSpinner();\n    }\n    this.wallet = null;\n    this.router.navigate([`/account/`]);\n    this.messageService.addSuccess('Your new wallet is now set up and ready!');\n  }\n  /* Keystore handling */\n  importPreCheck(keyFile: string): void {\n    this.typeCheckFile(keyFile);\n    if (this.importService.pwdRequired(keyFile)) {\n      this.walletJson = keyFile;\n    } else {\n      throw new Error('Unsupported wallet file');\n    }\n  }\n  typeCheckFile(keyFile: string): void {\n    const obj = JSON.parse(keyFile);\n    // Required\n    try {\n      if (typeof obj.provider !== 'string') {\n        throw new Error('provider not a string!');\n      }\n      if (typeof obj.version !== 'number') {\n        throw new Error('version not a number!');\n      }\n      if (typeof obj.walletType !== 'number') {\n        throw new Error('walletType not a number!');\n      }\n      // Optional\n      if (obj.encryptedSeed && typeof obj.encryptedSeed !== 'string') {\n        throw new Error('encryptedSeed not a string!');\n      }\n      if (obj.pkh && typeof obj.pkh !== 'string') {\n        throw new Error('pkh not a string!');\n      }\n      if (obj.iv && typeof obj.iv !== 'string') {\n        throw new Error('iv not a string!');\n      }\n      if (obj.pk && typeof obj.pk !== 'string') {\n        throw new Error('pk not a string!');\n      }\n      if (obj.encryptedEntropy && typeof obj.encryptedEntropy !== 'string') {\n        throw new Error('encryptedEntropy not a string!');\n      }\n    } catch (e) {\n      this.messageService.addError(e);\n      throw e;\n    }\n  }\n  async checkImportPwd(): Promise<void> {\n    if (!this.walletJson) {\n      this.messageService.addWarning('No keystore file imported', 5);\n    } else if (this.pwd) {\n      await this.messageService.startSpinner('Importing wallet...');\n      try {\n        await this.import(this.walletJson, this.pwd);\n        this.pwd = '';\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    } else {\n      this.messageService.addWarning('No password provided', 5);\n    }\n  }\n  async import(keyFile: string, pwd: string): Promise<void> {\n    this.typeCheckFile(keyFile);\n    await this.importService\n      .importWalletFromJson(keyFile, pwd)\n      .then((success: boolean) => {\n        if (success) {\n          this.router.navigate(['/account/']);\n        } else {\n          console.log(success);\n          this.messageService.addError('Something went wrong');\n        }\n      })\n      .catch((e) => {\n        this.messageService.addError(e);\n        this.walletService.clearWallet();\n        this.messageService.stopSpinner();\n      });\n  }\n  allowDrop(e): void {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n  handleFileDragAndDrop(e): void {\n    e.preventDefault();\n    this.handleFileInput(e.dataTransfer.files);\n  }\n  handleFileInput(files: FileList): boolean {\n    let fileToUpload = files.item(0);\n    if (!fileToUpload) {\n      return false;\n    } else if (!this.validateFile(fileToUpload.name)) {\n      this.messageService.add('Selected file format is not supported');\n\n      console.log('Selected file format is not supported');\n      fileToUpload = null;\n      this.walletJson = null;\n      return false;\n    } else {\n      const reader = new FileReader();\n      reader.readAsText(fileToUpload);\n      reader.onload = () => {\n        if (typeof reader.result === 'string') {\n          try {\n            this.importPreCheck(reader.result);\n          } catch (e) {\n            this.messageService.addError(e, 5);\n            this.walletJson = null;\n          }\n          if (this.walletJson) {\n            this.fileName = fileToUpload.name;\n          }\n        } else {\n          this.walletJson = null;\n          throw new Error('Not a string import');\n        }\n      };\n    }\n  }\n  validateFile(name: string): boolean {\n    const ext = name.substring(name.lastIndexOf('.') + 1);\n    if (ext.toLowerCase() === 'tez' || ext.toLowerCase() === 'json') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  seedWordKeydown(e): boolean {\n    if (\n      !((e.keyCode >= 65 && e.keyCode <= 90) || [8, 9, 13, 32, 37, 38, 39, 40, 46].includes(e.keyCode)) ||\n      (e.keyCode === 32 &&\n        e.target.value?.slice(-1) === ' ' &&\n        e.target?.selectionStart === e.target?.selectionEnd &&\n        e.target?.selectionStart === e.target?.value.length)\n    ) {\n      return false;\n    }\n\n    let word = '';\n    let words = [];\n    let wordPos = -1;\n    let charPos = -1;\n    if (e.metaKey === false && e.ctrlKey === false && e.keyCode >= 65 && e.keyCode <= 90) {\n      const first = e.target.value.slice(0, e.target.selectionStart) + (e.target.selectionStart === e.target.selectionEnd ? e.key : '');\n      const second = e.target.value.slice(e.target.selectionStart);\n      const firstSplit = first.split(' ');\n      words = (first + second).split(' ');\n      wordPos = firstSplit.length - 1;\n      word = words[wordPos];\n      let n = -1;\n      firstSplit.pop();\n      firstSplit.forEach((item) => {\n        n += item.length;\n        n++;\n      });\n      charPos = e.target.selectionStart - 1 - n;\n    } else {\n      words = e.target.value.split(' ');\n    }\n    if (e.metaKey === false && e.ctrlKey === false && e.keyCode >= 65 && e.keyCode <= 90) {\n      if (e.target.selectionStart !== e.target.selectionEnd) {\n        if (e.target.value[e.target.selectionStart] === e.key) {\n          const selection = e.target.value.slice(e.target.selectionStart, e.target.selectionEnd);\n          if (selection.includes(' ')) {\n            return true;\n          }\n          ++e.target.selectionStart;\n          if (e.target.selectionStart === e.target.selectionEnd && words.length < 24) {\n            e.target.value = e.target.value.slice(0, e.target.selectionStart) + ' ' + e.target.value.slice(e.target.selectionStart);\n            this.mnemonic = e.target.value;\n          }\n          e.target.setAttribute('data-selection-start', e.target.selectionStart);\n          e.target.setAttribute('data-selection-end', e.target.selectionEnd);\n          return false;\n        } else {\n          return true;\n        }\n      }\n      if (word) {\n        const r = this.bip39Wordlist.filter((w) => w.startsWith(word));\n        // only suggest word if added char is in the end of current word\n        if (r.length === 1 && (e.target.selectionEnd !== e.target.selectionStart || charPos + 1 === word.length)) {\n          words = words.map((w) => (w === word ? r[0] : w));\n          const offset = r[0].length - word.length;\n          let selStart = e.target.selectionStart;\n          e.target.value = words.join(' ');\n          if (offset === 0 && words.length < 24 && wordPos === words.length - 1) {\n            e.target.value = e.target.value + ' ';\n            selStart++;\n          }\n          this.mnemonic = e.target.value;\n          e.target.selectionStart = selStart + 1;\n          e.target.selectionEnd = e.target.selectionStart + offset;\n          e.target.setAttribute('data-selection-start', e.target.selectionStart);\n          e.target.setAttribute('data-selection-end', e.target.selectionEnd);\n          return false;\n        }\n      }\n    } else if (\n      [9, 13, 32].includes(e.keyCode) &&\n      e.target.selectionStart !== e.target.selectionEnd &&\n      Number(e.target.getAttribute('data-selection-start')) === e.target.selectionStart &&\n      Number(e.target.getAttribute('data-selection-end')) === e.target.selectionEnd\n    ) {\n      let selEnd = e.target.selectionEnd;\n      const words = e.target.value?.split(' ');\n      if (e.target.value.length === selEnd && words?.length < 24) {\n        e.target.value += ' ';\n        selEnd += 1;\n      }\n      this.mnemonic = e.target.value;\n      e.target.selectionStart = e.target.selectionEnd = selEnd;\n      e.target.setAttribute('data-selection-start', e.target.selectionStart);\n      e.target.setAttribute('data-selection-end', e.target.selectionStart);\n      return false;\n    } else if (e.keyCode === 9) {\n      return false;\n    } else if (e.keyCode === 8) {\n      e.target.setAttribute('data-selection-start', e.target.selectionStart);\n      e.target.setAttribute('data-selection-end', e.target.selectionStart);\n    }\n    return true;\n  }\n\n  reset(): void {\n    this.advancedForm = false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport 'babel-polyfill';\nimport TransportU2F from '@ledgerhq/hw-transport-u2f';\nimport TransportWebHID from '@ledgerhq/hw-transport-webhid';\nimport Tezos from '@obsidiansystems/hw-app-xtz';\nimport { OperationService } from '../operation/operation.service';\nimport { MessageService } from '../message/message.service';\n\n@Injectable()\nexport class LedgerService {\n  transport: any;\n  constructor(private operationService: OperationService, private messageService: MessageService) {}\n  async setTransport() {\n    if (!this.transport) {\n      console.log('Trying to use WebHID for transport...');\n      try {\n        this.transport = await TransportWebHID.create();\n        console.log('Transport is now set to use WebHID!');\n      } catch (e) {\n        this.transport = null;\n        console.warn(\"Couldn't set WebHID as transport!\");\n        console.error(e);\n      }\n    }\n    if (!this.transport) {\n      try {\n        this.transport = await TransportU2F.create();\n        console.warn('Transport is now set to use U2F!');\n      } catch (e) {\n        this.transport = null;\n        console.log(\"Couldn't set U2F as transport!\");\n        console.error(e);\n      }\n    }\n  }\n  async transportCheck() {\n    if (!this.transport) {\n      await this.setTransport();\n    }\n    if (!this.transport) {\n      this.messageService.addError('Failed to set transport. Please make sure your browser supports WebHID or U2F');\n      throw new Error('NO_TRANSPORT_FOUND');\n    }\n  }\n  async getPublicAddress(path: string) {\n    await this.transportCheck();\n    const xtz = new Tezos(this.transport);\n    const result = await xtz\n      .getAddress(path, true)\n      .then((res) => {\n        return this.sanitize(res, true);\n      })\n      .catch((e) => {\n        if (e.message) {\n          this.messageService.addError(e.message);\n        } else {\n          this.messageService.addError(e);\n        }\n        throw e;\n      });\n    const pk = this.operationService.hex2pk(result.publicKey);\n    return pk;\n  }\n  async signOperation(op: string, path: string) {\n    if (!['03', '05'].includes(op.slice(0, 2))) {\n      throw new Error('Invalid prefix');\n    }\n    await this.transportCheck();\n    const xtz = new Tezos(this.transport);\n    console.log('op', op);\n    const result = await xtz\n      .signOperation(path, op)\n      .then((res) => {\n        return this.sanitize(res, false);\n      })\n      .catch((e) => {\n        console.warn(e);\n        this.messageService.addError(e, 0);\n        return null;\n      });\n    console.log(JSON.stringify(result));\n    if (result?.signature) {\n      return result.signature;\n    } else {\n      return null;\n    }\n  }\n  async signHash(hash: string, path: string) {\n    if (hash.length !== 64) {\n      throw new Error('Invalid hash!');\n    }\n    await this.transportCheck();\n    const xtz = new Tezos(this.transport);\n    const result = await xtz\n      .signHash(path, hash)\n      .then((res) => {\n        return this.sanitize(res, false);\n      })\n      .catch((e) => {\n        console.warn(e);\n        this.messageService.addError(e, 0);\n        return null;\n      });\n    console.log(JSON.stringify(result));\n    if (result?.signature) {\n      return result.signature;\n    } else {\n      return null;\n    }\n  }\n  private sanitize(res: any, getPk: boolean) {\n    res = JSON.parse(JSON.stringify(res));\n    if (getPk && typeof res?.publicKey !== 'string') {\n      throw Error('Invalid pk');\n    }\n    if (!getPk && typeof res?.signature !== 'string') {\n      throw Error('Invalid signature');\n    }\n    return res;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LedgerService } from '../../../../../services/ledger/ledger.service';\nimport { ImportService } from '../../../../../services/import/import.service';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { InputValidationService } from '../../../../../services/input-validation/input-validation.service';\nimport { utils } from '../../../../../libraries/index';\n\n@Component({\n  selector: 'app-connect-ledger',\n  templateUrl: './connect-ledger.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/login.component.scss']\n})\nexport class ConnectLedgerComponent implements OnInit {\n  activePanel = 0;\n  defaultPath = \"44'/1729'/0'/0'\";\n  defaultText = 'Default derivation path';\n  path: string;\n  pendingLedgerConfirmation = false;\n  isHDDerivationPathCustom = false;\n  browser = 'unknown';\n\n  constructor(\n    private router: Router,\n    private ledgerService: LedgerService,\n    private importService: ImportService,\n    private messageService: MessageService,\n    private inputValidationService: InputValidationService\n  ) {}\n\n  ngOnInit(): void {\n    this.path = this.defaultText;\n    this.checkBrowser();\n  }\n  checkBrowser(): void {\n    try {\n      if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n        this.browser = 'firefox';\n      } else if ((navigator as any)?.userAgentData?.brands?.some((b) => b.brand === 'Google Chrome' || 'Chromium')) {\n        this.browser = 'chromium';\n      } else if ((navigator as any)?.userAgent.toLowerCase().indexOf('safari') > -1 && navigator.platform.indexOf('Mac') === -1) {\n        this.browser = 'safari';\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n  async getPk(): Promise<void> {\n    const path: string = this.path.replace(this.defaultText, this.defaultPath);\n    if (this.inputValidationService.derivationPath(path)) {\n      this.pendingLedgerConfirmation = true;\n      try {\n        this.messageService.startSpinner('Waiting for Ledger confirmation...');\n        const pk = await this.ledgerService.getPublicAddress(path);\n        console.log('getPK => ' + pk);\n        await this.importFromPk(pk, path);\n      } catch (e) {\n        throw e;\n      } finally {\n        this.pendingLedgerConfirmation = false;\n        this.messageService.stopSpinner();\n      }\n    } else {\n      this.messageService.addWarning('Invalid derivation path');\n    }\n  }\n  async importFromPk(pk: string, path: string): Promise<void> {\n    if (utils.validPublicKey(pk)) {\n      if (await this.importService.importWalletFromPk(pk, path)) {\n        this.router.navigate([`/account/`]);\n      } else {\n        this.messageService.addError('Failed to import Ledger wallet');\n      }\n    } else {\n      this.messageService.addError('Not a valid public key');\n    }\n  }\n  setDefaultPath(v): void {\n    if (this.isHDDerivationPathCustom) {\n      this.path = this.defaultText;\n    } else {\n      this.path = this.defaultPath;\n    }\n    this.isHDDerivationPathCustom = v;\n  }\n}\n","<form autocomplete=\"off\">\n  <div class=\"flex-column card\">\n    <a routerLink=\"/\"><button class=\"flex-row back\"><img\n          src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n    <div class=\"flex-column body\">\n      <h1>Connect your Ledger</h1>\n      <p class=\"description\">Keep the private keys safely on your Ledger device and use Kukai to access the Tezos\n        blockchain.</p>\n      <p class=\"description\">You need to open the Tezos Wallet app on your Ledger device and set the derivation path.\n      </p>\n      <input name=\"none\" type=\"text\" class=\"text\" [disabled]=\"!isHDDerivationPathCustom\" [(ngModel)]=\"path\"\n        value=\"'44\\'/1729\\'/0\\'/0\\''\">\n      <app-ui-toggle-advanced style=\"width: 24rem;\" [default]=\"false\" [text]=\"'Use custom HD derivation path:'\"\n        (stateChange)=\"setDefaultPath($event)\"></app-ui-toggle-advanced>\n      <br /><br /><br />\n      <button class=\"button next\" (click)=\"getPk()\" [disabled]=\"browser === 'safari'\">{{ browser !== 'safari' ?\n        'Connect' : 'Ledger support with Safari is currently unavailable' }}</button>\n    </div>\n  </div>\n</form>","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '404.component.html',\n  styleUrls: ['../../../../scss/components/views/error/error.scss']\n})\nexport class P404Component {\n  constructor() {}\n}\n","<div id=\"error\" class=\"flex-column\">\n  <h1>404</h1>\n  <h4>Oops! You're lost.</h4>\n  <p>The page you are looking for was not found.</p>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '500.component.html',\n  styleUrls: ['../../../../scss/components/views/error/error.scss']\n})\nexport class P500Component {\n  constructor() {}\n}\n","<div id=\"error\" class=\"flex-column\">\n  <h1>500</h1>\n  <h4>Houston, we have a problem!</h4>\n  <p>The page you are looking for is temporarily unavailable.</p>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/agreement/terms-of-use/terms-of-use.component.scss']\n})\nexport class PrivacyPolicyComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n  getHostName(): string {\n    return location.hostname;\n  }\n}\n","<div class=\"legal\">\n  <H1>Privacy Policy</H1>\n  <H5>Introduction</H5>\n  <p>Kukai Digital Wallet (“hereinafter Kukai, collectively encompassing {{getHostName()}}) is committed to ensuring the\n    privacy of all our users. We take our duty to process your personal data very seriously. This policy represents our\n    commitment to your right to privacy, giving you a clear explanation about how we use your information and your\n    rights over that information.</p>\n\n  <p>It’s possible to use {{getHostName()}} (“hereinafter website”) without submitting any personal information.</p>\n\n  <H5>Scope of Privacy Policy</H5>\n  <p>This privacy policy applies only to your use of our Tezos digital wallet, Kukai. Our website may contain links to\n    other websites, which are not hosted by Kukai. Please note that we have no control over how your data is collected,\n    stored, or used by other websites and we advise you to check the privacy policies of any such websites before\n    providing any data to them.</p>\n\n  <H5>What types of information do we collect and how?</H5>\n  <p>Kukai does not keep, process, or store any user data, however some services that Kukai relies on may store some\n    user data. Kukai uses Cloudflare services, which collects anonymized website traffic data.</p>\n\n  <p>Data protection laws require us to have a legal justification to process your personal information. Please note,\n    that to use Kukai digital wallet, no personal information is needed to use or access our website or to use our\n    digital wallet. Once again, Kukai does not store user data on any servers.</p>\n\n  <p>Please note, our website and forum may contain links to other websites which are not hosted by Kukai. Please note\n    that we have no control over how your data is collected, stored, or used by other websites and we advise you to\n    check the privacy policies of any such websites before providing any data to them.</p>\n\n  <H5>Legal obligation</H5>\n  <p>As Kukai does not keep, maintain, or process any personal information, Kukai will attempt to fulfill any legal\n    obligations placed upon us, through a lawfully valid legal order by a court of competent jurisdiction.</p>\n\n  <H5>Jurisdiction</H5>\n  <p>Our website is under Swedish jurisdiction and is subject to Swedish laws (which would negate the above retention\n    rules), and similar. Furthermore, our service providers could also be subject to similar orders without our\n    knowledge.</p>\n\n  <p>We take appropriate security measures to ensure that your digital wallet is secured, accurate and up to date.\n    However the transmission of information over the Internet is never completely secure, so while we do our best to\n    protect any information, however, we cannot guarantee the security of information transmitted to our website.</p>\n\n  <H5>Retention Period For Data</H5>\n  <p>We do not hold, store, maintain, or use any personal information as no personal information is needed to use our\n    digital wallet.</p>\n\n  <H5>Access to and your rights over your personal information and removal of User data:</H5>\n  <p>We do not hold, store, use, or maintain any personal user information. For a User to delete any data from the use\n    of our digital wallet please follow the following instructions: </p>\n\n  <p>Log out from the app to remove all user data from the browser cache.</p>\n\n  <p>For more information please see: <a href=\"https://www.tezos.help/kukai-data-removal/index.html\">https://www.tezos.help/kukai-data-removal/index.html</a></p>\n\n  <H5>Complaints</H5>\n  <p>If you wish to lodge a complaint about our handling of your personal data please get in touch with us on the\n    details above with the details of your complaint at contact@kukai.app. We aim to respond to all complaints within 14\n    working days. All legal requests will be reviewed by our legal department and appropriate action will be taken. If\n    you have a legal request, please contact us at: legal@kukai.app.</p>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-terms-of-use',\n  templateUrl: './terms-of-use.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/agreement/terms-of-use/terms-of-use.component.scss']\n})\nexport class TermsOfUseComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"legal\">\n  <H1>TERMS OF USE</H1>\n  <p><i>Last Updated: June 30, 2020</i></p>\n  <p class=\"notice\">IMPORTANT NOTICE: THIS AGREEMENT IS SUBJECT TO BINDING ARBITRATION AND A WAIVER OF CLASS ACTION RIGHTS AS DETAILED\n    IN SECTION 13. PLEASE READ THE AGREEMENT CAREFULLY.</p>\n\n  <H4>1. Acceptance of terms</H4>\n  <p>Kukai Wallet (hereinafter “Kukai,” “we,” “us,” or “our”) provides a platform for managing Tezos accounts, and\n    allowing ordinary websites and applications to interact with the blockchain network, while keeping the user in\n    control over what transactions they approve, through our website located at https://kukai.app/ (the “Site”), which\n    includes text, images, audio, code and other materials (collectively, the “Content”) and all of the features, and\n    services provided. The Site and any other features, tools, materials, or other services offered from time to time by\n    Kukai Wallet are referred to here as the “Services.” Please read these Terms of Use (the “Terms”) carefully before\n    using the Services. By using or otherwise accessing the Services, or clicking to accept or agree to these Terms\n    where that option is made available, you (1) accept and agree to these Terms, (2) consent to the collection, use,\n    disclosure and other handling of information as described in our Privacy Policy and (3) agree to any additional\n    terms, rules and conditions of participation issued by Kukai Wallet from time to time. If you do not agree to any of\n    the Terms, then you may not access or use the Content or Services.</p>\n\n  <H4>2. Modification of Terms of Use</H4>\n  <p>Except for Section 13, providing for arbitration and waiver of class action rights, Kukai Wallet reserves the\n    right, at its sole discretion, to modify or replace the Terms at any time without notice. We will always try to\n    provide advance notice, however, we reserve the right to modify or replace the Terms at our discretion. The most\n    current version of these Terms will be posted on our Site. You shall be responsible for reviewing and becoming\n    familiar with any such modifications. Use of the Services by you after any modification to the Terms constitutes\n    your acceptance of the Terms as modified.</p>\n\n  <H4>3. Eligibility</H4>\n  <p>You hereby represent and warrant that you are fully able and competent to enter into the terms, conditions,\n    obligations, affirmations, representations and warranties set forth in these Terms and to abide by and comply with\n    these Terms.</p>\n\n  <p>Kukai Wallet is a global platform and by accessing the Content or Services, you are representing and warranting\n    that you are of the legal age of majority in your jurisdiction as is required to access such Services and Content\n    and enter into arrangements as provided by the Services. You further represent that you are otherwise legally\n    permitted to use the service in your jurisdiction including owning cryptographic tokens of value, and interacting\n    with the Services or Content in any way. You further represent you are responsible for ensuring compliance with the\n    laws of your jurisdiction and acknowledge that Kukai Wallet is not liable for your compliance with such laws.</p>\n\n  <p>In addition, you represent to us that you and your financial institutions, or any party that owns or controls you\n    or your financial institutions, are (1) not subject to sanctions or otherwise designated on any list of prohibited\n    or restricted parties, including but not limited to the lists maintained by the United Nations Security Council, the\n    U.S. Government (e.g., the Specially Designated Nationals List and Foreign Sanctions Evaders List of the U.S.\n    Department of Treasury and the Entity List of the U.S. Department of Commerce), the European Union or its Member\n    States, or other applicable government authority and (2) not located in any country to which the United States has\n    embargoed goods or has otherwise applied any sanctions.</p>\n\n  <H4>4. Account Password and Security</H4>\n  <p>When setting up an account within Kukai Wallet, you will be responsible for keeping your own account secrets, which\n    may be a word seed phrase, an account file, or other locally stored secret information. Kukai Wallet encrypts this\n    information locally with a password you provide, that we never send to our servers. You agree to (a) never use the\n    same password for Kukai Wallet that you have ever used outside of this service, (b) keep your secret information and\n    password confidential and do not share them with anyone else and (c) immediately notify Kukai Wallet of any\n    unauthorized use of your account or breach of security. Kukai Wallet cannot and will not be liable for any loss or\n    damage arising from your failure to comply with this section.\n\n  <H4>5. DISCLAIMERS- RISKS</H4>\n\n  <H5>5.1. Warranty Disclaimer</H5>\n  <p>You expressly understand and agree that your use of the Services is at your sole risk. The Services (including the\n    Site and the Content) are provided on an “as is” and “as available” basis, without warranties of any kind, either\n    express or implied, including, without limitation, implied warranties of merchantability, fitness for a particular\n    purpose or non-infringement. You acknowledge that Kukai Wallet has no control over, and no duty to take any action\n    regarding: which users gain access to or use the Services; what effects the Content may have on you; how you may\n    interpret or use the Content; or what actions you may take as a result of having been exposed to the Content. You\n    release Kukai Wallet from any and all liability for you having acquired or not acquired Content through the\n    Services. Kukai Wallet makes no representations concerning any Content contained in or accessed through the\n    Services, and Kukai Wallet will not be responsible or liable for the accuracy, copyright compliance, legality or\n    decency of material contained in or accessed through the Services.</p>\n\n  <p>We do not represent or warrant that access to the Services will be continuous, uninterrupted, timely or secure. You\n    acknowledge and accept that the Services (a) may contain bugs, errors and defects, (b) may function improperly or be\n    subject to periods of downtime and unavailability, (c) may result in total or partial loss or corruption of data and\n    (d) may be modified at any time, including through the release of subsequent versions, all with or without notice to\n    you.</p>\n\n  <p>You acknowledge that Kukai Wallet is not responsible for transferring, safeguarding, or maintaining your private\n    keys or any digital currency associated therewith. If you lose, mishandle or have stolen associated digital currency\n    private keys, you acknowledge that you may not be able to recover associated digital currency, and that Kukai Wallet\n    is not responsible for such loss. You acknowledge that Kukai Wallet is not responsible for any loss, damage or\n    liability arising from your failure to comply with the terms hereunder.</p>\n\n  <H5>5.2 Sophistication and Risk of Cryptographic Systems</H5>\n  <p>By utilizing the Services or interacting with the Content or platform in any way, you represent that you understand\n    the inherent risks associated with cryptographic systems; and warrant that you have an understanding of the usage\n    and intricacies of the native cryptographic token Tezos (xtz), smart contract based tokens, and blockchain-based\n    software systems.</p>\n\n  <H5>5.3 Risk of Regulatory Actions in One or More Jurisdictions</H5>\n  <p>Kukai Wallet and any supported cryptographic token and blockchain could be impacted by one or more regulatory\n    inquiries or regulatory action, which could impede or limit the ability of Kukai Wallet to continue to develop, or\n    which could impede or limit your ability to access or use the Services or the underlying blockchain network.</p>\n\n  <H5>5.4 Risk of Weaknesses or Exploits in the Field of Cryptography</H5>\n  <p>You acknowledge and understand that Cryptography is a progressing field. Advances in code cracking or technical\n    advances such as the development of quantum computers may present risks to cryptocurrencies and Services of Content,\n    which could result in the theft or loss of your cryptographic tokens or property. To the extent possible, Kukai\n    Wallet intends to update the protocol underlying Services to account for any advances in cryptography and to\n    incorporate additional security measures, but does not guarantee or otherwise represent full security of the system.\n    By using the Services or accessing Content, you acknowledge these inherent risks.</p>\n\n  <H5>5.5 Volatility of Cryptocurrencies</H5>\n  <p>You understand that Tezos and other blockchain technologies and associated cryptographic tokens are highly volatile\n    due to many factors including but not limited to adoption, speculation, technology and security risks. You also\n    acknowledge that the cost of transacting on such technologies is variable and may increase at any time causing\n    impact to any activities taking place on the blockchain network. You acknowledge these risks and agree that Kukai\n    Wallet cannot be held liable for such fluctuations or increased costs.</p>\n\n  <H5>5.6 Application Security</H5>\n  <p>You further acknowledge that blockchain applications are code subject to flaws and acknowledge that you are solely\n    responsible for evaluating any code provided by the Services or Content and the trustworthiness of any third-party\n    websites, products, smart-contracts, or Content you access or use through the Services. You further expressly\n    acknowledge and represent that blockchain applications can be written maliciously or negligently, that Kukai Wallet\n    cannot be held liable for your interaction with such applications and that such applications may cause the loss of\n    property or even identity. This warning and others later provided by Kukai Wallet in no way evidence or represent an\n    on-going duty to alert you to all of the potential risks of utilizing the Services or Content. The code to Kukai\n    Wallet can be found at: https://github.com/kukai-wallet/kukai.</p>\n\n  <H4>6. Indemnity</H4>\n  <p>You agree to release and to indemnify, defend and hold harmless Kukai Wallet and its principles, subsidiaries,\n    affiliates and agencies, as well as the officers, directors, employees, shareholders and representatives of any of\n    the foregoing entities, from and against any and all losses, liabilities, expenses, damages, costs (including\n    attorneys’ fees and court costs) claims or actions of any kind whatsoever arising or resulting from your use of the\n    Services, your violation of these Terms, and any of your acts or omissions that implicate publicity rights,\n    defamation or invasion of privacy, and privacy laws. Kukai Wallet reserves the right, at its own expense, to assume\n    exclusive defense and control of any matter otherwise subject to indemnification by you and, in such case, you agree\n    to cooperate with Kukai Wallet in the defense of such matter.</p>\n\n  <H4>7. Limitation on Liability</H4>\n  <p>YOU ACKNOWLEDGE AND AGREE THAT YOU ASSUME FULL RESPONSIBILITY FOR YOUR USE OF THE SITE AND THE SERVICES. YOU\n    ACKNOWLEDGE AND AGREE THAT ANY INFORMATION YOU SEND OR RECEIVE DURING YOUR USE OF THE SITE AND THE SERVICES MAY NOT\n    BE SECURE AND MAY BE INTERCEPTED OR LATER ACQUIRED BY UNAUTHORIZED PARTIES. YOU ACKNOWLEDGE AND AGREE THAT YOUR USE\n    OF THE SITE AND THE SERVICES IS AT YOUR OWN RISK. RECOGNIZING SUCH, YOU UNDERSTAND AND AGREE THAT, TO THE FULLEST\n    EXTENT PERMITTED BY APPLICABLE LAW, NEITHER KUKAI WALLET NOR ITS SUPPLIERS OR LICENSORS WILL BE LIABLE TO YOU FOR\n    ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY OR OTHER DAMAGES OF ANY KIND,\n    INCLUDING WITHOUT LIMITATION DAMAGES FOR LOSS OF PROFITS, GOODWILL, USE, DATA OR OTHER TANGIBLE OR INTANGIBLE LOSSES\n    OR ANY OTHER DAMAGES BASED ON CONTRACT, TORT, STRICT LIABILITY OR ANY OTHER THEORY (EVEN IF KUKAI WALLET HAD BEEN\n    ADVISED OF THE POSSIBILITY OF SUCH DAMAGES), RESULTING FROM THE SITE OR SERVICES; THE USE OR THE INABILITY TO USE\n    THE SITE OR THE SERVICES; UNAUTHORIZED ACCESS TO OR ALTERATION OF YOUR TRANSMISSIONS OR DATA; STATEMENTS OR CONDUCT\n    OF ANY THIRD PARTY ON THE SITE OR THE SERVICES; ANY ACTIONS WE TAKE OR FAIL TO TAKE AS A RESULT OF COMMUNICATIONS\n    YOU SEND TO US; HUMAN ERRORS; TECHNICAL MALFUNCTIONS; FAILURES, INCLUDING PUBLIC UTILITY OR TELEPHONE OUTAGES;\n    OMISSIONS, INTERRUPTIONS, LATENCY, DELETIONS OR DEFECTS OF ANY DEVICE OR NETWORK, PROVIDERS, OR SOFTWARE (INCLUDING,\n    BUT NOT LIMITED TO, THOSE THAT DO NOT PERMIT PARTICIPATION IN THE SERVICES); ANY INJURY OR DAMAGE TO COMPUTER\n    EQUIPMENT; INABILITY TO FULLY ACCESS THE SITE OR THE SERVICES OR ANY OTHER WEBSITE; THEFT, TAMPERING, DESTRUCTION,\n    OR UNAUTHORIZED ACCESS TO, IMAGES OR OTHER CONTENT OF ANY KIND; DATA THAT IS PROCESSED LATE OR INCORRECTLY OR IS\n    INCOMPLETE OR LOST; TYPOGRAPHICAL, PRINTING OR OTHER ERRORS, OR ANY COMBINATION THEREOF; OR ANY OTHER MATTER\n    RELATING TO THE SITE OR ANY OTHER ASPECT OF THE SERVICES.</p>\n\n  <p>SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF CERTAIN WARRANTIES OR THE LIMITATION OR EXCLUSION OF LIABILITY FOR\n    INCIDENTAL OR CONSEQUENTIAL DAMAGES. ACCORDINGLY, SOME OF THE ABOVE LIMITATIONS MAY NOT APPLY TO YOU.</p>\n\n  <H4>8. Intellectual Property</H4>\n  <H5>8.1 Our Proprietary Rights</H5>\n  <p>All title, ownership and intellectual property rights in and to the Services are owned by Kukai Wallet or its\n    licensors. You acknowledge and agree that the Services contains proprietary and confidential information that is\n    protected by applicable intellectual property and other laws. Except as expressly authorized by Kukai Wallet, you\n    agree not to copy, modify, rent, lease, loan, sell, distribute, perform, display or create derivative works based on\n    the Site, or the Services, in whole or in part.</p>\n\n  <H5>8.2 Limited License</H5>\n  <p>We grant you limited, non-exclusive, revocable permission to make use of the Site, and the Services (collectively\n    referred to as, “Access”). This Access shall remain in effect until and unless terminated by you or us. You promise\n    and agree that you will not redistribute or transfer the Services.</p>\n\n  <p>The Kukai Wallet software application, including without limitation the Site, and the Services, are not sold or\n    transferred to you, and Kukai Wallet and its licensors retain ownership of all copies of the software applications\n    even after installation on your personal computers, mobile handsets, tablets, wearable devices, speakers and/or\n    other devices (“Devices”).</p>\n\n  <p>All Kukai Wallet trademarks, service marks, trade names, logos, domain names, and any other features of the Kukai\n    Wallet brand (“Kukai Wallet Brand Features”) are the sole property of Kukai Wallet or its licensors. The Terms do\n    not grant you any rights to use any Kukai Wallet Brand Features whether for commercial or non-commercial use.</p>\n\n  <p>You agree to abide by our user guidelines and not to use the Services or any part thereof in any manner not\n    expressly permitted by the Terms. Except for the rights expressly granted to you in the Terms, Kukai Wallet grants\n    no right, title, or interest to you in the Site or the Services.</p>\n\n  <p>Third party software (for example, open source software libraries) included in the Services are made available to\n    you under the relevant third party software library’s license terms.</p>\n\n  <p>Notwithstanding anything herein to the contrary, nothing in the Terms entitles you to copy, modify, fork, merge,\n    combine with another program or create a derivative work of the Services, including without limitation the Site.</p>\n\n  <H4>9. Links</H4>\n  <p>The Services provide, or third parties may provide, links to other World Wide Web or accessible sites, applications\n    or resources. Because Kukai Wallet has no control over such sites, applications and resources, you acknowledge and\n    agree that Kukai Wallet is not responsible for the availability of such external sites, applications or resources,\n    and does not endorse and is not responsible or liable for any content, advertising, products or other materials on\n    or available from such sites or resources. You further acknowledge and agree that Kukai Wallet shall not be\n    responsible or liable, directly or indirectly, for any damage or loss caused or alleged to be caused by or in\n    connection with use of or reliance on any such content, goods or services available on or through any such site or\n    resource.</p>\n\n  <H4>10. Termination and Suspension</H4>\n  <p>Kukai Wallet may terminate or suspend all or part of the Services and your Kukai Wallet access immediately, without\n    prior notice or liability, if you breach any of the terms or conditions of the Terms. Upon termination of your\n    access, your right to use the Services will immediately cease.</p>\n\n  <p>The following provisions of the Terms survive any termination of these Terms: INDEMNITY; WARRANTY DISCLAIMERS;\n    LIMITATION ON LIABILITY; OUR PROPRIETARY RIGHTS; LINKS; TERMINATION; NO THIRD PARTY BENEFICIARIES; BINDING\n    ARBITRATION AND CLASS ACTION WAIVER; GENERAL INFORMATION.</p>\n\n  <H4>11. No Third Party Beneficiaries</H4>\n  <p>You agree that, except as otherwise expressly provided in these Terms, there shall be no third party beneficiaries\n    to the Terms.</p>\n\n  <H4>12. Notice and Procedure For Making Claims of Copyright Infringement</H4>\n  <p>If you believe that your copyright or the copyright of a person on whose behalf you are authorized to act has been\n    infringed, please provide Kukai Wallet’s Copyright Agent a written Notice containing the following information:</p>\n\n  <p>- an electronic or physical signature of the person authorized to act on behalf of the owner of the copyright or\n    other intellectual property interest;\n    <BR>- a description of the copyrighted work or other intellectual property that you claim has been infringed;\n    <BR>- a description of where the material that you claim is infringing is located on the Services;\n    your address, telephone number, and email address;\n    <BR>- a statement by you that you have a good faith belief that the disputed use is not authorized by the copyright\n    owner, its agent, or the law;\n    <BR>- a statement by you, made under penalty of perjury, that the above information in your Notice is accurate and\n    that you are the copyright or intellectual property owner or authorized to act on the copyright or intellectual\n    property owner’s behalf.</p>\n\n  <p>Kukai Wallet’s Copyright Agent can be reached at:</p>\n\n  <p>Email: legal@kukai.app</p>\n\n  <H4>13. Binding Arbitration and Class Action Waiver</H4>\n\n  <p>PLEASE READ THIS SECTION CAREFULLY – IT MAY SIGNIFICANTLY AFFECT YOUR LEGAL RIGHTS, INCLUDING YOUR RIGHT TO FILE A\n    LAWSUIT IN COURT</p>\n\n  <H5>13.1 Initial Dispute Resolution</H5>\n\n  <p>The parties shall use their best efforts to engage directly to settle any dispute, claim, question, or disagreement\n    and engage in good faith negotiations which shall be a condition to either party initiating a lawsuit or\n    arbitration.</p>\n\n  <H5>13.2 Binding Arbitration</H5>\n\n  <p>If the parties do not reach an agreed upon solution within a period of 30 days from the time informal dispute\n    resolution under the Initial Dispute Resolution provision begins, then either party may initiate arbitration as the\n    sole means to resolve all claims, subject to the terms set forth below. Specifically, all claims arising out of or\n    relating to these Terms (including their formation, performance and breach), the parties’ relationship with each\n    other and/or your use of the Services shall be finally settled by binding arbitration administered by the American\n    Arbitration Association in accordance with the provisions of its Commercial Arbitration Rules and the supplementary\n    procedures for consumer related disputes of the American Arbitration Association (the “AAA”), excluding any rules or\n    procedures governing or permitting class actions.</p>\n\n  <p>The arbitrator, and not any federal, state or local court or agency, shall have exclusive authority to resolve all\n    disputes arising out of or relating to the interpretation, applicability, enforceability or formation of these\n    Terms, including, but not limited to any claim that all or any part of these Terms are void or voidable, or whether\n    a claim is subject to arbitration. The arbitrator shall be empowered to grant whatever relief would be available in\n    a court under law or in equity. The arbitrator’s award shall be written, and binding on the parties and may be\n    entered as a judgment in any court of competent jurisdiction.</p>\n\n  <p>The parties understand that, absent this mandatory provision, they would have the right to sue in court and have a\n    jury trial. They further understand that, in some instances, the costs of arbitration could exceed the costs of\n    litigation and the right to discovery may be more limited in arbitration than in court.</p>\n\n  <H5>13.3 Location</H5>\n\n  <p>Binding arbitration shall take place in Louisiana. You agree to submit to the personal jurisdiction of any federal\n    or state court in Orleans Parish, Louisiana, in order to compel arbitration, to stay proceedings pending\n    arbitration, or to confirm, modify, vacate or enter judgment on the award entered by the arbitrator.</p>\n\n  <H5>13.4 Class Action Waiver</H5>\n\n  <p>The parties further agree that any arbitration shall be conducted in their individual capacities only and not as a\n    class action or other representative action, and the parties expressly waive their right to file a class action or\n    seek relief on a class basis. YOU AND KUKAI WALLET AGREE THAT EACH MAY BRING CLAIMS AGAINST THE OTHER ONLY IN YOUR\n    OR ITS INDIVIDUAL CAPACITY, AND NOT AS A PLAINTIFF OR CLASS MEMBER IN ANY PURPORTED CLASS OR REPRESENTATIVE\n    PROCEEDING. If any court or arbitrator determines that the class action waiver set forth in this paragraph is void\n    or unenforceable for any reason or that an arbitration can proceed on a class basis, then the arbitration provision\n    set forth above shall be deemed null and void in its entirety and the parties shall be deemed to have not agreed to\n    arbitrate disputes.</p>\n\n  <H5>13.5 Exception - Litigation of Intellectual Property and Small Claims Court Claims</H5>\n\n  <p>Notwithstanding the parties’ decision to resolve all disputes through arbitration, either party may bring an action\n    in state or federal court to protect its intellectual property rights (“intellectual property rights” means patents,\n    copyrights, moral rights, trademarks, and trade secrets, but not privacy or publicity rights). Either party may also\n    seek relief in a small claims court for disputes or claims within the scope of that court’s jurisdiction.</p>\n\n  <H5>13.6 Choice of Law</H5>\n\n  <p>The Terms and the relationship between you and Kukai Wallet shall be governed by the laws of the State of Louisiana\n    without regard to conflict of law provisions.</p>\n\n  <H4>14. GENERAL INFORMATION</H4>\n\n  <H5>14.1 Entire Agreement</H5>\n\n  <p>These Terms (and any additional terms, rules and conditions of participation that Kukai Wallet may post on the\n    Services) constitute the entire agreement between you and Kukai Wallet with respect to the Services and supersedes\n    any prior agreements, oral or written, between you and Kukai Wallet. In the event of a conflict between these Terms\n    and the additional terms, rules and conditions of participation, the latter will prevail over the Terms to the\n    extent of the conflict.</p>\n\n  <H5>14.2 Waiver and Severability of Terms</H5>\n\n  <p>The failure of Kukai Wallet to exercise or enforce any right or provision of the Terms shall not constitute a\n    waiver of such right or provision. If any provision of the Terms is found by an arbitrator or court of competent\n    jurisdiction to be invalid, the parties nevertheless agree that the arbitrator or court should endeavor to give\n    effect to the parties’ intentions as reflected in the provision, and the other provisions of the Terms remain in\n    full force and effect.</p>\n\n  <H5>14.3 Statute of Limitations</H5>\n\n  <p>You agree that regardless of any statute or law to the contrary, any claim or cause of action arising out of or\n    related to the use of the Services or the Terms must be filed within one (1) year after such claim or cause of\n    action arose or be forever barred.</p>\n\n  <H5>14.4 Section Titles</H5>\n\n  <p>The section titles in the Terms are for convenience only and have no legal or contractual effect.</p>\n\n  <H5>14.5 Communications</H5>\n\n  <p>Users with questions, complaints or claims with respect to the Services may contact us using the relevant contact\n    information set forth above or email us at: contact@kukai.app</p>\n</div>","import { Injectable } from '@angular/core';\nimport { KeyPair } from '../../interfaces';\nimport { WalletService } from '../wallet/wallet.service';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { Parser } from '@taquito/michel-codec';\nimport { valueEncoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { OperationService } from '../operation/operation.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmbeddedAuthService {\n  constructor(private walletService: WalletService, private operationService: OperationService) {}\n  async authenticate(authReq: any, origin: string, keyPair: KeyPair = null): Promise<{ message: string; signature: string }> {\n    if (!origin) {\n      throw new Error('NO_DOMAIN_FOUND');\n    } else if ((!this.walletService?.wallet || !this.walletService.isEmbeddedTorusWallet()) && !keyPair) {\n      throw new Error('NO_WALLET_FOUND');\n    }\n    if (!keyPair) {\n      keyPair = await this.walletService.getKeys('', this.walletService.wallet.implicitAccounts[0].pkh).catch((e) => {\n        throw new Error('NO_KEYS_FOUND');\n      });\n    }\n    const authMessage: string = this.createAuthMessage(authReq?.id, authReq?.nonce, origin, keyPair.pk, keyPair.pkh);\n    const signature = this.signMessage(authMessage, keyPair.sk);\n    return { message: authMessage, signature };\n  }\n  async signExprSilent(hexExpr: string): Promise<string> {\n    const keyPair = await this.walletService.getKeys('', this.walletService.wallet.implicitAccounts[0].pkh).catch((e) => {\n      throw new Error('NO_KEYS_FOUND');\n    });\n    const signature: string = this.operationService.sign(hexExpr, keyPair.sk).edsig;\n    return signature;\n  }\n  private createAuthMessage(requestId: string = '', nonce: string = '', domain: string, publicKey: string, address: string): string {\n    if (typeof requestId !== 'string') {\n      throw new Error('INVALID_REQUEST_ID');\n    } else if (typeof nonce !== 'string') {\n      throw new Error('INVALID_NONCE');\n    }\n    const authPayload: any = {\n      requestId,\n      purpose: 'authentication',\n      currentTime: Math.floor(Date.now() / 1000).toString(), // UNIX timestamp\n      nonce,\n      network: this._network(),\n      publicKey,\n      address,\n      domain\n    };\n    if (!requestId) {\n      delete authPayload.requestId;\n    }\n    if (!nonce) {\n      delete authPayload.nonce;\n    }\n    return `Tezos Signed Message: ${JSON.stringify(authPayload)}`;\n  }\n  _network(): string {\n    return CONSTANTS.NETWORK;\n  }\n  private signMessage(message: string, sk: string): string {\n    const parser = new Parser();\n    const expr = parser.parseMichelineExpression(`\"${message.replace(/\"/g, '\\\\\"')}\"`);\n    const hexMessage = `05${valueEncoder(expr)}`;\n    const signature: string = this.operationService.sign(hexMessage, sk).edsig;\n    return signature;\n  }\n}\n","import { Account } from '../../../services/wallet/wallet';\nimport { Template } from 'kukai-embed';\nexport interface PrepareRequest {\n  account: Account;\n  tokenTransfer: string;\n  symbol: string;\n}\nexport interface TemplateRequest {\n  template: Template;\n  ops?: FullyPreparedTransaction[];\n  partialOps?: PartiallyPreparedTransaction[];\n  fee?: TemplateFee;\n}\nexport interface TemplateFee {\n  network: string;\n  storage: string;\n  total: string;\n}\n\nexport interface ConfirmSwapRequest {\n  account: Account;\n  transactions: FullyPreparedTransaction[];\n  externalReq: boolean;\n}\n\nexport enum LqdEntrypoints {\n  addLiquidity = 'addLiquidity',\n  removeLiquidity = 'removeLiquidity',\n  xtzToToken = 'xtzToToken',\n  tokenToXtz = 'tokenToXtz'\n}\n\nexport interface ConfirmRequest {\n  account: Account;\n  tokenTransfer: string;\n  transactions: FullyPreparedTransaction[];\n  externalReq: boolean;\n}\nexport interface PartiallyPreparedTransaction {\n  kind: 'transaction';\n  amount: string;\n  destination: string;\n  parameters?: any;\n  meta?: {\n    alias: string;\n    verifier: string;\n    twitterId?: string;\n  };\n  gasRecommendation?: string;\n  storageRecommendation?: string;\n}\nexport interface FullyPreparedTransaction extends PartiallyPreparedTransaction {\n  fee: string;\n  gasLimit: string;\n  storageLimit: string;\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"flex-row content\">\n    <div class=\"flex-column liquidity-baking\">\n      <div class=\"flex-row main-container\">\n        <div class=\"flex-column right\" [class.expanded]=\"advancedForm\" [class.loaded]=\"chartInit\" [class.expanded-00]=\"moreInfo && mode === Mode.swap\" [class.expanded-01]=\"advancedForm && mode === Mode.swap\" [class.expanded-10]=\"moreInfo && advancedForm && mode === Mode.swap\" [class.expanded-11]=\"mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-100]=\"moreInfo && mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-101]=\"advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-110]=\"moreInfo && advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-111]=\"mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\" [class.expanded-1000]=\"moreInfo && mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\" [class.expanded-1001]=\"advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\" [class.expanded-1010]=\"moreInfo && advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\">\n          <app-ui-chart #leftChart class=\"popout\" [design]=\"'default'\" [type]=\"'line'\" [units]=\"units\" [datas]=\"chartDatas\"\n            [attributes]=\"attributes\" (drawn)=\"chartInit = true;\"></app-ui-chart>\n            <div class=\"filler\" [style.display]=\"chartInit ? '' : 'none'\"></div>\n        </div>\n        <div class=\"flex-column left\" [class.expanded]=\"advancedForm\">\n          <div class=\"flex-column top\">\n            <div class=\"flex-row container-toggle\">\n              <button [class.active]=\"mode === Mode.swap\" (click)=\"toggleMode(Mode.swap)\">SWAP</button>\n              <button [class.active]=\"mode === Mode.liquidity\" (click)=\"toggleMode(Mode.liquidity)\">LIQUIDITY</button>\n            </div>\n            <div class=\"flex-row button close\" (click)=\"close()\"><img class=\"x\"\n                src=\"../../../../../assets/img/close-btn-x.png\" />\n            </div>\n          </div>\n          <app-ui-chart #miniChart class=\"popout-mini\" [design]=\"'mini'\" [type]=\"'line'\" [units]=\"units\"\n            [data]=\"chartData\" [datas]=\"chartDatas\" [attributes]=\"attributes\">\n          </app-ui-chart>\n          <ng-container *ngIf=\"mode === Mode.liquidity\">\n            <form autocomplete=\"off\">\n              <div class=\"flex-column container-toggle-secondary\">\n                <div class=\"flex-row buttons\">\n                  <button [class.active]=\"entrypoint === LqdEntrypoints.addLiquidity\" (click)=\"toggleDirection(0)\">\n                    ADD\n                  </button>\n                  <button [class.active]=\"entrypoint === LqdEntrypoints.removeLiquidity\" (click)=\"toggleDirection(1)\">\n                    REMOVE\n                  </button>\n                </div>\n              </div>\n              <div class=\"flex-column container-inputs\" [class.liquidity]=\"entrypoint === LqdEntrypoints.addLiquidity\">\n                <div class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRaw\" [placeholder]=\"'0'\" value=\"\"\n                        (paste)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\"\n                        (input)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ entrypoint === LqdEntrypoints.addLiquidity ? 'XTZ' : 'SIRS' }}</span>\n                      <img\n                        [src]=\"entrypoint === LqdEntrypoints.addLiquidity ? 'assets/img/tezos-xtz-logo.svg' : 'assets/img/tokens/sirius.png'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">{{ entrypoint === LqdEntrypoints.addLiquidity ? 'Add' : 'Remove' }}</div>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.removeLiquidity\" class=\"hint\" (click)=\"updateMaxAmount('qtyRaw')\">Balance: <span class=\"max\">{{lqdBalance}}</span></span>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.addLiquidity\" class=\"hint\">Balance: {{xtzBalance}}</span>\n                </div>\n                <div *ngIf=\"entrypoint === LqdEntrypoints.addLiquidity\" class=\"seperator files add\">\n                  <span class=\"img-wrap\"><img\n                      [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-plus.svg'\" /></span>\n                </div>\n                <div *ngIf=\"entrypoint === LqdEntrypoints.addLiquidity\" class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRawOut\" placeholder=\"0\" [value]=\"qtyRawOut\"\n                        (input)=\"sanitizeNumberInput($event, 8, 'qtyRawOut')\"\n                        (paste)=\"sanitizeNumberInput($event, 8, 'qtyRawOut')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ 'tzBTC' }}</span>\n                      <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">Add</div>\n                  <span class=\"hint\" (click)=\"updateMaxAmount('qtyRawOut')\">Balance: <span class=\"max\">{{ tzBTCBalance\n                      }}</span></span>\n                </div>\n              </div>\n            </form>\n          </ng-container>\n          <ng-container *ngIf=\"mode === Mode.swap\">\n            <form autocomplete=\"off\">\n              <div class=\"flex-column container-inputs\">\n                <div class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRaw\" [placeholder]=\"'0'\" value=\"\"\n                        (paste)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\"\n                        (input)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ entrypoint === LqdEntrypoints.xtzToToken ? 'XTZ' : 'tzBTC' }}</span>\n                      <img\n                        [src]=\"entrypoint === LqdEntrypoints.xtzToToken ? 'assets/img/tezos-xtz-logo.svg' : 'assets/img/tokens/tzbtc.png'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">From</div>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.xtzToToken\" class=\"hint\">Balance: {{ xtzBalance}}</span>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.tokenToXtz\" class=\"hint\" (click)=\"updateMaxAmount('qtyRaw')\">Balance: <span class=\"max\">{{tzBTCBalance}}</span></span>\n                </div>\n                <div class=\"seperator files add\" (click)=\"toggleDirection()\">\n                  <span class=\"img-wrap\"><img\n                      [src]=\"simSemaphore ? 'assets/img/feeLoader.gif' : 'assets/img/swap.svg'\" /></span>\n                </div>\n                <div class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRawOut\" [placeholder]=\"'0'\"\n                        (paste)=\"sanitizeNumberInput($event, qtyOut.decimalPlaces, 'qtyRawOut')\"\n                        (input)=\"sanitizeNumberInput($event, qtyOut.decimalPlaces, 'qtyRawOut')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ entrypoint === LqdEntrypoints.xtzToToken ? 'tzBTC' : 'XTZ' }}</span>\n                      <img\n                        [src]=\"entrypoint === LqdEntrypoints.xtzToToken ? 'assets/img/tokens/tzbtc.png' : 'assets/img/tezos-xtz-logo.svg'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">Expected</div>\n                      <span *ngIf=\"entrypoint === LqdEntrypoints.tokenToXtz\" class=\"hint\">Balance: {{ xtzBalance }}</span>\n                      <span *ngIf=\"entrypoint === LqdEntrypoints.xtzToToken\" class=\"hint\">Balance: {{ tzBTCBalance }}</span>\n                </div>\n              </div>\n            </form>\n          </ng-container>\n          <div *ngIf=\"expectedRate\" class=\"flex-row item expected-rate\">\n            <span class=\"flex-row key\">Exchange Rate:</span>\n            <span class=\"value\">{{ expectedRate }}</span>\n          </div>\n          <div class=\"flex-column more-info-toggle\" [class.expanded]=\"moreInfo\">\n            <div class=\"flex-row item\" (click)=\"moreInfo = !moreInfo\">\n              <span class=\"value\">{{ 'View Details' }} <span *ngIf=\"impactDouble >= 0.04\" class=\"price-impact\">Price\n                  Impact {{ impactDouble | percent:'1.2-2' }}</span></span>\n              <div class=\"flex-row\"><img src=\"assets/img/chevron-down.svg\"></div>\n            </div>\n          </div>\n          <div *ngIf=\"moreInfo\" class=\"more-info-body\"\n            [class.expanded]=\"moreInfo\">\n            <div class=\"flex-row item\">\n              <span class=\"flex-row key\">Price Impact:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The impact your transaction is expected to make on the exchange rate. The size of your swap relative to the size of the pool determines the impact. Note: This impact is what you are accepting in addition to the slippage.\n                </div>\n              </span>\n              <span class=\"value\" [class.warning]=\"impactDouble > 0.04\">{{impactDouble > 0.005 ? (impactDouble | percent:'1.2-2') : \"<0.5%\"}}</span>\n            </div>\n            <div *ngIf=\"(LqdEntrypoints.xtzToToken === entrypoint)\" class=\"flex-row item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span>\n              <span class=\"value\">{{(minimumToken?.internalNormalised | number:'1.2-8') || 0}} tzBTC</span>\n            </div>\n            <div *ngIf=\"(LqdEntrypoints.tokenToXtz === entrypoint)\" class=\"flex-row item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span>\n              <span class=\"value\">{{(minimumXtz?.internalNormalised | number:'1.6-6') || 0}} XTZ</span>\n            </div>\n            <div\n              *ngIf=\"(LqdEntrypoints.removeLiquidity === entrypoint)\"\n              class=\"item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span><br />\n              <span class=\"value\">{{(minimumXtz?.internalNormalised | number:'1.6-6') || 0}} XTZ + {{\n                (minimumToken?.internalNormalised | number:'1.2-8') || 0}} tzBTC</span>\n            </div>\n            <div *ngIf=\"(LqdEntrypoints.addLiquidity === entrypoint)\" class=\"flex-row item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span>\n              <span class=\"value\">{{(minimumLqd?.internalNormalised | number:'1.0-0') || 0}} SIRS</span>\n            </div>\n            <div class=\"flex-column slippage\">\n              <span class=\"flex-row label\">Slippage&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  Your transaction will not complete if the exchange rate changes unfavorably by more than this slippage percentage. The slippage does not include the Price Impact, when swapping you are accepting both the Price Impact % and the Slippage %.\n                </div>\n              </span>\n              <div class=\"flex-row inputs\">\n                <button [class.active]=\"slippage === 0.005\" (click)=\"slippage = 0.005; update()\">\n                  0.5%\n                </button>\n                <button [class.active]=\"slippage === 0.01\" (click)=\"slippage = 0.01; update()\">\n                  1%\n                </button>\n                <button [class.active]=\"slippage === 0.03\" (click)=\"slippage = 0.03; update()\">\n                  3%\n                </button>\n                <form autocomplete=\"off\">\n                  <input inputmode=\"decimal\" [class.active]=\"slippage !== 0.03 && slippage !== 0.01 && slippage !== 0.005\"\n                    (input)=\"customSlippage($event)\" (focus)=\"customSlippageFocus($event)\" (blur)=\"customSlippageBlur($event)\"\n                    [placeholder]=\"slippage * 100\" value=\"\" />\n                  <span class=\"placeholder-secondary\">%</span>\n                </form>\n              </div>\n            </div>\n          </div>\n          <div class=\"flex-column more-info-toggle\" [class.expanded]=\"advancedForm\">\n            <div class=\"flex-row item\" (click)=\"advancedForm = !advancedForm\">\n              <span class=\"value\">{{ 'Advanced' }}</span>\n              <div class=\"flex-row\"><img src=\"assets/img/chevron-down.svg\"></div>\n            </div>\n          </div>\n          <form *ngIf=\"advancedForm\" autocomplete=\"off\" class=\"more-info-body\" [class.expanded]=\"advancedForm\">\n            <div class=\"flex-row\">\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Gas limit</label>\n                <input inputmode=\"decimal\" type=\"text\" class=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\"\n                  (paste)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\"\n                  placeholder={{this.defaultTransactionParams.gas.toString()}} [value]=\"customGasLimit\">\n              </div>\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Fee</label>\n                <input inputmode=\"decimal\" type=\"text\" (input)=\"sanitizeNumberInput($event, 6, 'customFee')\"\n                  (paste)=\"sanitizeNumberInput($event, 6, 'customFee')\" class=\"text\"\n                  placeholder={{this.defaultTransactionParams.fee.toString()}} [value]=\"customFee\">\n              </div>\n            </div>\n            <div class=\"flex-row\">\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Storage limit</label>\n                <input inputmode=\"decimal\" type=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\"\n                  (paste)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\" class=\"text\"\n                  placeholder={{this.defaultTransactionParams.storage.toString()}} [value]=\"customStorageLimit\">\n              </div>\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Max Storage cost</label>\n                <input inputmode=\"decimal\" type=\"text\" class=\"text read-only\" [value]=\"burnAmount() ? burnAmount() : '0 tez'\" tabindex=-1\n                  readonly>\n              </div>\n            </div>\n          </form>\n          <div class=\"flex-column bottom\">\n            <div class=\"seperator\"></div>\n            <span class=\"form-validity error\">{{ formInvalid || latestSimError }}</span>\n            <button class=\"confirm\" [disabled]=\"formInvalid || latestSimError\" (click)=\"preview()\">Preview</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FullyPreparedTransaction, PartiallyPreparedTransaction, LqdEntrypoints } from '../../misc/send/interfaces';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { TezosDomainsService } from '../../../services/tezos-domains/tezos-domains.service';\nimport { TokenBalancesService } from '../../../services/token-balances/token-balances.service';\nimport { TokenService } from '../../../services/token/token.service';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { SwapLiquidityService } from '../../../services/swap-liquidity/swap-liquidity.service';\nimport { Amount } from '../../../services/swap-liquidity/classes/Amount';\nimport { ModalComponent } from '../modal.component';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { DefaultTransactionParams } from '../../../interfaces';\nimport Big from 'big.js';\nimport { Account } from '../../../services/wallet/wallet';\nimport assert from 'assert';\nimport { TranslateService } from '@ngx-translate/core';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { TorusService } from '../../../services/torus/torus.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { take } from 'rxjs/operators';\nimport { ChartComponent, ChartSeries } from '../../ui/chart/chart.component';\nimport { ChartData } from 'chart.js';\nimport { ChartService, ChartTitle } from '../../../services/chart/chart.service';\n\nenum Mode {\n  swap = 'swap',\n  liquidity = 'liquidity'\n}\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n\n@Component({\n  selector: 'app-swap-liquidity',\n  templateUrl: './swap-liquidity.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class SwapLiquidityComponent extends ModalComponent {\n  @ViewChild('leftChart') leftChart: ChartComponent;\n  @ViewChild('miniChart') miniChart: ChartComponent;\n  @Output() prepareResponse = new EventEmitter();\n  LqdEntrypoints = LqdEntrypoints;\n  Mode = Mode;\n  Object = Object;\n  mode = Mode.swap;\n  entrypoint: string = LqdEntrypoints.xtzToToken;\n  advancedForm = false;\n\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n\n  readonly lqdTokenContract = 'KT1AafHA1C1vk959wvHWBispY9Y2f3fxBUUo';\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  readonly costPerByte: string = this.estimateService.costPerByte;\n\n  moreInfo = false;\n\n  formInvalid = '';\n  latestSimError = '';\n\n  customFee = '';\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  minimumLqd: Amount = null;\n  minimumXtz: Amount = null;\n  minimumToken: Amount = null;\n  xtzRequired: Amount = null;\n  expectedRate: string;\n  impactDouble: number;\n  qty: Amount = new Amount({\n    normalisedAmount: '',\n    decimalPlaces: 6\n  });\n  qtyRaw = '';\n  qtyOut: Amount = new Amount({\n    normalisedAmount: '',\n    decimalPlaces: 8\n  });\n  qtyRawOut = '';\n  slippage = 0.005;\n\n  xtzBalance = '0';\n  lqdBalance = '0';\n  tzBTCBalance = '0';\n\n  activeAccount = null;\n  transactions: PartiallyPreparedTransaction[] = [];\n\n  balances: any[];\n  name = 'swap-liquidity';\n\n  private subscriptions: Subscription = new Subscription();\n  simSemaphore = 0;\n\n  tooltipValue: string = '--';\n  titleColor = '#333';\n  series = 'day';\n  units = 'tzBTC';\n  attributes: any = {};\n  chartData: ChartData;\n  chartDatas: Array<ChartData> = [];\n  chartOptions = null;\n  popoutOptions: any;\n  chartInit = false;\n\n  constructor(\n    public tokenService: TokenService,\n    public walletService: WalletService,\n    private estimateService: EstimateService,\n    public tezosDomainService: TezosDomainsService,\n    public tokenBalancesService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private swapLiquidityService: SwapLiquidityService,\n    private operationService: OperationService,\n    public torusService: TorusService,\n    private translate: TranslateService,\n    public tezosDomains: TezosDomainsService,\n    private inputValidationService: InputValidationService,\n    private messageService: MessageService,\n    private chartService: ChartService\n  ) {\n    super();\n    const setTokenBalances = () => {\n      this.xtzBalance = Big(this.activeAccount?.balanceXTZ ?? 0)\n        .div(10 ** 6)\n        .toString();\n      this.lqdBalance = this.balances.find((b) => b.contractAddress === this.lqdTokenContract && b.id == 0)?.balance ?? '0';\n      this.tzBTCBalance = this.balances.find((b) => b.contractAddress === this.tzBTCContract && b.id == 0)?.balance ?? '0';\n    };\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        if (!!activeAccount) {\n          this.activeAccount = activeAccount;\n          this.balances = this.tokenBalancesService?.balances;\n          setTokenBalances();\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        this.balances = p?.balances ?? this.tokenBalancesService?.balances;\n        setTokenBalances();\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(() => {\n        this.balances = this.tokenBalancesService?.balances;\n        setTokenBalances();\n      })\n    );\n  }\n\n  async initChartsMobile(): Promise<void> {\n    Promise.all([\n      this.chartService.fetchLBGraphData(ChartSeries.day),\n      this.chartService.fetchLBGraphData(ChartSeries.week),\n      this.chartService.fetchLBGraphData(ChartSeries.month),\n      this.chartService.fetchLBGraphData(ChartSeries.year)\n    ]).then((arr) => {\n      this.chartDatas[ChartSeries.day] = arr[0];\n      this.chartDatas[ChartSeries.week] = arr[1];\n      this.chartDatas[ChartSeries.month] = arr[2];\n      this.chartDatas[ChartSeries.year] = arr[3];\n      //prevents race cond\n      if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n        this.leftChart?.toggleSet(ChartTitle.XTZtzBTC);\n        this.miniChart?.toggleSet(ChartTitle.XTZtzBTC);\n      } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n        this.leftChart?.toggleSet(ChartTitle.tzBTCXTZ);\n        this.miniChart?.toggleSet(ChartTitle.tzBTCXTZ);\n      } else if (this.entrypoint === LqdEntrypoints.addLiquidity || this.entrypoint === LqdEntrypoints.removeLiquidity) {\n        this.leftChart?.toggleSet(ChartTitle.totalValueLocked);\n        this.miniChart?.toggleSet(ChartTitle.totalValueLocked);\n      }\n      this.leftChart?.toggleSeries(ChartSeries.day);\n      this.miniChart?.toggleSeries(ChartSeries.week);\n    });\n  }\n\n  async initChartsDesktop(): Promise<void> {\n    Promise.all([\n      this.chartService.fetchLBGraphData(ChartSeries.day),\n      this.chartService.fetchLBGraphData(ChartSeries.week),\n      this.chartService.fetchLBGraphData(ChartSeries.month),\n      this.chartService.fetchLBGraphData(ChartSeries.year)\n    ]).then((arr) => {\n      this.chartDatas[ChartSeries.day] = arr[0];\n      this.chartDatas[ChartSeries.week] = arr[1];\n      this.chartDatas[ChartSeries.month] = arr[2];\n      this.chartDatas[ChartSeries.year] = arr[3];\n      //prevents race cond\n      if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n        this.leftChart?.toggleSet(ChartTitle.XTZtzBTC);\n        this.leftChart?.toggleSeries(ChartSeries.day);\n      } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n        this.leftChart?.toggleSet(ChartTitle.tzBTCXTZ);\n        this.leftChart?.toggleSeries(ChartSeries.day);\n      } else if (this.entrypoint === LqdEntrypoints.addLiquidity || this.entrypoint === LqdEntrypoints.removeLiquidity) {\n        this.leftChart?.toggleSet(ChartTitle.totalValueLocked);\n        this.leftChart?.toggleSeries(ChartSeries.month);\n      }\n    });\n  }\n\n  async initCharts(): Promise<void> {\n    const isMobile = document.documentElement.style.getPropertyValue('--is-mobile');\n    const style = getComputedStyle(document.body);\n    this.titleColor = style.getPropertyValue('--base-font-color');\n    if (isMobile === '1') {\n      await this.initChartsMobile();\n    } else {\n      await this.initChartsDesktop();\n    }\n  }\n\n  birthExchangeRate(): void {\n    let qty = new Amount({\n      normalisedAmount: 1,\n      decimalPlaces: 6\n    });\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const rate = this.swapLiquidityService.xtzToTokenExchangeRateDisplay(qty, xtzPool, tokenPool, this.swapLiquidityService.settings('liquidityBaking'));\n    this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(rate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n  }\n\n  async init(): Promise<boolean> {\n    this.qtyRaw = '';\n    this.qty = new Amount({\n      normalisedAmount: 0,\n      decimalPlaces: 6\n    });\n    this.balances = this.tokenBalancesService?.balances;\n    const r = await this.hydratePools();\n    this.attributes = { APY: this.swapLiquidityService.estimateLiquidityBakingAPY() };\n    this.initCharts();\n    this.birthExchangeRate();\n    return r;\n  }\n\n  async open(): Promise<void> {\n    this.subjectService.activeAccount.pipe(take(1)).subscribe(async (activeAccount) => {\n      this.activeAccount = activeAccount;\n      await this.estimateService.preLoadData(this.activeAccount.pkh, this.activeAccount.pk);\n      if (await this.init()) {\n        super.open();\n      }\n      this.messageService.stopSpinner();\n    });\n  }\n\n  close(): void {\n    this.reset();\n    this.mode = Mode.swap;\n    this.entrypoint = LqdEntrypoints.xtzToToken;\n    this.chartInit = false;\n    super.close();\n  }\n\n  calculateXtzToToken(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 6\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 8\n    });\n    const xtzToSell = this.qty;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateXtzToToken(\n      xtzToSell,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumToken = result.minimum;\n    this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.rate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    this.impactDouble = result.impactDouble;\n    this.qtyOut = result.expected;\n    this.qtyRawOut = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n  }\n\n  calculateTokenToXTZFromXTZ(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 8\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 6\n    });\n    const xtzToBuy = this.qtyOut;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateTokenToXTZFromXTZ(\n      xtzToBuy,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumXtz = result.xtz.minimum;\n    this.expectedRate = `1 tzBTC ($${Big(result.xtz.rate).times(this.walletService?.wallet?.XTZrate).toFixed(2)}) = ${Big(result.xtz.rate).toFixed(\n      xtzPool.decimalPlaces\n    )} XTZ`;\n    this.impactDouble = result.xtz.impactDouble;\n    this.qty = result.token.expected;\n    this.qtyRaw = result.token.expected?.internalNormalised.toFixed(result.token.expected?.decimalPlaces).toString();\n  }\n\n  calculateTokenToXTZ(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 8\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 6\n    });\n    const tokenToSell = this.qty;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateTokenToXTZ(\n      tokenToSell,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumXtz = result.minimum;\n    this.expectedRate = `1 tzBTC ($${Big(result.rate).times(this.walletService?.wallet?.XTZrate).toFixed(2)}) = ${Big(result.rate).toFixed(\n      xtzPool.decimalPlaces\n    )} XTZ`;\n    this.impactDouble = result.impactDouble;\n    this.qtyOut = result.expected;\n    this.qtyRawOut = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n  }\n\n  calculateXtzToTokenFromToken(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 6\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 8\n    });\n    const tokenToBuy = this.qtyOut;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateXtzToTokenFromToken(\n      tokenToBuy,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumToken = result.token.minimum;\n    this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.token.rate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    this.impactDouble = result.token.impactDouble;\n    this.qty = result.xtz.expected;\n    this.qtyRaw = result.xtz.expected?.internalNormalised.toFixed(result.xtz.expected?.decimalPlaces).toString();\n  }\n\n  calcSwap(type: string = 'qtyRaw'): void {\n    if (type === 'qtyRaw' && this.entrypoint === LqdEntrypoints.xtzToToken) {\n      this.calculateXtzToToken();\n    } else if (type === 'qtyRawOut' && this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      this.calculateTokenToXTZFromXTZ();\n    } else if (type === 'qtyRaw' && this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      this.calculateTokenToXTZ();\n    } else if (type === 'qtyRawOut' && this.entrypoint === LqdEntrypoints.xtzToToken) {\n      this.calculateXtzToTokenFromToken();\n    }\n  }\n\n  calcAddLiquidity(type: string): void {\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    if (type === 'qtyRaw') {\n      const toSell = this.qty;\n      const result = this.swapLiquidityService.calculateAddLiquidityXTZ(\n        toSell,\n        xtzPool,\n        tokenPool,\n        parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n        this.slippage,\n        this.swapLiquidityService.settings('liquidityBaking')\n      );\n      this.minimumLqd = result.liquidityMinimum;\n      this.qtyOut = result.tokenRequired;\n      this.qtyRawOut = result.tokenRequired?.internalNormalised.toFixed(result.tokenRequired?.decimalPlaces).toString();\n      this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.exchangeRate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    } else {\n      const toSell = this.qtyOut;\n      const result = this.swapLiquidityService.calculateAddLiquidityToken(\n        toSell,\n        xtzPool,\n        tokenPool,\n        parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n        this.slippage,\n        this.swapLiquidityService.settings('liquidityBaking')\n      );\n      this.minimumLqd = result.liquidityMinimum;\n      this.qty = this.xtzRequired = result.xtzRequired;\n      this.qtyRaw = result.xtzRequired?.internalNormalised.toFixed(result.xtzRequired?.decimalPlaces).toString();\n      this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.exchangeRate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    }\n  }\n\n  calcRemoveLiquidity(): void {\n    const lqtToBurn = this.qty;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateRemoveLiquidity(\n      lqtToBurn,\n      xtzPool,\n      tokenPool,\n      parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumXtz = result.xtzMinimum;\n    this.minimumToken = result.tokenMinimum;\n  }\n\n  reset(): void {\n    this.minimumLqd = null;\n    this.minimumXtz = null;\n    this.minimumToken = null;\n    this.expectedRate = '';\n    this.impactDouble = undefined;\n    this.xtzRequired = null;\n\n    this.qty = new Amount({\n      normalisedAmount: '',\n      decimalPlaces: 6\n    });\n    this.qtyRaw = '';\n    this.qtyOut = new Amount({\n      normalisedAmount: '',\n      decimalPlaces: 8\n    });\n    this.qtyRawOut = '';\n\n    this.advancedForm = false;\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n    this.defaultTransactionParams = zeroTxParams;\n    this.formInvalid = '';\n    this.latestSimError = '';\n\n    this.slippage = 0.005;\n    this.transactions = [];\n\n    this.moreInfo = false;\n  }\n  async hydratePools(): Promise<boolean> {\n    try {\n      await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    } catch (e) {\n      this.messageService.addError(this.translate.instant('SWAPCOMPONENT.CONTRACTSTORAGEFAILED'));\n      return false;\n    }\n    return true;\n  }\n\n  async update(type: string = 'qtyRaw'): Promise<void> {\n    this.xtzBalance = Big(this.activeAccount?.balanceXTZ ?? 0)\n      .div(10 ** 6)\n      .toString();\n    this.lqdBalance = this.balances.find((b) => b.contractAddress === this.lqdTokenContract && b.id == 0)?.balance ?? '0';\n    this.tzBTCBalance = this.balances.find((b) => b.contractAddress === this.tzBTCContract && b.id == 0)?.balance ?? '0';\n    if (this.entrypoint === LqdEntrypoints.xtzToToken || this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      this.calcSwap(type);\n    } else if (this.entrypoint === LqdEntrypoints.addLiquidity) {\n      this.qty = new Amount({\n        normalisedAmount: parseFloat(this.qtyRaw),\n        decimalPlaces: 6\n      });\n      this.qtyOut = new Amount({\n        normalisedAmount: parseFloat(this.qtyRawOut),\n        decimalPlaces: 8\n      });\n      this.calcAddLiquidity(type);\n    } else if (this.entrypoint === LqdEntrypoints.removeLiquidity) {\n      this.qty = new Amount({\n        normalisedAmount: parseFloat(this.qtyRaw),\n        decimalPlaces: 0\n      });\n      this.qtyOut = new Amount({\n        normalisedAmount: parseFloat(this.qtyRawOut),\n        decimalPlaces: 0\n      });\n      this.calcRemoveLiquidity();\n    }\n    if (this.qty && this.qty.internalNormalised) {\n      this.estimateFees();\n    }\n  }\n\n  preview(): void {\n    if (!this.qtyRaw) {\n      return;\n    }\n    try {\n      this.prepareResponse.emit(this.getFullyPreparedTxs());\n      ModalComponent.currentModel.next({ name: '', data: {} });\n      this.reset();\n    } catch (e) {\n      this.formInvalid = e.message;\n    }\n  }\n  toggleMode(mode): void {\n    if (mode === this.mode) {\n      return;\n    }\n    this.reset();\n    const chartToggle = (label) => {\n      const style = getComputedStyle(document.body);\n      this.titleColor = style.getPropertyValue('--base-font-color');\n      this.miniChart.toggleSet(label);\n      this.leftChart.toggleSet(label);\n      if (label === ChartTitle.totalValueLocked) {\n        this.miniChart.toggleSeries(ChartSeries.month);\n        this.leftChart.toggleSeries(ChartSeries.month);\n      } else {\n        this.miniChart.toggleSeries(ChartSeries.week);\n        this.leftChart.toggleSeries(ChartSeries.day);\n      }\n    };\n    if (mode === Mode.swap) {\n      this.mode = Mode.swap;\n      this.entrypoint = LqdEntrypoints.xtzToToken;\n      chartToggle(ChartTitle.XTZtzBTC);\n    } else if (mode === Mode.liquidity) {\n      this.mode = Mode.liquidity;\n      this.entrypoint = LqdEntrypoints.addLiquidity;\n      chartToggle(ChartTitle.totalValueLocked);\n    }\n    this.qty = new Amount({\n      normalisedAmount: 0,\n      decimalPlaces: 6\n    });\n    this.birthExchangeRate();\n  }\n  toggleDirection(dir): void {\n    if (this.mode === 'swap') {\n      const chartToggle = (label) => {\n        const style = getComputedStyle(document.body);\n        this.titleColor = style.getPropertyValue('--base-font-color');\n        this.leftChart.toggleSet(label);\n        this.miniChart.toggleSet(label);\n        this.miniChart.toggleSeries(ChartSeries.week);\n      };\n      this.qtyRaw = this.qtyRawOut;\n      if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n        this.entrypoint = LqdEntrypoints.xtzToToken;\n        chartToggle(ChartTitle.XTZtzBTC);\n      } else if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n        this.entrypoint = LqdEntrypoints.tokenToXtz;\n        chartToggle(ChartTitle.tzBTCXTZ);\n      }\n      this.evalAmount();\n    } else {\n      if (dir === 0 && this.entrypoint !== LqdEntrypoints.addLiquidity) {\n        this.reset();\n        this.entrypoint = LqdEntrypoints.addLiquidity;\n        this.qty = new Amount({\n          normalisedAmount: parseFloat(this.qtyRaw),\n          decimalPlaces: 6\n        });\n      } else if (dir === 1 && this.entrypoint !== LqdEntrypoints.removeLiquidity) {\n        this.reset();\n        this.entrypoint = LqdEntrypoints.removeLiquidity;\n        this.qty = new Amount({\n          normalisedAmount: parseFloat(this.qtyRaw),\n          decimalPlaces: 0\n        });\n      }\n      this.birthExchangeRate();\n    }\n  }\n  getTotalFee(): number {\n    if (this.customFee !== '' && Number(this.customFee)) {\n      return Number(this.customFee);\n    }\n    return Number(this.defaultTransactionParams.fee);\n  }\n  getTotalBurn(): number {\n    if (this.customStorageLimit !== '' && Number(this.customStorageLimit)) {\n      return Number(Big(this.customStorageLimit).mul(this.transactions.length).times(this.costPerByte).div(1000000).toString());\n    }\n    return this.defaultTransactionParams.burn;\n  }\n  burnAmount(): string {\n    const burn = this.customStorageLimit ? Number(Big(this.customStorageLimit).times(this.costPerByte).div(1000000)) : this.defaultTransactionParams.burn;\n    if (burn) {\n      return burn + ' tez';\n    }\n    return '';\n  }\n  customSlippage(e): void {\n    e.target.value = e.target.value.replace(/[^0-9\\.]+/g, '');\n    this.slippage = Math.max(Math.min(100, parseFloat(e.target.value || 0) / 100.0), 0);\n    // this.slippageInput.nativeElement.value = this.slippage;\n    this.update();\n  }\n  customSlippageFocus(e): void {\n    if (e.target.value !== '') {\n      e.target.value = e.target.value.replace(/[^0-9\\.]+/g, '');\n      this.slippage = Math.max(Math.min(100, parseFloat(e.target.value || 0) / 100.0), 0);\n      this.update();\n    }\n  }\n  customSlippageBlur(e): void {\n    if (!Number.isNaN(Number(e.target.value)) && e.target.value !== '') {\n      e.target.value = Math.max(Math.min(100, e.target.value), 0);\n    } else {\n      e.target.value = '';\n      this.slippage = 0.005;\n      this.update();\n    }\n  }\n  getMaxAmount(account: Account): { tez; lqd; tzBTC } {\n    if (account) {\n      let accountBalance = Big(this.xtzBalance);\n      accountBalance = accountBalance.minus(this.customFee && Number(this.customFee) ? Number(this.customFee) : this.defaultTransactionParams.fee);\n      accountBalance = accountBalance.minus(\n        this.customStorageLimit && Number(this.customStorageLimit)\n          ? Number(Big(this.customStorageLimit).times(this.costPerByte).div('1000000'))\n          : this.defaultTransactionParams.burn\n      );\n      accountBalance = accountBalance.minus(0.000001); // dust\n      return {\n        tez: accountBalance.toFixed(),\n        lqd: Big(this.lqdBalance).toFixed(),\n        tzBTC: Big(this.tzBTCBalance).toFixed()\n      };\n    }\n  }\n  async estimateFees(): Promise<void> {\n    console.log('estimate..');\n    const prevSimError = this.latestSimError;\n    this.latestSimError = '';\n    let txs: PartiallyPreparedTransaction[] = [];\n    try {\n      txs = this.getMinimalPreparedTxs();\n      this.transactions = txs;\n    } catch (e) {\n      console.log(e);\n    }\n    if (txs?.length) {\n      this.simSemaphore++;\n      this.latestSimError = '';\n      const callback = (res) => {\n        if (res) {\n          this.formInvalid = this.checkBalances();\n          if (res.error) {\n            this.latestSimError = res.error;\n          } else {\n            this.defaultTransactionParams = res;\n            this.latestSimError = '';\n          }\n          console.log(res, txs);\n        } else {\n          console.log('no res');\n        }\n        this.simSemaphore--;\n      };\n      this.estimateService.estimateTransactions(JSON.parse(JSON.stringify(txs)), this.activeAccount.address, undefined, callback);\n    } else {\n      this.latestSimError = prevSimError;\n    }\n  }\n  updateMaxAmount(input: string = 'qtyRaw'): void {\n    if (this.activeAccount) {\n      const balances = this.getMaxAmount(this.activeAccount);\n      if (!balances) {\n        return;\n      }\n      let balance: string = '0.0';\n      if (this.entrypoint === this.LqdEntrypoints.removeLiquidity) {\n        balance = balances?.lqd;\n        this.qtyRaw = balance;\n        this.update('qtyRaw');\n      } else if (this.entrypoint === this.LqdEntrypoints.tokenToXtz) {\n        if (input === 'qtyRaw') {\n          balance = balances?.tzBTC;\n          this.qtyRaw = balance;\n          this.update('qtyRaw');\n        } else {\n          balance = balances?.tez;\n          this.qtyRawOut = balance;\n          this.update('qtyRawOut');\n        }\n      } else if (this.entrypoint === this.LqdEntrypoints.xtzToToken || this.entrypoint === this.LqdEntrypoints.addLiquidity) {\n        if (input === 'qtyRawOut') {\n          balance = balances?.tzBTC;\n          this.qtyRawOut = balance;\n          this.update('qtyRawOut');\n        } else {\n          balance = balances?.tez;\n          this.qtyRaw = balance;\n          this.update('qtyRaw');\n        }\n      }\n    }\n  }\n  getMinimalPreparedTxs(): PartiallyPreparedTransaction[] {\n    if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: this.qty.internalNormalised.toString(),\n          destination: this.lqdContract,\n          parameters: this.operationService.getXTZToTokenParameters(\n            this.activeAccount.address,\n            this.minimumToken.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        }\n      ]);\n    } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getApproveAmountParameters(this.lqdContract, this.qty.internalBigInt.toFixed(0).toString())\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.lqdContract,\n          parameters: this.operationService.getTokenToXTZParameters(\n            this.activeAccount.address,\n            this.qty.internalBigInt.toFixed(0).toString(),\n            this.minimumXtz.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        }\n      ]);\n    } else if (this.entrypoint === LqdEntrypoints.removeLiquidity) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.lqdContract,\n          parameters: this.operationService.getRemoveLiquidityParameters(\n            this.activeAccount.address,\n            this.qty.internalBigInt.toFixed(0).toString(),\n            this.minimumXtz.internalBigInt.toFixed(0).toString(),\n            this.minimumToken.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        }\n      ]);\n    } else if (this.entrypoint === LqdEntrypoints.addLiquidity) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getApproveAmountParameters(this.lqdContract, this.qtyOut.internalBigInt.toFixed(0))\n        },\n        {\n          kind: 'transaction',\n          amount: this.qty.internalNormalised.toString(),\n          destination: this.lqdContract,\n          parameters: this.operationService.getAddLiquidityParameters(\n            this.activeAccount.address,\n            this.minimumLqd.internalBigInt.toFixed(0).toString(),\n            this.qtyOut.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        }\n      ]);\n    }\n  }\n  getFullyPreparedTxs(): FullyPreparedTransaction[] {\n    assert(!this.simSemaphore, 'Awaiting request');\n    const minimalTxs = this.getMinimalPreparedTxs();\n    this.transactions = minimalTxs;\n    assert(this.inputValidationService.fee(this.customFee), 'Invalid fee');\n    assert(this.inputValidationService.gas(this.customGasLimit), 'Invalid gas limit');\n    assert(this.inputValidationService.gas(this.customStorageLimit), 'Invalid storage limit');\n    assert(!this.checkBalances(), this.checkBalances());\n    assert(minimalTxs.length === this.defaultTransactionParams.customLimits?.length, 'Simulation error');\n    return this.opsWithCustomLimits();\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.defaultTransactionParams.gas.toString()) {\n      extraGas = Number(this.customGasLimit) - this.defaultTransactionParams.gas;\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.defaultTransactionParams.storage.toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.defaultTransactionParams.storage;\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas\n        ? (Number(this.defaultTransactionParams.customLimits[i].gasLimit) + extraGasPerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.defaultTransactionParams.customLimits[i].storageLimit) + extraStoragePerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  checkBalances(): string {\n    if (this.transactions.length > 0 && this.activeAccount) {\n      const balances = this.getMaxAmount(this.activeAccount);\n      if (balances) {\n        const maxTez = Big(balances?.tez).minus(0.000001);\n        const maxLQD = Big(balances.lqd).plus(0.0);\n        const maxtzBTC = Big(balances.tzBTC).plus(0.0);\n        let amount = Big(0);\n        for (const tx of this.transactions) {\n          amount = amount.plus(Big(tx.amount));\n        }\n        if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n          if (!!maxTez && amount.gt(maxTez)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHFEEORAMOUNT');\n          }\n          if (this.minimumToken && this.minimumToken.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n          if (Big(this.qty.internalNormalised).gt(maxtzBTC)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.minimumXtz && this.minimumXtz.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        } else if (this.entrypoint === LqdEntrypoints.addLiquidity) {\n          if (!!maxTez && amount.gt(maxTez)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.qtyOut && Big(this.qtyOut.internalNormalised).gt(maxtzBTC)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.xtzRequired && this.xtzRequired.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n          if (this.minimumLqd && this.minimumLqd.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        } else if (this.entrypoint === LqdEntrypoints.removeLiquidity) {\n          if (Big(this.qty.internalNormalised).gt(maxLQD)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.minimumXtz && this.minimumXtz.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        }\n      }\n    }\n    return '';\n  }\n  sanitizeNumberInput(e, decimalPlaces: number, type = ''): void {\n    const exp = new RegExp(`^\\\\d{0,}(\\\\.\\\\d{0,${decimalPlaces}})?\\$`, 'g');\n    if (type === 'qtyRaw') {\n      if (exp.test(e?.target?.value)) {\n        this.qtyRaw = e?.target?.value;\n      } else {\n        e.target.value = this.qtyRaw;\n      }\n      this.evalAmount('qtyRaw');\n    } else if (type === 'qtyRawOut') {\n      if (exp.test(e?.target?.value)) {\n        this.qtyRawOut = e?.target?.value;\n      } else {\n        e.target.value = this.qtyRawOut;\n      }\n      this.evalAmount('qtyRawOut');\n    } else {\n      if (exp.test(e?.target?.value)) {\n        this[type] = e?.target?.value;\n      } else {\n        e.target.value = this[type];\n      }\n    }\n  }\n  evalAmount(type: string = 'qtyRaw'): void {\n    let qty = this[type];\n    if (parseFloat(qty) < 0.0 || !qty) {\n      this.qtyRawOut = this.qtyRaw = '';\n      return;\n    } else if (isNaN(parseFloat(qty)) && parseFloat(qty) === 0.0) {\n      return;\n    } else if (!isNaN(parseFloat(qty))) {\n      this.update(type);\n    }\n  }\n  openInfoModal(title: string): void {\n    switch (title) {\n      case 'slippage':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message:\n              'Token prices in a pool may change significantly within seconds. Slippage tolerance defines the difference between the expected and current exchange rate that you find acceptable. The higher the slippage tolerance, the more likely a transaction will go through.',\n            title: 'Slippage Information'\n          },\n          forceClose: false\n        });\n        break;\n      case 'pricerate':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The amount of token B you receive for 1 token A, per the current exchange rate.',\n            title: 'Price Rate Information'\n          },\n          forceClose: false\n        });\n        break;\n      case 'impactdouble':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The impact your transaction is expected to make on the exchange rate.',\n            title: 'Price Impact'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumxtz':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of XTZ to be received from the transaction.',\n            title: 'Minimum XTZ'\n          },\n          forceClose: false\n        });\n        break;\n      case 'requiredtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'Required tzBTC needed for transaction.',\n            title: 'Required tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of tzBTC to be received from the transaction.',\n            title: 'Minimum tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumlqt':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of SIRS to be received from the transaction.',\n            title: 'Minimum SIRS'\n          },\n          forceClose: false\n        });\n        break;\n      default:\n        break;\n    }\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"flex-column confirm-send\" [class.image]=\"tokenBalanceService.isNFT(token)\" [class.batch]=\"parameters\">\n      <form autocomplete=\"off\">\n        <div class=\"flex-row top\">\n          <div class=\"flex-column left\" [style.minHeight]=\"!tokenBalanceService.isNFT(token) ? 'unset' : ''\">\n            <span *ngIf=\"!tokenBalanceService.isNFT(token)\" class=\"key\">SEND AMOUNT:</span>\n            <app-asset class=\"token-image\" [class.balance]=\"!tokenBalanceService.isNFT(token)\"\n              [assets]=\"token ? {displayAsset: token?.displayAsset, thumbnailAsset: token?.thumbnailAsset} : {thumbnailAsset: 'assets/img/tezos-xtz-logo.svg'}\"\n              [priorityList]=\"['thumbnailAsset', 'displayAsset']\" [class.sd]=\"!token\"></app-asset>\n          </div>\n          <div class=\"flex-column right\">\n            <span class=\"flex-row amount\"><span class=\"tez value\">{{ formatAmount(token, totalAmount(),\n                false)\n                }}</span>\n              <ng-container *ngIf=\"!tokenTransfer\"><span class=\"fiat key\">USD: <span class=\"value\">{{'$' +\n                    (totalAmount()\n                    *\n                    walletService.wallet.XTZrate | number:'1.2-2')\n                    }}</span></span>\n              </ng-container>\n            </span>\n            <div class=\"flex-column items\">\n              <span *ngIf=\"tokenBalanceService.isNFT(token)\" class=\"key amount-quantity\">QUANTITY:&nbsp;&nbsp;<span\n                  class=\"value\">{{ getQuantity(totalAmount())\n                  }}</span></span>\n              <span class=\"key\">FEE:&nbsp;&nbsp;<span class=\"value\">{{ (getTotalFee() | number:'1.0-6') + ' tez'\n                  }}</span></span>\n              <span *ngIf=\"getTotalBurn(); let totalBurn\" class=\"key\">STORAGE COST:&nbsp;<span class=\"value\">{{\n                  (totalBurn\n                  |\n                  number:'1.0-6') + ' tez'\n                  }}</span></span>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex-row from\">\n          <div class=\"flex-column left\">\n            <span class=\"key\">FROM: </span>\n          </div>\n          <div class=\"flex-column right\">\n            <div *ngIf=\"getUsername(); let displayName\" class=\"flex-row torus-name\"><img class=\"verifier-logo\"\n                src=\"../../../assets/img/{{ getVerifier() }}-logo.svg\">{{ displayName }}</div>\n            <span class=\"address\">{{\n              activeAccount?.address\n              }}</span>\n          </div>\n        </div>\n        <div *ngIf=\"!parameters\" class=\"flex-row divider\">\n          <span></span><img class=\"icon\" src=\"../../../assets/img/send-down-arrow.png\" /><span></span>\n        </div>\n        <div class=\"flex-row to\">\n          <div class=\"flex-column left\">\n            <span class=\"key\">SEND TO<ng-container *ngIf=\"parameters && transactions?.length > 1\">&nbsp;BATCH\n              </ng-container>: </span>\n          </div>\n          <div class=\"flex-column right\">\n            <div *ngFor=\"let transaction of transactions | slice:0:showAll; index as i\"\n              (click)=\"updateParameters(i, transaction.parameters)\" class=\"flex-column transaction\">\n              <span *ngIf=\"transaction?.meta && transaction.meta?.verifier\" class=\"flex-row torus-to value\"><img\n                  src=\"../../../assets/img/{{ transaction.meta.verifier }}-logo.svg\" class=\"icon\">\n                {{ transaction.meta?.alias }}</span>\n              <span class=\"flex-row single-to\" [class.default]=\"transactions.length === 1\"\n                [class.selectable]=\"transactions.length > 1 && parameters\"\n                [class.active]=\"batchParamIndex === i && transactions.length > 1 && parameters\"><span>{{\n                  transaction?.destination\n                  }}</span></span>\n              <p class=\"previewAttention\" *ngIf=\"tokenTransfer && transaction?.destination.slice(0, 3) === 'KT1'\">\n                Warning:\n                Verify the contract can manage tokens</p>\n            </div>\n            <div *ngIf=\"transactions?.length > 10\" class=\"button show-all\"\n              (click)=\"showAll = showAll === 10 ? undefined : 10\">{{ showAll === 10 ? 'Show All' : 'Show Less' }}</div>\n          </div>\n        </div>\n        <br />\n        <br />\n        <span *ngIf=\"parameters && transactions.length > 1\" class=\"flex-row transfer-amount\"><span class=\"key\">TRANSFER\n            AMOUNT: </span><span class=\"key\">{{ (transactions[batchParamIndex]?.amount | number:'1.0-6')\n            }}</span></span>\n        <div *ngIf=\"parameters && parameters?.entrypoint\" class=\"flex-row contract-call\"><span class=\"key\">CONTRACT\n            CALL:\n          </span><span class=\"key\">{{ parameters?.entrypoint }}</span></div>\n        <app-ui-toggle-advanced style=\"width: calc(100% - 1em);margin: 0 0 2.5em 0;\" *ngIf=\"externalReq\"\n          [default]=\"false\" (stateChange)=\"advancedForm = $event\">\n        </app-ui-toggle-advanced>\n      </form>\n      <div *ngIf=\"advancedForm\" class=\"advanced-form\">\n        <div class=\"flex-column parms-container\">\n          <ng-container *ngIf=\"parameters\">\n            <div class=\"tabs-container\">\n              <ul class=\"flex-row tabs\">\n                <li class=\"tab\" [class.active]=\"parametersFormat === 0\" (click)=\"setParametersFormat(0)\">Micheline</li>\n                <li class=\"tab\" [class.active]=\"parametersFormat === 1\" (click)=\"setParametersFormat(1)\">Tabular</li>\n              </ul>\n            </div>\n            <textarea *ngIf=\"parameters && parametersFormat === 0\" name=\"none\" rows=\"10\"\n              readonly>{{ micheline.value || '' }}</textarea>\n            <ul *ngIf=\"parameters && parametersFormat === 1\" class=\"encoded-parms\">\n              <ng-container *ngTemplateOutlet=\"recursiveListTmpl; context:{ list: transformedParameters, level: 0 }\">\n              </ng-container>\n            </ul>\n            <ng-template #recursiveListTmpl let-list=\"list\" let-level=\"level\">\n              <li *ngFor=\"let item of list\" [class]=\"item?.children?.length ? 'expanded' : ''\"\n                [style.marginLeft]=\"!level ? '0em' : '3em'\">\n                <ng-container *ngIf=\"item?.children\">\n                  <span [class.key]=\"item.children.length ? true : false\"\n                    (click)=\"item.children.length ? toggleTab($event) : null\">{{ item.key }}{{item.key ? ': ' : ' '}}{{\n                    (item.val ?? '') }}</span>\n                  <svg *ngIf=\"item.children.length\" (click)=\"toggleTab($event)\" version=\"1.2\" baseProfile=\"tiny-ps\"\n                    xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 13\" width=\"20\" height=\"13\">\n                    <g id=\"1\">\n                      <g id=\"NFT\">\n                        <g id=\"Line 1\">\n                          <g id=\"Line\">\n                            <path id=\"Rectangle 4\" class=\"shp0\"\n                              d=\"M2.86 -0.02L12.86 10.1L10 12.99L0.01 2.88L2.86 -0.02ZM17.14 -0.02L19.99 2.88L10 12.99L7.14 10.1L17.14 -0.02Z\" />\n                          </g>\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                  <ul *ngIf=\"item.children && item.children.length > 0\">\n                    <ng-container\n                      *ngTemplateOutlet=\"recursiveListTmpl; context:{ list: item.children, level: level+3 }\">\n                    </ng-container>\n                  </ul>\n                </ng-container>\n              </li>\n            </ng-template>\n          </ng-container>\n        </div>\n        <form autocomplete=\"off\" *ngIf=\"externalReq && (!walletService.isLedgerWallet()) || ledgerError\">\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Gas limit</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\"\n                (input)=\"sanitizeNumberInput($event, 'gas')\" (paste)=\"sanitizeNumberInput($event, 'gas')\"\n                [placeholder]=\"getTotalDefaultGas() || '0'\" [(ngModel)]=\"customGasLimit\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Fee</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\" [placeholder]=\"getTotalFee() || '0'\"\n                (paste)=\"sanitizeNumberInput($event)\" (input)=\"sanitizeNumberInput($event)\" [(ngModel)]=\"customFee\">\n            </div>\n          </div>\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Storage limit</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\"\n                (input)=\"sanitizeNumberInput($event, 'storage')\" (paste)=\"sanitizeNumberInput($event, 'storage')\"\n                [placeholder]=\"getTotalDefaultStorage() || '0'\" [(ngModel)]=\"customStorageLimit\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Max storage cost</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text read-only\"\n                [placeholder]=\"(getTotalBurn() || '0') + ' tez'\" tabindex=-1 readonly>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"flex-column bottom\">\n        <span [style.visibility]=\"!pwdInvalid ? 'hidden' : ''\" [style.margin]=\"!pwdInvalid ? '0' : ''\"\n          class=\"label danger\">{{ this.pwdInvalid }}</span>\n        <ng-container *ngIf=\"walletService.isPwdWallet()\">\n          <span class=\"label\">ENTER YOUR\n            PASSWORD TO CONFIRM:</span>\n          <input name=\"none\" [(ngModel)]=\"password\" autocomplete=\"current-password\" placeholder=\"Password\"\n            class=\"text password\" type=\"password\" (input)=\"this.pwdInvalid = ''\" (change)=\"this.pwdInvalid = ''\"\n            (keydown.enter)='!messageService.spinnerOn ? inject() : null'>\n        </ng-container>\n        <button class=\"confirm\" *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\"\n          (click)=\"ledgerRetry()\">Sign with\n          Ledger</button>\n        <ng-template #elseBlock>\n          <button class=\"confirm\" (click)=\"!messageService.spinnerOn ? inject() : null\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : 'Confirm'}}</button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>","import { EventEmitter, Input, OnChanges, OnDestroy, Output } from '@angular/core';\nimport { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { FullyPreparedTransaction, PrepareRequest } from '../../../misc/send/interfaces';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { EstimateService } from '../../../../services/estimate/estimate.service';\nimport { OperationService } from '../../../../services/operation/operation.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { CoordinatorService } from '../../../../services/coordinator/coordinator.service';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { LedgerService } from '../../../../services/ledger/ledger.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { KeyPair } from '../../../../interfaces';\nimport { emitMicheline, assertMichelsonData } from '@taquito/michel-codec';\nimport Big from 'big.js';\nimport { LedgerWallet, TorusWallet } from '../../../../services/wallet/wallet';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { ModalComponent } from '../../modal.component';\nimport { Subscription } from 'rxjs';\nimport { TezosDomainsService } from '../../../../services/tezos-domains/tezos-domains.service';\nimport { TokenBalancesService } from '../../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { Schema } from '@taquito/michelson-encoder';\nimport { TzktService } from '../../../../services/indexer/tzkt/tzkt.service';\n@Component({\n  selector: 'app-confirm-send',\n  templateUrl: './send-confirmation.component.html',\n  styleUrls: ['../../../../../scss/components/modals/modal.scss']\n})\nexport class ConfirmSendComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() confirmRequest: PrepareRequest = null;\n  @Output() operationResponse = new EventEmitter();\n  syncSub: Subscription;\n  tokenTransfer = '';\n  activeAccount = null;\n  externalReq: boolean = false;\n  transactions: FullyPreparedTransaction[] = [];\n  costPerByte: string = this.estimateService.costPerByte;\n\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  schema = undefined;\n  parameters: any = null;\n  batchParamIndex = 0;\n  micheline: any = null;\n  batchParameters: { num: number; parameters: any }[] = [];\n  parametersFormat = 0;\n  parametersDisplay = '';\n  transformedParameters = [];\n  extractedSchema = [];\n  showAll = 10;\n\n  showFullBatch = false;\n  sendResponse = null;\n  ledgerError = '';\n  password = '';\n  pwdInvalid = '';\n  advancedForm = false;\n  name = 'confirm-send';\n  token = null;\n  domain = undefined;\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private translate: TranslateService,\n    public tokenService: TokenService,\n    public walletService: WalletService,\n    private estimateService: EstimateService,\n    private operationService: OperationService,\n    private messageService: MessageService,\n    private coordinatorService: CoordinatorService,\n    private lookupService: LookupService,\n    private ledgerService: LedgerService,\n    private inputValidationService: InputValidationService,\n    public tezosDomainService: TezosDomainsService,\n    public tokenBalanceService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private tzktService: TzktService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.confirmRequest?.currentValue) {\n      this.reset(true);\n      this.externalReq = changes.confirmRequest.currentValue.externalReq;\n      this.tokenTransfer = changes.confirmRequest.currentValue.tokenTransfer;\n      this.activeAccount = changes.confirmRequest.currentValue.account;\n      this.tezosDomainService.getDomainFromAddress(this.activeAccount?.address).then((domain) => {\n        this.domain = domain;\n      });\n      this.transactions = changes.confirmRequest.currentValue.transactions;\n      this.token = this.tokenService.getAsset(this.tokenTransfer);\n      console.log('transactions', this.transactions);\n      if (this.externalReq) {\n        ModalComponent.currentModel.next({\n          name: this.name,\n          data: null\n        });\n      }\n      this.init();\n      if (this.externalReq) {\n        this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n          if (response) {\n            this.closeModalAction('silent');\n          }\n        });\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  open(data: any): void {\n    this.customGasLimit = data?.customGasLimit;\n    this.customStorageLimit = data?.customStorageLimit;\n    super.open();\n  }\n  async init(): Promise<void> {\n    await this.loadParameters();\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      this.ledgerError = '?';\n    }\n  }\n  async loadParameters(): Promise<void> {\n    if (this.transactions.length > 1) {\n      for (const [i, op] of this.transactions.entries()) {\n        if (op.parameters) {\n          this.batchParameters.push({\n            num: i + 1,\n            parameters: op.parameters\n          });\n          if (!this.parameters) {\n            this.updateParameters(i, op.parameters);\n          }\n        }\n      }\n    } else if (this.transactions[0].parameters) {\n      this.updateParameters(0, this.transactions[0].parameters);\n    }\n  }\n  async updateParameters(index: number, parameters: any): Promise<void> {\n    if (!parameters) {\n      return;\n    }\n    this.batchParamIndex = index;\n    this.parameters = parameters;\n    this.parametersToMicheline();\n    this.extractedSchema = undefined;\n    try {\n      const sc = await this.tzktService.getEntrypointMicheline(this.transactions[this.batchParamIndex]?.destination, this.parameters?.entrypoint);\n      this.schema = new Schema(sc);\n      this.extractedSchema = this.schema.Execute(this.parameters.value);\n      this.transformedParameters = this.parametersToTabular(this.extractedSchema);\n      this.parametersFormat = 1;\n    } catch {\n      this.transformedParameters = [{ children: [], key: 'Error', val: 'Failed to fetch annotations!' }];\n    }\n  }\n  setParametersFormat(id: number): void {\n    this.parametersFormat = id;\n  }\n  beaconTokenTransfer(op: any): null | { tokenId: string; to: string; amount: string } {\n    if (op.parameters && this.tokenService.isKnownTokenContract(op.destination)) {\n      return this.operationService.parseTokenTransfer(op);\n    }\n    return null;\n  }\n  parametersToMicheline(): void {\n    if (this.parameters) {\n      try {\n        if (!this.parameters.value || !this.parameters.entrypoint) {\n          throw new Error('entrypoint and value expected');\n        }\n        assertMichelsonData(this.parameters.value);\n        const res = emitMicheline(this.parameters.value, {\n          indent: '  ',\n          newline: '\\n'\n        });\n        this.micheline = {\n          entrypoint: this.parameters.entrypoint,\n          value: res\n        };\n      } catch (e) {\n        console.warn(e);\n        this.micheline = null;\n      }\n    }\n  }\n  parametersToTabular(parameters) {\n    const traverse = (key, val, level) => {\n      const isObject = (key, val, level) => {\n        let arr = [];\n        const entries = Object.entries(val);\n        for (const [key, value] of entries) {\n          if (\n            (typeof value === 'object' && (value as any)?.c == undefined && (value as any)?.e === undefined && (value as any)?.s === undefined) ||\n            ((value as any)?.length > 0 && typeof value !== 'string')\n          ) {\n            arr.push({ key, children: traverse(key, value, level + 1) });\n          } else {\n            arr.push(traverse(key, value, level + 1));\n          }\n        }\n        return arr;\n      };\n\n      const isArray = (key, val, level) => {\n        if (val.length === 1) {\n          return traverse(key, val[0], level + 1);\n        }\n        const arr = [];\n        for (let i = 0; i < val.length; ++i) {\n          if (\n            (typeof val[i] === 'object' && val[i]?.c === undefined && val[i]?.e === undefined && val[i]?.s === undefined) ||\n            ((val[i] as any)?.length > 0 && typeof val[i] !== 'string')\n          ) {\n            if (key) {\n              arr.push({ key, children: traverse(key, val[i], level + 1) });\n            } else {\n              arr.push(...traverse(key, val[i], level + 1));\n            }\n          } else {\n            arr.push(traverse(key, val[i], level + 1));\n          }\n        }\n        return arr;\n      };\n      if (typeof val === 'string') {\n        return { key, val, children: [] };\n      } else if (val && typeof val === 'object' && val?.c !== undefined && val?.e !== undefined && val?.s !== undefined) {\n        return { key, val: Big(val).toString(), children: [] };\n      } else if (!!val?.length && typeof val !== 'string') {\n        return isArray(key, val, level);\n      } else if (val && typeof val === 'object') {\n        return isObject(key, val, level);\n      } else if (typeof val === 'number') {\n        return { key, val, children: [] };\n      } else if (typeof val === 'symbol') {\n        return { key, val: val.valueOf(), children: [] };\n      } else {\n        return { key, val: null, children: [] };\n      }\n    };\n    let result = traverse(null, parameters, 0);\n    if (result?.length === undefined) {\n      result = [result];\n    }\n    return result;\n  }\n  getTotalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  getTotalCost(display: boolean = false): string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return totalFee;\n  }\n  getTotalFee(): string {\n    let totalFee = Big(0);\n    for (const tx of this.transactions) {\n      totalFee = totalFee.add(tx.fee ? tx.fee : 0);\n    }\n    return totalFee.toFixed();\n  }\n  getTotalBurn(): number {\n    const totalActiveStorageLimit: number =\n      this.customStorageLimit !== '' && Number(this.customStorageLimit) ? Number(this.customStorageLimit) : this.getTotalDefaultStorage();\n    return Number(Big(totalActiveStorageLimit).times(this.costPerByte).div(1000000).toString());\n  }\n  getTotalDefaultGas(): number {\n    let totalGas = Big(0);\n    for (const tx of this.transactions) {\n      totalGas = totalGas.plus(tx.gasLimit);\n    }\n    return totalGas.toFixed();\n  }\n  getTotalDefaultStorage(): number {\n    let totalStorage = Big(0);\n    for (const tx of this.transactions) {\n      totalStorage = totalStorage.plus(tx.storageLimit);\n    }\n    return totalStorage.toFixed();\n  }\n  getQuantity(amount): number {\n    return Big(amount)\n      .div(10 ** (false ? this.token.decimals : 0))\n      .toFixed();\n  }\n  totalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  formatAmount(token, amount: string, baseUnit = true): string {\n    if (!token) {\n      return `${Big(amount)\n        .div(10 ** (baseUnit ? 6 : 0))\n        .toFixed()} tez`;\n    } else {\n      if (token) {\n        if (this.tokenBalanceService.isNFT(token)) {\n          return `${token.name}`;\n        } else {\n          return `${Big(amount)\n            .div(10 ** (baseUnit ? token.decimals : 0))\n            .toFixed()} ${token.symbol}`;\n        }\n      } else {\n        return '[Unknown token]';\n      }\n    }\n  }\n  async ledgerRetry(): Promise<void> {\n    if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n      this.messageService.addError('Invalid fee');\n      return;\n    }\n    this.messageService.startSpinner('Preparing transaction...');\n    const keys = await this.walletService.getKeys('');\n    if (keys) {\n      await this.sendTransaction(keys);\n    } else {\n      this.messageService.stopSpinner();\n    }\n  }\n  async inject(): Promise<void> {\n    if (this.walletService.isLedgerWallet()) {\n      await this.broadCastLedgerTransaction();\n      this.sendResponse = null;\n      ModalComponent.currentModel.next({ name: '', data: null });\n    } else {\n      if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n        this.messageService.addError('Invalid fee');\n        return;\n      }\n      const pwd = this.password;\n      this.password = '';\n      this.messageService.startSpinner('Signing transaction...');\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n      } catch {\n        this.messageService.stopSpinner();\n      }\n      if (keys) {\n        this.pwdInvalid = '';\n        this.messageService.startSpinner('Sending transaction...');\n        await this.sendTransaction(keys);\n        ModalComponent.currentModel.next({ name: '', data: null });\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.wallet instanceof TorusWallet) {\n          this.pwdInvalid = `Authorization failed`;\n        } else {\n          this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD'); // 'Wrong password!';\n        }\n      }\n    }\n  }\n  async sendTransaction(keys: KeyPair): Promise<void> {\n    const txs: FullyPreparedTransaction[] = this.opsWithCustomLimits();\n    this.subscriptions.add(\n      this.operationService.transfer(this.activeAccount.address, txs, Number(this.getTotalFee()), keys, this.tokenTransfer).subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success === true) {\n            console.log('Transaction successful ', ans);\n            if (ans.payload.opHash) {\n              await this.messageService.stopSpinner();\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                transactions: this.transactions,\n                opHash: ans.payload.opHash,\n                tokenTransfer: this.tokenTransfer\n              };\n              await this.coordinatorService.boost(this.activeAccount.address, metadata);\n              if (this.transactions[0].meta) {\n                this.torusNotification(this.transactions[0]);\n              }\n              for (const transaction of this.transactions) {\n                if (this.walletService.addressExists(transaction.destination)) {\n                  await this.coordinatorService.boost(transaction.destination);\n                }\n              }\n            } else if (this.walletService.wallet instanceof LedgerWallet) {\n              await this.requestLedgerSignature();\n              return;\n            }\n          } else {\n            await this.messageService.stopSpinner();\n            console.log('Transaction error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        },\n        (err) => {\n          this.messageService.stopSpinner();\n          console.log('Error Message ', JSON.stringify(err));\n          if (this.walletService.isLedgerWallet()) {\n            this.messageService.addError('Failed to create transaction', 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        }\n      )\n    );\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.getTotalDefaultGas().toString()) {\n      extraGas = Number(this.customGasLimit) - this.getTotalDefaultGas();\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.getTotalDefaultStorage().toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.getTotalDefaultStorage();\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas ? (Number(this.transactions[i].gasLimit) + extraGasPerOp).toString() : this.transactions[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.transactions[i].storageLimit) + extraStoragePerOp).toString()\n        : this.transactions[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      await this.messageService.startSpinner('Waiting for Ledger signature...');\n      try {\n        const op = this.sendResponse.payload.unsignedOperation;\n        let signature = '';\n        if (op.length <= 2290) {\n          signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n        } else {\n          signature = await this.ledgerService.signHash(\n            this.operationService.ledgerPreHash('03' + op),\n            this.walletService.wallet.implicitAccounts[0].derivationPath\n          );\n        }\n        if (signature) {\n          const signedOp = op + signature;\n          this.sendResponse.payload.signedOperation = signedOp;\n          this.ledgerError = '';\n        } else {\n          this.ledgerError = 'Failed to sign transaction';\n        }\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.subscriptions.add(\n      this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(async (ans: any) => {\n        this.sendResponse = ans;\n        if (ans.success && this.activeAccount) {\n          const metadata = {\n            transactions: this.transactions,\n            opHash: ans.payload.opHash,\n            tokenTransfer: this.tokenTransfer\n          };\n          if (this.transactions[0].meta) {\n            this.torusNotification(this.transactions[0]);\n          }\n          await this.coordinatorService.boost(this.activeAccount.address, metadata);\n          if (this.walletService.addressExists(this.transactions[0].destination)) {\n            await this.coordinatorService.boost(this.transactions[0].destination);\n          }\n          this.operationResponse.emit(ans.payload.opHash);\n        } else {\n          console.log('sendResponse', JSON.stringify(this.sendResponse));\n          this.operationResponse.emit('broadcast_error');\n        }\n        console.log('ans: ' + JSON.stringify(ans));\n        this.reset();\n      })\n    );\n  }\n  async torusNotification(transaction: FullyPreparedTransaction): Promise<void> {\n    if (transaction.meta) {\n      const amount = this.tokenService.formatAmount(this.tokenTransfer, transaction.amount.toString(), false);\n      if (transaction.meta.verifier === 'google') {\n        this.messageService.emailNotify(transaction.meta.alias, amount);\n        this.lookupService.add(transaction.destination, transaction.meta.alias, 2);\n      } else if (transaction.meta.verifier === 'reddit') {\n        this.messageService.redditNotify(transaction.meta.alias, amount);\n        this.lookupService.add(transaction.destination, transaction.meta.alias, 3);\n      } else if (transaction.meta.verifier === 'twitter') {\n        this.messageService.twitterNotify(transaction.meta.twitterId, transaction.meta.alias, amount);\n        this.lookupService.add(transaction.destination, transaction.meta.alias, 4);\n      }\n    }\n  }\n  getUsername(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else if (this.activeAccount) {\n      const party = this.lookupService.resolve({\n        address: this.activeAccount.address\n      });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n  previewAttention(): string {\n    if (this.transactions[0]?.meta?.verifier) {\n      if (!this.tokenTransfer && new Big(this.totalAmount()).gt('50')) {\n        let recipientKind = '';\n        switch (this.transactions[0].meta.verifier) {\n          case 'google':\n            recipientKind = 'Google account email address';\n            break;\n          case 'reddit':\n            recipientKind = 'Reddit username';\n            break;\n          case 'twitter':\n            recipientKind = 'Twitter handle';\n            break;\n          default:\n            recipientKind = 'information';\n        }\n        return `Carefully review the recipient's ${recipientKind}! Spelling mistakes can lead to permanent loss of the transferred funds.`;\n      }\n    }\n    return '';\n  }\n  // Only Numbers with Decimals\n  sanitizeNumberInput(e, type = ''): void {\n    console.dir(this.token?.decimals, e.target);\n    if (['gas', 'storage'].includes(type) || (type === 'amount' && this.token?.decimals == 0)) {\n      e.target.value = e.target.value.replace(/[^0-9]/g, '');\n    } else {\n      e.target.value = e.target.value.replace(/[^0-9\\.]/g, '');\n      if ((e.target.value.match(/\\./g) || []).length > 1) {\n        const tmp = e.target.value.split('');\n        tmp.splice(tmp.lastIndexOf('.'), 1);\n        e.target.value = tmp.join('');\n      }\n      if (e.target.value.charAt(0) === '.') {\n        e.target.value = '0' + e.target.value;\n      }\n    }\n  }\n  closeModalAction(emit: string = null): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.operationResponse.emit(emit);\n    this.reset();\n  }\n  reset(init = false): void {\n    if (!init) {\n      this.confirmRequest = null;\n      if (this.syncSub) {\n        this.syncSub.unsubscribe();\n        this.syncSub = undefined;\n      }\n    }\n    this.tokenTransfer = '';\n    this.transactions = [];\n    this.activeAccount = null;\n\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n\n    this.token = null;\n    this.domain = undefined;\n\n    this.parameters = null;\n    this.batchParamIndex = 0;\n    this.micheline = null;\n    this.batchParameters = [];\n    this.parametersFormat = 0;\n    this.transformedParameters = [];\n    this.extractedSchema = [];\n    this.schema = undefined;\n\n    this.showFullBatch = false;\n    this.sendResponse = null;\n    this.ledgerError = '';\n    this.password = '';\n    this.pwdInvalid = '';\n    this.advancedForm = false;\n    this.externalReq = false;\n  }\n  counter(i: number) {\n    return new Array(i);\n  }\n\n  toggleTab(e) {\n    let elem = e.target;\n    while (elem.tagName.toLowerCase() !== 'li') {\n      elem = elem.parentElement;\n    }\n    elem.classList.toggle('expanded');\n  }\n}\n","<div class=\"flex-row dropdown\" [class.expanded]=\"isOpen\" (click)=\"toggleDropdown()\" [id]=\"ecmpId\">\n  <img class=\"button icon-torus\"\n    [src]=\"torusVerifier === '' ? 'assets/img/tezos-xtz-logo.svg' :  'assets/img/' + torusVerifier.toLowerCase() + '-logo.svg'\" />\n  <input readonly [(ngModel)]=\"torusVerifierName\" /><img class=\"button icon-db\"\n    src=\"../../../assets/img/down-arrow.svg\" />\n  <div class=\"flex-column dropdown-content\">\n    <a [class.selected]=\"torusVerifierName === 'Tezos Address'\"\n      (click)=\"torusVerifier = ''; torusVerifierName = 'Tezos Address';\">\n      Tezos Address\n    </a>\n    <a [class.selected]=\"torusVerifierName === 'Tezos Domains'\"\n      (click)=\"torusVerifier = 'domain'; torusVerifierName = 'Tezos Domains'\">\n      Tezos Domains\n    </a>\n    <ng-container *ngFor=\"let key of torusService.verifierMapKeys\">\n      <ng-container *ngIf=\"torusService.verifierMap[key].lookups\">\n        <a [class.selected]=\"torusVerifierName === torusService.verifierMap[key].name\"\n          (click)=\"torusVerifier = key; torusVerifierName = torusService.verifierMap[key].name\">\n          {{ torusService.verifierMap[key].name }}\n        </a>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TorusService } from '../../../../services/torus/torus.service';\nimport { DropdownComponent } from '../dropdown.component';\n\n@Component({\n  selector: 'app-ui-dropdown-prepare-send',\n  templateUrl: './prepare-send-dropdown.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/prepare-send-dropdown.component.scss']\n})\nexport class PrepareSendDropdownComponent extends DropdownComponent implements OnInit {\n  @Input() torusVerifierName = 'Tezos Address';\n  @Input() torusVerifier = '';\n\n  constructor(public router: Router, public torusService: TorusService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  toggleDropdown(): void {\n    this.dropdownResponse.emit({\n      torusVerifierName: this.torusVerifierName,\n      torusVerifier: this.torusVerifier\n    });\n    this.isOpen = !this.isOpen;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">{{ !isNFT ? getTitle() : 'Send Token'}}</h1>\n    </div>\n    <div class=\"flex-column prepare-send\">\n      <form autocomplete=\"off\">\n        <div *ngIf=\"!this.isMultipleDestinations\" class=\"flex-column top\">\n          <div *ngIf=\"isNFT\" class=\"flex-row token\">\n            <app-asset class=\"asset\" [priorityList]=\"['thumbnailAsset', 'displayAsset']\" [assets]=\"token\"></app-asset>\n            <span class=\"title\">{{token?.name}}</span>\n          </div>\n          <span *ngIf=\"!this.token || !(this.token?.isBooleanAmount || this.token?.balance == 1)\"\n            class=\"flex-row label title\">ENTER {{!isNFT ? 'AMOUNT' :\n            'QUANTITY'}}:</span>\n          <div *ngIf=\"!this.token || !(this.token?.isBooleanAmount || this.token?.balance == 1)\"\n            class=\"flex-row amount\">\n            <input #amountInput inputmode=\"decimal\" name=\"none\" [placeholder]=\"token?.decimals == 0 ? '0' : '0.00'\" [(ngModel)]=\"amount\"\n              name=\"none\" (mousedown)=\"sendMax = false; default\"\n              (input)=\"sanitizeNumberInput($event, 'amount'); amountChange()\"\n              (paste)=\"sanitizeNumberInput($event, 'amount')\" (change)=\"amountChange()\"\n              [disabled]=\"isMultipleDestinations\" />\n            <button *ngIf=\"!this.isMultipleDestinations\" tabindex=-1 class=\"small\" [class.max]=\"sendMax\"\n              (click)=\"sendEntireBalance($event)\">MAX</button>\n          </div>\n          <div class=\"flex-row fees\">\n            <span *ngIf=\"!tokenTransfer\" class=\"amount-usd\">\n              <span>USD:&nbsp;</span>{{'$' + (getTotalAmount() * walletService.wallet.XTZrate | number:'1.2-2' ||\n              '0.00')\n              }}\n            </span>\n            <span class=\"amount-fee\"><span>FEE{{ getTotalBurn() > 0 ? ' & STORAGE COST' : ''}}:&nbsp;</span><img\n                *ngIf=\"simSemaphore\" src=\"../../../../assets/img/feeLoader.gif\">{{ getTotalCost() != 0 ? (getTotalCost()\n              |\n              number:'1.0-6') + ' tez' : '--'\n              }}</span>\n          </div>\n        </div>\n      </form>\n      <form class=\"to\" autocomplete=\"off\">\n        <div *ngIf=\"!this.isMultipleDestinations\" class=\"flex-column\">\n          <span class=\"label title\">SEND TO:</span>\n          <div class=\"address\">\n            <div *ngIf=\"!toPkh\" class=\"flex-column tool\" id=\"paste\" (click)=\"pasteToPkh()\">\n              <img src=\"assets/img/paste.svg\" />\n            </div>\n            <app-qr-scanner *ngIf=\"!toPkh\" [override]=\"true\" class=\"flex-column tool\" id=\"qr\" (scanResponse)=\"handleScanResponse($event)\"></app-qr-scanner>\n            <app-ui-dropdown-prepare-send [torusVerifier]=\"torusVerifier\" [torusVerifierName]=\"torusVerifierName\"\n              (dropdownResponse)=\"dropdownResponse($event)\"></app-ui-dropdown-prepare-send>\n            <input type=\"text\" placeholder=\"Recipient\" class=\"text\" (input)=\"updateDefaultValues($event)\"\n              (change)=\"toPkhChange()\" name=\"toPkh\" [(ngModel)]=\"toPkh\">\n          </div>\n          <div class=\"flex-row address-display\">\n            <span [style.display]=\"!torusPendingLookup && torusLookupAddress ? '' : 'none'\">{{ torusLookupAddress\n              }}</span><span [style.display]=\"torusPendingLookup ? '' : 'none'\"><img\n                src=\"../../../../assets/img/feeLoader.gif\"></span>\n          </div>\n        </div>\n        <div *ngIf=\"this.isMultipleDestinations\" class=\"flex-column\">\n          <label class=\"label\">Addresses and amounts <span class=\"batchInfo\">{{ batchSpace() }}</span></label>\n          <textarea name=\"none\" type=\"text\" class=\"text\" (input)=\"updateDefaultValues()\" rows=\"3\"\n            [(ngModel)]=\"toMultipleDestinationsString\" name=\"none\"\n            placeholder=\"address1 amount1 ; &#10;address2 amount2 ; &#10;address3 ...\"></textarea>\n        </div>\n        <div class=\"flex-column\">\n          <app-ui-toggle-advanced style=\"width: calc(100% - 1.5em);margin: 1rem 0;\" [default]=\"false\"\n            (stateChange)=\"advancedForm = $event\"></app-ui-toggle-advanced>\n          <button *ngIf=\"!isNFT && advancedForm\" class=\"small multiple-destinations\" (click)=\"toggleDestination()\">\n            <span>\n              <ng-container *ngIf=\"!this.isMultipleDestinations\">Multiple transactions</ng-container>\n              <ng-container *ngIf=\"this.isMultipleDestinations\">Single transaction</ng-container>\n            </span>\n          </button>\n        </div>\n      </form>\n      <form autocomplete=\"off\" *ngIf=\"advancedForm\" class=\"flex-column advanced-form\">\n        <div class=\"flex-row\">\n          <div class=\"flex-column\">\n            <label class=\"label\">Gas limit</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\" (input)=\"sanitizeNumberInput($event, 'gas')\"\n              (paste)=\"sanitizeNumberInput($event, 'gas')\" placeholder={{this.defaultTransactionParams.gas.toString()}}\n              [(ngModel)]=\"customGasLimit\" name=\"none\">\n          </div>\n          <div class=\"flex-column\">\n            <label class=\"label\">Fee</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" (input)=\"sanitizeNumberInput($event); updateMaxAmount()\"\n              (paste)=\"sanitizeNumberInput($event); updateMaxAmount()\" class=\"text\"\n              placeholder={{this.defaultTransactionParams.fee.toString()}} [(ngModel)]=\"customFee\" name=\"none\">\n          </div>\n        </div>\n        <div class=\"flex-row\">\n          <div class=\"flex-column\">\n            <label class=\"label\">Storage limit</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" (input)=\"sanitizeNumberInput($event, 'storage'); updateMaxAmount()\"\n              (paste)=\"sanitizeNumberInput($event, 'storage'); updateMaxAmount()\" class=\"text\"\n              placeholder={{this.defaultTransactionParams.storage.toString()}} [(ngModel)]=\"customStorageLimit\"\n              name=\"none\">\n          </div>\n          <div class=\"flex-column\">\n            <label class=\"label\">Max storage cost</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text read-only\" [value]=\"burnAmount() ? burnAmount() : '0 tez'\"\n              tabindex=-1 readonly>\n          </div>\n        </div>\n      </form>\n      <br />\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <span *ngIf=\"formInvalid !== ''\" class=\"label danger\">\n          {{ formInvalid }}\n        </span>\n        <button class=\"confirm\" (click)=\"preview()\">Preview</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { EstimateService } from '../../../../services/estimate/estimate.service';\nimport { DefaultTransactionParams } from '../../../../interfaces';\nimport { FullyPreparedTransaction, PartiallyPreparedTransaction, PrepareRequest } from '../../../misc/send/interfaces';\nimport { Account, ImplicitAccount, OriginatedAccount } from '../../../../services/wallet/wallet';\nimport { TorusService } from '../../../../services/torus/torus.service';\nimport Big from 'big.js';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport assert from 'assert';\nimport { TezosDomainsService } from '../../../../services/tezos-domains/tezos-domains.service';\nimport { ModalComponent } from '../../modal.component';\nimport { TokenBalancesService } from '../../../../services/token-balances/token-balances.service';\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n@Component({\n  selector: 'app-prepare-send',\n  templateUrl: './prepare-send.component.html',\n  styleUrls: ['../../../../../scss/components/modals/modal.scss']\n})\nexport class PrepareSendComponent extends ModalComponent implements OnInit, OnChanges {\n  @Input() prepareRequest: PrepareRequest = null;\n  @Output() prepareResponse = new EventEmitter();\n  @ViewChild('destType') public destType: ElementRef;\n  activeAccount: Account = null;\n  tokenTransfer: string = null;\n  token = null;\n  costPerByte: string = this.estimateService.costPerByte;\n\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n  active = false;\n  isMultipleDestinations = false;\n  advancedForm = false;\n  hideAmount = false;\n  simSemaphore = 0;\n  isNFT = false;\n  accountDropdownIsOpen = false;\n\n  torusVerifierName = 'Tezos Address';\n  torusVerifier = '';\n  torusLookupId = '';\n  torusLookupAddress = '';\n  torusTwitterId = '';\n  torusPendingLookup = false;\n\n  transactions = [];\n  toMultipleDestinationsString = '';\n\n  formInvalid = '';\n  latestSimError = '';\n  prevEquiClass = '';\n\n  sendMax = null;\n\n  amount = '';\n  toPkh = '';\n  customFee = '';\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  name = 'prepare-send';\n\n  constructor(\n    private tokenService: TokenService,\n    private estimateService: EstimateService,\n    public torusService: TorusService,\n    private translate: TranslateService,\n    private walletService: WalletService,\n    public tezosDomains: TezosDomainsService,\n    private inputValidationService: InputValidationService,\n    private tokenBalancesService: TokenBalancesService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.prepareRequest?.currentValue) {\n      this.reset(true);\n      this.tokenTransfer = changes.prepareRequest.currentValue.tokenTransfer ?? null;\n      this.token = this.tokenService.getAsset(this.tokenTransfer);\n      this.isNFT = this.tokenBalancesService.isNFT(this.token);\n      this.activeAccount = changes.prepareRequest.currentValue.account;\n      this.amount = !this.token || !(this.token?.isBooleanAmount || this.token?.balance == 1) ? '' : '1';\n      if (!this.isOpen) {\n        this.openModal();\n      }\n    }\n  }\n  openModal() {\n    ModalComponent.currentModel.next({ name: this.name, data: null });\n    this.estimateService.preLoadData(this.activeAccount.pkh, this.activeAccount.pk);\n  }\n  closeModalAction() {\n    this.prepareResponse.emit(null);\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.reset();\n  }\n\n  reset(init = false) {\n    if (!init) {\n      this.prepareRequest = null;\n    }\n\n    this.defaultTransactionParams = zeroTxParams;\n    this.active = false;\n    this.isMultipleDestinations = false;\n    this.advancedForm = false;\n    this.hideAmount = false;\n    this.simSemaphore = 0;\n\n    this.tokenTransfer = null;\n    this.token = null;\n    this.isNFT = null;\n    this.accountDropdownIsOpen = false;\n\n    this.transactions = [];\n    this.toMultipleDestinationsString = '';\n\n    this.formInvalid = '';\n    this.latestSimError = '';\n    this.prevEquiClass = '';\n    this.torusVerifierName = 'Tezos Address';\n    this.torusVerifier = '';\n\n    this.sendMax = null;\n\n    this.amount = '';\n    this.toPkh = '';\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n    this.clearTorus();\n  }\n  getTitle(): string {\n    return `Send ${this.getAssetName(true)}`;\n  }\n  getAssetName(short = true): string {\n    if (this.tokenTransfer) {\n      return this.token?.symbol ?? this.token?.name ?? 'Unknown';\n    } else {\n      return !this.prepareRequest.symbol ? 'tez' : this.prepareRequest.symbol;\n    }\n  }\n  getTotalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  getTotalCost(display: boolean = false): number | string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return Number(totalFee);\n  }\n  getTotalFee(): number {\n    if (this.customFee !== '' && (Number(this.customFee) || this.customFee === '0')) {\n      return Number(this.customFee);\n    }\n    return Number(this.defaultTransactionParams.fee);\n  }\n  getTotalBurn(): number {\n    if (this.customStorageLimit !== '' && Number(this.customStorageLimit)) {\n      return Number(Big(this.customStorageLimit).mul(this.transactions.length).times(this.costPerByte).div(1000000).toString());\n    }\n    return this.defaultTransactionParams.burn;\n  }\n  burnAmount(): string {\n    const burn = this.customStorageLimit ? Number(Big(this.customStorageLimit).times(this.costPerByte).div(1000000)) : this.defaultTransactionParams.burn;\n    if (burn) {\n      return burn + ' tez';\n    }\n    return '';\n  }\n  amountChange(): void {\n    this.estimateFees();\n  }\n  async estimateFees(): Promise<void> {\n    console.log('estimate..');\n    const prevSimError = this.latestSimError;\n    this.latestSimError = '';\n    let txs: PartiallyPreparedTransaction[] = [];\n    try {\n      txs = this.getMinimalPreparedTxs();\n      this.transactions = txs;\n    } catch (e) {\n      console.log(e);\n    }\n    if (txs?.length) {\n      const equiClass = this.equiClass(this.activeAccount.address, txs);\n      if (this.prevEquiClass !== equiClass || (this.tokenTransfer && this.checkBalance())) {\n        this.latestSimError = '';\n        this.prevEquiClass = equiClass;\n        this.simSemaphore++; // Put lock on 'Preview and 'Send max'\n        const callback = (res) => {\n          if (res) {\n            if (res.error) {\n              this.formInvalid = res.error;\n              this.latestSimError = res.error;\n            } else {\n              this.defaultTransactionParams = res;\n              this.formInvalid = '';\n              this.latestSimError = '';\n              this.updateMaxAmount();\n            }\n          } else {\n            console.log('no res');\n          }\n          this.simSemaphore--;\n        };\n        this.estimateService.estimateTransactions(JSON.parse(JSON.stringify(txs)), this.activeAccount.address, this.tokenTransfer, callback);\n      } else {\n        this.latestSimError = prevSimError;\n        this.formInvalid = this.latestSimError;\n      }\n    } else {\n      this.latestSimError = prevSimError;\n      if (this.isMultipleDestinations ? !this.toMultipleDestinationsString : !this.toPkh) {\n        this.defaultTransactionParams = zeroTxParams;\n        this.updateMaxAmount();\n        this.prevEquiClass = '';\n      }\n    }\n  }\n  equiClass(sender: string, transactions: any): string {\n    let data = sender;\n    if (this.tokenTransfer) {\n      data += transactions[0].to + transactions[0].amount.toString();\n    } else {\n      for (const tx of transactions) {\n        data += tx.to;\n      }\n    }\n    return data;\n  }\n  /*\n    1. input validation\n      strict checks that\n    2. create basic transaction array\n  */\n  sanitizeNumberInput(e, type = ''): void {\n    console.dir(this.token?.decimals, e.target);\n    if (['gas', 'storage'].includes(type) || (type === 'amount' && this.token?.decimals == 0)) {\n      e.target.value = e.target.value.replace(/[^0-9]/g, '');\n    } else {\n      e.target.value = e.target.value.replace(/[^0-9\\.]/g, '');\n      if ((e.target.value.match(/\\./g) || []).length > 1) {\n        const tmp = e.target.value.split('');\n        tmp.splice(tmp.lastIndexOf('.'), 1);\n        e.target.value = tmp.join('');\n      }\n      if (e.target.value.charAt(0) === '.') {\n        e.target.value = '0' + e.target.value;\n      }\n    }\n  }\n  updateDefaultValues(ev?: any): void {\n    const val = ev?.target.value.trim();\n    if (val && !this.torusVerifier) {\n      if (this.inputValidationService.twitterAccount(val)) {\n        this.torusVerifier = 'twitter';\n        this.torusVerifierName = 'Twitter';\n      } else if (this.inputValidationService.tezosDomain(val)) {\n        this.torusVerifier = 'domain';\n        this.torusVerifierName = 'Tezos Domains';\n      }\n      ev.target.value = ev.target.value.trim();\n    }\n\n    if (!this.torusVerifier) {\n      this.estimateFees();\n      if (this.isMultipleDestinations) {\n        this.amount = this.getTotalAmount();\n      }\n    }\n  }\n  toPkhChange(): void {\n    if (this.torusVerifier) {\n      this.torusLookup();\n    }\n  }\n  // Will return PartiallyPreparedTransaction or throw an error\n  getMinimalPreparedTxs(finalCheck = false): PartiallyPreparedTransaction[] {\n    if (!this.isMultipleDestinations) {\n      if (this.torusVerifier) {\n        assert(!this.invalidTorusAccount(), this.invalidTorusAccount());\n        assert(this.torusReady(), 'Pending lookup');\n        this.checkTx(this.torusLookupAddress, this.amount, finalCheck);\n        const meta: any = {\n          verifier: this.torusVerifier,\n          alias: this.torusLookupId\n        };\n        if (this.torusTwitterId) {\n          meta.twitterId = this.torusTwitterId;\n        }\n        return [\n          {\n            kind: 'transaction',\n            destination: this.torusLookupAddress,\n            amount: this.amount ? this.amount : '0',\n            meta\n          }\n        ];\n      } else {\n        this.checkTx(this.toPkh, this.amount, finalCheck);\n      }\n      return [\n        {\n          kind: 'transaction',\n          destination: this.toPkh,\n          amount: this.amount ? this.amount : '0'\n        }\n      ];\n      //this.checkGasStorageFee();\n    } else {\n      return this.getBatch(finalCheck);\n      //assert(false, 'not supported yet')\n    }\n  }\n  checkTx(toPkh: string, amount: string, finalCheck: boolean): void {\n    assert(\n      this.torusVerifier || !(!this.inputValidationService.address(toPkh) || toPkh === this.activeAccount.address),\n      this.translate.instant('SENDCOMPONENT.INVALIDRECEIVERADDRESS')\n    );\n    assert(\n      !this.torusVerifier ||\n        !(!this.inputValidationService.torusAccount(this.toPkh, this.torusVerifier) || this.torusLookupAddress === this.activeAccount.address),\n      'Invalid recipient'\n    );\n    assert(\n      !(\n        !this.inputValidationService.amount(amount, this.token ? this.token.decimals : undefined) ||\n        (finalCheck && (amount === '0' || amount === '') && toPkh.slice(0, 3) !== 'KT1')\n      ),\n      this.translate.instant('SENDCOMPONENT.INVALIDAMOUNT')\n    );\n  }\n  getBatch(finalCheck = false): PartiallyPreparedTransaction[] {\n    const txs: PartiallyPreparedTransaction[] = this.toMultipleDestinationsString\n      .trim()\n      .split(';')\n      .map((row, i) => {\n        if (row.trim()) {\n          const cols = row\n            .trim()\n            .split(' ')\n            .map((col) => col.trim())\n            .filter((col) => col);\n          assert(cols?.length === 2, `Transaction ${i + 1} has invalid number of arguments. Expected 2, but got ${cols?.length}.`);\n          assert(this.inputValidationService.address(cols[0]), `Transaction ${i + 1} contains an invalid destination.`);\n          assert(this.inputValidationService.amount(cols[1]), `Transaction ${i + 1} contains an invalid amount.`);\n          this.checkTx(cols[0], cols[1], finalCheck);\n          const tx: PartiallyPreparedTransaction = {\n            kind: 'transaction',\n            destination: cols[0],\n            amount: cols[1]\n          };\n          return tx;\n        }\n      })\n      .filter((row) => row);\n    return txs;\n  }\n  getFullyPreparedTxs(): FullyPreparedTransaction[] {\n    assert(!this.simSemaphore && (!this.torusVerifier || this.torusReady()), this.formInvalid ? this.formInvalid : 'Awaiting request');\n    const minimalTxs = this.getMinimalPreparedTxs(true);\n    this.transactions = minimalTxs;\n    assert(this.inputValidationService.fee(this.customFee), 'Invalid fee');\n    assert(this.inputValidationService.gas(this.customGasLimit), 'Invalid gas limit');\n    assert(this.inputValidationService.gas(this.customStorageLimit), 'Invalid storage limit');\n    assert(!this.checkBalance(), this.checkBalance());\n    assert(minimalTxs.length === this.defaultTransactionParams.customLimits?.length, 'Simulation error');\n    return this.opsWithCustomLimits();\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.defaultTransactionParams.gas.toString()) {\n      extraGas = Number(this.customGasLimit) - this.defaultTransactionParams.gas;\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.defaultTransactionParams.storage.toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.defaultTransactionParams.storage;\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas\n        ? (Number(this.defaultTransactionParams.customLimits[i].gasLimit) + extraGasPerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.defaultTransactionParams.customLimits[i].storageLimit) + extraStoragePerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  invalidTorusAccount(): string {\n    const torusError = {\n      google: 'Invalid Google email address',\n      reddit: 'Invalid Reddit username',\n      twitter: 'Invalid Twitter username',\n      domain: 'Tezos Domains must be valid url',\n      email: 'Invalid email address'\n    };\n    if (!this.inputValidationService.torusAccount(this.toPkh, this.torusVerifier) && this.toPkh !== '') {\n      return torusError[this.torusVerifier];\n    }\n  }\n  sendEntireBalance(event: Event): void {\n    event.stopPropagation();\n    this.sendMax = true;\n    this.checkMaxAmount();\n    this.amountChange();\n  }\n  toggleDestination(): void {\n    this.defaultTransactionParams = zeroTxParams;\n    this.sendMax = false;\n    this.prevEquiClass = '';\n    this.isMultipleDestinations = !this.isMultipleDestinations;\n    this.transactions = [];\n    this.toMultipleDestinationsString = '';\n    this.formInvalid = '';\n    this.toPkh = '';\n    this.amount = '';\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n    this.clearTorus();\n    this.updateDefaultValues();\n  }\n  clearTorus(): void {\n    this.torusVerifier = '';\n    this.torusPendingLookup = false;\n    this.torusLookupAddress = '';\n    this.torusLookupId = '';\n    this.torusTwitterId = '';\n  }\n  checkMaxAmount(): void {\n    if (this.sendMax) {\n      const max = this.maxToSend(this.activeAccount);\n      if (max.length && max.slice(0, 1) !== '-') {\n        this.amount = max;\n      } else {\n        this.amount = '0';\n      }\n    }\n  }\n  checkBalance(): string {\n    if (this.transactions.length > 0) {\n      if (this.activeAccount && this.activeAccount instanceof ImplicitAccount) {\n        const max = Big(this.maxToSend(this.activeAccount)).plus(this.tokenTransfer ? 0 : 0.000001);\n        let amount = Big(0);\n        for (const tx of this.transactions) {\n          amount = amount.plus(Big(tx.amount));\n        }\n        if (amount.gt(max)) {\n          return this.translate.instant('SENDCOMPONENT.TOOHIGHFEEORAMOUNT');\n        }\n      } else if (this.activeAccount && this.activeAccount instanceof OriginatedAccount) {\n        const maxKt = Big(this.maxToSend(this.activeAccount));\n        const maxTz = Big(this.maxToSend(this.walletService.wallet.getImplicitAccount(this.activeAccount.pkh))).plus(0.000001);\n        let amount = Big(0);\n        for (const tx of this.transactions) {\n          amount = amount.plus(Big(tx.amount));\n        }\n        if (amount.gt(maxKt)) {\n          return this.translate.instant('SENDCOMPONENT.TOOHIGHAMOUNT');\n        } else if (new Big('0').gt(maxTz)) {\n          return this.translate.instant('SENDCOMPONENT.TOOHIGHFEE');\n        }\n      }\n    }\n    return '';\n  }\n  updateMaxAmount(): void {\n    if (this.sendMax) {\n      const max = this.maxToSend(this.activeAccount);\n      let maxAmount = '0';\n      if (max.length && max.slice(0, 1) !== '-') {\n        maxAmount = max;\n      }\n      if (this.amount !== maxAmount) {\n        this.amount = maxAmount;\n      }\n    }\n  }\n  maxToSend(account: Account): string {\n    if (account && account instanceof ImplicitAccount && !this.tokenTransfer) {\n      let accountBalance = Big(account.balanceXTZ).div(1000000);\n      accountBalance = accountBalance.minus(this.customFee && Number(this.customFee) ? Number(this.customFee) : this.defaultTransactionParams.fee);\n      if (!this.isMultipleDestinations) {\n        accountBalance = accountBalance.minus(\n          this.customStorageLimit && Number(this.customStorageLimit)\n            ? Number(Big(this.customStorageLimit).times(this.costPerByte).div('1000000'))\n            : this.defaultTransactionParams.burn\n        );\n      } else {\n        accountBalance = accountBalance.minus(this.defaultTransactionParams.burn);\n      }\n      accountBalance = accountBalance.minus(0.000001); // dust\n      return accountBalance.toString();\n    } else {\n      if (this.tokenTransfer) {\n        if (account instanceof ImplicitAccount) {\n          return Big(account.getTokenBalance(this.tokenTransfer))\n            .div(10 ** this.token.decimals)\n            .toFixed();\n        }\n      } else {\n        return Big(account.balanceXTZ).div(1000000).toString();\n      }\n    }\n  }\n\n  async verifierChange(): Promise<void> {\n    this.torusLookupAddress = '';\n    if (this.torusVerifier) {\n      this.torusLookup();\n    } else {\n      this.formInvalid = '';\n      this.estimateFees();\n    }\n    // this.validateReceiverAddress();\n    // resimulate?\n  }\n  async torusLookup(): Promise<any> {\n    if (!this.torusService.verifierMapKeys.includes(this.torusVerifier) && this.torusVerifier !== 'domain') {\n      this.formInvalid = 'Invalid verifier';\n    } else if (this.invalidTorusAccount()) {\n      this.formInvalid = this.invalidTorusAccount();\n    } else if (this.toPkh) {\n      this.torusPendingLookup = true;\n      this.torusLookupId = this.toPkh;\n\n      const { pkh, twitterId } =\n        this.torusVerifier === 'domain'\n          ? await this.tezosDomains\n              .getAddressFromDomain(this.toPkh)\n              .then((ans) => {\n                if (ans?.pkh === '') {\n                  this.formInvalid = 'Could not find the domain';\n                }\n                return ans;\n              })\n              .catch((e) => {\n                console.error(e);\n                this.formInvalid = e;\n                return '';\n              })\n          : await this.torusService.lookupPkh(this.torusVerifier, this.toPkh).catch((e) => {\n              console.error(e);\n              this.formInvalid = e;\n              return '';\n            });\n\n      this.torusPendingLookup = false;\n      if (pkh) {\n        this.torusLookupAddress = pkh;\n        this.torusTwitterId = twitterId ? twitterId : '';\n        this.estimateFees();\n      } else {\n        this.torusLookupAddress = '';\n      }\n    }\n  }\n  batchSpace(txs = 0): boolean | string {\n    if (this.isMultipleDestinations && this.defaultTransactionParams.customLimits && this.defaultTransactionParams.customLimits.length) {\n      const numberOfTxs = txs ? txs : this.defaultTransactionParams.customLimits.length;\n      const txsLimit = 294 + (this.defaultTransactionParams.reveal ? 0 : 2); // Max transactions in a batch is 296 (294 with a reveal)\n      return !txs ? this.numberWithCommas(numberOfTxs + ' / ' + txsLimit) : numberOfTxs <= txsLimit;\n    }\n    return !txs ? '' : true;\n  }\n  numberWithCommas(x: string): string {\n    const parts: Array<string> = x.split('.');\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return parts.join('.');\n  }\n  torusReady(): boolean {\n    return !this.torusPendingLookup && this.torusLookupAddress !== '';\n  }\n  preview(): void {\n    let txs: FullyPreparedTransaction[];\n    try {\n      txs = this.getFullyPreparedTxs();\n      this.prepareResponse.emit(txs);\n      ModalComponent.currentModel.next({\n        name: 'confirm-send',\n        data: {\n          customGasLimit: this.customGasLimit,\n          customStorageLimit: this.customStorageLimit\n        }\n      });\n      this.reset();\n    } catch (e) {\n      this.formInvalid = e.message;\n    }\n  }\n  dynSize(): string {\n    const size = this.amount ? this.amount.length : 0;\n    if (size < 7) {\n      return '5';\n    } else if (size < 9) {\n      return '4';\n    } else if (size < 12) {\n      return '3';\n    } else if (size < 17) {\n      return '2';\n    }\n    return '1.5';\n  }\n\n  dropdownResponse(data): void {\n    if (data?.torusVerifier !== this.torusVerifier) {\n      console.log(this.torusVerifier + ' -> ' + data.torusVerifier);\n      this.torusVerifier = data.torusVerifier;\n      this.torusVerifierName = data.torusVerifierName;\n      this.verifierChange();\n    }\n  }\n  pasteToPkh(): void {\n    navigator.clipboard.readText().then((clipText) => {\n      this.toPkh = clipText;\n      this.updateDefaultValues({ target: { value: this.toPkh } });\n    });\n  }\n  handleScanResponse(ev): void {\n    this.toPkh = ev?.pkh || '';\n    this.updateDefaultValues({ target: { value: this.toPkh } });\n  }\n}\n","<div *ngIf=\"active && template === 'gap'\" class=\"flex-column kukai-modal gap\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"cancel()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column confirm-send\">\n        <div class=\"asset-name\">{{ templateRequest.template.descriptions[0].text }}</div>\n        <div class=\"flex-row transaction\">\n          <div class=\"flex-column left\">\n            <span class=\"default-text\">Send</span>\n            <span class=\"default-text amount\">{{ (templateRequest.partialOps[0].amount | number:'1.0-6') + ' tez'\n              }}</span>\n            <span class=\"default-text\">USD&nbsp;{{'$' +\n              (templateRequest.partialOps[0].amount\n              *\n              walletService.wallet.XTZrate | number:'1.0-2')\n              }}</span>\n            <span class=\"default-text\">From:</span>\n            <div class=\"flex-row torus\" *ngIf=\"this.walletService.wallet.verifier\">\n              <img class=\"icon\" src=\"../../../assets/img/{{ this.walletService.wallet.verifier }}-logo.svg\">\n              <div class=\"flex-column\">\n                <span class=\"name\">{{ this.walletService.wallet.displayName() }}</span><span class=\"address\">{{\n                  activeAccount.address }}</span>\n              </div>\n            </div>\n            <span *ngIf=\"!this.walletService.wallet.verifier\" class=\"default-text single-to\">{{ activeAccount.address\n              }}</span>\n          </div>\n          <div *ngIf=\"templateRequest.template.descriptions[0]?.imgUrl\" class=\"flex-column right\">\n            <img class=\"token-image\" [src]=\"templateRequest.template.descriptions[0]?.imgUrl\" />\n          </div>\n        </div>\n      <br />\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column bottom\">\n        <div class=\"flex-row default-text more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"toggle()\">{{ !showMore ?\n          'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/gap-arrow.svg\"></div>\n        <div *ngIf=\"showMore\" class=\"info\">\n          <div class=\"flex-column\">\n            <div class=\"default-text\">\n              Send to:\n            </div>\n            <div class=\"default-text\">\n              {{ templateRequest.ops[0].destination }}\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Fee\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.network + ' tez' }}\n              </div>\n            </div>\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Max Storage Cost\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.storage + ' tez' }}\n              </div>\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Contract Call\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.ops[0]?.parameters?.entrypoint }}\n              </div>\n            </div>\n            <br/>\n          </div>\n        </div>\n      </div>\n      <br />\n      <div class=\"flex-row buttons\">\n        <button (click)=\"approve()\" [disabled]=\"templateRequest?.partialOps?.length !== 1\">\n          <ng-container *ngIf=\"templateRequest.template.button; else defaultButtonText\">\n            {{templateRequest.template.button}}</ng-container>\n          <ng-template #defaultButtonText>PURCHASE</ng-template>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"active && template === 'minterpop'\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"cancel()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column confirm-send\">\n        <div class=\"asset-name\">{{ templateRequest.template.descriptions[0].text }}</div>\n        <div class=\"flex-row transaction\">\n          <div class=\"flex-column left\">\n            <span class=\"default-text\">Send</span>\n            <span class=\"default-text amount\">{{ (templateRequest.partialOps[0].amount | number:'1.0-6') + ' tez'\n              }}</span>\n            <span class=\"default-text\">USD&nbsp;{{'$' +\n              (templateRequest.partialOps[0].amount\n              *\n              walletService.wallet.XTZrate | number:'1.0-2')\n              }}</span>\n            <span class=\"default-text\">From:</span>\n            <div class=\"flex-row torus\" *ngIf=\"this.walletService.wallet.verifier\">\n              <img class=\"icon\" src=\"../../../assets/img/{{ this.walletService.wallet.verifier }}-logo.svg\">\n              <div class=\"flex-column\">\n                <span class=\"name\">{{ this.walletService.wallet.displayName() }}</span><span class=\"address\">{{\n                  activeAccount.address }}</span>\n              </div>\n            </div>\n            <span *ngIf=\"!this.walletService.wallet.verifier\" class=\"default-text single-to\">{{ activeAccount.address\n              }}</span>\n          </div>\n          <div *ngIf=\"templateRequest.template.descriptions[0]?.imgUrl\" class=\"flex-column right\">\n            <img class=\"token-image\" [src]=\"templateRequest.template.descriptions[0]?.imgUrl\" />\n          </div>\n        </div>\n      <br />\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column bottom\">\n        <div class=\"flex-row default-text more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"toggle()\">{{ !showMore ?\n          'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/dropdown-minterpop.svg\"></div>\n        <div *ngIf=\"showMore\" class=\"info\">\n          <div class=\"flex-column\">\n            <div class=\"default-text\">\n              Send to:\n            </div>\n            <div class=\"default-text\">\n              {{ templateRequest.ops[0].destination }}\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Fee\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.network + ' tez' }}\n              </div>\n            </div>\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Max Storage Cost\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.storage + ' tez' }}\n              </div>\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Contract Call\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.ops[0]?.parameters?.entrypoint }}\n              </div>\n            </div>\n            <br/>\n          </div>\n        </div>\n      </div>\n      <br />\n      <div class=\"flex-row buttons\">\n        <button (click)=\"approve()\" [disabled]=\"templateRequest?.partialOps?.length !== 1\">\n          <ng-container *ngIf=\"templateRequest.template.button; else defaultButtonText\">\n            {{templateRequest.template.button}}</ng-container>\n          <ng-template #defaultButtonText>Send</ng-template>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<div *ngIf=\"active && template === 'default'\" class=\"kukai-template\">\n  <div *ngIf=\"templateRequest.template\" class=\"flex-column card\">\n    <H1>You are about to<BR><b\n        *ngIf=\"templateRequest.template.action; else defaultAction\">{{templateRequest.template.action}}</b>\n      <ng-template #defaultAction><b>send</b></ng-template>\n    </H1>\n    <ng-container *ngFor=\"let description of templateRequest.template.descriptions\">\n      <ng-container *ngIf=\"!description.imgUrl\">\n        <p class=\"single\" *ngIf=\"description.text\">{{ description.text }}</p>\n      </ng-container>\n      <ng-container *ngIf=\"description.imgUrl\">\n        <img *ngIf=\"description.imgUrl\" src=\"{{description.imgUrl}}\" height=\"150\">\n        <p class=\"img-text\" *ngIf=\"description.text\">{{description.text}}</p>\n      </ng-container>\n    </ng-container>\n    <div class=\"buttons\" [class.horizontally]=\"!templateRequest.template.buttonsVertically\"\n      [class.vertically]=\"templateRequest.template.buttonsVertically\">\n      <button class=\"secondary\" (click)=\"cancel()\">Cancel</button>\n      <button (click)=\"approve()\">\n        <ng-container *ngIf=\"templateRequest.template.button; else defaultButtonText\">\n          {{templateRequest.template.button}}</ng-container>\n        <ng-template #defaultButtonText>Send</ng-template>\n      </button>\n    </div>\n    <p class=\"fee\">Estimated fee <b *ngIf=\"templateRequest.fee\">{{templateRequest.fee.total}} tez</b><img\n        *ngIf=\"!templateRequest.fee\" src=\"../../../../assets/img/feeLoader.gif\"></p>\n    <div class=\"footer\">\n      <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n    </div>\n  </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges, OnChanges } from '@angular/core';\nimport { TemplateRequest, TemplateFee, FullyPreparedTransaction } from '../../../misc/send/interfaces';\nimport { Template, BaseTemplate } from 'kukai-embed';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-confirm-send-embed',\n  templateUrl: './confirm-send.component.html',\n  styleUrls: ['./confirm-send.component.scss']\n})\nexport class ConfirmSendEmbedComponent implements OnInit, OnChanges {\n  @Input() templateRequest: TemplateRequest = null;\n  @Output() isApproved = new EventEmitter();\n  @Input() activeAccount = null;\n  active = false;\n  showMore = false;\n  template = 'default';\n  constructor(public walletService: WalletService, public messageService: MessageService, private subjectService: SubjectService) {}\n\n  ngOnInit(): void {\n    this.subjectService.origin.subscribe((origin) => {\n      if (origin && origin.indexOf('gap') !== -1) {\n        // (m)interpop\n        this.template = 'gap';\n      } else if (origin && origin.indexOf('interpop') !== -1) {\n        // (m)interpop\n        this.template = 'minterpop';\n      } else {\n        this.template = 'default';\n      }\n    });\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.templateRequest?.currentValue) {\n      console.log(this.templateRequest);\n      if ((<BaseTemplate>this.templateRequest?.template)?.descriptions?.length) {\n        this.hideScrollbar();\n        this.active = true;\n      } else {\n        console.warn('No template descriptions');\n        this.cancel();\n      }\n    }\n  }\n  cancel() {\n    this.reset();\n    this.isApproved.emit(null);\n  }\n  approve() {\n    if (this.templateRequest.ops && this.templateRequest.fee) {\n      this.isApproved.emit(this.templateRequest.ops);\n      this.reset();\n    }\n  }\n  toggle() {\n    if (this.templateRequest.ops) {\n      this.showMore = !this.showMore;\n    }\n  }\n  reset() {\n    this.resetScrollbar();\n    this.active = false;\n  }\n  hideScrollbar() {\n    const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n    document.body.style.marginRight = scrollBarWidth.toString();\n    document.body.style.overflow = 'hidden';\n  }\n  resetScrollbar() {\n    document.body.style.marginRight = '';\n    document.body.style.overflow = '';\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"flex-column liquidity-baking-confirm\">\n      <ng-container *ngIf=\"entrypoint === 'addLiquidity'\">\n        <div class=\"flex-column container-inputs alt from\">\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{ expectedXtz | number:'1.0-6' }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow plus\">\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-plus.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{ expectedToken | number:'1.0-8' }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"seperator arrow\">\n          <div class=\"backdrop\"></div>\n          <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n        </div>\n        <div class=\"flex-column container-inputs alt to\">\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{ expectedLqd ? (expectedLqd | number:'1.0-0') : \"&nbsp;\" }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'SIRS' }}</span>\n              <img [src]=\"'assets/img/tokens/sirius.png'\" />\n            </div>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"entrypoint === 'removeLiquidity'\">\n        <div class=\"flex-column container-inputs alt from\">\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{ expectedLqd | number:'1.0-0' }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'SIRS' }}</span>\n              <img [src]=\"'assets/img/tokens/sirius.png'\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"seperator arrow\">\n          <div class=\"backdrop\"></div>\n          <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n        </div>\n        <div class=\"flex-column container-inputs alt to\">\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedXtz ? (expectedXtz | number:'1.0-6') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow plus\">\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-plus.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedToken ? (expectedToken | number:'1.0-8') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"entrypoint === 'xtzToToken'\">\n        <div class=\"flex-column container-inputs\">\n          <div *ngIf=\"expectedXtz\" class=\"flex-row currency from\">\n            <span class=\"amount\">{{expectedXtz | number:'1.0-6'}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow\">\n            <div class=\"backdrop\"></div>\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedToken ? (expectedToken | number:'1.0-8') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n            <span class=\"flex-row hint\">Expected</span>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"entrypoint === 'tokenToXtz'\">\n        <div class=\"flex-column container-inputs\">\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{expectedToken | number:'1.0-8'}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow\">\n            <div class=\"backdrop\"></div>\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedXtz ? (expectedXtz | number:'1.0-6') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n            <span class=\"flex-row hint\">Expected</span>\n          </div>\n        </div>\n      </ng-container>\n      <div class=\"output\">\n        <div *ngIf=\"minimumToken && !minimumXtz\" class=\"flex-row item\">\n          <span class=\"flex-row key\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\" class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumToken | number:'1.2-8'}} tzBTC</span>\n        </div>\n        <div *ngIf=\"minimumXtz && !minimumToken\" class=\"flex-row item\">\n          <span class=\"flex-row key\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\"\n              class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumXtz | number:'1.6-6'}} XTZ</span>\n        </div>\n        <div\n          *ngIf=\"minimumXtz && minimumToken\"\n          class=\"item\">\n          <span class=\"flex-row key\" style=\"margin: 0 0 0.5em 0\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\" class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumXtz | number:'1.6-6'}} XTZ + {{\n            minimumToken | number:'1.2-8'}} tzBTC</span>\n        </div>\n        <div *ngIf=\"minimumLqd\" class=\"flex-row item\">\n          <span class=\"flex-row key\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\" class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumLqd | number:'1.0-0'}} SIRS</span>\n        </div>\n        <div class=\"flex-row item\">\n          <span class=\"flex-row key\">Fee:</span>\n          <span class=\"value\">&nbsp;{{getTotalFee() | number:'1.0-6'}} tez</span>\n        </div>\n        <div class=\"flex-row item\" *ngIf=\"getTotalBurn(); let storageCost\">\n          <span class=\"flex-row key\">Max Storage Cost:</span>\n          <span class=\"value\">&nbsp;{{storageCost | number:'1.0-6'}} tez</span>\n        </div>\n      </div>\n      <div *ngIf=\"(externalReq && (!walletService.isLedgerWallet() || ledgerError))\" class=\"flex-column more-info-toggle\" [class.expanded]=\"advancedForm\">\n        <div class=\"flex-row item\" (click)=\"advancedForm = !advancedForm\">\n          <span class=\"value\">{{ 'Advanced' }}</span>\n          <div class=\"flex-row\"><img src=\"assets/img/chevron-down.svg\"></div>\n        </div>\n      </div>\n      <form *ngIf=\"advancedForm && (externalReq && (!walletService.isLedgerWallet() || ledgerError))\" autocomplete=\"off\" class=\"more-info-body\" [class.expanded]=\"advancedForm\">\n        <div class=\"flex-row\">\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Gas limit</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\"\n              (paste)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\" [placeholder]=\"getTotalDefaultGas() || '0'\"\n              [value]=\"customGasLimit\">\n          </div>\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Fee</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text\" [placeholder]=\"getTotalFee() || '0'\" (paste)=\"sanitizeNumberInput($event, 6, 'customFee')\"\n              (input)=\"sanitizeNumberInput($event, 6, 'customFee')\" [value]=\"customFee\">\n          </div>\n        </div>\n        <div class=\"flex-row\">\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Storage limit</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\"\n              (paste)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\" [placeholder]=\"getTotalDefaultStorage() || '0'\"\n              [value]=\"customStorageLimit\">\n          </div>\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Max storage cost</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text read-only\" [placeholder]=\"(getTotalBurn() || '0') + ' tez'\" tabindex=-1\n              readonly>\n          </div>\n        </div>\n      </form>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <span class=\"form-validity\" [class.error]=\"formInvalid !== 'Awaiting Request'\">{{ formInvalid }}</span>\n        <button *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\" class=\"confirm\"\n          [disabled]=\"!!formInvalid\" (click)=\"ledgerRetry()\">Sign with Ledger</button>\n        <ng-template #elseBlock>\n          <span *ngIf=\"this.pwdInvalid\" class=\"label danger\">{{ pwdInvalid }}</span>\n          <input *ngIf=\"walletService.isPwdWallet()\" [(ngModel)]=\"password\" autocomplete=\"current-password\"\n            placeholder=\"Password\" class=\"text password\" type=\"password\" (input)=\"this.pwdInvalid = ''\"\n            (change)=\"this.pwdInvalid = ''\" (keydown.enter)='inject()'>\n          <button class=\"confirm\" (click)=\"inject()\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : confirmTitle}}</button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>","import { EventEmitter, Input, OnChanges, OnDestroy, Output } from '@angular/core';\nimport { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { ConfirmSwapRequest, FullyPreparedTransaction, PrepareRequest, LqdEntrypoints, PartiallyPreparedTransaction } from '../../misc/send/interfaces';\nimport { TokenService } from '../../../services/token/token.service';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { LookupService } from '../../../services/lookup/lookup.service';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DefaultTransactionParams, KeyPair } from '../../../interfaces';\nimport Big from 'big.js';\nimport { LedgerWallet, TorusWallet } from '../../../services/wallet/wallet';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { ModalComponent } from '../modal.component';\nimport { Subscription } from 'rxjs';\nimport { TezosDomainsService } from '../../../services/tezos-domains/tezos-domains.service';\nimport { TokenBalancesService } from '../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Amount } from '../../../services/swap-liquidity/classes/Amount';\nimport assert from 'assert';\nimport { SwapLiquidityService } from '../../../services/swap-liquidity/swap-liquidity.service';\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n\n@Component({\n  selector: 'app-swap-liquidity-confirm',\n  templateUrl: './swap-liquidity-confirm.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class SwapLiquidityConfirmComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  readonly lqdTokenContract = 'KT1AafHA1C1vk959wvHWBispY9Y2f3fxBUUo';\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  @Input() confirmRequest: PrepareRequest = null;\n  @Output() operationResponse = new EventEmitter();\n  syncSub: Subscription;\n  activeAccount = null;\n  externalReq: boolean = false;\n  transactions: FullyPreparedTransaction[] = [];\n  semaphore = false;\n\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n\n  customFee = '';\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  sendResponse = null;\n  ledgerError = '';\n  password = '';\n  pwdInvalid = '';\n  advancedForm = false;\n  name = 'swap-liquidity-confirm';\n\n  expectedLqd: number;\n  minimumLqd: number;\n  expectedXtz: number;\n  minimumXtz: number;\n  expectedToken: number;\n  minimumToken: number;\n  entrypoint: string;\n\n  confirmTitle = '';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private translate: TranslateService,\n    public tokenService: TokenService,\n    public walletService: WalletService,\n    private estimateService: EstimateService,\n    private operationService: OperationService,\n    private messageService: MessageService,\n    private coordinatorService: CoordinatorService,\n    private lookupService: LookupService,\n    private ledgerService: LedgerService,\n    private inputValidationService: InputValidationService,\n    public tezosDomainService: TezosDomainsService,\n    public tokenBalanceService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private swapLiquidityService: SwapLiquidityService\n  ) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.confirmRequest?.currentValue) {\n      this.reset(true);\n      this.parseTransactions(changes.confirmRequest.currentValue);\n      this.init();\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n      if (this.externalReq) {\n        this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n          if (response) {\n            this.closeModalAction('silent');\n          }\n        });\n      }\n    }\n  }\n  parseTransactions(csr: ConfirmSwapRequest): void {\n    let hasTrailingZeroApproval = false;\n    this.externalReq = csr.externalReq;\n    this.activeAccount = csr.account;\n    this.transactions = csr.transactions;\n    this.entrypoint = this.transactions.find((t) => Object.values(LqdEntrypoints).includes(t?.parameters?.entrypoint))?.parameters.entrypoint;\n    switch (this.entrypoint) {\n      case LqdEntrypoints.xtzToToken:\n        this.confirmTitle = 'Confirm Swap';\n        this.expectedXtz = parseFloat(this.transactions[0]?.amount);\n        this.minimumToken = new Amount({ rpcAmount: this.transactions[0]?.parameters.value.args[1].args[0].int, decimalPlaces: 8 }).internalNormalised;\n        this.calculateXtzToToken();\n        break;\n      case LqdEntrypoints.tokenToXtz:\n        this.confirmTitle = 'Confirm Swap';\n        const tokenToXtz = this.transactions.find((t) => t?.parameters?.entrypoint === LqdEntrypoints.tokenToXtz);\n        hasTrailingZeroApproval =\n          this.transactions[this.transactions.length - 1].parameters.entrypoint === 'approve' &&\n          this.transactions[this.transactions.length - 1]?.parameters?.value.args[1].int === '0';\n        this.expectedToken = new Amount({ rpcAmount: tokenToXtz?.parameters.value.args[1].args[0].int, decimalPlaces: 8 }).internalNormalised;\n        this.minimumXtz = new Amount({ rpcAmount: tokenToXtz?.parameters.value.args[1].args[1].args[0].int, decimalPlaces: 6 }).internalNormalised;\n        this.calculateTokenToXTZ();\n        break;\n      case LqdEntrypoints.addLiquidity:\n        this.confirmTitle = 'Add Liquidity';\n        const addLiquidity = this.transactions.find((t) => t?.parameters?.entrypoint === LqdEntrypoints.addLiquidity);\n        hasTrailingZeroApproval =\n          this.transactions[this.transactions.length - 1].parameters.entrypoint === 'approve' &&\n          this.transactions[this.transactions.length - 1]?.parameters?.value.args[1].int === '0';\n        this.expectedToken = new Amount({ rpcAmount: addLiquidity?.parameters.value.args[1].args[1].args[0].int, decimalPlaces: 8 }).internalNormalised;\n        this.expectedXtz = parseFloat(addLiquidity?.amount);\n        this.minimumLqd = new Amount({ rpcAmount: addLiquidity?.parameters.value.args[1].args[0].int, decimalPlaces: 0 }).internalNormalised;\n        this.calcAddLiquidity();\n        break;\n      case LqdEntrypoints.removeLiquidity:\n        this.confirmTitle = 'Remove Liquidity';\n        this.expectedLqd = new Amount({ rpcAmount: this.transactions[0]?.parameters.value.args[1].args[0].int, decimalPlaces: 0 }).internalNormalised;\n        this.minimumXtz = new Amount({ rpcAmount: this.transactions[0]?.parameters.value.args[1].args[1].args[0].int, decimalPlaces: 6 }).internalNormalised;\n        this.minimumToken = new Amount({\n          rpcAmount: this.transactions[0]?.parameters.value.args[1].args[1].args[1].args[0].int,\n          decimalPlaces: 8\n        }).internalNormalised;\n        this.calcRemoveLiquidity();\n        break;\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  open(): void {\n    super.open();\n  }\n  async init(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      this.ledgerError = '?';\n    }\n  }\n  getTotalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  getTotalCost(display: boolean = false): string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return totalFee;\n  }\n  getTotalFee(): string {\n    if (this.customFee) {\n      return this.customFee;\n    }\n    let totalFee = Big(0);\n    for (const tx of this.transactions) {\n      totalFee = totalFee.add(tx.fee ? tx.fee : 0);\n    }\n    return totalFee.toFixed();\n  }\n  getTotalBurn(): number {\n    const totalActiveStorageLimit: number =\n      this.customStorageLimit !== '' && Number(this.customStorageLimit) ? Number(this.customStorageLimit) : this.getTotalDefaultStorage();\n    return Number(Big(totalActiveStorageLimit).times(this.estimateService.costPerByte).div(1000000).toString());\n  }\n  getTotalDefaultGas(): number {\n    let totalGas = Big(0);\n    for (const tx of this.transactions) {\n      totalGas = totalGas.plus(tx.gasLimit);\n    }\n    return totalGas.toFixed();\n  }\n  getTotalDefaultStorage(): number {\n    let totalStorage = Big(0);\n    for (const tx of this.transactions) {\n      totalStorage = totalStorage.plus(tx.storageLimit);\n    }\n    return totalStorage.toFixed();\n  }\n  totalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  async ledgerRetry(): Promise<void> {\n    if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n      this.messageService.addError('Invalid fee');\n      return;\n    }\n    this.messageService.startSpinner('Preparing transaction...');\n    const keys = await this.walletService.getKeys('');\n    if (keys) {\n      await this.sendTransaction(keys);\n    } else {\n      this.messageService.stopSpinner();\n    }\n  }\n  async inject(): Promise<void> {\n    if (this.semaphore) {\n      return;\n    }\n    if (this.walletService.isLedgerWallet()) {\n      await this.broadCastLedgerTransaction();\n      this.sendResponse = null;\n      ModalComponent.currentModel.next({ name: '', data: null });\n    } else {\n      if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n        this.messageService.addError('Invalid fee');\n        return;\n      }\n      const pwd = this.password;\n      this.password = '';\n      this.messageService.startSpinner('Signing transaction...');\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n      } catch {\n        this.messageService.stopSpinner();\n      }\n      if (keys) {\n        this.pwdInvalid = '';\n        this.messageService.startSpinner('Sending transaction...');\n        await this.sendTransaction(keys);\n        ModalComponent.currentModel.next({ name: '', data: null });\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.wallet instanceof TorusWallet) {\n          this.pwdInvalid = `Authorization failed`;\n        } else {\n          this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD'); // 'Wrong password!';\n        }\n      }\n    }\n  }\n  async sendTransaction(keys: KeyPair): Promise<void> {\n    const txs: FullyPreparedTransaction[] = this.opsWithCustomLimits();\n    this.subscriptions.add(\n      this.operationService.transfer(this.activeAccount.address, txs, Number(this.getTotalFee()), keys, '').subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success === true) {\n            console.log('Transaction successful ', ans);\n            if (ans.payload.opHash) {\n              await this.messageService.stopSpinner();\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                transactions: this.transactions,\n                opHash: ans.payload.opHash\n              };\n              await this.coordinatorService.boost(this.activeAccount.address, metadata);\n              for (const transaction of this.transactions) {\n                if (this.walletService.addressExists(transaction.destination)) {\n                  await this.coordinatorService.boost(transaction.destination);\n                }\n              }\n            } else if (this.walletService.wallet instanceof LedgerWallet) {\n              await this.requestLedgerSignature();\n              return;\n            }\n          } else {\n            await this.messageService.stopSpinner();\n            console.log('Transaction error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        },\n        (err) => {\n          this.messageService.stopSpinner();\n          console.log('Error Message ', JSON.stringify(err));\n          if (this.walletService.isLedgerWallet()) {\n            this.messageService.addError('Failed to create transaction', 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        }\n      )\n    );\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.getTotalDefaultGas().toString()) {\n      extraGas = Number(this.customGasLimit) - this.getTotalDefaultGas();\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.getTotalDefaultStorage().toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.getTotalDefaultStorage();\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas ? (Number(this.transactions[i].gasLimit) + extraGasPerOp).toString() : this.transactions[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.transactions[i].storageLimit) + extraStoragePerOp).toString()\n        : this.transactions[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  sanitizeNumberInput(e, decimalPlaces: number, type = ''): void {\n    const exp = new RegExp(`^\\\\d{0,}(\\\\.\\\\d{0,${decimalPlaces}})?\\$`, 'g');\n    if (exp.test(e?.target?.value)) {\n      this[type] = e?.target?.value;\n    } else {\n      e.target.value = this[type];\n    }\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      await this.messageService.startSpinner('Waiting for Ledger signature...');\n      try {\n        const op = this.sendResponse.payload.unsignedOperation;\n        let signature = '';\n        if (op.length <= 2290) {\n          signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n        } else {\n          signature = await this.ledgerService.signHash(\n            this.operationService.ledgerPreHash('03' + op),\n            this.walletService.wallet.implicitAccounts[0].derivationPath\n          );\n        }\n        if (signature) {\n          const signedOp = op + signature;\n          this.sendResponse.payload.signedOperation = signedOp;\n          this.ledgerError = '';\n        } else {\n          this.ledgerError = 'Failed to sign transaction';\n        }\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.subscriptions.add(\n      this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(async (ans: any) => {\n        this.sendResponse = ans;\n        if (ans.success && this.activeAccount) {\n          const metadata = {\n            transactions: this.transactions,\n            opHash: ans.payload.opHash\n          };\n          await this.coordinatorService.boost(this.activeAccount.address, metadata);\n          if (this.walletService.addressExists(this.transactions[0].destination)) {\n            await this.coordinatorService.boost(this.transactions[0].destination);\n          }\n          this.operationResponse.emit(ans.payload.opHash);\n        } else {\n          console.log('sendResponse', JSON.stringify(this.sendResponse));\n          this.operationResponse.emit('broadcast_error');\n        }\n        console.log('ans: ' + JSON.stringify(ans));\n        this.reset();\n      })\n    );\n  }\n  closeModalAction(emit: string = null): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.operationResponse.emit(emit);\n    this.reset();\n  }\n  reset(init = false): void {\n    if (!init) {\n      this.confirmRequest = null;\n      if (this.syncSub) {\n        this.syncSub.unsubscribe();\n        this.syncSub = undefined;\n      }\n    }\n    this.transactions = [];\n    this.activeAccount = null;\n\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n\n    this.sendResponse = null;\n    this.ledgerError = '';\n    this.password = '';\n    this.pwdInvalid = '';\n    this.advancedForm = false;\n    this.externalReq = false;\n\n    this.expectedLqd = undefined;\n    this.minimumLqd = undefined;\n    this.expectedXtz = undefined;\n    this.minimumXtz = undefined;\n    this.expectedToken = undefined;\n    this.minimumToken = undefined;\n  }\n  openInfoModal(title: string): void {\n    switch (title) {\n      case 'fee':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'Expected fee for this transaction charged by the Tezos blockchain.',\n            title: 'Fee'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumxtz':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of XTZ to be received from the transaction.',\n            title: 'Minimum XTZ'\n          },\n          forceClose: false\n        });\n        break;\n      case 'expectedxtz':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The expected amount of XTZ to be received from the transaction.',\n            title: 'Expected XTZ'\n          },\n          forceClose: false\n        });\n        break;\n      case 'requiredtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'Required tzBTC needed for transaction.',\n            title: 'Required tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of tzBTC to be received from the transaction.',\n            title: 'Minimum tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'expectedtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The expected amount of tzBTC to be received from the transaction.',\n            title: 'Expected tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumlqt':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of SIRS to be received from the transaction.',\n            title: 'Minimum SIRS'\n          },\n          forceClose: false\n        });\n        break;\n      case 'expectedlqt':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The expected amount of SIRS to be received from the transaction.',\n            title: 'Expected SIRS'\n          },\n          forceClose: false\n        });\n        break;\n      default:\n        break;\n    }\n  }\n  async calculateXtzToToken(): Promise<void> {\n    this.semaphore = true;\n    const xtzToSell = new Amount({\n      normalisedAmount: this.expectedXtz,\n      decimalPlaces: 6\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateXtzToToken(xtzToSell, xtzPool, tokenPool, 0.005, this.swapLiquidityService.settings('liquidityBaking'));\n    this.expectedToken = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n  async calculateTokenToXTZ(): Promise<void> {\n    this.semaphore = true;\n    const tokenToSell = new Amount({\n      normalisedAmount: this.expectedToken,\n      decimalPlaces: 8\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateTokenToXTZ(tokenToSell, xtzPool, tokenPool, 0.005, this.swapLiquidityService.settings('liquidityBaking'));\n    this.expectedXtz = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n  async calcAddLiquidity(): Promise<void> {\n    this.semaphore = true;\n    const toSell = new Amount({\n      normalisedAmount: this.expectedXtz,\n      decimalPlaces: 6\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateAddLiquidityXTZ(\n      toSell,\n      xtzPool,\n      tokenPool,\n      parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n      0.005,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.expectedLqd = result.liquidityExpected?.internalNormalised.toFixed(result.liquidityExpected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n  async calcRemoveLiquidity(): Promise<void> {\n    this.semaphore = true;\n    const lqtToBurn = new Amount({\n      normalisedAmount: this.expectedLqd,\n      decimalPlaces: 0\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateRemoveLiquidity(\n      lqtToBurn,\n      xtzPool,\n      tokenPool,\n      parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n      0.005,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.expectedXtz = result.xtzExpected?.internalNormalised.toFixed(result.xtzExpected?.decimalPlaces).toString();\n    this.expectedToken = result.tokenExpected?.internalNormalised.toFixed(result.tokenExpected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n}\n","<app-prepare-send *ngIf=\"!embedded\" [prepareRequest]=\"prepareRequest\" (prepareResponse)=\"handlePrepareResponse($event)\"></app-prepare-send>\n<app-confirm-send [confirmRequest]=\"confirmRequest\" (operationResponse)=\"handleConfirmResponse($event)\"></app-confirm-send>\n<app-confirm-send-embed *ngIf=\"embedded\" [templateRequest]=\"templateRequest\" (isApproved)=\"handleTemplateApproval($event)\" [activeAccount]=\"activeAccount\"></app-confirm-send-embed>\n<app-swap-liquidity (prepareResponse)=\"handlePrepareResponse($event)\"></app-swap-liquidity>\n<app-swap-liquidity-confirm [confirmRequest]=\"confirmSwapLiquidityRequest\" (operationResponse)=\"handleConfirmResponse($event)\"></app-swap-liquidity-confirm>\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { Account, EmbeddedTorusWallet } from '../../../services/wallet/wallet';\nimport {\n  PrepareRequest,\n  ConfirmRequest,\n  FullyPreparedTransaction,\n  PartiallyPreparedTransaction,\n  TemplateRequest,\n  TemplateFee,\n  ConfirmSwapRequest,\n  LqdEntrypoints\n} from './interfaces';\nimport { Template } from 'kukai-embed';\nimport { TokenService } from '../../../services/token/token.service';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { assertMichelsonData } from '@taquito/michel-codec';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport Big from 'big.js';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\nimport { ExternalRequest } from '../../../interfaces';\n\n@Component({\n  selector: 'app-send',\n  templateUrl: './send.component.html'\n})\nexport class SendComponent implements OnInit, OnChanges, OnDestroy {\n  LqdEntrypoints = LqdEntrypoints;\n  @Input() embedded: boolean;\n  activeAccount: Account;\n  @Input() tokenTransfer: string;\n  @Input() externalRequest: ExternalRequest;\n  @Input() template: Template;\n  @Output() operationResponse = new EventEmitter();\n  prepareRequest: PrepareRequest = null;\n  confirmRequest: ConfirmRequest = null;\n  templateRequest: TemplateRequest = null;\n  confirmSwapLiquidityRequest: ConfirmSwapRequest = null;\n  symbol: string;\n  readonly thresholdUSD = 50;\n  private subscriptions: Subscription = new Subscription();\n  private swapLiquidityEntrypoints = ['addLiquidity', 'removeLiquidity', 'xtzToToken', 'tokenToXtz'];\n\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  constructor(\n    public tokenService: TokenService,\n    private estimateService: EstimateService,\n    private messageService: MessageService,\n    private operationService: OperationService,\n    private walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private subjectService: SubjectService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.prepareTokenTransfer.subscribe((t) => {\n        this.prepareRequest = t;\n        this.tokenTransfer = t?.tokenTransfer;\n        this.activeAccount = t?.account;\n        this.symbol = t?.symbol;\n      })\n    );\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.externalRequest?.currentValue) {\n      this.activeAccount = changes.externalRequest.currentValue.selectedAccount;\n      this.checkOpReq(changes.externalRequest.currentValue.operationRequest);\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  private async checkOpReq(opReq: any): Promise<void | {\n    kind;\n    destination;\n    amount;\n    parameters;\n    gasRecommendation;\n    storageRecommendation;\n  }> {\n    if (opReq.operationDetails) {\n      opReq = opReq.operationDetails;\n    }\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && !this.walletService.wallet?.sk && this.template?.silent) {\n      this.operationResponse.emit('invalid_parameters');\n      return;\n    }\n    if (opReq[0].kind === 'transaction') {\n      const txs: PartiallyPreparedTransaction[] = opReq.map((tx) => {\n        if (tx.kind !== 'transaction') {\n          throw new Error('Invalid op kind');\n        }\n        // identify token transfers\n        return {\n          kind: 'transaction',\n          destination: tx.destination,\n          amount: Big(tx.amount)\n            .div(10 ** 6)\n            .toFixed(), // handle token decimals here\n          parameters: tx.parameters ? tx.parameters : undefined,\n          gasRecommendation: tx.gas_limit ? tx.gas_limit : undefined,\n          storageRecommendation: tx.storage_limit ? tx.storage_limit : undefined\n        };\n      });\n      if (this.validParameters(txs)) {\n        if (txs.length === 1 && !this.template) {\n          const tokenTransferObj: any = this.getTokenTransferObj(txs[0]);\n          if (tokenTransferObj) {\n            const asset = this.tokenService.getAsset(tokenTransferObj.tokenId);\n            txs[0].amount = Big(tokenTransferObj.amount)\n              .div(10 ** asset.decimals)\n              .toFixed();\n            txs[0].destination = tokenTransferObj.to;\n            this.tokenTransfer = tokenTransferObj.tokenId;\n            delete txs[0].parameters;\n          } else {\n            this.tokenTransfer = '';\n          }\n          this.simulateRequest(txs, tokenTransferObj?.tokenId);\n        } else {\n          this.tokenTransfer = '';\n          this.simulateRequest(txs, '');\n        }\n      } else {\n        this.operationResponse.emit('invalid_parameters');\n      }\n    }\n  }\n  getTokenTransferObj(op: any): null | { tokenId: string; to: string; amount: string } {\n    if (op.parameters && this.tokenService.isKnownTokenContract(op.destination)) {\n      const tokenTransfer = this.operationService.parseTokenTransfer(op);\n      if (tokenTransfer && this.tokenService.isKnownTokenId(tokenTransfer?.tokenId)) {\n        return tokenTransfer;\n      }\n    }\n    return null;\n  }\n  validParameters(txs: PartiallyPreparedTransaction[]): boolean {\n    for (const tx of txs) {\n      if (tx.parameters) {\n        try {\n          if (!tx.parameters.value || !tx.parameters.entrypoint) {\n            throw new Error('entrypoint and value expected');\n          }\n          assertMichelsonData(tx.parameters.value);\n        } catch (e) {\n          this.messageService.addError(`Invalid parameters: ${e.message}`);\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  async simulateRequest(\n    txs: PartiallyPreparedTransaction[],\n    tokenTransfer: string\n  ): Promise<void | {\n    tx: PartiallyPreparedTransaction;\n    fee;\n    gasLimit;\n    storageLimit;\n  }> {\n    if (this.template) {\n      if (this.template.silent) {\n        console.log('Silent signing');\n      } else {\n        this.templateRequest = {\n          template: this.template,\n          partialOps: txs\n        };\n      }\n    } else {\n      await this.messageService.startSpinner('Preparing transaction...');\n    }\n    try {\n      await this.estimateService.preLoadData(this.activeAccount.pkh, this.activeAccount.pk);\n      const callback = (res) => {\n        if (res) {\n          if (res.error) {\n            this.messageService.addError(`Simulation error: ${res.error.message}`, 0);\n            this.operationResponse.emit({\n              error: 'invalid_parameters',\n              errorMessage: res.error.message\n            });\n          } else {\n            const fullyPrepared: FullyPreparedTransaction[] = txs.map((tx, i) => {\n              return {\n                ...tx,\n                fee: i === txs.length - 1 ? res.fee : '0',\n                gasLimit: res.customLimits[i].gasLimit.toString(),\n                storageLimit: res.customLimits[i].storageLimit.toString()\n              };\n            });\n            if (this.template) {\n              const fee = this.getTemplateFee(fullyPrepared);\n              console.log('Use template', this.template);\n              if (!this.template.silent) {\n                this.templateRequest = {\n                  template: this.template,\n                  partialOps: txs,\n                  ops: fullyPrepared,\n                  fee\n                };\n              } else {\n                let amount = Big(0);\n                for (const op of fullyPrepared) {\n                  amount = Big(op.amount).plus(amount);\n                }\n                amount = Big(fee.total).plus(amount);\n                amount = amount.times(Big(CONSTANTS.MAINNET && this.walletService.wallet?.XTZrate ? this.walletService.wallet.XTZrate : 1));\n                if (amount.gt(Big(this.thresholdUSD))) {\n                  this.operationResponse.emit('exceeded_threshold');\n                } else {\n                  this.silentInject(fullyPrepared);\n                }\n              }\n            } else {\n              this.confirmTransactions(fullyPrepared, true);\n            }\n          }\n        } else {\n          throw new Error('No simulation result');\n        }\n      };\n      await this.estimateService.estimateTransactions(JSON.parse(JSON.stringify(txs)), this.activeAccount.pkh, tokenTransfer, callback);\n    } catch (e) {\n      console.error(e);\n      this.operationResponse.emit('unknown_error');\n    } finally {\n      await this.messageService.stopSpinner();\n    }\n  }\n  prepareTransaction(): void {\n    this.prepareRequest = {\n      account: this.activeAccount,\n      tokenTransfer: this.tokenTransfer,\n      symbol: this.symbol\n    };\n  }\n  confirmTransactions(transactions: FullyPreparedTransaction[], externalReq: boolean): void {\n    if (this.isLbReq(transactions)) {\n      if (!externalReq) {\n        this.activeAccount = this.subjectService.activeAccount.getValue();\n      }\n      this.confirmSwapLiquidityRequest = {\n        account: this.activeAccount,\n        transactions,\n        externalReq\n      };\n    } else {\n      this.confirmRequest = {\n        account: this.activeAccount,\n        tokenTransfer: this.tokenTransfer,\n        transactions,\n        externalReq\n      };\n    }\n  }\n  private isLbReq(transactions: FullyPreparedTransaction[]): boolean {\n    if (\n      transactions.length === 1 &&\n      transactions[0].destination === this.lqdContract &&\n      ['xtzToToken', 'removeLiquidity'].includes(transactions[0].parameters?.entrypoint)\n    ) {\n      // xtzToToken or removeLiquidity\n      return true;\n    } else if (transactions[0].destination === this.tzBTCContract && transactions[0].parameters?.entrypoint === 'approve') {\n      // can be tokenToXtz or addLiquidity\n      if (transactions.length === 3 && transactions[0].parameters?.value?.args[1]?.int !== '0') {\n        console.log('prepend 0 approve');\n        // normalize\n        transactions.unshift({\n          ...transactions[0],\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        });\n      }\n      if (\n        transactions.length === 4 &&\n        new Set([transactions[0].destination, transactions[1].destination, transactions[3].destination, this.tzBTCContract]).size === 1 &&\n        new Set([transactions[0].parameters?.entrypoint, transactions[1].parameters?.entrypoint, transactions[3].parameters?.entrypoint, 'approve']).size ===\n          1 &&\n        new Set([\n          transactions[0].parameters?.value?.args[0]?.string,\n          transactions[1].parameters?.value?.args[0]?.string,\n          transactions[3].parameters?.value?.args[0]?.string,\n          this.lqdContract\n        ]).size === 1 &&\n        transactions[2].destination === this.lqdContract &&\n        ['tokenToXtz', 'addLiquidity'].includes(transactions[2].parameters?.entrypoint)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n  handlePrepareResponse(preparedTransactions: FullyPreparedTransaction[]): void {\n    this.prepareRequest = null;\n    if (preparedTransactions) {\n      console.log('PrepareResponse', JSON.stringify(preparedTransactions));\n      this.confirmTransactions(preparedTransactions, false);\n    }\n  }\n  handleConfirmResponse(opHash: string): void {\n    this.confirmRequest = null;\n    this.confirmSwapLiquidityRequest = null;\n    this.operationResponse.emit(opHash);\n  }\n  handleTemplateApproval(ops: FullyPreparedTransaction[]): void {\n    if (ops) {\n      this.silentInject(ops);\n    } else {\n      this.operationResponse.emit(null);\n    }\n    this.template = null;\n  }\n  private getTemplateFee(ops: FullyPreparedTransaction[]): TemplateFee {\n    let network = new Big(0);\n    let storageLimit = new Big(0);\n    for (const op of ops) {\n      network = network.plus(op.fee);\n      storageLimit = storageLimit.plus(op.storageLimit);\n    }\n    let storage = storageLimit.times(this.estimateService.costPerByte).div('1000000');\n    const total = network.plus(storage).toFixed();\n    network = network.toFixed();\n    storage = storage.toFixed();\n    return { network, storage, total };\n  }\n  async silentInject(ops: FullyPreparedTransaction[]): Promise<void> {\n    if (!this.walletService.isEmbeddedTorusWallet()) {\n      this.operationResponse.emit('UNSUPPORTED_WALLET_TYPE');\n      return;\n    }\n    for (const op of ops) {\n      // Limit to transactions for now\n      if (op.kind !== 'transaction') {\n        this.operationResponse.emit('UNSUPPORTED_KIND');\n        break;\n      }\n    }\n    if (!this.template.silent) {\n      this.messageService.startSpinner('Sending transaction...');\n    }\n    let keys;\n    try {\n      keys = await this.walletService.getKeys('', this.activeAccount.pkh);\n    } catch {\n      this.messageService.stopSpinner();\n    }\n    if (!keys) {\n      this.operationResponse.emit('FAILED_TO_SIGN');\n      return;\n    }\n    this.subscriptions.add(\n      this.operationService.transfer(this.activeAccount.address, ops, Number(ops[ops.length - 1].fee), keys, '').subscribe(\n        async (ans: any) => {\n          if (ans.success === true) {\n            console.log('Transaction successful ', ans);\n            await this.messageService.stopSpinner();\n            this.operationResponse.emit(ans.payload.opHash);\n            const metadata = {\n              transactions: ops,\n              opHash: ans.payload.opHash\n            };\n            await this.coordinatorService.boost(this.activeAccount.address, metadata);\n            for (const transaction of ops) {\n              if (this.walletService.addressExists(transaction.destination)) {\n                await this.coordinatorService.boost(transaction.destination);\n              }\n            }\n          } else {\n            await this.messageService.stopSpinner();\n            console.log('Transaction error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit({\n              error: 'broadcast_error',\n              errorMessage: ans.payload.msg\n            });\n          }\n        },\n        (err) => {\n          this.messageService.stopSpinner();\n          console.log(err);\n          this.operationResponse.emit('UNKNOWN_ERROR');\n        }\n      )\n    );\n  }\n}\n","<div *ngIf=\"req\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"cancel()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">{{req.template.action || 'Confirmation'}}</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column confirm-send\">\n        <div *ngIf=\"req.template.descriptions[0].text\" class=\"asset-name\">{{ req.template.descriptions[0].text }}</div>\n        <div class=\"flex-row transaction\">\n          <div class=\"flex-column left\">\n            <span *ngIf=\"req.template.descriptions[1].text\" class=\"default-text\">{{ req.template.descriptions[1].text }}</span>\n            <span *ngIf=\"req.template.descriptions[2]\" class=\"default-text amount\">{{ req.template.descriptions[2].text }}</span>\n            <span *ngIf=\"req.template.descriptions[3]\" class=\"default-text\">{{ req.template.descriptions[3].text }}</span>\n            <span class=\"default-text\">From:</span>\n            <div class=\"flex-row torus\" *ngIf=\"this.walletService.wallet.verifier\">\n              <img class=\"icon\" src=\"../../../assets/img/{{ this.walletService.wallet.verifier }}-logo.svg\">\n              <div class=\"flex-column\">\n                <span class=\"name\">{{ this.walletService.wallet.displayName() }}</span><span class=\"address\">{{\n                  req.activeAccount.address }}</span>\n              </div>\n            </div>\n            <span *ngIf=\"!this.walletService.wallet.verifier\" class=\"default-text single-to\">{{ req.activeAccount.address\n              }}</span>\n          </div>\n          <div *ngIf=\"req.template.descriptions[0]?.imgUrl\" class=\"flex-column right\">\n            <img class=\"token-image\" [src]=\"req.template.descriptions[0]?.imgUrl\" />\n          </div>\n        </div>\n      <br />\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column bottom\">\n        <div class=\"flex-row default-text more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"showMore = !showMore\">{{ !showMore ?\n          'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/dropdown-minterpop.svg\"></div>\n        <div *ngIf=\"showMore && req.payload\" class=\"info\">\n          <textarea style=\"width: 100%; padding: 0.5rem\" rows=10>{{req.payload}}</textarea>\n        </div>\n      </div>\n      <br />\n      <div class=\"flex-row buttons\">\n        <button (click)=\"approve()\">\n          <ng-container *ngIf=\"req.template.button; else defaultButtonText\">\n            {{req.template.button}}</ng-container>\n          <ng-template #defaultButtonText>Send</ng-template>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n      </div>\n    </div>\n  </div>\n</div> ","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\n\n@Component({\n  selector: 'app-sign-expr-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['../../confirm-send/confirm-send.component.scss']\n})\nexport class ExprTemplateComponent implements OnInit, OnChanges {\n  @Input() req = null;\n  @Output() isApproved = new EventEmitter();\n  constructor(public walletService: WalletService) {}\n\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {}\n  cancel() {\n    this.isApproved.emit(false);\n  }\n  approve() {\n    this.isApproved.emit(true);\n  }\n}\n","<div *ngIf=\"signRequest && payload && !template\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"rejectSigning()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">{{ signRequest?.title ? signRequest.title : 'Sign Expression' }}</h1>\n    </div>\n    <div class=\"flex-column sign-expr\">\n      <div class=\"seperator\"></div>\n      <p class=\"previewAttention\">{{ description ? description : 'An application has requested you sign an\n        expression.' }}</p>\n        <div class=\"seperator\"></div>\n      <div class=\"flex-row more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"toggle()\">{{ !showMore ? 'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/dropdown-minterpop.svg\"></div>\n      <div *ngIf=\"showMore\" class=\"info\">\n        <textarea rows=\"6\" readonly>{{ payload }}</textarea>\n      </div>\n      <div class=\"flex-column bottom\">\n        <span *ngIf=\"this.pwdInvalid\" class=\"danger margin\">{{ this.pwdInvalid }}</span>\n        <button class=\"purple confirm\" (click)=\"sign()\">SIGN</button>\n        <div class=\"footer\">\n          <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<app-sign-expr-template *ngIf=\"signRequest && payload && template\" [req]=\"{payload: payload, template: template, activeAccount: activeAccount}\" (isApproved)=\"handleTemplateApproval($event)\"></app-sign-expr-template>","import { Component, OnInit, SimpleChanges, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Account } from '../../../../services/wallet/wallet';\nimport { OperationService } from '../../../../services/operation/operation.service';\nimport { emitMicheline } from '@taquito/michel-codec';\nimport { valueDecoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { Uint8ArrayConsumer } from '@taquito/local-forging/dist/lib/uint8array-consumer';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-sign-expr-embed',\n  templateUrl: './sign-expr.component.html',\n  styleUrls: ['./sign-expr.component.scss']\n})\nexport class SignExprEmbedComponent implements OnInit, OnChanges {\n  @Input() signRequest: any;\n  @Input() activeAccount: Account;\n  @Output() signResponse = new EventEmitter();\n  syncSub: Subscription;\n  password = '';\n  pwdInvalid = '';\n  payload = '';\n  template = null;\n  description = null;\n  isMessage = false;\n  showMore = false;\n  constructor(\n    public walletService: WalletService,\n    private messageService: MessageService,\n    public translate: TranslateService,\n    private operationService: OperationService,\n    private inputValidationService: InputValidationService\n  ) {}\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.signRequest) {\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflow = 'hidden';\n      this.template = this.signRequest.ui;\n      this.isMessage = this.inputValidationService.isMessageSigning(this.signRequest.payload);\n      const value = valueDecoder(Uint8ArrayConsumer.fromHexString(this.signRequest.payload.slice(2)));\n      const payload = emitMicheline(value, {\n        indent: '  ',\n        newline: '\\n'\n      });\n      this.payload = this.isMessage ? value.string : payload;\n    }\n  }\n  async sign() {\n    const pwd = this.password;\n    this.password = '';\n    await this.messageService.startSpinner(`Signing ${this.isMessage ? 'message' : 'payload'}...`);\n    let keys;\n    try {\n      keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n    } catch (e) {\n      console.warn(e);\n      this.messageService.stopSpinner();\n    }\n    if (keys) {\n      this.pwdInvalid = '';\n      try {\n        const signature = this.operationService.sign(this.signRequest.payload, keys.sk).edsig;\n        this.acceptSigning(signature);\n      } catch (e) {\n        this.pwdInvalid = 'Signing failed';\n        console.warn(e);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    } else {\n      this.messageService.stopSpinner();\n      if (this.walletService.isTorusWallet()) {\n        this.pwdInvalid = `Authorization failed`;\n      } else {\n        this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD');\n      }\n    }\n  }\n  rejectSigning() {\n    this.closeModal();\n    this.signResponse.emit(null);\n  }\n  acceptSigning(signature: string) {\n    this.messageService.addSuccess(this.isMessage ? 'Message signed!' : 'Payload signed!');\n    this.closeModal();\n    this.signResponse.emit(signature);\n  }\n  closeModal() {\n    // restore body scrollbar\n    document.body.style.marginRight = '';\n    document.body.style.overflow = '';\n    this.clear();\n  }\n  clear() {\n    this.password = '';\n    this.pwdInvalid = '';\n    this.payload = '';\n    this.isMessage = false;\n    this.template = null;\n  }\n  toggle() {\n    this.showMore = !this.showMore;\n  }\n  handleTemplateApproval(t) {\n    if (t) {\n      this.sign();\n    } else {\n      this.rejectSigning();\n    }\n  }\n}\n","<h3>Processing Request...</h3>\n<br />\n<h1 class=\"high-demand\">High Demand for Items!</h1>\n<br />\n<p class=\"desc\">Your request is being processed. Wait times vary.\n</p>\n<br />\n<br />\n<h1>Estimated Wait Time:</h1>\n<h1 class=\"flex-row time\">\n  <span *ngIf=\"hours !== '00'\"class=\"flex-column hours\">\n    <h1>{{ hours }}</h1>\n    <h5>Hours</h5>\n  </span>\n  <span class=\"flex-column minutes\">\n    <h1>{{ minutes }}</h1>\n    <h5>Minutes</h5>\n  </span>\n  <span class=\"flex-column seconds\">\n    <h1>{{ seconds }}</h1>\n    <h5>Seconds</h5>\n  </span>\n</h1>\n<br />\n<br />\n<br />\n<h2 class=\"desc\">At the end of the wait time, you will be asked to re-authenticate to access your account.</h2>","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-queue-embed',\n  templateUrl: './queue.component.html',\n  styleUrls: ['./queue.component.scss']\n})\nexport class QueueEmbedComponent implements OnInit {\n  @Input('queueTime') queueTime = 0;\n  hours = '0';\n  minutes = '0';\n  seconds = '0';\n  constructor() {}\n  ngOnInit(): void {\n    this.updateTime();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.queueTime.currentValue !== changes.queueTime.previousValue) {\n      this.updateTime();\n    }\n  }\n\n  updateTime() {\n    let sec: any = this.queueTime;\n    let hrs: any = Math.floor(sec / 3600);\n    sec -= hrs * 3600;\n    let min: any = Math.floor(sec / 60);\n    sec -= min * 60;\n    sec = sec.toString();\n    min = min.toString();\n    hrs = hrs.toString();\n\n    this.hours = hrs.length < 2 ? '0' + hrs : hrs;\n    this.minutes = min.length < 2 ? '0' + min : min;\n    this.seconds = sec.length < 2 ? '0' + sec : sec;\n  }\n}\n","<app-queue-embed *ngIf=\"this.queueTimeVisible > 0\" [queueTime]=\"this.queueTimeVisible\"></app-queue-embed>\n<div *ngIf=\"this.queueTime === 0 && this.queueTimeVisible === 0\" class=\"flex-column direct-auth-login-alt\" [class.manutd]=\"template === 'manutd'\">\n  <div class=\"flex-row header\">\n    <img (click)=\"abort()\" class=\"abort\" src=\"../../../assets/img/x-alt.svg\">\n    <img *ngIf=\"loginConfig.showBackButton\" (click)=\"back()\" class=\"back\" src=\"../../../assets/img/back-arrow.svg\">\n  </div>\n  <h1 *ngIf=\"this.loginConfig?.customPrio !== 'high'\">{{ template === 'manutd' ? 'CHOOSE SOCIAL PROVIDER' : 'Choose Sign In Type' }}</h1>\n  <h1 *ngIf=\"this.loginConfig?.customPrio === 'high'\">Please re-authenticate</h1>\n  <div class=\"flex-row-wrap login-options\" *ngIf=\"torusService && torusService.verifierMapKeys\">\n    <ng-container *ngFor=\"let key of loginOptions; let idx = index\">\n      <div *ngIf=\"loginConfig.buttonsVertically === true || (loginConfig.wideButtons && loginConfig.wideButtons[idx] === true); else narrow\" class=\"flex-row option wide\" [class.facebook]=\"key === 'facebook'\" [class.twitter]=\"key === 'twitter'\" [class.reddit]=\"key === 'reddit'\"\n        (click)=\"login(key)\">\n        <img [src]=\"key === 'facebook' ? '../../../../assets/img/torus-login/' + key + '-white.svg' : '../../../../assets/img/torus-login/' + key + '-color.svg'\" width=\"24\" /><span>Sign in with {{ key |\n          titlecase }}</span>\n      </div>\n      <ng-template #narrow>\n        <div class=\"flex-row option narrow\"\n        (click)=\"login(key)\">\n        <img [src]=\"'../../../../assets/img/torus-login/' + key + '-color.svg'\" width=\"24\" />\n      </div>\n      </ng-template>\n    </ng-container>\n  </div>\n  <div class=\"footer\">\n    <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n  </div>\n</div>","import { EventEmitter, Input, Output, SimpleChanges, Component, OnInit, OnChanges, AfterViewInit, ElementRef, HostListener } from '@angular/core';\nimport { LoginConfig, TypeOfLogin, LoginPrio } from 'kukai-embed';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { TorusService } from '../../../../services/torus/torus.service';\nimport { EmbeddedTorusWallet } from '../../../../services/wallet/wallet';\nimport { CONSTANTS } from '../../../../../environments/environment';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { UtilsService } from '../../../../services/utils/utils.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit, OnChanges, AfterViewInit {\n  constructor(\n    private messageService: MessageService,\n    public torusService: TorusService,\n    private walletService: WalletService,\n    private subjectService: SubjectService,\n    private elRef: ElementRef,\n    private utilsService: UtilsService\n  ) {}\n  @Input() dismiss: Boolean;\n  @Input() loginConfig: LoginConfig;\n  @Output() loginResponse = new EventEmitter();\n  template = 'default';\n  loginOptions = [];\n  queueTime: number = 0;\n  queueTimeVisible: number = 0;\n  queueLen = 0;\n  queueLenInterval: any;\n  statusCounter: number = 0;\n  queueInterval: NodeJS.Timeout;\n  readonly queueEndpoint = 'https://q.tcinfra.net/rpc';\n  ngOnInit(): void {\n    this.subjectService.origin.subscribe((origin) => {\n      if (origin && origin.indexOf('gap') !== -1) {\n        this.template = 'gap';\n      } else if (origin && origin.indexOf('interpop') !== -1) {\n        // (m)interpop\n        this.template = 'minterpop';\n      } else if (origin && (origin.indexOf('manutd') !== -1 || origin.indexOf('concordia') !== -1)) {\n        this.template = 'manutd';\n      } else {\n        this.template = 'default';\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n    this.viewportCheck();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.loginConfig) {\n      if (this.loginConfig?.customPrio === LoginPrio.Low) {\n        this.queueLen = 0;\n        this.queueLenInterval = setInterval(async () => {\n          this.queueLen = await this.getQueueLen();\n          console.log('Queue length (s)', this.queueLen);\n        }, 5000);\n        this.getQueueLen().then((res) => {\n          this.queueLen = res;\n          console.log('Queue length (s)', this.queueLen);\n        });\n      }\n    }\n    if (changes?.dismiss?.currentValue === true) {\n      this.messageService.stopSpinner().then(() => this.loginResponse.emit('dismiss'));\n    }\n    if (changes?.loginConfig?.currentValue) {\n      if (this.loginConfig.customPrio === 'high') {\n        if (this.walletService.wallet && this.walletService.wallet instanceof EmbeddedTorusWallet) {\n          if (this.walletService.wallet?.verifier) {\n            this.loginConfig.loginOptions = [this.walletService.wallet.verifier as TypeOfLogin];\n          }\n          this.startQueue();\n        }\n      }\n      if (this.loginConfig.loginOptions?.length > 0) {\n        this.loginOptions = [];\n        for (const loginOption of this.loginConfig.loginOptions) {\n          if (this.torusService.verifierMapKeys.includes(loginOption)) {\n            this.loginOptions.push(loginOption);\n          }\n        }\n      } else {\n        this.loginOptions = this.torusService.verifierMapKeys;\n      }\n    }\n  }\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.viewportCheck();\n  }\n  viewportCheck(): void {\n    if (screen.width < 650) {\n      this.elRef.nativeElement.classList.add('viewport-override-0');\n    } else {\n      this.elRef.nativeElement.classList.remove('viewport-override-0');\n    }\n    if (screen.width < 481) {\n      this.elRef.nativeElement.classList.add('viewport-override-1');\n    } else {\n      this.elRef.nativeElement.classList.remove('viewport-override-1');\n    }\n  }\n  async startQueue() {\n    // set high prio\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet) {\n      this.queueTime = -1;\n      this.setHighPrio(this.walletService.wallet.verifier, this.walletService.wallet.id);\n    }\n    this.queueTimeVisible = -1;\n    this.messageService.startSpinner();\n    this.queueInterval = setInterval(() => {\n      if (this.queueTimeVisible > 1 || (this.queueTimeVisible === 1 && this.queueTime === 0)) {\n        this.queueTimeVisible -= 1;\n      }\n      if (this.walletService.wallet instanceof EmbeddedTorusWallet) {\n        let timeBetweenChecks = 300;\n        if (this.queueTimeVisible < 4) {\n          timeBetweenChecks = 2;\n        } else if (this.queueTimeVisible < 60) {\n          timeBetweenChecks = 15;\n        } else if (this.queueTimeVisible < 1800) {\n          timeBetweenChecks = 60;\n        }\n        this.statusCounter = ++this.statusCounter % timeBetweenChecks;\n        if (this.statusCounter === 0) {\n          this.checkQueue(this.walletService.wallet.verifier, this.walletService.wallet.id);\n        }\n      }\n      if (this.queueTimeVisible <= 0 && this.queueTime === 0) {\n        this.stopQueue();\n      }\n    }, 1000);\n  }\n  stopQueue() {\n    if (this.queueInterval) {\n      clearInterval(this.queueInterval);\n    }\n    if (this.queueLenInterval) {\n      clearInterval(this.queueLenInterval);\n    }\n    this.queueTime = 0;\n    this.queueTimeVisible = 0;\n    this.queueLen = 0;\n    this.statusCounter = 0;\n    this.messageService.stopSpinner();\n  }\n  async abort() {\n    this.elRef.nativeElement.querySelector('.direct-auth-login-alt').style.animation = 'transition-down 0.25s';\n    await this.utilsService.sleep(230);\n    this.loginResponse.emit(null);\n    this.stopQueue();\n  }\n  back() {\n    this.loginResponse.emit(undefined);\n    this.stopQueue();\n  }\n  async login(typeOfLogin: string) {\n    try {\n      this.messageService.startSpinner('Loading wallet...');\n      let loginData;\n      const len: number = this.queueLen;\n      if (this.loginConfig?.customPrio === LoginPrio.Low) {\n        loginData = await this.torusService.loginTorus(typeOfLogin, '', len > 5 ? 1 : 0, true);\n      } else if (this.loginConfig?.customPrio === LoginPrio.LowFast) {\n        loginData = await this.torusService.loginTorus(typeOfLogin, '', 2, true);\n      } else if (this.loginConfig?.customPrio === LoginPrio.High && this.walletService.wallet instanceof EmbeddedTorusWallet) {\n        loginData = await this.torusService.loginTorus(typeOfLogin, this.walletService.wallet.id);\n      } else {\n        loginData = await this.torusService.loginTorus(typeOfLogin);\n      }\n      if (!loginData?.keyPair) {\n        throw new Error('Login failed');\n      }\n      if (this.loginConfig?.customPrio === LoginPrio.Low) {\n        // loginData.keyPair = { pk: '', pkh: '' };\n        if (loginData?.keyPair?.pk === '') {\n          this.setLowPrio(loginData.userInfo);\n        } else {\n          if (len > 5) {\n            this.skipQueue(loginData.userInfo.typeOfLogin, loginData.userInfo.verifierId, loginData.keyPair.pkh);\n          } else {\n            if (loginData?.userInfo?.preexistingPkh) {\n              this.setLowPrio(loginData.userInfo);\n            } else {\n              this.skipQueue(loginData.userInfo.typeOfLogin, loginData.userInfo.verifierId, loginData?.keyPair?.pkh || loginData?.userInfo?.preexistingPkh);\n            }\n          }\n        }\n      } else if (this.loginConfig?.customPrio === LoginPrio.LowFast) {\n        if (loginData?.userInfo?.preexistingPkh) {\n          this.skipQueue(loginData.userInfo.typeOfLogin, loginData.userInfo.verifierId, loginData?.keyPair?.pkh || loginData?.userInfo?.preexistingPkh);\n        } else {\n          this.setLowPrio(loginData.userInfo);\n        }\n      }\n      if (this.dismiss === null) {\n        await this.messageService.stopSpinner();\n      }\n      this.elRef.nativeElement.querySelector('.direct-auth-login-alt').style.animation = 'transition-down 0.25s';\n      await this.utilsService.sleep(230);\n      this.loginResponse.emit(loginData);\n      this.stopQueue();\n    } catch {\n      await this.messageService.stopSpinner();\n    }\n  }\n  async setLowPrio(userInfo: any) {\n    let { typeOfLogin, verifierId } = userInfo;\n    const res = await this.post(this.queueEndpoint, {\n      action: 'add_low_priority',\n      network: CONSTANTS.MAINNET ? 'mainnet' : 'testnet',\n      verifier: typeOfLogin,\n      identity: verifierId,\n      groups: [CONSTANTS.NETWORK, this.subjectService.origin?.value]\n    });\n    console.log('setLowPrio', res);\n    return res;\n  }\n  async setHighPrio(typeOfLogin: string, verifierId: string) {\n    const res = await this.post(this.queueEndpoint, {\n      action: 'add_high_priority',\n      network: CONSTANTS.MAINNET ? 'mainnet' : 'testnet',\n      verifier: typeOfLogin,\n      identity: verifierId,\n      groups: [CONSTANTS.NETWORK, this.subjectService.origin?.value]\n    });\n    console.log('setHighPrio', res);\n    this.updateQueue(res);\n    return res;\n  }\n  async checkQueue(typeOfLogin: string, verifierId: string) {\n    const res = await this.post(\n      this.queueEndpoint,\n      {\n        action: 'fetch',\n        network: CONSTANTS.MAINNET ? 'mainnet' : 'testnet',\n        verifier: typeOfLogin,\n        identity: verifierId\n      },\n      0\n    );\n    console.log('checkQueue', res);\n    this.updateQueue(res);\n    return res;\n  }\n  async skipQueue(typeOfLogin: string, verifierId: string, pkh: string) {\n    const res = await this.post(this.queueEndpoint, {\n      action: 'report',\n      network: CONSTANTS.MAINNET ? 'mainnet' : 'testnet',\n      verifier: typeOfLogin,\n      identity: verifierId,\n      groups: [CONSTANTS.NETWORK, this.subjectService.origin?.value],\n      metadata: { pkh }\n    });\n    console.log('skipQueue', res);\n    return res;\n  }\n  updateQueue(res: any) {\n    if (res?.EstimatedTimeSeconds !== -1) {\n      if (res.EstimatedTimeSeconds === 0 && res.Status === 'error') {\n        console.error('FailedToResolve');\n        this.abort();\n        return;\n      }\n      if (this.queueTimeVisible === -1) {\n        this.messageService.stopSpinner();\n      }\n      this.queueTime = this.queueTimeVisible = res.EstimatedTimeSeconds;\n    }\n  }\n  async getQueueLen(): Promise<number> {\n    const res = await this.post(this.queueEndpoint, {\n      action: 'len'\n    });\n    return Number(res.EstimatedTimeSeconds);\n  }\n  async get(url: string, triesLeft = 3) {\n    return await fetch(url)\n      .then(async (res) => {\n        return await res.json();\n      })\n      .catch(async (e) => {\n        if (triesLeft > 0) {\n          return await this.get(url, --triesLeft);\n        } else {\n          throw e;\n        }\n      });\n  }\n  async post(url: string, body: any, triesLeft = 3) {\n    return await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n      .then(async (res) => {\n        return await res.json();\n      })\n      .catch(async (e) => {\n        if (triesLeft > 0) {\n          return await this.post(url, body, --triesLeft);\n        } else {\n          throw e;\n        }\n      });\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { TorusWallet, ImplicitAccount } from '../../../../services/wallet/wallet';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['../../../../../scss/components/views/embedded/card/card.component.scss']\n})\nexport class CardComponent implements OnInit {\n  @Input() activeAccount: ImplicitAccount;\n\n  constructor(private walletService: WalletService) {}\n\n  ngOnInit(): void {}\n\n  displayName(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      return '';\n    }\n  }\n\n  verifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return '';\n    }\n  }\n}\n","<div class=\"container\">\n    <div>\n        <img src=\"../../../assets/img/torus-login/{{verifier()}}-color.svg\" width=\"24\">\n        <h4>{{displayName()}}</h4>\n        <p>{{activeAccount.pkh}}</p>\n    </div>\n    <div>\n        <h4>BALANCE:</h4>\n        <h3>{{activeAccount.balanceXTZ || 0}} XTZ</h3>\n    </div>\n</div>\n","<app-signin *ngIf=\"login\" [dismiss]=\"dismiss\" [loginConfig]=\"loginConfig\" (loginResponse)=\"loginResponse($event)\"></app-signin>\n<app-send [embedded]=\"true\" *ngIf=\"externalRequest\" (operationResponse)=\"operationResponse($event)\" [headless]=true [externalRequest]=externalRequest\n    [template]=\"template\" [activeAccount]=activeAccount></app-send>\n<app-sign-expr-embed *ngIf=\"signRequest && activeAccount\" [signRequest]=\"signRequest\" [activeAccount]=activeAccount (signResponse)=\"signResponse($event)\"></app-sign-expr-embed>\n<app-card *ngIf=\"activeAccount && !blockCard && (!externalRequest && !login && !signRequest)\" [activeAccount]=activeAccount></app-card>\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { TorusService } from '../../../services/torus/torus.service';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { ImportService } from '../../../services/import/import.service';\nimport { KeyPair, ExternalRequest } from '../../../interfaces';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { PartialTezosTransactionOperation } from '@airgap/beacon-sdk';\nimport { EmbeddedTorusWallet, ImplicitAccount } from '../../../services/wallet/wallet';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { utils, common } from '../../../libraries/index';\nimport { ActivatedRoute } from '@angular/router';\nimport { LookupService } from '../../../services/lookup/lookup.service';\nimport { ActivityService } from '../../../services/activity/activity.service';\nimport { EmbeddedAuthService } from '../../../services/embedded-auth/embedded-auth.service';\nimport {\n  RequestTypes,\n  ResponseTypes,\n  RequestMessage,\n  ResponseMessage,\n  OperationResponse,\n  LogoutRequest,\n  TrackRequest,\n  LoginRequest,\n  OperationRequest,\n  AuthRequest,\n  CardRequest,\n  CardResponse,\n  SignExprRequest,\n  SignExprResponse,\n  LoginConfig,\n  LoginPrio\n} from 'kukai-embed';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nenum Permission {\n  LOGIN = 'login',\n  OPERATIONS = 'operations',\n  MICHELINE = 'micheline',\n  MICHELINE_SILENT = 'micheline_silent'\n}\ninterface Permissions {\n  origins: string[];\n  permissions: {\n    [Permission.LOGIN]: boolean;\n    [Permission.OPERATIONS]: boolean;\n    [Permission.MICHELINE]: boolean;\n    [Permission.MICHELINE_SILENT]?: boolean;\n  };\n}\n@Component({\n  selector: 'app-embedded',\n  templateUrl: './embedded.component.html',\n  styleUrls: ['../../../../scss/components/views/embedded/embedded.component.scss']\n})\nexport class EmbeddedComponent implements OnInit {\n  readonly permissionMatrix: Record<string, Permissions> = {\n    brio: {\n      origins: ['https://playwithbrio.com', 'https://www.playwithbrio.com', 'https://production.playwithbrio.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    minterpop: {\n      origins: ['https://minterpop.com', '*.minterpop.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    interpop: {\n      origins: ['https://interpopcomics.com', 'https://www.interpopcomics.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    humanMachine: {\n      origins: ['https://human-machine.io'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    ubisoft: {\n      origins: ['*.ubisoft.com'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: true\n      }\n    },\n    gap: {\n      origins: ['*.gap.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true,\n        micheline_silent: true\n      }\n    },\n    manutd: {\n      origins: ['*.manutd.com', '*.trili.tech'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    lexus: {\n      origins: ['https://ldai.lexusdesign.in'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    blockspace: {\n      origins: ['https://block-space.app'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    evian: {\n      origins: ['https://nft.evian.com', 'https://happy85.marieclaire.fr', 'https://claim.renaissance.land'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    souvie: {\n      origins: ['https://souvie.dev'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    tzstaging: {\n      origins: ['*.tzstaging.com', 'https://tzstaging.com', 'https://tezos.com', 'https://freetez.tezos.com'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    studioexception: {\n      origins: ['https://studioexception.eu'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: true\n      }\n    },\n    cleantree: {\n      origins: ['https://cleantree.artshelp.net'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    vitality: {\n      origins: ['*.vitality.gg'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    kanvas: {\n      origins: ['*.tzconnect.berlin', 'https://metavert.sowvital.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    proofof: {\n      origins: ['https://proofofperformance.xyz', 'https://pop-six.vercel.app'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    emergents: {\n      origins: ['https://play.emergentstcg.com'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    thegoodsociety: {\n      origins: ['https://www.thegoodsociety.org'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    circa: {\n      origins: ['https://circa.art', 'https://nft.circa.art'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    mooncakes: {\n      origins: ['https://mooncakes.fun', 'https://www.mooncakes.fun', 'https://df97ay9gblnsi.cloudfront.net'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    truename: {\n      origins: ['https://truename.me'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    verticalcrypto: {\n      origins: ['https://verticalcrypto.art', '*.verticalcrypto.art'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    playrecord: {\n      origins: ['https://claim.playrecordmint.xyz'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    mclaren: {\n      origins: ['*.mclaren.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    hek: {\n      origins: ['https://nftshop.hek.ch'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    flosports: {\n      origins: ['https://collectibles.flosports.tv'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    serpentine: {\n      origins: ['https://digital.serpentinegalleries.org', '*.prod.gke.papers.tech'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    }\n  };\n  constructor(\n    private torusService: TorusService,\n    private importService: ImportService,\n    private walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private route: ActivatedRoute,\n    private lookupService: LookupService,\n    private activityService: ActivityService,\n    private embeddedAuthService: EmbeddedAuthService,\n    private subjectService: SubjectService,\n    private inputValidationService: InputValidationService,\n    private elRef: ElementRef\n  ) {}\n  pendingOps: string[] = [];\n  ophashSubscription: Subscription;\n  origin = '';\n  login = false;\n  dismiss: Boolean = null;\n  blockCard = true;\n  activeAccount: ImplicitAccount = null;\n  template = null;\n  externalRequest: ExternalRequest = null;\n  signRequest = null;\n  loginConfig: LoginConfig = null;\n  queueMode: LoginPrio = null;\n  currentInstanceId = '';\n\n  ngOnInit(): void {\n    document.body.style.background = 'none';\n    this.torusService.initTorus();\n    if (window.addEventListener) {\n      window.addEventListener('message', this.handleRequest, false);\n    } else {\n      (window as any).attachEvent('onmessage', this.handleRequest);\n    }\n    console.log('icabod is connected...');\n    this.route.queryParams\n      .filter((params) => params.instanceId)\n      .subscribe((params) => {\n        this.walletService.loadStoredWallet(params.instanceId);\n        this.currentInstanceId = params.instanceId;\n        if (this.walletService.wallet instanceof EmbeddedTorusWallet) {\n          this.origin = this.walletService.wallet.origin;\n          this.subjectService.origin.next(this.origin);\n          if (this.walletService.wallet?.implicitAccounts[0]) {\n            this.activeAccount = this.walletService.wallet.implicitAccounts[0];\n            // this.coordinatorService.startXTZ();\n            // this.coordinatorService.start(this.activeAccount.address, this.coordinatorService.defaultDelayActivity);\n            // this.subscribeToConfirmedOps();\n          }\n        }\n      });\n    window.parent.window.postMessage(JSON.stringify({ type: ResponseTypes.initComplete, failed: false }), this.origin || '*');\n  }\n  handleRequest = (evt) => {\n    try {\n      const data: RequestMessage = JSON.parse(evt.data);\n      if (this.hasPermission(null, evt.origin)) {\n        console.log(`Received ${evt.data} from ${evt.origin}`);\n        if (data && data.type) {\n          this.origin = evt.origin;\n          this.subjectService.origin.next(this.origin);\n          switch (data.type) {\n            case RequestTypes.loginRequest:\n              this.handleLoginRequest(data);\n              break;\n            case RequestTypes.operationRequest:\n              this.handleOperationRequest(data);\n              break;\n            case RequestTypes.signExprRequest:\n              this.handleSignExprRequest(data);\n              break;\n            case RequestTypes.trackRequest:\n              this.handleTrackRequest(data);\n              break;\n            case RequestTypes.logoutRequest:\n              this.handleLogoutRequest(data);\n              break;\n            case RequestTypes.authRequest:\n              this.handleAuthRequest(data);\n              break;\n            case RequestTypes.cardRequest:\n              this.handleCardRequest(data);\n              break;\n            case RequestTypes.dismissRequest:\n              this.dismiss = true;\n              break;\n            default:\n              console.warn('Unknown request', data);\n          }\n        }\n      } else if (data && data.type) {\n        console.error(`Invalid origin (${evt.origin})`);\n      }\n    } catch {}\n  };\n  private handleSignExprRequest(req: SignExprRequest) {\n    if (!this.hasPermission(Permission.MICHELINE)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.signExprResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && this.walletService.wallet.implicitAccounts[0] && req.expr) {\n      if (req.expr.slice(0, 2) === '0x') {\n        req.expr = req.expr.slice(2);\n      }\n      if (this.inputValidationService.isMichelineExpr(req.expr)) {\n        if (req?.ui?.silent && this.hasPermission(Permission.MICHELINE_SILENT)) {\n          this.embeddedAuthService\n            .signExprSilent(req.expr)\n            .then((signature) => {\n              this.signResponse(signature);\n            })\n            .catch((e) => {\n              this.sendResponse({\n                type: ResponseTypes.signExprResponse,\n                failed: true,\n                error: e.message ? e.message : 'UNKNOWN_ERROR'\n              });\n            });\n        } else {\n          this.signRequest = {\n            payload: req.expr,\n            ui: this.normalizeTemplate(req?.ui)\n          };\n        }\n      } else {\n        this.sendResponse({\n          type: ResponseTypes.signExprResponse,\n          failed: true,\n          error: 'INVALID_PARAMETERS'\n        });\n      }\n    } else {\n      let response: ResponseMessage;\n      if (!(this.walletService.wallet instanceof EmbeddedTorusWallet) || !this.walletService.wallet.implicitAccounts[0]) {\n        response = {\n          type: ResponseTypes.signExprResponse,\n          failed: true,\n          error: 'NO_WALLET_FOUND'\n        };\n      } else {\n        response = {\n          type: ResponseTypes.signExprResponse,\n          failed: true,\n          error: 'INVALID_PARAMETERS'\n        };\n      }\n      this.sendResponse(response);\n    }\n  }\n  public signResponse(response: any) {\n    this.signRequest = null;\n    let resp: SignExprResponse;\n    if (response && typeof response === 'string' && response.length > 95 && response.slice(0, 5) === 'spsig') {\n      resp = {\n        type: ResponseTypes.signExprResponse,\n        failed: false,\n        signature: response\n      };\n    } else {\n      resp = {\n        type: ResponseTypes.signExprResponse,\n        failed: true,\n        error: 'ABORTED_BY_USER'\n      };\n    }\n    this.sendResponse(resp);\n  }\n  private handleLoginRequest(req: LoginRequest) {\n    if (!this.hasPermission(Permission.LOGIN)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    this.queueMode = req?.config.customPrio ? req?.config.customPrio : null;\n    if (this.activeAccount || ([LoginPrio.Low, LoginPrio.LowFast].includes(this.queueMode) && this.walletService.wallet)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'ALREADY_LOGGED_IN'\n      };\n      this.sendResponse(response);\n    } else if (this.queueMode === 'high' && !this.walletService.wallet) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'NO_WALLET_FOUND'\n      };\n      this.sendResponse(response);\n    } else {\n      if (req?.config?.customSpinnerDismissal) {\n        this.dismiss = false;\n      }\n      if (req?.config) {\n        this.loginConfig = req.config;\n      }\n      this.login = true;\n    }\n  }\n  private handleOperationRequest(req: OperationRequest) {\n    if (!this.hasPermission(Permission.OPERATIONS)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && this.walletService.wallet.implicitAccounts[0] && req.operations) {\n      if (this.isValidOperation(req.operations)) {\n        this.template = req.ui ? this.normalizeTemplate(req.ui) : null;\n        this.externalRequest = { operationRequest: req.operations, selectedAccount: this.activeAccount };\n      } else {\n        this.externalRequest = null;\n        this.sendResponse({\n          type: ResponseTypes.operationResponse,\n          failed: true,\n          error: 'INVALID_TRANSACTION'\n        });\n      }\n    } else {\n      this.sendResponse({\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'NO_WALLET_FOUND'\n      });\n    }\n  }\n  private async handleTrackRequest(req: TrackRequest) {\n    this.pendingOps.push(req.opHash);\n  }\n  private handleLogoutRequest(req: LogoutRequest) {\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && this.walletService.wallet.instanceId) {\n      const instanceId = this.walletService.wallet.instanceId;\n      this.logout(instanceId);\n      this.sendResponse({\n        type: ResponseTypes.logoutResponse,\n        instanceId,\n        failed: false\n      });\n    } else {\n      this.noWalletError();\n    }\n  }\n  async loginResponse(loginData: any) {\n    let response: ResponseMessage;\n    let toImport: any;\n    if (loginData === 'dismiss') {\n      this.dismiss = null;\n      response = {\n        type: ResponseTypes.dismissResponse,\n        failed: false\n      };\n    } else if (loginData) {\n      const { keyPair, userInfo } = loginData;\n      const { idToken = '', accessToken = '', long_lived_token = '', ...filteredUserInfo } = { ...userInfo };\n      let instanceId;\n      if (\n        this.walletService.wallet &&\n        this.walletService.wallet instanceof EmbeddedTorusWallet &&\n        keyPair?.pk &&\n        !this.walletService.wallet.implicitAccounts[0] &&\n        this.currentInstanceId\n      ) {\n        instanceId = this.currentInstanceId;\n      } else {\n        // 160 bits of entropy, base58 encoded\n        instanceId = this.generateInstanceId();\n      }\n      response = {\n        type: ResponseTypes.loginResponse,\n        instanceId,\n        pk: keyPair.pk,\n        pkh: keyPair.pkh,\n        userData: filteredUserInfo,\n        failed: false\n      };\n      toImport = { keyPair, userInfo, instanceId };\n      if (this.loginConfig?.authParams) {\n        try {\n          response.authResponse = await this.embeddedAuthService.authenticate(this.loginConfig.authParams, this.origin, keyPair);\n        } catch (e) {\n          console.error(e);\n          response = {\n            type: ResponseTypes.loginResponse,\n            failed: true,\n            error: e?.message\n          };\n          toImport = undefined;\n        }\n      }\n    } else {\n      this.dismiss = null;\n      response = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: loginData === null ? 'ABORTED_BY_USER' : 'BACKED_BY_USER'\n      };\n    }\n    const loginConfig = this.loginConfig;\n    if (this.dismiss === null) {\n      this.login = false;\n      this.loginConfig = null;\n    }\n    setTimeout(() => {\n      this.sendResponse(response);\n      if (toImport) {\n        if (loginConfig?.strictAuth) {\n          toImport.keyPair.sk = '';\n        }\n        this.importAccount(toImport.keyPair, toImport.userInfo, toImport.instanceId);\n      }\n    }, 10);\n  }\n  async handleAuthRequest(authReq: AuthRequest) {\n    if (!this.hasPermission(Permission.LOGIN)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    this.embeddedAuthService\n      .authenticate(authReq, this.origin)\n      .then((authResponse: any) => {\n        this.sendResponse({\n          type: ResponseTypes.authResponse,\n          failed: false,\n          message: authResponse.message,\n          signature: authResponse.signature\n        });\n      })\n      .catch((e: Error) => {\n        this.sendResponse({\n          type: ResponseTypes.authResponse,\n          failed: true,\n          error: e.message ? e.message : 'UNKNOWN_ERROR'\n        });\n      });\n  }\n  handleCardRequest(req: CardRequest) {\n    this.blockCard = !req.show;\n    const response: CardResponse = {\n      type: ResponseTypes.cardResponse,\n      failed: false\n    };\n    this.sendResponse(response);\n  }\n  noWalletError() {\n    this.sendResponse({\n      type: ResponseTypes.logoutResponse,\n      failed: true,\n      error: 'NO_WALLET_FOUND'\n    });\n  }\n  operationResponse(opHash: any) {\n    let response: OperationResponse;\n    let errorMessage = '';\n    if (opHash?.error && opHash.errorMessage) {\n      errorMessage = opHash.errorMessage;\n      opHash = opHash.error;\n    }\n    if (!opHash) {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'ABORTED_BY_USER'\n      };\n    } else if (opHash === 'exceeded_threshold') {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'EXEEDED_THRESHOLD'\n      };\n    } else if (opHash === 'broadcast_error') {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'BROADCAST_ERROR',\n        errorMessage\n      };\n    } else if (opHash === 'invalid_parameters') {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'INVALID_PARAMETERS',\n        errorMessage\n      };\n    } else if (utils.validOperationHash(opHash)) {\n      response = {\n        type: ResponseTypes.operationResponse,\n        opHash,\n        failed: false\n      };\n    } else {\n      console.warn('Unknown operation response:', opHash);\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'UNKNOWN_ERROR'\n      };\n    }\n    this.template = null;\n    this.externalRequest = null;\n    setTimeout(() => {\n      this.sendResponse(response);\n    }, 0);\n  }\n  private sendResponse(resp: ResponseMessage) {\n    window.parent.window.postMessage(JSON.stringify(resp), this.origin);\n  }\n  private async importAccount(keyPair: KeyPair, userInfo: any, instanceId: string) {\n    if (keyPair?.pk) {\n      await this.importService\n        .importWalletFromPk(\n          keyPair.pk,\n          '',\n          {\n            verifier: userInfo.typeOfLogin,\n            id: userInfo.verifierId,\n            name: userInfo.name,\n            embedded: true,\n            origin: this.origin\n          },\n          keyPair.sk,\n          instanceId\n        )\n        .then((success: boolean) => {\n          if (success) {\n            this.activeAccount = this.walletService.wallet.implicitAccounts[0];\n            // this.coordinatorService.startXTZ();\n            // this.coordinatorService.start(this.activeAccount.address, this.coordinatorService.defaultDelayActivity);\n            // this.subscribeToConfirmedOps();\n          }\n        });\n    } else if (keyPair?.pk === '') {\n      // login without keys\n      await this.importService.importWalletFromPk(\n        keyPair.pk,\n        '',\n        {\n          verifier: userInfo.typeOfLogin,\n          id: userInfo.verifierId,\n          name: userInfo.name,\n          embedded: true,\n          origin: this.origin\n        },\n        '',\n        instanceId\n      );\n    }\n    this.currentInstanceId = instanceId;\n  }\n  private isValidOperation(transactions: PartialTezosTransactionOperation[]): boolean {\n    try {\n      transactions.forEach((tx) => {\n        if (tx.kind !== 'transaction' || typeof tx.amount !== 'string' || !utils.validAddress(tx.destination)) {\n          throw new Error('Invalid transaction');\n        }\n      });\n    } catch (e) {\n      console.warn(e);\n      return false;\n    }\n    return true;\n  }\n  private generateInstanceId(): string {\n    return common.base58encode(utils.mnemonicToEntropy(utils.generateMnemonic(15)), new Uint8Array([]));\n  }\n  private logout(instanceId: string) {\n    this.subjectService.logout.next(true);\n    this.walletService.clearWallet(instanceId);\n    this.lookupService.clear();\n    this.activeAccount = null;\n    if (this.ophashSubscription) {\n      this.ophashSubscription.unsubscribe();\n    }\n    this.currentInstanceId = '';\n  }\n  subscribeToConfirmedOps() {\n    this.ophashSubscription = this.subjectService.confirmedOp.subscribe((opHash) => {\n      if (this.pendingOps.includes(opHash)) {\n        this.sendResponse({\n          type: ResponseTypes.trackResponse,\n          opHash: opHash,\n          failed: false\n        });\n        for (let i = 0; i < this.pendingOps.length; i++) {\n          if (this.pendingOps[i] === opHash) {\n            this.pendingOps.splice(i, 1);\n          }\n        }\n      }\n    });\n  }\n  private normalizeTemplate(template: any): any {\n    if (template?.descriptions) {\n      for (let i in template.descriptions) {\n        if (typeof template.descriptions[i] === 'string') {\n          template.descriptions[i] = {\n            text: template.descriptions[i]\n          };\n        }\n      }\n    }\n    return template;\n  }\n  private hasPermission(permission: Permission, origin: string = this.origin): boolean {\n    if (!CONSTANTS.MAINNET) {\n      return true;\n    }\n    try {\n      const keys = Object.keys(this.permissionMatrix);\n      for (const key of keys) {\n        for (const allowedOrigin of this.permissionMatrix[key].origins) {\n          if (allowedOrigin.startsWith('*.') ? origin.endsWith(allowedOrigin.slice(1)) : origin === allowedOrigin) {\n            return permission ? this.permissionMatrix[key].permissions[permission] : !!this.permissionMatrix[key].permissions;\n          }\n        }\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    return false;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Receive Address</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column receive\">\n      <label class=\"value\">Your account QR code</label>\n      <canvas id='canvas'></canvas>\n      <span class=\"flex-row value\">{{ activeAddress }}<img class=\"copy\" src=\"../../../assets/img/copy-icon.svg\"\n          (click)=\"copy()\" /></span>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport * as QRCode from 'qrcode';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ModalComponent } from '../modal.component';\nimport copy from 'copy-to-clipboard';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-receive',\n  templateUrl: './receive.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class ReceiveComponent extends ModalComponent implements OnInit {\n  activeAddress: string;\n  showReceiveFormat = {\n    btnOutline: true,\n    dropdownItem: false\n  };\n\n  name = 'receive';\n\n  constructor(private messageService: MessageService, private translate: TranslateService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  open(data: any): void {\n    this.activeAddress = data.address;\n    setTimeout(() => {\n      this.getQR();\n    }, 100);\n    super.open(data);\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n  getQR(): void {\n    QRCode.toCanvas(\n      document.getElementById('canvas'),\n      this.activeAddress,\n      {\n        errorCorrectionLevel: 'H',\n        scaleFactor: 2,\n        color: { light: '#FCFCFC' }\n      },\n      function (err, canvas) {\n        if (err) {\n          throw err;\n        }\n      }\n    );\n  }\n  copy(): void {\n    copy(this.activeAddress);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(this.activeAddress + ' ' + copyToClipboard, 5);\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\" src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Add New Account</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column new-account\">\n      <div class=\"label\">\n        ENTER YOUR PASSWORD TO CONFIRM\n      </div>\n      <input #pwdInput [(ngModel)]=\"password\" class=\"text password\" autocomplete=\"current-password\"\n        placeholder=\"Password\" type=\"password\" (input)=\"this.errorMsg = ''\" (change)=\"this.errorMsg = ''\" (keydown.enter)=\"!messageService.spinnerOn ? addPkh() : null\">\n      <span *ngIf=\"this.errorMsg\" class=\"danger margin\">{{ this.errorMsg }}</span>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <button class=\"confirm\" (click)=\"!messageService.spinnerOn ? addPkh() : null\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { HdWallet } from '../../../services/wallet/wallet';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ModalComponent } from '../modal.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-implicit',\n  templateUrl: './new-implicit.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class NewImplicitComponent extends ModalComponent implements OnInit {\n  @ViewChild('pwdInput') pwdView: ElementRef;\n  password = '';\n  errorMsg = '';\n  name = 'new-implicit';\n  constructor(\n    public walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private messageService: MessageService,\n    private router: Router\n  ) {\n    super();\n  }\n  openModal(): void {\n    if (this.openPkhSpot()) {\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n      this.clear();\n      setTimeout(() => {\n        const inputElem = this.pwdView.nativeElement as HTMLInputElement;\n        inputElem.focus();\n      }, 100);\n    } else {\n      this.messageService.addWarning(\"Can't create additional accounts when an unused account already exists\");\n    }\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clear();\n  }\n  ngOnInit(): void {}\n  async addPkh(): Promise<void> {\n    if (this.openPkhSpot()) {\n      this.messageService.startSpinner('Creating new account');\n      const pkh = await this.walletService.incrementAccountIndex(this.password);\n      if (pkh) {\n        this.coordinatorService.start(pkh, this.coordinatorService.defaultDelayActivity);\n        this.closeModal();\n        this.router.navigateByUrl(`/account/${pkh}`);\n      } else {\n        this.errorMsg = 'Wrong password!';\n      }\n      this.messageService.stopSpinner();\n    } else {\n      console.log('blocked!');\n      this.messageService.addError(\"Can't create additional accounts when an unused account already exists\");\n    }\n  }\n  openPkhSpot(): boolean {\n    const balance: number = this.walletService.wallet.implicitAccounts[this.walletService.wallet.implicitAccounts.length - 1].balanceXTZ;\n    const tokens = this.walletService.wallet.implicitAccounts[this.walletService.wallet.implicitAccounts.length - 1].tokens?.length;\n    return this.walletService.wallet instanceof HdWallet && ((balance && balance > 0) || (tokens && tokens > 0));\n  }\n  clear(): void {\n    this.password = '';\n    this.errorMsg = '';\n  }\n}\n","<div class=\"flex-row dropdown pr-request\" [class.expanded]=\"isOpen\" [id]=\"ecmpId\">\n  <div class=\"flex-row currentAddress\" (click)=\"toggleDropdown()\"><img\n      *ngIf=\"!!getUsername(selection?.address)\" class=\"logo\" src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span\n      class=\"address\">{{\n      getUsername(selection?.address) || \"&nbsp;&nbsp;&nbsp;&nbsp;\" + selection?.address }}</span><img\n      *ngIf=\"['', 'domain'].includes(getVerifier())\" class=\"button icon-db\"\n      src=\"../../../../assets/img/down-arrow.svg\" />\n  </div>\n  <div class=\"flex-column dropdown-content\">\n    <ng-container *ngFor=\"let account of options\">\n      <div class=\"option\" [class.selected]=\"account?.address === current?.address\"\n        (click)=\"selection = account; toggleDropdown()\">\n        <ng-container *ngIf=\"getUsername(account?.address)\">\n          <div class=\"flex-row alias\"><img class=\"logo\"\n              src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span>{{\n              getUsername(account?.address) }}</span></div>\n          <br /><span>{{\n            account?.address }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"!getUsername(account?.address)\">{{ account?.address }}</ng-container>\n      </div>\n    </ng-container>\n  </div>\n</div>","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TorusWallet } from '../../../../services/wallet/wallet';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { DropdownComponent } from '../dropdown.component';\n\n@Component({\n  selector: 'app-ui-dropdown-permission-request',\n  templateUrl: './permission-request.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/account-dropdown.component.scss']\n})\nexport class PermissionRequestDropdownComponent extends DropdownComponent implements OnInit, OnChanges {\n  constructor(public router: Router, public lookupService: LookupService, private walletService: WalletService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.selection = this.current;\n    this.list = this.options;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options && changes.options.currentValue !== changes.options.previousValue) {\n      this.list = this.options;\n    }\n  }\n\n  getUsername(address: string): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      const party = this.lookupService.resolve({\n        address: address || this.current?.address\n      });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n\n  toggleDropdown(): void {\n    this.dropdownResponse.emit(this.selection);\n    this.isOpen = !this.isOpen;\n  }\n}\n","<div *ngIf=\"permissionRequest\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"rejectPermissions()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Connect</h1>\n    </div>\n    <div class=\"flex-column permission-request\">\n      <span class=\"transport\">{{ permissionRequest.version ? 'Beacon' : 'Wallet Connect'}}</span>\n      <ng-container *ngIf=\"cachedIcon(permissionRequest); let cachedIcon;\">\n        <app-asset class=\"app-icon\" [assets]=\"{ displayAsset: cachedIcon }\"></app-asset>\n      </ng-container>\n      <span class=\"dapp-name\">{{ permissionRequest.appMetadata.name }}</span>\n      <span class=\"question\">Do you want to connect to<br>this app?</span>\n      <h6>Apply To Account:</h6>\n      <app-ui-dropdown-permission-request [options]=\"accounts\" [current]=\"preSelectedAccount\"\n        (dropdownResponse)=\"selectedAccount = $event\" style=\"width: 100%;align-self: center;\">\n      </app-ui-dropdown-permission-request>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <button class=\"blue confirm\" (click)=\"grantPermissions()\">Connect</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, EventEmitter, Output, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Router } from '@angular/router';\nimport { BeaconService } from '../../../services/beacon/beacon.service';\nimport { Account } from '../../../services/wallet/wallet';\n\n@Component({\n  selector: 'app-permission-request',\n  templateUrl: './permission-request.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class PermissionRequestComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() permissionRequest: any;\n  @Input() activeAccount;\n  @Output() permissionResponse = new EventEmitter();\n  syncSub: Subscription;\n  preSelectedAccount: Account;\n  selectedAccount: Account;\n  accounts: Account[];\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public walletService: WalletService,\n    private messageService: MessageService,\n    private subjectService: SubjectService,\n    private router: Router,\n    private beaconService: BeaconService\n  ) {}\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.preSelectedAccount = this.selectedAccount = this.activeAccount?.address?.startsWith('tz')\n        ? this.activeAccount\n        : this.walletService.wallet.implicitAccounts[0];\n    }\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(async () => {\n        this.accounts = this.walletService.wallet?.getImplicitAccounts();\n      })\n    );\n    this.accounts = this.walletService.wallet?.getImplicitAccounts();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.activeAccount) {\n      this.preSelectedAccount = this.selectedAccount = this.activeAccount?.address?.startsWith('tz')\n        ? this.activeAccount\n        : this.walletService.wallet.implicitAccounts[0];\n    }\n    if (this.permissionRequest) {\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflow = 'hidden';\n      this.messageService.removeBeaconMsg(true);\n      this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n        if (response) {\n          this.permissionResponse.emit('silent');\n          this.reset();\n        }\n      });\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  rejectPermissions(): void {\n    this.permissionResponse.emit(null);\n    this.reset();\n  }\n  grantPermissions(): void {\n    const pk = this.selectedAccount?.pk;\n    this.permissionResponse.emit(pk);\n    this.reset();\n    this.router.navigate([`/account/${this.selectedAccount.address}`]);\n  }\n  reset(): void {\n    document.body.style.marginRight = '';\n    document.body.style.overflow = '';\n    this.permissionRequest = null;\n    if (this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n  }\n  scopeToText(scope: string): string {\n    if (scope === 'sign') {\n      return 'Request other signing';\n    } else if (scope === 'operation_request') {\n      return 'Request operation signing';\n    }\n    return scope;\n  }\n  cachedIcon(permissionRequest): string {\n    if (permissionRequest?.appMetadata?.icon) {\n      let icon = permissionRequest?.appMetadata?.icon;\n      if (icon.startsWith('https://')) {\n        icon = icon.slice(8);\n      }\n      return `https://static.tcinfra.net/media/medium/web/${icon}`;\n    }\n    return '';\n  }\n}\n","<div *ngIf=\"signRequest\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"rejectSigning()\"><img class=\"x\" src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">\n        <ng-container *ngIf=\"!isDeku && isMessage\">Sign Message</ng-container>\n        <ng-container *ngIf=\"!isDeku && !isMessage\">Sign Expression</ng-container>\n        <ng-container *ngIf=\"isDeku\">Sign Deku Operation</ng-container>\n      </h1>\n    </div>\n    <div class=\"flex-column sign-expr\">\n      <p class=\"previewAttention\">An application has requested you sign a<ng-container *ngIf=\"!isDeku && isMessage\"> message</ng-container><ng-container *ngIf=\"!isDeku && !isMessage\">n expression</ng-container><ng-container *ngIf=\"isDeku\"> Deku operation</ng-container></p>\n      <p *ngIf=\"!isDeku && !isMessage\" class=\"previewAttention warning\">Warning! Only sign if you understand the expression or trust the source.</p>\n      <p *ngIf=\"isDeku\" class=\"previewAttention warning\">[Layer 2]</p>\n      <app-ui-toggle-advanced *ngIf=\"!isMessage\" style=\"width: 13rem; margin-bottom: 2rem;\" [default]=\"false\" (stateChange)=\"advancedForm = $event\"></app-ui-toggle-advanced>\n      <textarea *ngIf=\"advancedForm || isMessage\" rows=\"10\" readonly>{{ payload }}</textarea>\n      <div class=\"seperator\" style =\"left: 0\"></div>\n      <div class=\"flex-column bottom\">\n        <span *ngIf=\"this.pwdInvalid\" class=\"danger margin\">{{ this.pwdInvalid }}</span>\n        <input *ngIf=\"walletService.isPwdWallet()\" [(ngModel)]=\"password\"\n          autocomplete=\"current-password\" placeholder=\"Password\" class=\"text password\" type=\"password\"\n          (input)=\"this.pwdInvalid = ''\" (change)=\"this.pwdInvalid = ''\" (keydown.enter)='!messageService.spinnerOn ? sign(): null'>\n        <button class=\"purple confirm\" (click)=\"!messageService.spinnerOn ? sign(): null\" [disabled]=\"walletService.isWatchWallet()\">\n          {{ walletService.isLedgerWallet() ? 'Sign with Ledger' : 'Sign'}}</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, SimpleChanges, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Account } from '../../../services/wallet/wallet';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { emitMicheline } from '@taquito/michel-codec';\nimport { valueDecoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { Uint8ArrayConsumer } from '@taquito/local-forging/dist/lib/uint8array-consumer';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { ModalComponent } from '../modal.component';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-sign-expr',\n  templateUrl: './sign-expr.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class SignExprComponent extends ModalComponent implements OnInit, OnChanges {\n  @Input() signRequest: any;\n  @Input() activeAccount: Account;\n  @Output() signResponse = new EventEmitter();\n  syncSub: Subscription;\n  password = '';\n  pwdInvalid = '';\n  payload = '';\n  isMessage = false;\n  isDeku = false;\n  advancedForm = false;\n  name = 'sign-expr';\n  constructor(\n    public walletService: WalletService,\n    private messageService: MessageService,\n    public translate: TranslateService,\n    private operationService: OperationService,\n    private ledgerService: LedgerService,\n    private inputValidationService: InputValidationService,\n    private subjectService: SubjectService\n  ) {\n    super();\n  }\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.signRequest) {\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n      this.isDeku = this.signRequest.payload.slice(0, 2) === '80';\n      if (!this.isDeku) {\n        this.isMessage = this.inputValidationService.isMessageSigning(this.signRequest.payload);\n        const value = valueDecoder(Uint8ArrayConsumer.fromHexString(this.signRequest.payload.slice(2)));\n        const payload = emitMicheline(value, {\n          indent: '  ',\n          newline: '\\n'\n        });\n        this.payload = this.isMessage ? value.string : payload;\n      } else {\n        console.log('pay', this.payload);\n        this.payload = `0x${this.signRequest.payload}`;\n      }\n      this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n        if (response) {\n          this.signResponse.emit('silent');\n          this.closeModal();\n        }\n      });\n    }\n  }\n  async sign(): Promise<void> {\n    if (this.walletService.isLedgerWallet()) {\n      this.requestLedgerSignature();\n    } else {\n      const pwd = this.password;\n      this.password = '';\n      await this.messageService.startSpinner(`Signing ${this.isMessage ? 'message' : 'payload'}...`);\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n      } catch (e) {\n        console.warn(e);\n        this.messageService.stopSpinner();\n      }\n      if (keys) {\n        this.pwdInvalid = '';\n        try {\n          const signature = this.operationService.sign(this.signRequest.payload, keys.sk).edsig;\n          this.acceptSigning(signature);\n        } catch (e) {\n          this.pwdInvalid = 'Signing failed';\n          console.warn(e);\n        } finally {\n          this.messageService.stopSpinner();\n        }\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.isTorusWallet()) {\n          this.pwdInvalid = `Authorization failed`;\n        } else {\n          this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD');\n        }\n      }\n    }\n  }\n  async requestLedgerSignature(): Promise<void> {\n    await this.messageService.startSpinner('Waiting for Ledger signature...');\n    try {\n      const payload = this.signRequest.payload;\n      let signature = '';\n      if (payload.length <= 2290) {\n        signature = await this.ledgerService.signOperation(payload, this.walletService.wallet.implicitAccounts[0].derivationPath);\n      } else {\n        signature = await this.ledgerService.signHash(\n          this.operationService.ledgerPreHash(payload),\n          this.walletService.wallet.implicitAccounts[0].derivationPath\n        );\n      }\n      if (signature) {\n        this.acceptSigning(this.operationService.hexsigToEdsig(signature));\n      } else {\n        this.pwdInvalid = 'Failed to sign transaction';\n      }\n    } finally {\n      this.messageService.stopSpinner();\n    }\n  }\n  rejectSigning(): void {\n    this.closeModal();\n    this.signResponse.emit(null);\n  }\n  acceptSigning(signature: string): void {\n    this.messageService.addSuccess(this.isMessage ? 'Message signed!' : 'Payload signed!');\n    this.closeModal();\n    this.signResponse.emit(signature);\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clear();\n  }\n  clear(): void {\n    this.password = '';\n    this.pwdInvalid = '';\n    this.payload = '';\n    this.isMessage = false;\n    if (this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Originate</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column originate\">\n      <div class=\"flex-column top\">\n        <span class=\"amount key\">AMOUNT:&nbsp;<span class=\"value\">{{ this.balance ? this.balance + ' ' + 'tez' : ''\n            }}</span></span>\n        <!-- <span class=\"amount-usd\"> </span> -->\n        <span class=\"section key\">From:&nbsp;<span class=\"from\">{{ externalRequest?.selectedAccount?.address }}</span></span>\n      </div>\n      <br />\n      <div class=\"flex-row attrs\">\n        <div class=\"flex-row attr\">\n          <span class=\"key\">FEE:&nbsp;</span><span class=\"value\">{{ this.getTotalFee() }} tez</span>\n        </div>\n        <div class=\"flex-row attr\">\n          <span class=\"key\">MAX STORAGE COST:&nbsp;</span><span class=\"value\">{{ getTotalBurn() }} tez</span>\n        </div>\n      </div>\n      <app-ui-toggle-advanced style=\"width: calc(100% - 1em);margin: 2em 0;\" [default]=\"false\"\n        (stateChange)=\"advancedForm = $event\">\n      </app-ui-toggle-advanced>\n      <form autocomplete=\"off\" *ngIf=\"advancedForm\" class=\"advanced-form\">\n        <div class=\"tabs-container\">\n          <div class=\"flex-row tabs\">\n            <span class=\"tab\" [class.active]=\"activeTab === 0\" (click)=\"activeTab = 0\">Code</span>\n            <span class=\"tab\" [class.active]=\"activeTab === 1\" (click)=\"activeTab = 1\">Storage</span>\n          </div>\n        </div>\n        <textarea rows=\"10\" readonly>{{ getScript() }}</textarea>\n        <ng-container *ngIf=\"!(walletService.isLedgerWallet() && !ledgerError)\">\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Gas limit</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text\" placeholder={{this.defaultTransactionParams.gas.toString()}}\n                [(ngModel)]=\"customGas\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Fee</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text\" (keypress)=\"keyPressNumbersDecimal($event, 'customFee')\"\n                placeholder={{this.defaultTransactionParams.fee.toString()}} [(ngModel)]=\"customFee\">\n            </div>\n          </div>\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Storage limit</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text\"\n                placeholder={{this.defaultTransactionParams?.storage.toString()}} [(ngModel)]=\"customStorage\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Max storage cost</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text read-only\" [value]=\"burnAmount() ? burnAmount() : '0 tez'\"\n                tabindex=-1 readonly>\n            </div>\n          </div>\n        </ng-container>\n      </form>\n      <span *ngIf=\"formInvalid\" class=\"danger margin\">\n        {{ formInvalid }}\n      </span>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <br />\n        <ng-container *ngIf=\"walletService.isPwdWallet()\">\n          <input name=\"none\" [(ngModel)]=\"password\" placeholder=\"Password\" autocomplete=\"current-password\"\n            class=\"text password\" type=\"password\" (input)=\"this.pwdInvalid = ''\" (paste)=\"this.pwdInvalid = ''\"\n            (keydown.enter)='!messageService.spinnerOn ? inject() : null'>\n        </ng-container>\n        <button *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\" class=\"blue confirm\"\n          (click)=\"ledgerSign()\">Sign with Ledger</button>\n        <ng-template #elseBlock>\n          <button class=\"blue confirm\" (click)=\"!messageService.spinnerOn ? inject() : null\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : 'Confirm'}}</button>\n        </ng-template>\n      </div>\n      <span *ngIf=\"this.pwdInvalid\" class=\"danger margin\">{{ this.pwdInvalid }}</span>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { KeyPair, DefaultTransactionParams, ExternalRequest } from '../../../interfaces';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { LedgerWallet, Account, TorusWallet } from '../../../services/wallet/wallet';\nimport { MessageService } from '../../../services/message/message.service';\nimport Big from 'big.js';\nimport { emitMicheline, assertMichelsonData, assertMichelsonContract } from '@taquito/michel-codec';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { Subscription } from 'rxjs';\nimport { ModalComponent } from '../modal.component';\nimport { SubjectService } from '../../../services/subject/subject.service';\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n\n@Component({\n  selector: 'app-originate',\n  templateUrl: './originate.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class OriginateComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  readonly beaconMode = true;\n  @Input() externalRequest: ExternalRequest;\n  @Output() operationResponse = new EventEmitter();\n  syncSub: Subscription;\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n  costPerByte: string = this.estimateService.costPerByte;\n\n  balance = '';\n  script: any;\n\n  customFee = '';\n  customGas = '';\n  customStorage = '';\n\n  pwdInvalid: string;\n  formInvalid = '';\n  sendResponse: any;\n  ledgerError = '';\n  simError = '';\n\n  password: string;\n  advancedForm = false;\n  simSemaphore = 0;\n  activeTab = 0;\n\n  name = 'originate';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private walletService: WalletService,\n    private operationService: OperationService,\n    private coordinatorService: CoordinatorService,\n    private inputValidationService: InputValidationService,\n    private ledgerService: LedgerService,\n    private messageService: MessageService,\n    private estimateService: EstimateService,\n    private subjectService: SubjectService\n  ) {\n    super();\n  }\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.beaconMode) {\n      if (\n        this.externalRequest?.operationRequest?.operationDetails?.length === 1 &&\n        this.externalRequest.operationRequest.operationDetails[0].kind === 'origination'\n      ) {\n        if (this.isValidOrigination()) {\n          this.openModal();\n          this.balance = Big(this.externalRequest.operationRequest.operationDetails[0].balance)\n            .div(10 ** 6)\n            .toFixed();\n          this.script = this.externalRequest.operationRequest.operationDetails[0].script;\n          const recommendations = {\n            gasRecommendation: this.externalRequest.operationRequest.operationDetails[0].gas_limit\n              ? this.externalRequest.operationRequest.operationDetails[0].gas_limit\n              : undefined,\n            storageRecommendation: this.externalRequest.operationRequest.operationDetails[0].storage_limit\n              ? this.externalRequest.operationRequest.operationDetails[0].storage_limit\n              : undefined\n          };\n          this.estimateFees(recommendations);\n          if (this.beaconMode) {\n            this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n              if (response) {\n                this.operationResponse.emit('silent');\n                this.closeModal();\n              }\n            });\n          }\n        } else {\n          console.warn('Invalid origination');\n          this.operationResponse.emit('parameters_error');\n        }\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  openModal(): void {\n    if (this.walletService.wallet) {\n      // hide body scrollbar\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflow = 'hidden';\n      this.clearForm();\n      if (this.walletService.isLedgerWallet()) {\n        this.ledgerError = '?';\n      }\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n    }\n  }\n  isValidOrigination(): boolean {\n    const origination = this.externalRequest.operationRequest.operationDetails[0];\n    if (!origination.balance || !this.inputValidationService.amount(origination.balance, 0)) {\n      console.warn('invalid balance');\n      return false;\n    }\n    try {\n      assertMichelsonContract(origination.script.code);\n      assertMichelsonData(origination.script.storage);\n    } catch (e) {\n      console.warn('Invalid script');\n      return false;\n    }\n    return true;\n  }\n  async estimateFees(recommendations: any = {}): Promise<void> {\n    const callback = (res) => {\n      if (res) {\n        if (res.error) {\n          this.simError = res.error;\n          this.formInvalid = this.simError;\n        } else {\n          this.defaultTransactionParams = res;\n        }\n      }\n      this.simSemaphore--;\n    };\n    this.simSemaphore++;\n    await this.estimateService.preLoadData(this.externalRequest.selectedAccount.pkh, this.externalRequest.selectedAccount.pk);\n    this.estimateService.estimateOrigination({ ...this.getOrigination(), ...recommendations }, this.externalRequest.selectedAccount.pkh, callback);\n  }\n  getOrigination(): {\n    balance: string;\n    script: string;\n    gasLimit: number;\n    storageLimit: number;\n  } {\n    const gasLimit = this.customGas ? Number(this.customGas) : this.defaultTransactionParams.gas;\n    const storageLimit = this.customStorage ? Number(this.customStorage) : this.defaultTransactionParams.storage;\n    return JSON.parse(\n      JSON.stringify({\n        balance: this.balance,\n        script: this.script,\n        gasLimit,\n        storageLimit\n      })\n    );\n  }\n  getTotalCost(display: boolean = false): string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return totalFee;\n  }\n  getTotalFee(): number {\n    if (this.customFee !== '' && Number(this.customFee)) {\n      return Number(this.customFee);\n    }\n    return Number(this.defaultTransactionParams.fee);\n  }\n  getTotalBurn(): number {\n    if (this.customStorage !== '' && Number(this.customStorage)) {\n      return Number(Big(this.customStorage).times(this.costPerByte).div(1000000).toString());\n    }\n    return this.defaultTransactionParams.burn;\n  }\n  burnAmount(): string {\n    const burn = this.customStorage ? Number(Big(this.customStorage).times(this.costPerByte).div(1000000)) : this.defaultTransactionParams.burn;\n    if (burn) {\n      return burn + ' tez';\n    }\n    return '';\n  }\n  getScript(): string {\n    return this.activeTab\n      ? emitMicheline(this.script.storage, {\n          indent: '  ',\n          newline: '\\n'\n        })\n      : emitMicheline(this.script.code, { indent: '  ', newline: '\\n' });\n  }\n  closeModalAction(): void {\n    this.operationResponse.emit(null);\n    this.closeModal();\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clearForm();\n    this.messageService?.stopSpinner();\n  }\n  async inject(): Promise<void> {\n    this.formInvalid = this.simError;\n    const valid = this.validateOrigination();\n    if (valid) {\n      const pwd = this.password;\n      this.password = '';\n      this.messageService.startSpinner('Signing operation...');\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.externalRequest.selectedAccount.pkh);\n      } catch {\n        this.messageService.stopSpinner();\n      }\n      if (this.walletService.isLedgerWallet()) {\n        this.broadCastLedgerTransaction();\n        this.sendResponse = null;\n      } else {\n        if (keys) {\n          this.pwdInvalid = '';\n          this.messageService.startSpinner('Sending operation...');\n          this.sendOrigination(keys);\n          this.closeModal();\n        } else {\n          this.messageService.stopSpinner();\n          if (this.walletService.wallet instanceof TorusWallet) {\n            this.pwdInvalid = `Authorization failed`;\n          } else {\n            this.pwdInvalid = 'Wrong password!';\n          }\n        }\n      }\n    }\n  }\n  validateOrigination(): boolean {\n    if (this.simSemaphore) {\n      return false;\n    } else if (this.formInvalid) {\n      return false;\n    } else if (!this.inputValidationService.gas(this.customGas)) {\n      this.formInvalid = 'Invalid gas limit';\n      return false;\n    } else if (!this.inputValidationService.storage(this.customStorage)) {\n      this.formInvalid = 'Invalid storage limit';\n      return false;\n    } else if (!this.inputValidationService.amount(this.customFee, 6)) {\n      this.formInvalid = 'Invalid fee';\n      return false;\n    }\n    return true;\n  }\n  async ledgerSign(): Promise<void> {\n    this.formInvalid = this.simError;\n    const valid = this.validateOrigination();\n    if (valid) {\n      const keys = await this.walletService.getKeys('');\n      if (keys) {\n        this.sendOrigination(keys);\n      }\n    }\n  }\n  async sendOrigination(keys: KeyPair): Promise<void> {\n    //this.fee = '';\n    this.subscriptions.add(\n      this.operationService.originate(this.getOrigination(), this.getTotalFee(), keys).subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success === true) {\n            if (ans.payload.opHash) {\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                kt1: ans.payload.newPkh,\n                opHash: ans.payload.opHash,\n                origination: this.externalRequest.operationRequest.operationDetails[0]\n              };\n              this.coordinatorService.boost(this.externalRequest.selectedAccount.address, metadata);\n            } else if (this.walletService.isLedgerWallet()) {\n              this.requestLedgerSignature();\n            }\n          } else {\n            this.messageService.stopSpinner();\n            console.log('Origination error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n            if (this.walletService.isLedgerWallet) {\n              this.closeModal();\n            }\n          }\n        },\n        (err) => {\n          console.log('Error Message ', JSON.stringify(err));\n          this.ledgerError = 'Failed to create operation';\n        }\n      )\n    );\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      const op = this.sendResponse.payload.unsignedOperation;\n      this.messageService.startSpinner('Waiting for Ledger signature');\n      let signature;\n      try {\n        signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n      if (signature) {\n        const signedOp = op + signature;\n        this.sendResponse.payload.signedOperation = signedOp;\n        this.ledgerError = '';\n      } else {\n        this.ledgerError = 'Failed to sign operation';\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.messageService.startSpinner('Broadcasting operation');\n    this.subscriptions.add(\n      this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(\n        (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success && this.externalRequest.selectedAccount.address) {\n            const metadata = {\n              kt1: ans.payload.newPkh,\n              opHash: ans.payload.opHash,\n              origination: this.externalRequest.operationRequest.operationDetails[0]\n            };\n            this.coordinatorService.boost(this.externalRequest.selectedAccount.address, metadata);\n          } else {\n            this.messageService.addError(this.sendResponse.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.closeModal();\n          console.log('ans: ' + JSON.stringify(ans));\n        },\n        (error) => {\n          this.messageService.stopSpinner();\n          this.messageService.addError(error, 0);\n          this.operationResponse.emit('broadcast_error');\n        }\n      )\n    );\n  }\n  clearForm(): void {\n    this.defaultTransactionParams = zeroTxParams;\n    this.customFee = '';\n    this.customGas = '';\n    this.customStorage = '';\n\n    this.balance = '';\n    this.script = null;\n\n    this.advancedForm = false;\n\n    this.password = '';\n    this.pwdInvalid = '';\n    this.formInvalid = '';\n    this.simError = '';\n\n    this.sendResponse = null;\n    this.ledgerError = '';\n    this.simSemaphore = 0;\n    this.activeTab = 0;\n\n    if (this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n  }\n  // Only Numbers with Decimals\n  keyPressNumbersDecimal(event, input): boolean {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode !== 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n      event.preventDefault();\n      return false;\n    } else if (charCode === 46 && this[input].length === 0) {\n      this[input] = '0' + this[input];\n    }\n    return true;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Confirm Staking</h1>\n    </div>\n    <div class=\"flex-column confirm-staking\">\n      <div class=\"flex-row head\">\n        <img *ngIf=\"delegate?.logo\" [src]=\"delegate.logo\" />\n        <div class=\"flex-column data\"\n          *ngIf=\"delegate?.name ? delegate.name : toPkh; let delegateDisplayName; else undelegate\">\n          <span class=\"name\">{{ delegateDisplayName }}</span>\n          <div class=\"flex-row fee-space\"><span class=\"fee\"><span>SPLIT:</span>&nbsp;{{ delegate?.fee ?\n              toPercent(delegate.fee) : 'UNKNOWN' }}</span><span *ngIf=\"delegate?.freeSpace\"\n              class=\"space\"><span>SPACE:</span>&nbsp;{{ round(delegate.freeSpace) }}</span>\n          </div>\n        </div>\n        <ng-template #undelegate>\n          <div class=\"flex-column data\">\n            <span class=\"name\">Undelegate from baker</span>\n          </div>\n        </ng-template>\n      </div>\n      <br />\n      <app-ui-toggle-advanced style=\"width: calc(100% - 1em);\" [default]=\"false\" (stateChange)=\"advanced = $event\">\n      </app-ui-toggle-advanced>\n      <br />\n      <br />\n      <ng-container *ngIf=\"advanced\">\n        <form autocomplete=\"off\">\n          <div class=\"label\">Fee <span class=\"label\" style=\"margin: 0; text-transform: lowercase;\">(tez)</span></div>\n          <input inputmode=\"decimal\" name=\"none\" [(ngModel)]=\"fee\" class=\"text fee\" type=\"text\" placeholder=\"{{defaultFee}}\"\n            [disabled]=\"walletService.isLedgerWallet() && sendResponse?.payload?.signedOperation\" />\n        </form>\n      </ng-container>\n      <br />\n      <br />\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <ng-container *ngIf=\"walletService.isPwdWallet()\">\n          <div class=\"label\">ENTER YOUR PASSWORD TO CONFIRM</div>\n          <span *ngIf=\"this.pwdValid\" class=\"label danger\">{{ this.pwdValid }}</span>\n          <input name=\"none\" [(ngModel)]=\"password\" placeholder=\"Password\" autocomplete=\"current-password\"\n            class=\"text password\" type=\"password\" (input)=\"this.pwdValid = ''\" (change)=\"this.pwdValid = ''\"\n            (keydown.enter)='!messageService.spinnerOn ? inject() : null'>\n        </ng-container>\n        <button class=\"confirm\" *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\"\n          (click)=\"ledgerSign()\">Sign with Ledger</button>\n        <ng-template #elseBlock>\n          <button class=\"confirm\" (click)=\"!messageService.spinnerOn ? inject() : null\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : 'Confirm'}}</button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { KeyPair, ExternalRequest } from '../../../interfaces';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { ExportService } from '../../../services/export/export.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { LedgerWallet, Account, ImplicitAccount, OriginatedAccount, TorusWallet } from '../../../services/wallet/wallet';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TezosDomainsService } from '../../../services/tezos-domains/tezos-domains.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalComponent } from '../modal.component';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport Big from 'big.js';\n\n@Component({\n  selector: 'app-delegate',\n  templateUrl: './delegate.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class DelegateComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  domainPendingLookup = false;\n  defaultFee = 0.0003;\n  readonly pkhFee = 0.0003;\n  readonly ktFee = 0.0008;\n  @ViewChild('toPkhInput') toPkhView: ElementRef;\n  @Input() beaconMode = false;\n  @Input() externalRequest: ExternalRequest;\n  @Output() operationResponse = new EventEmitter();\n  activeAccount: Account;\n  toPkh: string;\n  delegate = null;\n  fee: string = '';\n  password: string;\n  pwdValid: string;\n  formInvalid = '';\n  sendResponse: any;\n  ledgerError = '';\n  syncSub: Subscription;\n  advanced = false;\n\n  name = 'delegate-confirm';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private route: ActivatedRoute,\n    public walletService: WalletService,\n    private operationService: OperationService,\n    private coordinatorService: CoordinatorService,\n    private exportService: ExportService,\n    private inputValidationService: InputValidationService,\n    private ledgerService: LedgerService,\n    private messageService: MessageService,\n    private tezosDomains: TezosDomainsService,\n    private subjectService: SubjectService,\n    private router: Router\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      let address = this.route.snapshot.paramMap.get('address');\n      if (this.walletService.addressExists(address)) {\n        this.activeAccount = this.walletService.wallet.getAccount(address);\n      }\n      this.subscriptions.add(\n        this.subjectService.activeAccount.subscribe((activeAccount) => {\n          this.activeAccount = activeAccount;\n        })\n      );\n    }\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.beaconMode) {\n      if (this.externalRequest?.operationRequest) {\n        const opReq = this.externalRequest.operationRequest.operationDetails\n          ? this.externalRequest.operationRequest.operationDetails\n          : this.externalRequest.operationRequest;\n        if (opReq[0]?.kind === 'delegation') {\n          if (opReq[0].delegate) {\n            this.activeAccount = this.externalRequest.selectedAccount;\n            ModalComponent.currentModel.next({\n              name: '',\n              data: null\n            });\n            this.clearForm();\n            ModalComponent.currentModel.next({\n              name: 'delegate-confirm',\n              data: { address: opReq[0].delegate }\n            });\n          }\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  open(data): void {\n    if (this.walletService.wallet) {\n      this.clearForm(true);\n      this.estimateDefaultFee();\n      this.toPkh = data.address;\n      this.delegate = data;\n      if (this.walletService.isLedgerWallet()) {\n        this.ledgerError = '?';\n      }\n      if (this.beaconMode) {\n        this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n          if (response) {\n            this.operationResponse.emit('silent');\n          }\n        });\n      }\n      super.open();\n    }\n  }\n\n  async inject(): Promise<void> {\n    const pwd = this.password;\n    this.password = '';\n    this.messageService.startSpinner('Signing operation...');\n    let keys;\n    try {\n      keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n    } catch {\n      this.messageService.stopSpinner();\n    }\n    if (this.walletService.isLedgerWallet()) {\n      this.broadCastLedgerTransaction();\n      this.sendResponse = null;\n    } else {\n      if (keys) {\n        this.pwdValid = '';\n        this.messageService.startSpinner('Sending operation...');\n        this.sendDelegation(keys);\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.wallet instanceof TorusWallet) {\n          this.pwdValid = `Authorization failed`;\n        } else {\n          this.pwdValid = 'Wrong password!';\n        }\n      }\n    }\n  }\n  async ledgerSign(): Promise<void> {\n    const keys = await this.walletService.getKeys('');\n    if (keys) {\n      this.messageService.startSpinner('');\n      this.sendDelegation(keys);\n    }\n  }\n\n  async sendDelegation(keys: KeyPair): Promise<void> {\n    let fee = this.getFee();\n    this.subscriptions.add(\n      this.operationService.delegate(this.activeAccount.address, this.toPkh, Number(fee), keys).subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          console.log(JSON.stringify(ans));\n          if (ans.success === true) {\n            if (ans.payload.opHash) {\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                delegate: this.toPkh,\n                opHash: ans.payload.opHash\n              };\n              this.coordinatorService.boost(this.activeAccount.address, metadata);\n              this.closeModal();\n              this.router.navigate([`/account/${this.activeAccount.address}`]);\n            } else if (this.walletService.isLedgerWallet()) {\n              this.requestLedgerSignature();\n            }\n          } else {\n            console.log('Delegation error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n            this.closeModal();\n          }\n        },\n        (err) => {\n          console.log('Error Message ', JSON.stringify(err));\n          this.ledgerError = 'Failed to create operation';\n        }\n      )\n    );\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      const op = this.sendResponse.payload.unsignedOperation;\n      this.messageService.startSpinner('Waiting for Ledger signature');\n      let signature;\n      try {\n        signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n      if (signature) {\n        const signedOp = op + signature;\n        this.sendResponse.payload.signedOperation = signedOp;\n        this.ledgerError = '';\n      } else {\n        this.ledgerError = 'Failed to sign operation';\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.messageService.startSpinner('Broadcasting operation');\n    this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(\n      (ans: any) => {\n        this.sendResponse = ans;\n        if (ans.success && this.activeAccount.address) {\n          this.operationResponse.emit(ans.payload.opHash);\n          const metadata = {\n            delegate: this.toPkh,\n            opHash: ans.payload.opHash\n          };\n          this.coordinatorService.boost(this.activeAccount.address, metadata);\n          this.closeModal();\n          this.router.navigate([`/account/${this.activeAccount.address}`]);\n        } else {\n          this.messageService.addError(this.sendResponse.payload.msg, 0);\n          this.operationResponse.emit('broadcast_error');\n        }\n        this.closeModal();\n        console.log('ans: ' + JSON.stringify(ans));\n      },\n      (error) => {\n        this.messageService.stopSpinner();\n        this.messageService.addError(error, 0);\n        this.operationResponse.emit('broadcast_error');\n      }\n    );\n  }\n  estimateDefaultFee(): void {\n    this.subscriptions.add(\n      this.operationService.isRevealed(this.activeAccount.pkh).subscribe((revealed: boolean) => {\n        const revealFee = revealed ? 0 : 0.0001;\n        if (this.activeAccount instanceof ImplicitAccount) {\n          this.defaultFee = Number(new Big(revealFee).plus(this.pkhFee));\n        } else if (this.activeAccount instanceof OriginatedAccount) {\n          this.defaultFee = Number(new Big(revealFee).plus(this.ktFee));\n        }\n      })\n    );\n  }\n  getFee(): string {\n    return this.fee !== '' ? this.fee : this.defaultFee.toString();\n  }\n  clearForm(init: boolean = false): void {\n    if (!init && this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n    this.toPkh = '';\n    this.fee = '';\n    this.defaultFee = this.pkhFee;\n    this.password = '';\n    this.pwdValid = '';\n    this.formInvalid = '';\n    this.sendResponse = '';\n    this.ledgerError = '';\n    this.domainPendingLookup = false;\n    this.delegate = null;\n    this.advanced = false;\n  }\n  async invalidInput(): Promise<string> {\n    // if it is a tezos-domain\n    if (this.toPkh && this.toPkh.indexOf('.') > -1) {\n      try {\n        this.domainPendingLookup = true;\n        const { pkh } = await this.tezosDomains.getAddressFromDomain(this.toPkh);\n        if (pkh) {\n          this.toPkh = pkh;\n        } else {\n          this.domainPendingLookup = false;\n          return 'Could not find the domain';\n        }\n      } catch (error) {\n        return error.message;\n      } finally {\n        this.domainPendingLookup = false;\n      }\n    }\n    if (\n      (!this.inputValidationService.address(this.toPkh) && this.toPkh !== '') ||\n      (this.toPkh.length > 1 && this.toPkh.slice(0, 2) !== 'tz') ||\n      this.walletService.wallet.getImplicitAccount(this.toPkh)\n    ) {\n      return 'invalid delegate address';\n    } else if (!this.inputValidationService.fee(this.fee)) {\n      return 'invalid fee';\n    } else {\n      return '';\n    }\n  }\n  // Only Numbers with Decimals\n  keyPressNumbersDecimal(event, input): boolean {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode !== 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n      event.preventDefault();\n      return false;\n    } else if (charCode === 46 && this[input].length === 0) {\n      this[input] = '0' + this[input];\n    }\n    return true;\n  }\n  download(): void {\n    this.exportService.downloadOperationData(this.sendResponse.payload.unsignedOperation, false);\n  }\n\n  closeModalAction(): void {\n    this.operationResponse.emit(null);\n    this.closeModal();\n  }\n\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clearForm();\n    this.ledgerError = '';\n    this.messageService.stopSpinner();\n  }\n\n  round(val): string {\n    return Math.round(Number(val)).toString();\n  }\n\n  toPercent(val): string {\n    return parseFloat((Number(val) * 100).toFixed(2)).toString() + '%';\n  }\n}\n","<div #viewRef class=\"flex-column list\">\n  <a *ngFor=\"let account of list\" class=\"flex-row option\" [class.selected]=\"account?.address === current?.address\"\n    routerLink=\"/account/{{account?.address}}{{postfix}}\" (click)=\"closeModal()\">\n    <div class=\"flex-column left\">\n      <ng-container *ngIf=\"getUsername(account?.address)\">\n        <div class=\"flex-row alias\"><img class=\"logo\" src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span\n            class=\"name\">{{\n            getUsername(account?.address) }}</span><img class=\"copy\" src=\"../../../../assets/img/copy-icon.svg\"\n            (click)=\"this.copy($event, account?.address); false\" /></div>\n        <span class=\"addr\">{{\n          !isMobile ? account?.address : account?.shortAddress() }}</span>\n      </ng-container>\n      <ng-container *ngIf=\"!getUsername(account?.address)\">\n        <div class=\"flex-row\"><span class=\"addr default\">{{\n            !isMobile ? account?.address : account?.shortAddress() }}</span><img class=\"copy\"\n            src=\"../../../../assets/img/copy-icon.svg\" (click)=\"this.copy($event, account?.address); false\" /></div>\n      </ng-container>\n    </div>\n    <div class=\"flex-column balances\">\n      <div class=\"balance-tez\">{{ (getBalance(account) | number: '1.0-6' | removeComma) }} tez</div>\n      <div class=\"balance-fiat\">{{ '$' + (getBalanceFiat(account) | number:'1.2-2' | removeComma)\n        }}</div>\n    </div>\n  </a>\n  <div class=\"flex-row total-balances\">\n    <h3>TOTAL:</h3>\n    <div class=\"flex-column\">\n      <div class=\"balance-tez\">{{ (getTotalBalance() | number: '1.0-6' | removeComma) + ' tez' }}\n      </div>\n      <div class=\"balance-fiat\">{{ '$' + (getTotalFiat() | number:'1.2-2' | removeComma) }}\n      </div>\n    </div>\n  </div>\n</div>","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { TorusWallet } from '../../../../services/wallet/wallet';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { ModalComponent } from '../../modal.component';\nimport { Subscription } from 'rxjs';\nimport { ListComponent } from '../../../ui/generic/list.component';\nimport copy from 'copy-to-clipboard';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport Big from 'big.js';\nimport { RemoveCommaPipe } from '../../../../pipes/remove-comma.pipe';\nimport { filter } from 'rxjs/operators';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-account-list-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['../../../../../scss/components/modals/account-list.scss']\n})\nexport class AccountListBodyComponent extends ListComponent implements OnInit, AfterViewInit, OnDestroy {\n  postfix = '';\n  isMobile = false;\n  @ViewChild('viewRef') viewRef: ElementRef;\n  preSelectedAccount: string;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    public router: Router,\n    public lookupService: LookupService,\n    private walletService: WalletService,\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public removeCommaPipe: RemoveCommaPipe,\n    private subjectService: SubjectService\n  ) {\n    super();\n    this.subscriptions.add(\n      this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n        let accountAddress = r.url.substr(r.url.indexOf('/account/') + 9);\n        this.postfix = !!accountAddress.substring(36) ? accountAddress.substring(36) : '';\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.preSelectedAccount = this.current;\n    }\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(() => {\n        this.list = this.walletService.wallet?.getAccounts();\n      })\n    );\n    this.list = this.walletService.wallet?.getAccounts();\n\n    const e = () => {\n      this.isMobile = !!parseInt(document.documentElement.style.getPropertyValue('--is-mobile'));\n    };\n    window.addEventListener('resize', e);\n    e();\n  }\n\n  ngAfterViewInit(): void {\n    const selRef = this.viewRef.nativeElement.querySelector('.option.selected') as HTMLElement;\n    this.viewRef.nativeElement.scrollTo(0, selRef.offsetTop - 100);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  getUsername(address: string): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      const party = this.lookupService.resolve({ address: address });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n  copy(e, address: string): void {\n    e.stopPropagation();\n    copy(address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(address + ' ' + copyToClipboard, 5);\n  }\n  getBalance(account): number | string {\n    return Big(account?.balanceXTZ ?? 0)\n      .div(1000000)\n      .toFixed();\n  }\n  getBalanceFiat(account): number {\n    return account?.balanceUSD ?? 0;\n  }\n\n  getTotalBalance(): number {\n    return Big(this.walletService.wallet.totalBalanceXTZ ?? 0)\n      .div(1000000)\n      .toFixed();\n  }\n\n  getTotalFiat(): number {\n    return this.walletService.wallet.totalBalanceUSD ?? 0;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LookupService } from '../../../services/lookup/lookup.service';\nimport { ModalComponent } from '../modal.component';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-account-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class AccountListComponent extends ModalComponent implements OnInit {\n  @Input() title;\n  @Input() activeAccount;\n  name = 'account-list';\n\n  constructor(public router: Router, public lookupService: LookupService, public translate: TranslateService, public messageService: MessageService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n}\n","<div [style.display]=\"!isOpen ? 'none' : ''\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">{{ title }}</h1>\n    </div>\n    <app-account-list-body [current]=\"activeAccount\">\n    </app-account-list-body>\n  </div>\n</div>","<div [style.display]=\"!isOpen ? 'none' : ''\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">{{ title }}</h1>\n    </div>\n    <div class=\"flex-column export-mnemonic\">\n      <div *ngIf=\"!!mnemonicPhrase\" class=\"whitebox\" (mouseout)=\"mouseOut($event)\" (touchstart)=\"$event.stopPropagation(); this.hideBlur = true;\"\n        (touchend)=\"checkSelection($event)\" (click)=\"$event.stopPropagation()\" (mouseup)=\"checkSelection($event)\">\n        {{ mnemonicPhrase }}<div *ngIf=\"!hideBlur\" class=\"flex-row seed-blur\"\n          (click)=\"$event.stopPropagation(); this.hideBlur = true;\">\n          <span>CLICK HERE TO REVEAL YOUR SEED WORDS</span>\n        </div>\n      </div>\n      <p *ngIf=\"!!mnemonicPhrase\" class=\"description red\">\n        <span *ngIf=\"isSelectedMnemonic\" style=\"margin: 1rem 0\" class=\"warning red\">\n          WARNING: Copying the seed words to your clipboard can result in sensitive leakage. The clipboard is a shared\n          resource that can be monitored by other web pages or browser extensions.<br />\n        </span>\n      </p>\n      <div *ngIf=\"!mnemonicPhrase\" class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <div class=\"label\">\n          ENTER YOUR PASSWORD TO REVEAL \n        </div>\n        <span [style.visibility]=\"!pwdInvalid ? 'hidden' : ''\" [style.margin]=\"!pwdInvalid ? '0' : ''\"\n        class=\"label danger\">{{ this.pwdInvalid }}</span>\n        <input [(ngModel)]=\"pwd\" autocomplete=\"current-password\" placeholder=\"Password\" class=\"text password\"\n          type=\"password\" (input)=\"this.pwdInvalid = ''\" (change)=\"this.pwdInvalid = ''\" (keydown.enter)='!messageService.spinnerOn ? reveal() : null'>\n        <button class=\"button confirm\" (click)=\"!messageService.spinnerOn ? reveal() : null\">Continue</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { ModalComponent } from '../modal.component';\n\n@Component({\n  selector: 'app-export-mnemonic',\n  templateUrl: './export-mnemonic.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class ExportMnemonicComponent extends ModalComponent implements OnInit {\n  title = 'Reveal Seed Words';\n  name = 'export-mnemonic';\n  mnemonicPhrase = '';\n  ledgerError = '';\n  pwdInvalid = '';\n  pwd = '';\n  hideBlur = false;\n  isSelectedMnemonic = false;\n  constructor(public walletService: WalletService, private messageService: MessageService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  closeModal(): void {\n    this.reset();\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n\n  async reveal(): Promise<void> {\n    try {\n      this.messageService.startSpinner();\n      this.mnemonicPhrase = await this.walletService.revealMnemonicPhrase(this.pwd);\n      this.pwdInvalid = this.mnemonicPhrase === '' ? 'INVALID PASSWORD' : '';\n      this.messageService.stopSpinner();\n    } catch {\n      this.pwdInvalid = this.mnemonicPhrase === '' ? 'INVALID PASSWORD' : '';\n    }\n  }\n\n  mouseOut(e): void {\n    e.stopPropagation();\n    this.hideBlur = false;\n    window.getSelection()?.removeAllRanges();\n  }\n  checkSelection(ev): void {\n    ev.stopPropagation();\n    if (this.isTextSelected()) {\n      this.isSelectedMnemonic = true;\n    }\n  }\n  private isTextSelected(): boolean {\n    let selection: Selection;\n    if (window.getSelection) {\n      selection = window.getSelection();\n    } else if (document.getSelection) {\n      selection = document.getSelection();\n    } else return false;\n    return !selection?.isCollapsed;\n  }\n  reset(): void {\n    this.mnemonicPhrase = '';\n    this.ledgerError = '';\n    this.pwdInvalid = '';\n    this.pwd = '';\n    this.hideBlur = false;\n    this.isSelectedMnemonic = false;\n  }\n}\n","<div class=\"flex-row dropdown session-select\" [class.expanded]=\"isOpen\" [id]=\"ecmpId\">\n  <div class=\"flex-row currentAddress\" (click)=\"toggleDropdown()\"><img\n      *ngIf=\"!!getUsername(selection?.address)\" class=\"logo\" src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span\n      class=\"address\">{{\n      getUsername(selection?.address) || \"&nbsp;&nbsp;&nbsp;&nbsp;\" + selection?.address }}</span><img\n      *ngIf=\"['', 'domain'].includes(getVerifier())\" class=\"button icon-db\"\n      src=\"../../../../assets/img/down-arrow.svg\" />\n  </div>\n  <div class=\"flex-column dropdown-content\">\n    <ng-container *ngFor=\"let account of options\">\n      <div class=\"option\" [class.selected]=\"account?.address === current?.address\"\n        (click)=\"selection = account; toggleDropdown()\">\n        <ng-container *ngIf=\"getUsername(account?.address)\">\n          <div class=\"flex-row alias\"><img class=\"logo\"\n              src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span>{{\n              getUsername(account?.address) }}</span></div>\n          <br /><span>{{\n            account?.address }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"!getUsername(account?.address)\">{{ account?.address }}</ng-container>\n      </div>\n    </ng-container>\n  </div>\n</div>","import { Component, OnChanges, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { PermissionRequestDropdownComponent } from '../permission-request/permission-request.component';\n\n@Component({\n  selector: 'app-ui-dropdown-session-select',\n  templateUrl: './session-select.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/account-dropdown.component.scss']\n})\nexport class SessionSelectDropdownComponent extends PermissionRequestDropdownComponent implements OnInit, OnChanges {\n  constructor(public router: Router, public lookupService: LookupService, walletService: WalletService) {\n    super(router, lookupService, walletService);\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"close()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Change Session Account</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column session-select\">\n      <app-ui-dropdown-session-select [options]=\"accounts\" [current]=\"selectedAccount\"\n        (dropdownResponse)=\"selectedAccount = $event\" style=\"width: 100%;align-self: center;\">\n      </app-ui-dropdown-session-select>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <button class=\"blue confirm\" (click)=\"changeAddress()\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Account } from '../../../services/wallet/wallet';\nimport { ModalComponent } from '../modal.component';\nimport { WalletConnectService } from '../../../services/wallet-connect/wallet-connect.service';\n\n@Component({\n  selector: 'app-session-select',\n  templateUrl: './session-select.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class SessionSelectComponent extends ModalComponent implements OnInit, OnDestroy {\n  preSelectedAccountAddress: string;\n  selectedAccount: Account;\n  accounts: Account[];\n  topic: string;\n  private subscriptions: Subscription = new Subscription();\n  name = 'session-select';\n  constructor(public walletService: WalletService, private subjectService: SubjectService, private walletConnectService: WalletConnectService) {\n    super();\n  }\n  open(data: { topic: string; preSelectedAccountAddress: string }): void {\n    this.topic = data.topic;\n    this.preSelectedAccountAddress = data.preSelectedAccountAddress;\n    this.accounts = this.walletService.wallet?.getImplicitAccounts();\n    this.selectedAccount = this.accounts.find((acc) => acc.address === this.preSelectedAccountAddress);\n    super.open();\n  }\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(async () => {\n        this.accounts = this.walletService.wallet?.getImplicitAccounts();\n      })\n    );\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  changeAddress(): void {\n    this.walletConnectService.updateSession(this.topic, this.selectedAccount.pkh);\n    this.close();\n  }\n}\n","import { Component, OnDestroy, OnInit, HostListener } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\nimport { WalletClient, BeaconMessageType, PermissionScope, PermissionResponseInput, OperationResponseInput } from '@airgap/beacon-sdk';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { Account } from '../../../services/wallet/wallet';\nimport { BeaconService } from '../../../services/beacon/beacon.service';\nimport { DeeplinkService } from '../../../services/deeplink/deeplink.service';\nimport { assertMichelsonData } from '@taquito/michel-codec';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\nimport { ExternalRequest } from '../../../interfaces';\nimport { WalletConnectService } from '../../../services/wallet-connect/wallet-connect.service';\n\n@Component({\n  selector: 'app-uri-handler',\n  templateUrl: './uri-handler.component.html'\n})\nexport class UriHandlerComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public messageService: MessageService,\n    public walletService: WalletService,\n    private beaconService: BeaconService,\n    private deeplinkService: DeeplinkService,\n    private inputValidationService: InputValidationService,\n    private subjectService: SubjectService,\n    private walletConnectService: WalletConnectService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.activeAccount = activeAccount;\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.wc2.subscribe((m) => {\n        this.handleBeaconMessage(m);\n      })\n    );\n  }\n  permissionRequest: PermissionResponseInput = null;\n  externalRequest: ExternalRequest = null;\n  signRequest: any = null;\n  activeAccount: Account;\n  selectedAccount: Account;\n  @HostListener('window:focus', ['$event'])\n  onFocus(event: FocusEvent): void {\n    this.changeFavicon();\n  }\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.init();\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  async init() {\n    let pairingString = this.deeplinkService.popPairingJson();\n    if (pairingString) {\n      console.log(pairingString);\n      if (pairingString.startsWith('wc')) {\n        this.walletConnectService.pair(pairingString);\n        pairingString = '';\n      } else {\n        this.beaconService.preNotifyPairing(pairingString);\n      }\n    }\n    window.addEventListener('storage', (e) => {\n      this.handleStorageEvent(e);\n    });\n    await this.connectApp().catch((error) => console.error('connect error', error));\n    if (pairingString) {\n      await this.beaconService.client.isConnected;\n      this.beaconService.addPeer(pairingString);\n    }\n  }\n  changeFavicon(active: boolean = false): void {\n    if (active && document.hasFocus()) {\n      active = false;\n    }\n    const src: string = active ? 'favicon-attention.ico' : 'favicon.ico';\n    document.getElementById('favicon').setAttribute('href', src);\n  }\n  /* https://github.com/airgap-it/beacon-sdk/blob/master/src/clients/wallet-client/WalletClient.ts */\n  connectApp = async (): Promise<void> => {\n    if (!this.beaconService.client) {\n      this.beaconService.client = new WalletClient({\n        name: 'Kukai Wallet'\n      });\n    }\n    await this.beaconService.client.init(); // Establish P2P connection\n    this.beaconService.client\n      .connect(async (message: any) => {\n        this.handleBeaconMessage(message);\n      })\n      .catch((error) => console.error('connect error', error));\n  };\n  async handleBeaconMessage(message: any) {\n    console.log('### beacon message', message);\n    console.log(JSON.stringify(message));\n    if (message.type !== BeaconMessageType.SignPayloadRequest && message.network.type !== CONSTANTS.NETWORK) {\n      console.warn(`Rejecting Beacon message because of network. Expected ${CONSTANTS.NETWORK} instead of ${message.network.type}`);\n      await this.beaconService.rejectOnNetwork(message);\n    } else if (!this.isBlocked()) {\n      switch (message.type) {\n        case BeaconMessageType.PermissionRequest:\n          await this.handlePermissionRequest(message);\n          break;\n        case BeaconMessageType.OperationRequest:\n          if (await this.isSupportedOperationRequest(message)) {\n            this.externalRequest = { operationRequest: message, selectedAccount: this.selectedAccount };\n            this.changeFavicon(true);\n          } else if (message?.version === 0) {\n            console.error('Invalid request');\n          }\n          break;\n        case BeaconMessageType.SignPayloadRequest:\n          if (await this.isSupportedSignPayload(message)) {\n            this.signRequest = message;\n            this.changeFavicon(true);\n          }\n          break;\n        default:\n          await this.beaconService.rejectOnUnknown(message);\n          console.warn('Unknown message type', message);\n      }\n    } else {\n      console.warn('Blocked by other Beacon/Wc2 request');\n    }\n  }\n  private isBlocked() {\n    return this.permissionRequest || this.externalRequest || this.signRequest;\n  }\n  async handlePermissionRequest(message: any): Promise<void> {\n    console.log('## permission request');\n    if (message.version) {\n      message.scopes = message.scopes.filter((scope: PermissionScope) => [PermissionScope.OPERATION_REQUEST, PermissionScope.SIGN].includes(scope));\n    }\n    if (typeof message.scopes === 'object' || message.scopes.length) {\n      if (this.walletService.wallet) {\n        this.permissionRequest = message;\n        this.changeFavicon(true);\n      } else {\n        console.warn('No wallet found');\n        await this.beaconService.rejectOnSourceAddress(message);\n      }\n    } else {\n      console.warn('No valid scope');\n    }\n  }\n  async isSupportedOperationRequest(message: any): Promise<boolean> {\n    try {\n      if (!this.walletService.wallet) {\n        console.log('No wallet found');\n        await this.beaconService.rejectOnUnknown(message);\n        return false;\n      } else if (!this.walletService.wallet.getImplicitAccount(message.sourceAddress)) {\n        console.warn('Source address not recogized');\n        await this.beaconService.rejectOnSourceAddress(message);\n        return false;\n      } else if (message.operationDetails.length > 1) {\n        for (const op of message.operationDetails) {\n          if (op.kind !== 'transaction') {\n            console.warn('Only transaction batches supported');\n            await this.beaconService.rejectOnTooManyOps(message);\n            return false;\n          }\n        }\n      }\n      if (message.operationDetails[0].kind === 'transaction') {\n        for (let i = 0; i < message.operationDetails.length; i++) {\n          if (\n            message.operationDetails[i].destination &&\n            message.operationDetails[i].parameters &&\n            this.walletService.wallet.getAccount(message.operationDetails[i].destination)\n          ) {\n            console.warn('Invocation of user controlled contract is disabled');\n            await this.beaconService.rejectOnPermission(message);\n            return false;\n          } else if (!message.operationDetails[i].destination || !message.operationDetails[i].amount) {\n            console.warn('Missing destination or amount');\n            await this.beaconService.rejectOnUnknown(message);\n            return false;\n          } else if (this.invalidParameters(message.operationDetails[i].parameters)) {\n            await this.beaconService.rejectOnParameters(message);\n            return false;\n          } else if (this.invalidOptionals(message.operationDetails[i])) {\n            await this.beaconService.rejectOnParameters(message);\n            return false;\n          }\n        }\n      } else if (message.operationDetails[0].kind === 'delegation') {\n        if (!message.operationDetails[0].delegate) {\n          console.warn('Invalid delegate');\n          await this.beaconService.rejectOnUnknown(message);\n          return false;\n        }\n      } else if (message.operationDetails[0].kind === 'origination') {\n        if (!message.operationDetails[0].script) {\n          console.warn('No script found');\n          await this.beaconService.rejectOnParameters(message);\n          return false;\n        } else if (this.invalidOptionals(message.operationDetails[0])) {\n          await this.beaconService.rejectOnParameters(message);\n          return false;\n        }\n      } else {\n        console.warn('Unsupported operation kind');\n        await this.beaconService.rejectOnUnknown(message);\n        return false;\n      }\n      this.selectedAccount = this.walletService.wallet.getImplicitAccount(message.sourceAddress);\n      return true;\n    } catch (e) {\n      if (e?.message === 'No matching request found!' && message.version === 0) {\n        console.log('wc2');\n        this.walletConnectService.wcResponse(message, '', false);\n      } else {\n        throw e;\n      }\n    }\n    return false;\n  }\n  private invalidOptionals(op: any): boolean {\n    if (typeof op.gas_limit === 'number') {\n      // normalize\n      op.gas_limit = op.gas_limit.toString();\n    }\n    if (typeof op.storage_limit === 'number') {\n      op.storage_limit = op.storage_limit.toString();\n    }\n    if (op.gas_limit && (typeof op.gas_limit !== 'string' || !this.inputValidationService.amount(op.gas_limit, 0))) {\n      return true;\n    } else if (op.storage_limit && (typeof op.storage_limit !== 'string' || !this.inputValidationService.amount(op.storage_limit, 0))) {\n      return true;\n    }\n    return false;\n  }\n  async isSupportedSignPayload(message: any): Promise<Boolean> {\n    try {\n      if (!this.walletService.wallet) {\n        console.log('No wallet found');\n        await this.beaconService.rejectOnUnknown(message);\n        return false;\n      } else if (!this.walletService.wallet.getImplicitAccount(message.sourceAddress)) {\n        console.warn('Source address not recogized');\n        await this.beaconService.rejectOnSourceAddress(message);\n        return false;\n      }\n      if (message.payload.slice(0, 2) === '0x') {\n        message.payload = message.payload.slice(2);\n      }\n      message.payload = message.payload.toLowerCase();\n      const hexString = message.payload;\n      console.log('hex', hexString);\n      if ((message.signingType !== 'raw' && message.signingType !== 'micheline') || !this.inputValidationService.hexString(hexString)) {\n        console.warn('Invalid sign payload');\n        await this.beaconService.rejectOnUnknown(message);\n        return false;\n      } else if (!['05', '80'].includes(hexString.slice(0, 2))) {\n        console.warn('Unsupported prefix:' + hexString.slice(0, 2));\n        await this.beaconService.rejectOnUnknown(message);\n        return false;\n      }\n      if (hexString.slice(0, 2) === '05' && !this.inputValidationService.isMichelineExpr(hexString)) {\n        await this.beaconService.rejectOnUnknown(message);\n        return false;\n      }\n      this.selectedAccount = this.walletService.wallet.getImplicitAccount(message.sourceAddress);\n      return true;\n    } catch (e) {\n      if (e?.message === 'No matching request found!' && message.version === 0) {\n        console.log('wc2');\n        this.walletConnectService.wcResponse(message, '', false);\n      } else {\n        throw e;\n      }\n    }\n    return false;\n  }\n  invalidParameters(parameters: any): boolean {\n    try {\n      if (parameters) {\n        if (!parameters.value || !parameters.entrypoint) {\n          throw new Error('entrypoint and value expected');\n        }\n        assertMichelsonData(parameters.value);\n      }\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n  /* operation request handling */\n  async operationResponse(opHash: any): Promise<void> {\n    if (opHash?.error) {\n      opHash = opHash.error;\n    }\n    if (!this.externalRequest) {\n      return;\n    }\n    console.log('hash', opHash);\n    console.log('externalRequest', this.externalRequest);\n    if (this.externalRequest.operationRequest.version) {\n      if (!opHash) {\n        await this.beaconService.rejectOnUserAbort(this.externalRequest.operationRequest);\n      } else if (opHash === 'broadcast_error') {\n        await this.beaconService.rejectOnBroadcastError(this.externalRequest.operationRequest);\n      } else if (opHash === 'invalid_parameters') {\n        await this.beaconService.rejectOnParameters(this.externalRequest.operationRequest);\n      } else if (opHash === 'parameters_error') {\n        await this.beaconService.rejectOnParameters(this.externalRequest.operationRequest);\n      } else if (opHash === 'unknown_error') {\n        await this.beaconService.rejectOnUnknown(this.externalRequest.operationRequest);\n      } else if (opHash !== 'silent') {\n        const response: OperationResponseInput = {\n          type: BeaconMessageType.OperationResponse,\n          transactionHash: opHash,\n          id: this.externalRequest.operationRequest.id\n        };\n        await this.beaconService.client.respond(response);\n      }\n    } else if (this.externalRequest.operationRequest.version === 0) {\n      if (opHash?.length > 50) {\n        this.walletConnectService.wcResponse(this.externalRequest.operationRequest, opHash, true);\n      } else if (opHash !== 'silent') {\n        this.walletConnectService.wcResponse(this.externalRequest.operationRequest, opHash, false);\n      }\n    }\n    if (opHash !== 'silent') {\n      this.beaconService.responseSync();\n    }\n    this.externalRequest = null;\n  }\n  /* permission handling */\n  async permissionResponse(publicKey: string): Promise<void> {\n    if (this.permissionRequest.version) {\n      // Beacon\n      if (!publicKey) {\n        this.beaconService.rejectOnUserAbort(this.permissionRequest);\n      } else if (publicKey !== 'silent') {\n        this.beaconService.approvePermissionRequest(this.permissionRequest, publicKey).then(() => {\n          this.beaconService.syncBeaconState();\n        });\n      }\n    } else {\n      // Wallet Connect 2\n      if (!publicKey) {\n        this.walletConnectService.rejectPairing(this.permissionRequest);\n      } else if (publicKey !== 'silent') {\n        this.walletConnectService.approvePairing(this.permissionRequest, publicKey);\n      }\n    }\n    this.beaconService.responseSync();\n    this.permissionRequest = null;\n  }\n  /* sign payload handling */\n  async signResponse(signature: string): Promise<void> {\n    if (this.signRequest.version) {\n      if (!signature) {\n        await this.beaconService.rejectOnUserAbort(this.signRequest);\n      } else if (signature !== 'silent') {\n        await this.beaconService.approveSignPayloadRequest(this.signRequest, signature);\n      }\n    } else if (this.signRequest.version === 0) {\n      if (signature) {\n        this.walletConnectService.wcResponse(this.signRequest, signature, true);\n      } else {\n        this.walletConnectService.wcResponse(this.signRequest, signature, false);\n      }\n    }\n    this.beaconService.responseSync();\n    console.log(signature);\n    this.signRequest = null;\n  }\n  private async handleStorageEvent(ev: StorageEvent): Promise<void> {\n    switch (ev.key) {\n      case 'beacon:communication-peers-wallet':\n        const peers = JSON.parse(ev.newValue);\n        const senderIds = (await this.beaconService.client.getAppMetadataList()).map((app) => {\n          return app.senderId;\n        });\n        const newPeers = peers.length - senderIds.length;\n        if (newPeers > 0) {\n          const newPeer = peers ? peers.pop() : null;\n          if (newPeer && !senderIds.includes(newPeer.senderId)) {\n            const { senderId, ...peer } = newPeer;\n            await this.beaconService.addPeer(JSON.stringify(peer), false);\n          }\n        } else {\n          this.beaconService.syncBeaconState();\n        }\n        break;\n      case 'beacon:request-response':\n        if (ev.newValue) {\n          this.subjectService.beaconResponse.next(true);\n          this.beaconService.syncBeaconState();\n          this.changeFavicon();\n        }\n        break;\n    }\n  }\n}\n","<app-send [embedded]=\"false\" (operationResponse)=\"operationResponse($event)\"\n  [externalRequest]=\"externalRequest\"></app-send>\n<app-delegate (operationResponse)=\"operationResponse($event)\" [beaconMode]=true [externalRequest]=externalRequest>\n</app-delegate>\n<app-originate (operationResponse)=\"operationResponse($event)\" [externalRequest]=externalRequest></app-originate>\n<app-permission-request (permissionResponse)=\"permissionResponse($event)\" [permissionRequest]=\"permissionRequest\"\n  [activeAccount]=activeAccount>\n</app-permission-request>\n<app-sign-expr (signResponse)=\"signResponse($event)\" [signRequest]=\"signRequest\" [activeAccount]=selectedAccount>\n</app-sign-expr>\n<app-account-list [title]=\"'Accounts'\" [activeAccount]=\"activeAccount\"></app-account-list>\n<app-new-implicit></app-new-implicit>\n<app-receive></app-receive>\n<app-export-mnemonic></app-export-mnemonic>\n<app-session-select></app-session-select>","<div *ngIf=\"provider\" [class.transak]=\"provider === BuyProviderType.Transak\" [class.moonpay]=\"provider === BuyProviderType.MoonPay\">\n  <div class=\"top\">\n    <a>\n      <button class=\"back secondary\" (click)=\"close()\">\n        <img src=\"../../../../../assets/img/left-arrow.svg\">Back</button>\n    </a>\n    <p>Buy XTZ (tez) with {{ BuyProviderType[provider] }}</p>\n  </div>\n  <div class=\"main\">\n    <ng-container *ngIf=\"url\">\n      <iframe allow=\"accelerometer; autoplay; camera; gyroscope; payment\" frameborder=\"0\" height=\"100%\" [src]=\"this.url\"\n        width=\"100%\" (load)=\"iframeLoaded()\" (error)=\"iframeError()\">\n        <p>Your browser does not support iframes.</p>\n      </iframe>\n    </ng-container>\n  </div>\n</div>\n<img *ngIf=\"isLoading\" class=\"loading\" src=\"../../../../../../assets/img/loader.svg\">","import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { SubjectService, BuyProvider } from '../../../../../services/subject/subject.service';\nimport { generateOnRampURL } from '@coinbase/cbpay-js';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { Subscription } from 'rxjs';\nimport { CONSTANTS, environment } from '../../../../../../environments/environment';\n@Component({\n  selector: 'app-buy',\n  templateUrl: `./buy.component.html`,\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/buy/buy.component.scss']\n})\nexport class BuyComponent implements OnInit, OnDestroy {\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.mobile = window.innerWidth < 575;\n  }\n  public readonly BuyProviderType = BuyProvider;\n  readonly dev: boolean = !(CONSTANTS.MAINNET && environment.production);\n  readonly baseUrl: string = `https://buy${this.dev ? '-staging' : ''}.moonpay.com`;\n  mobile = false;\n  url: SafeUrl;\n  account: Account;\n  provider: BuyProvider;\n  isLoading: boolean = false;\n  private subscriptions: Subscription = new Subscription();\n  constructor(private sanitizer: DomSanitizer, private subjectService: SubjectService) {}\n\n  ngOnInit(): void {\n    this.onResize();\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((a) => {\n        this.account = a;\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.buy.subscribe((o) => {\n        this.provider = o;\n        if (Number.isInteger(o)) {\n          this.open();\n        } else {\n          this.close();\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  private async open(): Promise<void> {\n    this.isLoading = true;\n    const address: string = this.account ? this.account.address : null;\n    if (!address?.startsWith('tz')) {\n      return;\n    }\n    switch (this.provider) {\n      case BuyProvider.Coinbase:\n        this.isLoading = false;\n        const newWindow = window.open(\n          generateOnRampURL({\n            appId: 'aa41d510-15f9-4426-87bd-3a506b6e22c0',\n            destinationWallets: [{ address, blockchains: ['tezos'] }]\n          }),\n          'Coinbase Pay',\n          'height=600,width=400'\n        );\n        newWindow.opener = null;\n        break;\n      case BuyProvider.Transak:\n        this.isLoading = false;\n        let walletAddressesData = {\n          coins: {\n            XTZ: { address }\n          }\n        };\n        const apiKey = CONSTANTS.MAINNET ? 'f1336570-699b-4181-9bd1-cdd57206981f' : '3b0e81f3-37dc-41f3-9837-bd8d2c350313';\n        this.url = this.sanitizer.bypassSecurityTrustResourceUrl(\n          `https://${!CONSTANTS.MAINNET ? 'staging-' : ''}global.transak.com?apiKey=${apiKey}&cryptoCurrencyCode=XTZ&walletAddressesData=${JSON.stringify(\n            walletAddressesData\n          )}&disableWalletAddressForm=true}`\n        );\n        break;\n      case BuyProvider.MoonPay:\n        this.url = await this.signUrl(address);\n        break;\n    }\n  }\n  private close(): void {\n    this.url = null;\n    this.provider = undefined;\n    this.isLoading = false;\n  }\n  private async signUrl(address: string): Promise<SafeUrl> {\n    if (address?.startsWith('tz')) {\n      const query: string = `?apiKey=${\n        this.dev ? 'pk_test_M23P0Zc5SvBORSFV63sfWKi7n5QbGZR' : 'pk_live_rP9HlBRO54nY4QKLxc6ONl4Prrm6vymK'\n      }&colorCode=%237178E3&currencyCode=xtz&walletAddress=${encodeURIComponent(address)}`;\n      const sig = await this.post({ dev: this.dev, url: query });\n      if (sig) {\n        const url = this.sanitizer.bypassSecurityTrustResourceUrl(`${this.baseUrl}${query}&signature=${encodeURIComponent(sig)}`);\n        return url;\n      }\n    }\n    return null;\n  }\n  private async post(data: any = {}): Promise<string> {\n    return fetch('https://utils.kukai.network/moonpay/sign', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(async (d) => {\n        return d.text();\n      })\n      .catch((e) => {\n        return '';\n      });\n  }\n  iframeLoaded() {\n    this.isLoading = false;\n  }\n  iframeError() {\n    this.isLoading = false;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <div class=\"flex-column text\">\n        <h1 class=\"title\">{{ title }}</h1>\n        <h2 class=\"secondary\">Choose a provider</h2>\n      </div>\n    </div>\n    <div class=\"flex-column buy\">\n      <div class=\"flex-row option\" (click)=\"buyTez(BuyProviderType.Coinbase)\">\n        <img src=\"assets/img/coinbase.png\" />\n        <div class=\"text\">\n          <h3>Coinbase</h3>\n          <h4>Transfer from Coinbase</h4>\n        </div>\n      </div>\n      <div class=\"flex-row option\" (click)=\"buyTez(BuyProviderType.Transak)\">\n        <img src=\"assets/img/transak.png\" />\n        <div class=\"text\">\n          <h3>Transak</h3>\n          <h4>Bank transfers &amp; local payment methods in 120+ countries</h4>\n        </div>\n      </div>\n      <div class=\"flex-row option\" (click)=\"buyTez(BuyProviderType.MoonPay)\">\n        <img src=\"assets/img/moonpay.svg\" />\n        <div class=\"text\">\n          <h3>Moonpay</h3>\n          <h4>Cards &amp; bank transfers</h4>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ModalComponent } from '../modal.component';\nimport { SubjectService, BuyProvider } from '../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-buy-modal',\n  templateUrl: './buy.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class BuyModalComponent extends ModalComponent implements OnInit {\n  title = 'Get Tez (XTZ)';\n  name = 'buy';\n  address = '';\n  onrampInstance = null;\n  public readonly BuyProviderType = BuyProvider;\n  constructor(private subjectService: SubjectService) {\n    super();\n  }\n\n  ngOnInit() {}\n  open() {\n    super.open();\n  }\n\n  closeModal(): void {\n    super.close();\n  }\n  buyTez(provider: BuyProvider) {\n    this.subjectService.buy.next(provider);\n    this.closeModal();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logged-in',\n  templateUrl: './logged-in.component.html'\n})\nexport class LoggedInComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-uri-handler></app-uri-handler>\n<router-outlet></router-outlet>\n<app-buy></app-buy>\n<app-buy-modal></app-buy-modal>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StartComponent } from './components/views/start/start.component';\nimport { NewWalletComponent } from './components/views/start/login-types/new-wallet/new-wallet.component';\nimport { MnemonicImportComponent } from './components/views/start/login-types/mnemonic-import/mnemonic-import.component';\nimport { ConnectLedgerComponent } from './components/views/start/login-types/connect-ledger/connect-ledger.component';\nimport { P404Component } from './components/views/error/404.component';\nimport { P500Component } from './components/views/error/500.component';\nimport { PrivacyPolicyComponent } from './components/views/start/agreement/privacy-policy/privacy-policy.component';\nimport { TermsOfUseComponent } from './components/views/start/agreement/terms-of-use/terms-of-use.component';\nimport { EmbeddedComponent } from './components/views/embedded/embedded.component';\nimport { LoggedInComponent } from './components/views/logged-in/logged-in.component';\nimport { ActivateComponent } from './components/views/start/activate/activate.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: '', component: StartComponent },\n      { path: 'new-wallet', component: NewWalletComponent },\n      { path: 'import', component: MnemonicImportComponent },\n      { path: 'connect-ledger', component: ConnectLedgerComponent },\n      {\n        path: 'account',\n        component: LoggedInComponent,\n        loadChildren: () => import(`./components/views/logged-in/logged-in.module`).then((module) => module.LoggedInModule)\n      },\n      { path: 'activate', component: ActivateComponent },\n      { path: 'serviceworker', component: TermsOfUseComponent },\n      { path: 'embedded', component: EmbeddedComponent }\n    ]\n  },\n  { path: 'privacy-policy', component: PrivacyPolicyComponent },\n  { path: 'terms-of-use', component: TermsOfUseComponent },\n  { path: 'wc', redirectTo: '' },\n  { path: '404', component: P404Component, data: { title: 'Page 404' } },\n  { path: '500', component: P500Component, data: { title: 'Page 500' } },\n  { path: '**', redirectTo: '404' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","<div [style.display]=\"!isOpen ? 'none' : ''\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"close()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <h1 class=\"title\">{{ title }}</h1>\n    </div>\n    <div class=\"flex-column info\">\n      <div class=\"message\">\n        {{ message }}\n      </div>\n      <div *ngIf=\"action\" class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <button class=\"button confirm\" (click)=\"proceed()\">{{ action }}</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalComponent } from '../modal.component';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class InfoComponent extends ModalComponent implements OnInit {\n  action = '';\n  message = '';\n  href = '';\n  title = 'Info';\n  name = 'info';\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  open(data: any): void {\n    this.action = data?.action;\n    this.message = data?.message;\n    this.href = data?.href;\n    this.title = data?.title || this.title;\n    super.open();\n  }\n\n  closeModal(): void {\n    super.close();\n  }\n  proceed(): void {\n    if (!!this.href) {\n      const newTab = window.open(this.href, '_blank');\n      newTab.focus();\n      newTab.opener = null;\n    }\n    this.closeModal();\n  }\n}\n","<ng-container *ngIf=\"!message?.timeout && message?.msg\">\n  <span *ngIf=\"!message?.email && !message?.username && !message?.twitterId && message?.msg\">{{ message.msg }}</span>\n  <span *ngIf=\"message?.email || message?.username || message?.twitterId\">Click <a target=\"_blank\"\n      href=\"{{ notifyFormat(message) }}\">here to notify</a> {{ getAlias(message) }} via {{ message.msg }}: <b>{{\n      message.amount }}</b> sent</span>\n  <svg version=\"1.2\" baseProfile=\"tiny-ps\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14 14\" width=\"14\" height=\"14\"\n    class=\"flex-row button close\" (click)=\"removeMessage(index)\">\n    <title>Popups</title>\n    <g id=\"Popups\">\n      <g id=\"Confirmation TEZ\">\n        <g id=\"Close Button\">\n          <path id=\"Rectangle 13\" class=\"shp0\"\n            d=\"M13.46 0.54C14.18 1.25 14.18 2.41 13.46 3.12L3.12 13.46C2.41 14.18 1.25 14.18 0.54 13.46C-0.18 12.75 -0.18 11.59 0.54 10.88L10.88 0.54C11.59 -0.18 12.75 -0.18 13.46 0.54ZM3.12 0.54L13.46 10.88C14.18 11.59 14.18 12.75 13.46 13.46C12.75 14.18 11.59 14.18 10.88 13.46L0.54 3.12C-0.18 2.41 -0.18 1.25 0.54 0.54C1.25 -0.18 2.41 -0.18 3.12 0.54Z\" />\n        </g>\n      </g>\n    </g>\n  </svg>\n</ng-container>\n<ng-container *ngIf=\"message?.timeout && message?.msg\">\n  <span *ngIf=\"message?.msg\">{{ message.msg }}</span><img *ngIf=\"message?.loader\" class=\"loader\"\n    src=\"../../../../assets/img/wait.svg\">\n</ng-container>","import { Component, Input, OnInit } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['../../../../scss/components/modals/alert/alert.component.scss']\n})\nexport class AlertComponent implements OnInit {\n  @Input() public message;\n  @Input() index;\n\n  constructor(public messageService: MessageService) {}\n  readonly subject = 'Sent you Tezos tokens';\n  ngOnInit(): void {\n    if (this.message?.timeout) {\n      setTimeout(() => {\n        this.removeMessage(this.index);\n        this.message = null;\n      }, this.message?.timeout);\n    }\n  }\n\n  removeMessage(index: number): void {\n    this.messageService.messages.splice(index, 1);\n  }\n  getHostName(): string {\n    return location.hostname;\n  }\n  notifyFormat(message: any): string | Error {\n    if (message.email) {\n      return this.mailtoFormat(message);\n    } else if (message.username) {\n      return this.redditPmFormat(message);\n    } else if (message.twitterId) {\n      return this.twitterPmFormat(message);\n    } else {\n      throw new Error('Invalid message');\n    }\n  }\n  mailtoFormat(message: any): string {\n    const subject = encodeURI(this.subject);\n    const body = this.encodedBody(message.amount, 'Google', `https://${this.getHostName()}\\n\\n`);\n    return `mailto:${message.email}?subject=${subject}&body=${body}`;\n  }\n  redditPmFormat(message: any): string {\n    // https://www.reddit.com/message/compose?to=USERNAME&subject=SUBJECT&message=MESSAGE\n    const subject = encodeURI(this.subject);\n    const body = this.encodedBody(`${message.amount}`, 'Reddit', `[kukai.app](https://${this.getHostName()})`);\n    return `https://www.reddit.com/message/compose?to=${message.username}&subject=${subject}&message=${body}`;\n  }\n  twitterPmFormat(message: any): string {\n    // https://twitter.com/messages/compose?recipient_id=USER_ID&text=MESSAGE\n    const body = this.encodedBody(message.amount, 'Twitter', `https://${this.getHostName()}`);\n    return `https://twitter.com/messages/compose?recipient_id=${message.twitterId}&text=${body}`;\n  }\n  encodedBody(amount: string, accountType: string, url: string): string {\n    const s = accountType === 'Reddit' ? '  ' : '';\n    const b = accountType === 'Reddit' ? '**' : '';\n    const t = accountType === 'Twitter' ? 'Tezos ' : '';\n    return encodeURI(\n      `Hi,${s}\\nI sent you ${b}${amount}${b} using the Kukai wallet.\\n\\nYou can access your ${t}wallet with your ${accountType} account at: ${url}`\n    );\n  }\n  getAlias(message: any): string {\n    return message.email ? message.email : message.username ? message.username : message.handler ? message.handler : 'recipient';\n  }\n}\n","<div class='msg-container'>\n  <div *ngFor=\"let message of messageService.messages ; let i = index\">\n    <app-alert [message]=\"message\" [index]=\"i\" class=\"flex-row alert\" [class]=\"'alert alert-'+message.type\">\n    </app-alert>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TorusService } from '../../../services/torus/torus.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['../../../../scss/components/ui/messages/messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n  constructor(public messageService: MessageService, public torusService: TorusService) {}\n  ngOnInit(): void {}\n}\n","<div *ngIf=\"router.url.indexOf('/account/') > -1\" class=\"flex-row dropdown\" [class.expanded]=\"isOpen\"\n  [style.cursor]=\"['', 'domain'].includes(getVerifier()) ? '' : 'text'\" [id]=\"ecmpId\">\n  <div class=\"flex-row currentAddress\" (click)=\"['', 'domain'].includes(getVerifier()) ? toggleDropdown() : ''\"><img\n      *ngIf=\"!!getUsername(current?.address)\" class=\"logo\"\n      src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span class=\"address\">{{\n      getUsername(current?.address) || \"&nbsp;&nbsp;&nbsp;&nbsp;\" + current?.shortAddress() }}</span><img\n      *ngIf=\"['', 'domain'].includes(getVerifier())\" class=\"button icon-db\"\n      src=\"../../../../assets/img/down-arrow.svg\" />\n  </div>\n  <div class=\"flex-column dropdown-content\">\n    <div class=\"flex-column body\">\n      <ng-container *ngFor=\"let account of list; trackBy: trackAccount\">\n        <a class=\"option\" routerLink=\"/account/{{account?.address}}{{postfix}}\"\n          [class.selected]=\"account?.address === current?.address\"\n          [style.padding]=\"!getUsername(current?.address) ? '0.75rem 1.125rem 0.75rem calc(2.5rem - var(--border-width))' : ''\"\n          (click)=\"toggleDropdown()\">\n          <ng-container *ngIf=\"getUsername(account?.address)\">\n            <div class=\"flex-row alias\"><img class=\"logo\"\n                src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span>{{\n                getUsername(account?.address) }}</span></div>\n          </ng-container>\n          <ng-container *ngIf=\"!getUsername(account?.address)\">{{ account?.shortAddress() }}</ng-container>\n        </a>\n      </ng-container>\n    </div>\n    <div *ngIf=\"list?.length > 1\" class=\"option show-all\" [style.padding]=\"!getUsername(current?.address) ? '0.75rem 1.125rem 0.75rem calc(2.5rem - var(--border-width))' : ''\" (click)=\"showAll()\">\n      <span>Show All</span>\n    </div>\n  </div>\n</div>","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { TorusWallet } from '../../../../services/wallet/wallet';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { DropdownComponent } from '../dropdown.component';\nimport { ModalComponent } from '../../../modals/modal.component';\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-ui-dropdown-account',\n  templateUrl: './account-dropdown.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/account-dropdown.component.scss']\n})\nexport class AccountDropdownComponent extends DropdownComponent implements OnInit, OnChanges, OnDestroy {\n  postfix = '';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(public router: Router, public lookupService: LookupService, private walletService: WalletService) {\n    super();\n    this.subscriptions.add(\n      this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n        let accountAddress = r.url.substr(r.url.indexOf('/account/') + 9);\n        this.postfix = !!accountAddress.substring(36) ? accountAddress.substring(36) : '';\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    this.list = this.options;\n    let accountAddress = this.router.url.substr(this.router.url.indexOf('/account/') + 9);\n    this.postfix = !!accountAddress.substring(36) ? accountAddress.substring(36) : '';\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options && changes.options.currentValue !== changes.options.previousValue) {\n      this.list = this.options;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  getUsername(address: string): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      const party = this.lookupService.resolve({\n        address: address || this.current?.address\n      });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n  showAll(): void {\n    ModalComponent.currentModel.next({ name: 'account-list', data: null });\n  }\n  trackAccount(index: number, account: any) {\n    return account?.address ? account.address : index;\n  }\n}\n","<div class=\"hamburger-dropdown\" [class.expanded]=\"isOpen\" [id]=\"ecmpId\">\n  <img class=\"button icon-db\" src=\"../../../../assets/img/hamburger.svg\" (click)=\"toggleDropdown()\" />\n  <div *ngIf=\"router.url.indexOf('/account/') === 0\" class=\"flex-column mobile dropdown-content\">\n    <div class=\"flex-row-wrap account-content\">\n      <div class=\"flex-column button\" (click)=\"unlockableService.toggleFeature('theme', 'dark');toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" [src]=\"this.unlockableService?.unlockables?.theme === 'dark' ? 'assets/img/light_mode_blue.svg' : 'assets/img/dark_mode_blue.svg'\" />\n        </div>\n        <span>THEME</span>\n      </div>\n      <div *ngIf=\"router.url.indexOf('/account/') === 0\" class=\"flex-column button\" (click)=\"copy();toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" src=\"../../../../assets/img/copy-blue.svg\" />\n        </div>\n        <span>COPY</span>\n      </div>\n      <div class=\"flex-column button\" (click)=\"receive();toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" src=\"../../../../assets/img/qr-blue.svg\" />\n        </div>\n        <span>QR</span>\n      </div>\n      <div *ngIf=\"walletService.isHdWallet()\" class=\"flex-column button\" (click)=\"newAccount();toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" src=\"../../../../assets/img/add-blue.svg\" />\n        </div>\n        <span>ADD</span>\n      </div>\n    </div>\n    <div class=\"flex-row button delegation\" routerLink=\"/account/{{activeAccount?.address}}/stakers\"\n      (click)=\"toggleDropdown()\">\n      <div *ngIf=\"!activeAccount?.delegate\" class=\"flex-row\">\n        <span class=\"flex-row\">STAKING:</span><span class=\"choose\">NOT\n          STAKING</span>\n      </div>\n      <div *ngIf=\"activeAccount?.delegate\" class=\"flex-row\">\n        <span>STAKING</span>\n        <span class=\"flex-row address\">{{ delegateName\n          }}</span>\n      </div>\n    </div>\n\n    <div class=\"flex-row button\" [routerLink]=\"'/account/' + activeAccount?.address + '/settings'\" (click)=\"toggleDropdown()\">\n      <span>SETTINGS</span><img class=\"icon settings\" src=\"../../../../assets/img/cog.svg\" style=\"width: 2.75rem\" />\n    </div>\n    <div class=\"flex-row button\" (click)=\"logout();toggleDropdown()\">\n      <span>LOGOUT</span><img class=\"icon\" src=\"../../../../assets/img/sign-out-alt.svg\" style=\"width: 2.5rem\" />\n    </div>\n  </div>\n  <div *ngIf=\"router.url.indexOf('/account/') !== 0\" class=\"flex-column mobile dropdown-content\">\n    <div routerLink=\"/import/\" class=\"flex-row button\" (click)=\"toggleDropdown()\">\n      <span>Import Wallet</span>\n    </div>\n    <div routerLink=\"/new-wallet/\" class=\"flex-row button\" (click)=\"toggleDropdown()\">\n      <span>Create New Wallet</span>\n    </div>\n    <div routerLink=\"/connect-ledger/\" class=\"flex-row button\" (click)=\"toggleDropdown()\">\n      <span>Connect Ledger</span>\n    </div>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { Account } from '../../../../services/wallet/wallet';\nimport { DropdownComponent } from '../dropdown.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport copy from 'copy-to-clipboard';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { ModalComponent } from '../../../../components/modals/modal.component';\nimport { take } from 'rxjs/operators';\nimport { UnlockableService } from '../../../../services/unlockable/unlockable.service';\n\n@Component({\n  selector: 'app-ui-mobile-menu',\n  templateUrl: './mobile-menu.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/mobile-menu.component.scss']\n})\nexport class MobileMenuDropdownComponent extends DropdownComponent implements OnInit {\n  @Input() activeAccount: Account;\n  @Input() delegateName;\n  @Input() newAccount;\n  @Input() receive;\n\n  constructor(\n    public router: Router,\n    public walletService: WalletService,\n    public lookupService: LookupService,\n    private messageService: MessageService,\n    private translate: TranslateService,\n    private subjectService: SubjectService,\n    public unlockableService: UnlockableService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  toggleDropdown(): void {\n    if (window.innerHeight < document.body.scrollHeight) {\n      document.body.style.overflow = 'hidden';\n    }\n    this.isOpen = !this.isOpen;\n  }\n  copy(): void {\n    copy(this.activeAccount.address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(this.activeAccount.address + ' ' + copyToClipboard, 5);\n  }\n  openSwap() {\n    this.messageService.startSpinner();\n    ModalComponent.currentModel.next({ name: 'swap-liquidity', data: null });\n  }\n  logout(): void {\n    this.subjectService.logout.next(true);\n    this.messageService.clear();\n    this.walletService.clearWallet();\n    this.lookupService.clear();\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"flex-row top-container desktop\" [class]=\"router.url.indexOf('/account') === 0 ? 'default' : ''\">\n  <a routerLink=\"/\" class=\"flex-row brand-logo\">\n    <img class=\"icon\" src=\"../../../assets/img/header-logo.svg\" />\n  </a>\n  <div *ngIf=\"router.url.indexOf('/account/') === 0\" class=\"flex-row right\">\n    <div class=\"button icon\" (click)=\"unlockableService.toggleFeature('theme', 'dark')\">\n      <img [src]=\"this.unlockableService?.unlockables?.theme === 'dark' ? 'assets/img/light_mode.svg' : 'assets/img/dark_mode.svg'\" />\n      <div class=\"tooltip\">\n        <div class=\"description\">THEME</div>\n      </div>\n    </div>\n    <div class=\"flex-column left\">\n      <app-ui-dropdown-account [options]=\"accounts\" [current]=\"activeAccount\"></app-ui-dropdown-account>\n      <div class=\"delegation\">\n        <div class=\"flex-row outside-container\" *ngIf=\"!beaconMode\">\n          <div class=\"flex-row button\" routerLink=\"/account/{{activeAccount?.address}}/stakers\">\n            <span *ngIf=\"!activeAccount?.delegate\">STAKING: <span class=\"choose\">NOT\n                STAKED</span></span>\n            <span *ngIf=\"activeAccount?.delegate\" class=\"address\">STAKING: <span>{{ delegateName }}</span></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"flex-row right\">\n      <div class=\"button icon\" (click)=\"copy()\">\n        <img src=\"../../../assets/img/copy.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">COPY ADDRESS</div>\n        </div>\n      </div>\n      <div class=\"button icon receive\" (click)=\"receive()\">\n        <img src=\"../../../assets/img/qr.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">ADDRESS QR</div>\n        </div>\n      </div>\n      <div *ngIf=\"walletService.isHdWallet()\" class=\"button icon\" (click)=\"newAccount()\">\n        <img src=\"../../../assets/img/add.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">ADD ACCOUNT</div>\n        </div>\n      </div>\n      <div class=\"button icon settings\" [routerLink]=\"'/account/' + activeAccount?.address + '/settings'\">\n        <img src=\"../../../assets/img/settings.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">SETTINGS</div>\n        </div>\n      </div>\n      <div class=\"button icon\" (click)=\"logout()\">\n        <img src=\"../../../assets/img/logout.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">SIGN OUT</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"router?.url?.indexOf('/account/') !== 0\" class=\"flex-row right\">\n    <div class=\"right\">\n      <span *ngIf=\"router.url.indexOf('/import') === 0 || router.url === '/' || router.url.startsWith('/?type') || router.url.startsWith('/?uri')\" routerLink=\"/import/\" class=\"button\"\n        [class.selected]=\"router.url.indexOf('/import') === 0\">Import Wallet</span>\n      <span *ngIf=\"router.url.indexOf('/new-wallet') === 0 || router.url === '/' || router.url.startsWith('/?type') || router.url.startsWith('/?uri')\" routerLink=\"/new-wallet/\"\n        class=\"button\" [class.selected]=\"router.url.indexOf('/new-wallet') === 0\">Create New Wallet</span>\n      <span *ngIf=\"router.url.indexOf('/connect-ledger') === 0 || router.url === '/' || router.url.startsWith('/?type') || router.url.startsWith('/?uri')\" routerLink=\"/connect-ledger/\"\n        class=\"button\" [class.selected]=\"router.url.indexOf('/connect-ledger') === 0\">Connect Ledger</span>\n      <span *ngIf=\"router.url.indexOf('/activate') === 0\" routerLink=\"/activate/\" class=\"button\"\n        [class.selected]=\"router.url.indexOf('/activate') === 0\">Activate</span>\n    </div>\n  </div>\n</div>\n<div class=\"flex-row top-container mobile\" [class]=\"router.url.indexOf('/account') === 0 ? 'default' : ''\">\n  <a routerLink=\"/\" class=\"flex-row brand-logo\">\n    <img class=\"icon\" src=\"../../../assets/img/header-logo.svg\" />\n  </a>\n  <div *ngIf=\"router.url.indexOf('/account/') > -1\" class=\"flex-row center\">\n    <app-ui-dropdown-account [options]=\"accounts\" [current]=\"activeAccount\" style=\"width: 100%;\">\n    </app-ui-dropdown-account>\n  </div>\n  <app-ui-mobile-menu [activeAccount]=\"activeAccount\" [delegateName]=\"delegateName\" [newAccount]=\"newAccount\" [receive]=\"receive\"></app-ui-mobile-menu>\n</div>","import { Component, OnInit, Input, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { Account } from '../../../../services/wallet/wallet';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { CONSTANTS as _CONSTANTS } from '../../../../../environments/environment';\nimport { filter } from 'rxjs/operators';\nimport copy from 'copy-to-clipboard';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalComponent } from '../../../modals/modal.component';\nimport { DelegateService } from '../../../../services/delegate/delegate.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\nimport { DeeplinkService } from '../../../../services/deeplink/deeplink.service';\nimport { UnlockableService } from '../../../../services/unlockable/unlockable.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['../../../../../scss/components/views/layouts/header/header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnChanges, OnDestroy {\n  window = window;\n  document = document;\n  @Input() activeAccount: Account;\n  accounts: Account[];\n  delegateName = '';\n  readonly CONSTANTS = _CONSTANTS;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public router: Router,\n    private route: ActivatedRoute,\n    private deeplinkService: DeeplinkService,\n    public walletService: WalletService,\n    public lookupService: LookupService,\n    private messageService: MessageService,\n    private translate: TranslateService,\n    private delegateService: DelegateService,\n    private subjectService: SubjectService,\n    public unlockableService: UnlockableService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(async () => {\n        this.accounts = this.walletService.wallet?.getAccounts();\n        this.delegateName = await this.getDelegateName(this.activeAccount?.delegate);\n      })\n    );\n    this.accounts = this.walletService.wallet?.getAccounts();\n    this.subscriptions.add(\n      this.route.queryParams.subscribe(async (params) => {\n        if (params?.type || (params?.uri && params.uri.startsWith('wc:'))) {\n          this.deeplinkService.set(params);\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n        document.body.scrollTop = 0;\n        if (!(this.accounts?.length > 0) && r.url.indexOf('/account/') === 0) {\n          this.router.navigateByUrl('/');\n        } else if (this.accounts?.length > 0 && !r.url.match(/terms\\-of\\-use|privacy\\-policy/g)) {\n          let accountAddress = r.url.substr(r.url.indexOf('/account/') + 9);\n          accountAddress = accountAddress.indexOf('/') !== -1 ? accountAddress.substring(0, accountAddress.indexOf('/')) : accountAddress;\n          if (!this.walletService.addressExists(accountAddress)) {\n            this.router.navigateByUrl(`/account/${this.accounts[0].address}`);\n            this.activeAccount = this.accounts[0];\n            this.subjectService.activeAccount.next(this.accounts[0]);\n          } else {\n            this.activeAccount = this.walletService.wallet?.getAccount(accountAddress);\n            this.subjectService.activeAccount.next(this.activeAccount);\n          }\n          this.delegateName = await this.getDelegateName(this.activeAccount?.delegate);\n        }\n      })\n    );\n  }\n\n  async ngOnChanges(changes: SimpleChanges): Promise<void> {\n    if (changes?.activeAccount?.currentValue) {\n      this.delegateName = await this.getDelegateName(changes?.activeAccount?.currentValue.delegate);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  logout(): void {\n    this.subjectService.logout.next(true);\n    this.messageService.clear();\n    this.walletService.clearWallet();\n    this.lookupService.clear();\n    this.router.navigate(['']);\n  }\n  copy(): void {\n    copy(this.activeAccount.address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(this.activeAccount.address + ' ' + copyToClipboard, 5);\n  }\n\n  toggleDropdown(sel): void {\n    document.querySelector(sel).parentNode.classList.toggle('expanded');\n  }\n  newAccount(): void {\n    ModalComponent.currentModel.next({ name: 'new-implicit', data: null });\n  }\n  receive(): void {\n    ModalComponent.currentModel.next({\n      name: 'receive',\n      data: { address: this.activeAccount.address }\n    });\n  }\n\n  async getDelegateName(address: string): Promise<string> {\n    return address\n      ? (await this.delegateService.resolveDelegateByAddress(address))?.name ??\n          address.substring(0, 7) + '...' + address.substring(address.length - 4, address.length)\n      : address;\n  }\n}\n","<div *ngIf=\"this.path !== '/embedded'\" class=\"foot-container\" [class.dark]=\"true\">\n  <div class=\"flex-row links\">\n    <div class=\"flex-row left low\">\n      <a href=\"./terms-of-use\" target=\"_blank\">Terms of Use</a>\n      <a href=\"./privacy-policy\" target=\"_blank\">Privacy</a>\n      <a class=\"desktop\" target=\"_blank\" href=\"mailto:contact@kukai.app\">Contact</a>\n    </div>\n    <div class=\"flex-column since low\">\n      <div class=\"flex-row-wrap\" id=\"follow\">\n        <span>follow kukai on</span>\n        <a href=\"https://github.com/kukai-wallet/kukai\" target=\"_blank\"><img src=\"../../../assets/img/logo-github.svg\"></a>\n        <a (click)=\"promptTelegramDialog($event)\" id=\"tg\"><img src=\"../../../assets/img/logo-telegram.svg\"></a>\n        <a href=\"https://twitter.com/KukaiWallet/\" target=\"_blank\"><img src=\"../../../assets/img/logo-twitter.svg\"></a>\n        <a id=\"since\">Since 2018 &trade;</a>\n      </div>\n    </div>\n    <div class=\"flex-row low\">\n      <a class=\"mobile\" target=\"_blank\" href=\"mailto:contact@kukai.app\">Contact</a>\n        <a class=\"docs\" href=\"https://docs.kukai.app\" target=\"_blank\">\n          Help</a>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ModalComponent } from '../../../../components/modals/modal.component';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['../../../../../scss/components/views/layouts/footer/footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  darkText = false;\n  path = '';\n  ModalComponent = ModalComponent;\n  constructor() {}\n\n  ngOnInit(): void {}\n  promptTelegramDialog(ev) {\n    ev.preventDefault();\n    ModalComponent.currentModel.next({\n      name: 'info',\n      data: {\n        href: 'https://t.me/KukaiWallet',\n        message: `Social engineering attacks are currently a high threat on Telegram.\n\n• Do not answer anyone that sends you private messages or calls you\n\n• Do not click on any links in a private message, or share your seed words with anyone`,\n        title: 'Security Notice',\n        action: 'I understand'\n      }\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner-new',\n  templateUrl: './spinner-new.component.html',\n  styleUrls: ['./spinner-new.component.scss']\n})\nexport class SpinnerNewComponent implements OnInit {\n  @Input() logo: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<img class=\"spinner\" src=\"../../../../assets/img/spinner/gradientSpiral.svg\">\n<img class=\"logo\" src=\"../../../../assets/img/spinner/{{logo}}.svg\">","<ng-container *ngIf=\"messageService && messageService.spinnerOn\">\n  <app-spinner-new [logo]=\"logo\"></app-spinner-new>\n  <!-- <app-spinner-legacy *ngIf=\"!embedded\"></app-spinner-legacy> -->\n</ng-container>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MessageService } from '../../../services/message/message.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit, OnDestroy {\n  @Input() embedded: boolean;\n  logo = 'default';\n  private subscriptions: Subscription = new Subscription();\n  constructor(public messageService: MessageService, private subjectService: SubjectService) {}\n\n  ngOnInit(): void {\n    this.subjectService.origin.subscribe((o) => {\n      if (o?.endsWith('gap.com')) {\n        this.logo = 'gap';\n      } else if (o?.endsWith('truesy.com')) {\n        this.logo = 'truesy';\n      } else if (o?.endsWith('playwithbrio.com')) {\n        this.logo = 'brio';\n      } else if (o && o?.indexOf('interpop') !== -1) {\n        this.logo = 'minterPop';\n      } else {\n        this.logo = 'default';\n      }\n    });\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div *ngIf=\"displayAgreement\" class=\"agreement-wrapper fade-in\">\n  <div class=\"agreement-body\">\n    <div class=\"agreement-footer fade-in\">\n      <p>By Accessing, Continuing to Use & Browse this Website including its Services provided therein (“Kukai Wallet”),\n        you agree that you have read and reviewed our <a href=\"./terms-of-use\" target=\"_blank\">Terms of Use</a> and <a\n          href=\"./privacy-policy\" target=\"_blank\">Privacy Policy</a>.</p>\n      <div>\n        <div class=\"flex-column accept\">\n          <button class=\"fade-in\" (click)=\"accept()\">Accept</button>\n          <p>I have reviewed the Terms of Use and Privacy Policy, I hereby Accept and Agree to the Terms of Use and\n            Privacy Policy.</p>\n        </div>\n        <div class=\"flex-column decline\">\n          <a class=\"flex-column\" href=\"about:blank\"><button>Decline</button></a>\n          <p>I have reviewed the Terms of Use and Privacy Policy, I hereby DO NOT Accept and Agree to the Terms of Use\n            and Privacy Policy.</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-agreement',\n  templateUrl: './agreement.component.html',\n  styleUrls: ['../../../../../scss/components/views/start/agreement/agreement.component.scss']\n})\nexport class AgreementComponent implements OnInit {\n  displayAgreement = false;\n  key = 'accepted-terms';\n  constructor(private location: Location) {}\n  ngOnInit(): void {\n    // localStorage.removeItem(this.key);\n    const accepted = localStorage.getItem(this.key);\n    const path = this.location.path();\n    if (!accepted && path !== '/terms-of-use' && path !== '/privacy-policy') {\n      this.displayAgreement = true;\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflowY = 'hidden';\n    }\n  }\n  accept(): void {\n    localStorage.setItem(this.key, '1');\n    this.displayAgreement = false;\n    document.body.style.marginRight = '';\n    document.body.style.overflowY = '';\n  }\n  reject(): void {\n    document.body.style.marginRight = '';\n    document.body.style.overflowY = '';\n    window.open('', '_self');\n  }\n}\n","<div *ngIf=\"!CONSTANTS.MAINNET && !embedded\" class=\"network\"\n  [style.boxShadow]=\"document?.body.scrollTop !== 0 ? '0 2px 10px #3333' : ''\">\n  WARNING: TEST ONLY {{ CONSTANTS.NETWORK.toUpperCase() }}\n</div>\n<app-header *ngIf=\"!embedded\"></app-header>\n<router-outlet></router-outlet>\n<app-messages *ngIf=\"!embedded\"></app-messages>\n<app-spinner [embedded]=\"embedded\"></app-spinner>\n<app-agreement *ngIf=\"!embedded\"></app-agreement>\n<app-info></app-info>\n<app-footer *ngIf=\"!embedded\" [class.initial]=\"router.url !== '/'\"></app-footer>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { WalletService } from './services/wallet/wallet.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Location } from '@angular/common';\nimport { CONSTANTS as _CONSTANTS } from '../environments/environment';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  readonly CONSTANTS = _CONSTANTS;\n  embedded = false;\n  isMobile = false;\n  previous = 0;\n  current = 0;\n  diff = 0;\n  container = null;\n  post = false;\n  private subscriptions: Subscription = new Subscription();\n  constructor(private walletService: WalletService, public router: Router, public translate: TranslateService, private location: Location) {\n    // this language will be used as a fallback when a translation isn't found in the current language\n    translate.setDefaultLang('en');\n\n    // the lang to use, if the lang isn't available, it will use the current loader to get them\n    const languagePreference = window.localStorage.getItem('languagePreference');\n    const browserLang = translate.getBrowserLang();\n    translate.use('en');\n  }\n\n  ngOnInit() {\n    this.checkEmbedded();\n    if (!this.embedded) {\n      this.walletService.loadStoredWallet();\n    }\n    this.subscriptions.add(\n      this.router.events.subscribe((event: Event) => {\n        if (event instanceof NavigationEnd) {\n          this.checkEmbedded();\n          window.scrollTo(0, 0);\n        }\n      })\n    );\n    if (!this.embedded) {\n      window.addEventListener('storage', (e) => {\n        this.handleStorageEvent(e);\n      });\n    }\n\n    const e = () => {\n      const brk = getComputedStyle(document.documentElement).getPropertyValue('--layout-break-5');\n      if (parseFloat(brk.replace(/[a-zA-Z]/g, '')) * 16 > document.documentElement.clientWidth) {\n        document.documentElement.style.setProperty('--is-mobile', '1');\n      } else {\n        document.documentElement.style.setProperty('--is-mobile', '0');\n      }\n    };\n    window.addEventListener('resize', e);\n    window.addEventListener('load', e);\n    e();\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  private handleStorageEvent(e: StorageEvent) {\n    if (e.key === 'kukai-wallet' && !this.embedded) {\n      if (e.oldValue && !e.newValue) {\n        window.location.reload();\n      } else if (!e.oldValue && e.newValue) {\n        setTimeout(async () => {\n          await this.router.navigate(['']);\n          window.location.reload();\n        }, 10000);\n      }\n    }\n  }\n  returnLanguage(lang: string) {\n    // this.translate.use(lang);\n    // console.log('lang ', lang);\n\n    const map: Map<string, string> = new Map([\n      ['en', 'English'],\n      ['cn', '中国'],\n      ['es', 'Español'],\n      ['fr', 'Français'],\n      ['ru', 'Pусский'],\n      ['jp', '日本語'],\n      ['kor', '한국어'],\n      ['por', 'Português'],\n      ['swe', 'Svenska']\n    ]);\n\n    const language = map.get(lang);\n\n    return language;\n  }\n  checkEmbedded() {\n    const path = this.location.path();\n    this.embedded = path.startsWith('/embedded');\n    const bg = this.embedded ? 'none' : '#f8f9fa';\n    if (!!this.embedded) {\n      document.documentElement.style.setProperty('--base-background-color', bg); // recheck\n      const resize = () => {\n        if (document.body.clientWidth < 540) {\n          document.documentElement.style.fontSize = '75%';\n        } else if (document.body.clientWidth < 650) {\n          document.documentElement.style.fontSize = '87.5%';\n        } else {\n          document.documentElement.style.fontSize = '100%';\n        }\n      };\n      window.addEventListener('resize', resize);\n      window.addEventListener('load', resize);\n      resize();\n    }\n  }\n  setLanguage(lang) {\n    window.localStorage.setItem('languagePreference', lang);\n    this.translate.use(lang);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value?: string, args?: number, endTrail?: boolean): string {\n    const limit = args ? args : 3;\n    const trail = '...';\n\n    let returnString;\n\n    if (endTrail && value.length > limit) {\n      const endTrailstring = value.slice(-limit);\n      returnString = value.substring(0, limit) + trail + endTrailstring;\n\n      return returnString;\n    } else {\n      return value.length > limit ? value.substring(0, limit) + trail : value;\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\n\n// From Angular Material\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// For translation\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\n// External libraries\nimport { AppComponent } from './app.component';\n\n// Services\nimport { MessageService } from './services/message/message.service';\nimport { WalletService } from './services/wallet/wallet.service';\nimport { ActivityService } from './services/activity/activity.service';\nimport { BalanceService } from './services/balance/balance.service';\nimport { EncryptionService } from './services/encryption/encryption.service';\nimport { ImportService } from './services/import/import.service';\nimport { TzrateService } from './services/tzrate/tzrate.service';\nimport { ExportService } from './services/export/export.service';\nimport { DelegateService } from './services/delegate/delegate.service';\nimport { InputValidationService } from './services/input-validation/input-validation.service';\nimport { LedgerService } from './services/ledger/ledger.service';\nimport { BeaconService } from './services/beacon/beacon.service';\nimport { TorusService } from './services/torus/torus.service';\nimport { EmbeddedAuthService } from './services/embedded-auth/embedded-auth.service';\nimport { TokenBalancesService } from './services/token-balances/token-balances.service';\nimport { SubjectService } from './services/subject/subject.service';\nimport { UnlockableService } from './services/unlockable/unlockable.service';\nimport { CoordinatorService } from './services/coordinator/coordinator.service';\nimport { OperationService } from './services/operation/operation.service';\n\n// View components\nimport { StartComponent } from './components/views/start/start.component';\nimport { NewWalletComponent } from './components/views/start/login-types/new-wallet/new-wallet.component';\nimport { MnemonicImportComponent } from './components/views/start/login-types/mnemonic-import/mnemonic-import.component';\nimport { MessagesComponent } from './components/ui/messages/messages.component';\nimport { ModalComponent } from './components/modals/modal.component';\nimport { HeaderComponent } from './components/views/layouts/header/header.component';\nimport { ConnectLedgerComponent } from './components/views/start/login-types/connect-ledger/connect-ledger.component';\nimport { FooterComponent } from './components/views/layouts/footer/footer.component';\nimport { AccountViewComponent } from './components/views/logged-in/account-view/account-view.component';\nimport { ActivityComponent } from './components/views/logged-in/account-view/activity/activity.component';\nimport { EventComponent } from './components/views/logged-in/account-view/activity/event/event.component';\nimport { NftsComponent } from './components/views/logged-in/account-view/nfts/nfts.component';\nimport { PendingComponent } from './components/views/logged-in/account-view/pending/pending.component';\nimport { BalancesComponent } from './components/views/logged-in/account-view/balances/balances.component';\nimport { BalanceTokenComponent } from './components/views/logged-in/account-view/balances/token/balance-token.component';\nimport { SpinnerComponent } from './components/ui/spinner/spinner.component';\nimport { AgreementComponent } from './components/views/start/agreement/agreement.component';\nimport { TermsOfUseComponent } from './components/views/start/agreement/terms-of-use/terms-of-use.component';\nimport { PrivacyPolicyComponent } from './components/views/start/agreement/privacy-policy/privacy-policy.component';\nimport { EmbeddedComponent } from './components/views/embedded/embedded.component';\nimport { SigninComponent } from './components/views/embedded/signin/signin.component';\nimport { CardComponent } from './components/views/embedded/card/card.component';\nimport { SendButtonComponent } from './components/ui/button/basic/send/send-button.component';\nimport { TokenDetail } from './components/modals/send/detail/token-detail.component';\nimport { AlertComponent } from './components/modals/alert/alert.component';\nimport { SpinnerLegacyComponent } from './components/ui/spinner/legacy/spinner-legacy.component';\nimport { SpinnerNewComponent } from './components/ui/spinner/new/spinner-new.component';\nimport { AccountDropdownComponent } from './components/ui/dropdown/account/account-dropdown.component';\nimport { MobileMenuDropdownComponent } from './components/ui/dropdown/mobile-menu/mobile-menu.component';\nimport { P404Component } from './components/views/error/404.component';\nimport { P500Component } from './components/views/error/500.component';\n\n// Modules\nimport { LoggedInModule } from './components/views/logged-in/logged-in.module';\n\n// Pipes\nimport { ErrorHandlingPipe } from './pipes/error-handling.pipe';\nimport { TruncatePipe } from './pipes/truncate.pipe';\nimport { TimeAgoPipe } from './pipes/time-ago.pipe';\nimport { DeeplinkService } from './services/deeplink/deeplink.service';\nimport { RemoveCommaPipe } from './pipes/remove-comma.pipe';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    // View components\n    NewWalletComponent,\n    StartComponent,\n    MnemonicImportComponent,\n    MessagesComponent,\n    ModalComponent,\n    HeaderComponent,\n    P404Component,\n    P500Component,\n    SendButtonComponent,\n    ConnectLedgerComponent,\n    FooterComponent,\n    AccountViewComponent,\n    ActivityComponent,\n    EventComponent,\n    NftsComponent,\n    PendingComponent,\n    BalancesComponent,\n    BalanceTokenComponent,\n    SpinnerComponent,\n    AgreementComponent,\n    TermsOfUseComponent,\n    PrivacyPolicyComponent,\n    EmbeddedComponent,\n    SigninComponent,\n    CardComponent,\n    TokenDetail,\n    SpinnerLegacyComponent,\n    SpinnerNewComponent,\n    AccountDropdownComponent,\n    MobileMenuDropdownComponent,\n    SpinnerLegacyComponent,\n\n    // Modals\n    ModalComponent,\n    AlertComponent,\n\n    // Pipes\n    ErrorHandlingPipe,\n    TruncatePipe,\n    TimeAgoPipe\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    LoggedInModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }) // lazy loading will need TranslateModule.forChild() in the lazy loaded modules\n  ],\n  providers: [\n    // Services\n    MessageService,\n    WalletService,\n    ActivityService,\n    EncryptionService,\n    BalanceService,\n    ImportService,\n    TzrateService,\n    CoordinatorService,\n    OperationService,\n    ExportService,\n    DelegateService,\n    InputValidationService,\n    LedgerService,\n    BeaconService,\n    TorusService,\n    EmbeddedAuthService,\n    SubjectService,\n    TokenBalancesService,\n    DeeplinkService,\n    UnlockableService,\n    // Pipes\n    ErrorHandlingPipe,\n    TruncatePipe,\n    TimeAgoPipe,\n    RemoveCommaPipe\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n  window.console.log = function () {};\n  window.console.dir = function () {};\n  window.console.table = function () {};\n  window.console.debug = function () {};\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.log(err));\n","var map = {\n\t\"./af\": 58685,\n\t\"./af.js\": 58685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 32614,\n\t\"./ar-kw.js\": 32614,\n\t\"./ar-ly\": 18630,\n\t\"./ar-ly.js\": 18630,\n\t\"./ar-ma\": 28674,\n\t\"./ar-ma.js\": 28674,\n\t\"./ar-sa\": 49032,\n\t\"./ar-sa.js\": 49032,\n\t\"./ar-tn\": 24730,\n\t\"./ar-tn.js\": 24730,\n\t\"./ar.js\": 254,\n\t\"./az\": 53052,\n\t\"./az.js\": 53052,\n\t\"./be\": 60150,\n\t\"./be.js\": 60150,\n\t\"./bg\": 63069,\n\t\"./bg.js\": 63069,\n\t\"./bm\": 13466,\n\t\"./bm.js\": 13466,\n\t\"./bn\": 18516,\n\t\"./bn-bd\": 90557,\n\t\"./bn-bd.js\": 90557,\n\t\"./bn.js\": 18516,\n\t\"./bo\": 26273,\n\t\"./bo.js\": 26273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 19815,\n\t\"./bs.js\": 19815,\n\t\"./ca\": 83331,\n\t\"./ca.js\": 83331,\n\t\"./cs\": 21320,\n\t\"./cs.js\": 21320,\n\t\"./cv\": 72219,\n\t\"./cv.js\": 72219,\n\t\"./cy\": 68266,\n\t\"./cy.js\": 68266,\n\t\"./da\": 66427,\n\t\"./da.js\": 66427,\n\t\"./de\": 67435,\n\t\"./de-at\": 52871,\n\t\"./de-at.js\": 52871,\n\t\"./de-ch\": 12994,\n\t\"./de-ch.js\": 12994,\n\t\"./de.js\": 67435,\n\t\"./dv\": 82357,\n\t\"./dv.js\": 82357,\n\t\"./el\": 95649,\n\t\"./el.js\": 95649,\n\t\"./en-au\": 59961,\n\t\"./en-au.js\": 59961,\n\t\"./en-ca\": 10860,\n\t\"./en-ca.js\": 10860,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 70864,\n\t\"./en-ie.js\": 70864,\n\t\"./en-il\": 91579,\n\t\"./en-il.js\": 91579,\n\t\"./en-in\": 30940,\n\t\"./en-in.js\": 30940,\n\t\"./en-nz\": 16181,\n\t\"./en-nz.js\": 16181,\n\t\"./en-sg\": 44301,\n\t\"./en-sg.js\": 44301,\n\t\"./eo\": 85291,\n\t\"./eo.js\": 85291,\n\t\"./es\": 54529,\n\t\"./es-do\": 53764,\n\t\"./es-do.js\": 53764,\n\t\"./es-mx\": 12584,\n\t\"./es-mx.js\": 12584,\n\t\"./es-us\": 63425,\n\t\"./es-us.js\": 63425,\n\t\"./es.js\": 54529,\n\t\"./et\": 35203,\n\t\"./et.js\": 35203,\n\t\"./eu\": 70678,\n\t\"./eu.js\": 70678,\n\t\"./fa\": 83483,\n\t\"./fa.js\": 83483,\n\t\"./fi\": 96262,\n\t\"./fi.js\": 96262,\n\t\"./fil\": 52521,\n\t\"./fil.js\": 52521,\n\t\"./fo\": 34555,\n\t\"./fo.js\": 34555,\n\t\"./fr\": 63131,\n\t\"./fr-ca\": 88239,\n\t\"./fr-ca.js\": 88239,\n\t\"./fr-ch\": 21702,\n\t\"./fr-ch.js\": 21702,\n\t\"./fr.js\": 63131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 23821,\n\t\"./ga.js\": 23821,\n\t\"./gd\": 71753,\n\t\"./gd.js\": 71753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 92762,\n\t\"./gom-deva.js\": 92762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 82809,\n\t\"./gu.js\": 82809,\n\t\"./he\": 45402,\n\t\"./he.js\": 45402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 10410,\n\t\"./hr.js\": 10410,\n\t\"./hu\": 38288,\n\t\"./hu.js\": 38288,\n\t\"./hy-am\": 67928,\n\t\"./hy-am.js\": 67928,\n\t\"./id\": 71334,\n\t\"./id.js\": 71334,\n\t\"./is\": 86959,\n\t\"./is.js\": 86959,\n\t\"./it\": 34864,\n\t\"./it-ch\": 51124,\n\t\"./it-ch.js\": 51124,\n\t\"./it.js\": 34864,\n\t\"./ja\": 36141,\n\t\"./ja.js\": 36141,\n\t\"./jv\": 29187,\n\t\"./jv.js\": 29187,\n\t\"./ka\": 42136,\n\t\"./ka.js\": 42136,\n\t\"./kk\": 94332,\n\t\"./kk.js\": 94332,\n\t\"./km\": 18607,\n\t\"./km.js\": 18607,\n\t\"./kn\": 84305,\n\t\"./kn.js\": 84305,\n\t\"./ko\": 70234,\n\t\"./ko.js\": 70234,\n\t\"./ku\": 16003,\n\t\"./ku.js\": 16003,\n\t\"./ky\": 75061,\n\t\"./ky.js\": 75061,\n\t\"./lb\": 32786,\n\t\"./lb.js\": 32786,\n\t\"./lo\": 66183,\n\t\"./lo.js\": 66183,\n\t\"./lt\": 50029,\n\t\"./lt.js\": 50029,\n\t\"./lv\": 24169,\n\t\"./lv.js\": 24169,\n\t\"./me\": 68577,\n\t\"./me.js\": 68577,\n\t\"./mi\": 68177,\n\t\"./mi.js\": 68177,\n\t\"./mk\": 50337,\n\t\"./mk.js\": 50337,\n\t\"./ml\": 65260,\n\t\"./ml.js\": 65260,\n\t\"./mn\": 52325,\n\t\"./mn.js\": 52325,\n\t\"./mr\": 14695,\n\t\"./mr.js\": 14695,\n\t\"./ms\": 75334,\n\t\"./ms-my\": 37151,\n\t\"./ms-my.js\": 37151,\n\t\"./ms.js\": 75334,\n\t\"./mt\": 63570,\n\t\"./mt.js\": 63570,\n\t\"./my\": 97963,\n\t\"./my.js\": 97963,\n\t\"./nb\": 88028,\n\t\"./nb.js\": 88028,\n\t\"./ne\": 86638,\n\t\"./ne.js\": 86638,\n\t\"./nl\": 50302,\n\t\"./nl-be\": 66782,\n\t\"./nl-be.js\": 66782,\n\t\"./nl.js\": 50302,\n\t\"./nn\": 33501,\n\t\"./nn.js\": 33501,\n\t\"./oc-lnc\": 50563,\n\t\"./oc-lnc.js\": 50563,\n\t\"./pa-in\": 50869,\n\t\"./pa-in.js\": 50869,\n\t\"./pl\": 65302,\n\t\"./pl.js\": 65302,\n\t\"./pt\": 49687,\n\t\"./pt-br\": 74884,\n\t\"./pt-br.js\": 74884,\n\t\"./pt.js\": 49687,\n\t\"./ro\": 79107,\n\t\"./ro.js\": 79107,\n\t\"./ru\": 33627,\n\t\"./ru.js\": 33627,\n\t\"./sd\": 30355,\n\t\"./sd.js\": 30355,\n\t\"./se\": 83427,\n\t\"./se.js\": 83427,\n\t\"./si\": 43906,\n\t\"./si.js\": 43906,\n\t\"./sk\": 54590,\n\t\"./sk.js\": 54590,\n\t\"./sl\": 20184,\n\t\"./sl.js\": 20184,\n\t\"./sq\": 56361,\n\t\"./sq.js\": 56361,\n\t\"./sr\": 78965,\n\t\"./sr-cyrl\": 81287,\n\t\"./sr-cyrl.js\": 81287,\n\t\"./sr.js\": 78965,\n\t\"./ss\": 25456,\n\t\"./ss.js\": 25456,\n\t\"./sv\": 70451,\n\t\"./sv.js\": 70451,\n\t\"./sw\": 77558,\n\t\"./sw.js\": 77558,\n\t\"./ta\": 51356,\n\t\"./ta.js\": 51356,\n\t\"./te\": 73693,\n\t\"./te.js\": 73693,\n\t\"./tet\": 21243,\n\t\"./tet.js\": 21243,\n\t\"./tg\": 42500,\n\t\"./tg.js\": 42500,\n\t\"./th\": 55768,\n\t\"./th.js\": 55768,\n\t\"./tk\": 77761,\n\t\"./tk.js\": 77761,\n\t\"./tl-ph\": 35780,\n\t\"./tl-ph.js\": 35780,\n\t\"./tlh\": 29590,\n\t\"./tlh.js\": 29590,\n\t\"./tr\": 33807,\n\t\"./tr.js\": 33807,\n\t\"./tzl\": 93857,\n\t\"./tzl.js\": 93857,\n\t\"./tzm\": 60654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 60654,\n\t\"./ug-cn\": 30845,\n\t\"./ug-cn.js\": 30845,\n\t\"./uk\": 19232,\n\t\"./uk.js\": 19232,\n\t\"./ur\": 47052,\n\t\"./ur.js\": 47052,\n\t\"./uz\": 77967,\n\t\"./uz-latn\": 32233,\n\t\"./uz-latn.js\": 32233,\n\t\"./uz.js\": 77967,\n\t\"./vi\": 98615,\n\t\"./vi.js\": 98615,\n\t\"./x-pseudo\": 12320,\n\t\"./x-pseudo.js\": 12320,\n\t\"./yo\": 31313,\n\t\"./yo.js\": 31313,\n\t\"./zh-cn\": 64490,\n\t\"./zh-cn.js\": 64490,\n\t\"./zh-hk\": 55910,\n\t\"./zh-hk.js\": 55910,\n\t\"./zh-mo\": 98262,\n\t\"./zh-mo.js\": 98262,\n\t\"./zh-tw\": 44223,\n\t\"./zh-tw.js\": 44223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["ModalComponent","constructor","cd","isOpen","name","modalSub","Subscription","this","currentModel","subscribe","load","forceClose","undefined","willOpen","open","data","close","detectChanges","BehaviorSubject","ngOnInit","ngOnDestroy","unsubscribe","window","innerHeight","document","body","scrollHeight","style","marginRight","overflowY","Number","documentElement","getPropertyValue","setTimeout","scrollTo","top","selectors","decls","vars","template","encapsulation","i0","QrScannerComponent","beaconService","deeplinkService","messageService","walletConnectService","super","CONSTANTS","_CONSTANTS","env","environment","scanResponse","EventEmitter","override","manualInput","loadingCam","errorMessage","openModal","next","scan","QrScanner","hasCamera","videoplayer","nativeElement","qrScanner","result","handleQrCode","start","stop","destroy","e","console","warn","scanResult","qrString","log","pairingInfo","QRtoPairingJson","preNotifyPairing","addPeer","emit","pkh","closeModal","addError","handlePaste","ev","clipboardString","clipboardData","getData","startsWith","pair","viewQuery","Display","Size","AssetComponent","elRef","tokenService","display","image","size","medium","priorityList","controlsList","controls","requires","hideSpinner","muted","autoplay","loop","playsinline","inView","loaderUrl","unknownUrl","dataSrc","preSrc","postSrc","mimeType","errors","none","ngOnChanges","changes","assets","previousValue","currentValue","JSON","stringify","p0","assetToUrl","pickAsset","p1","from","to","reload","ngAfterViewInit","lazyLoad","updateDisplay","isImage","includes","isAudio","audio","isVideo","video","is3D","threeD","onLoad","target","id","onLoadData","volume","onError","evaluateInvalid","type","uri","evaluate","poster","asset","determineMime","error","setSrc","obs","IntersectionObserver","entries","_","forEach","entry","isIntersecting","unobserve","observe","url","Error","MODEL_3D_WHITELIST","getContractAddressFromAsset","response","i","ok","fetch","method","headers","get","contractAddress","raw","slice","MAINNET","ToggleComponent","text","default","stateChange","state","toggle","inputs","outputs","AdvancedToggleComponent","features","consts","ctx","ctx_r7","width","height","gradient","getGradientBackground","chartArea","theme","getComputedStyle","replace","chartWidth","right","left","chartHeight","bottom","createLinearGradient","addColorStop","Chart","register","registerables","ChartSeries","ChartComponent","Object","attributes","datasets","labels","datas","options","ddSets","sets","set","units","layout","tooltipValue","drawn","chart","series","day","ddExpanded","chartExpanded","afterTooltipDraw","args","x","tooltip","dataPoints","element","yAxis","scales","y","save","beginPath","moveTo","lineTo","lineWidth","setLineDash","strokeStyle","stroke","textAlign","font","fillStyle","fillText","title","restore","toggleChartExpand","chartRef","parentElement","classList","refreshDDSets","sort","a","b","nameA","toLowerCase","nameB","draw","ChartTitle","totalValueLocked","find","ds","label","parseFloat","length","toString","toFixed","toLocaleString","XTZtzBTC","tzBTCXTZ","getContext","map","plugins","toggleSeries","overrideDatasetConfig","getChartOptions","toggleSet","reset","key","keys","hidden","pointHoverBorderWidth","design","pointHitRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointBackgroundColor","backgroundColor","context","yTickPadding","padding","beginAtZero","position","ticks","maxTicksLimit","align","weight","family","textStrokeColor","z","callback","index","grid","drawBorder","responsive","maintainAspectRatio","legend","hover","mode","axis","intersect","tooltips","interaction","elements","line","tension","point","radius","enabled","titleColor","bodyColor","footerColor","displayColors","callbacks","item","dataset","dataIndex","DropdownComponent","ListComponent","dropdownResponse","ecmpId","closeDropdown","closest","toggleDropdown","hostBindings","current","list","EventComponent","translate","timeAgoPipe","activityService","subjectService","OpStatus","LookupType","fresh","subscriptions","trigger","setInterval","add","confirmedOp","opHash","activity","hash","getType","destination","address","operationType","source","account","explorerURL","BLOCK_EXPLORER_URL","getCounterparty","transaction","c","trim","getEventIcon","lookupType","getEventStatusIcon","status","CONFIRMED","UNCONFIRMED","FAILED","HALF_CONFIRMED","printAmount","formatAmount","tokenId","amount","sentKind","entrypoint","zeroSent","receivedKind","split","getAddressPrefix","copy","copyToClipboard","instant","ActivityComponent","trackEvent","block","NftsTokenComponent","tokenBalancesService","DisplayLinkOption","isNew","contractAliases","CONTRACT_ALIASES","token","balance","viewToken","balanceChangeTimer","formatBalance","Big","div","parseInt","decimals","SearchBarComponent","onInput","itemCount","matchCount","inputUpdated","Subject","filter","isActive","hasValue","placeholder","placeholderText","searchText","pipe","debounceTime","value","activeAccount","onKeydown","onFocus","searchButtonClicked","input","focus","onBlur","NftsBodyComponent","searchable","tokensToDisplay","loaded","filtered","chunkSize","sliceEnd","refresh","isDisplaying","tokens","search","cb","scrollTop","clientHeight","addEventListener","passive","t","match","RegExp","isNaN","updateFilter","prevFilter","trackToken","ctx_r9","NftsComponent","walletService","nfts","nftsArray","displayedNftsArray","isDiscover","isInitLoad","activeAddress","sliceIncrement","nftsUpdated","n","populateNfts","logout","o","event","Math","max","offsetHeight","refreshDisplayedNfts","flat","showMore","initialized","incremented","displayTokenCard","sel","querySelector","innerWidth","scroll","offsetTop","shouldDisplayLink","option","wallet","TorusWallet","sanitizeKey","trackContract","contract","getContractAlias","category","join","BasicButtonComponent","SendButtonComponent","getAsset","tokenTransfer","prepareTransaction","prepareTokenTransfer","symbol","BalanceTokenComponent","removeCommaPipe","getBalance","balanceXTZ","getBalanceFiat","balanceUSD","price","buy","BalancesComponent","totalBalances","isFiat","balances","calcTotalBalances","p","walletUpdated","wrap","remove","ngAfterViewChecked","thumbnailAsset","toggleTotalBalances","reduce","prev","XTZrate","openSwap","startSpinner","TokenDetail","unlockableService","objktService","tokenFiltered","moreInfo","attrInfo","imageExpanded","autoOverflow","descOverflow","isNFT","assetLoaded","blacklistMeta","FEATURE_CONTRACTS","feat","contains","description","resolveToken","then","d","floorPrice","floor_price","last_sale","attribute","editions","attr","attribute_counts","freq","expand","expandImage","toggleFeature","AccountViewComponent","moreThan15","ImplicitAccount","SettingsComponent","router","coordinatorService","implicitAccounts","wideAccounts","getImplicitAccounts","syncBeaconState","onResize","accountAvailable","findIndex","impAcc","formatAddress","rescan","resetCounters","update","navigate","rescanAll","resetAllMetadata","revealMnemonic","canRevealMnomonic","HdWallet","LegacyWalletV3","changeSession","session","topic","preSelectedAccountAddress","unsorted","DelegatePageComponent","delegateService","inputValidationService","messageServcie","customAddress","isShowingCustom","delegates","take","delegate","ceil","freeSpace","estimatedRoi","openForDelegation","minDelegation","obj","stake","validDelegationAddress","round","val","toPercent","toggleCustom","routes","path","component","ActivateComponent","LoggedInRoutingModule","RouterModule","forChild","LoggedInModule","SwapLiquidityService","ChartService","EstimateService","RemoveCommaPipe","imports","CommonModule","HttpClientModule","FormsModule","operationService","formInvalid","activate","checkInput","secret","ans","success","payload","res","addSuccess","addWarning","msg","err","activateFailed","code","WalletType","prefix","tz1","Uint8Array","tz2","tz3","edpk","edsk","edsig","sig","B","TZ","KT1","mergebuf","wm","r","hexToBuf","hex","h","bufToHex","buffer","byteArray","hexParts","paddedHex","push","base58encode","prefixx","Bs58check","Buffer","base58decode","enc","hexToPk","validBase58string","base58string","b58prefix","prototype","hasOwnProperty","call","_prefix","validImplicitAddress","validContractAddress","validAddress","validOperationHash","validPublicKey","pk","validSecretKey","sk","generateMnemonic","numberOfWords","indexOf","bip39","validMnemonic","mnemonic","mnemonicToSeed","passphrase","bip32Seed","mnemonicToEntropy","entropyToMnemonic","entropy","seedToKeyPair","seed","keyPair","naclSign","fromSeed","secretKey","publicKey","blake2b","secretKeyToKeyPair","fromSecretKey","deriveContractAddress","sopBytes","hash2","addressToHex","TypeError","sign","bytes","detached","sbytes","pkToPkh","pkDecoded","deriveNode","message","hmac","naclAuthFull","privateKey","chainCode","deriveChildNode","node","indexBuf","allocUnsafe","writeUInt32BE","concat","alloc","derivationPath","pathArray","level","derivationPathToArray","domainSeperator","deriveRootNode","keyPairFromAccountIndex","accountIndex","ErrorHandlingPipe","ERROR_LIST","transform","errorId","withObj","location","protocol","s","string","int","jsonWith","lines","pure","TimeAgoPipe","timestamp","now","sec","secs","mn","mns","hr","hrs","days","month","months","year","years","timeNow","Date","getTime","diff","timediff","count","output","minutes","seconds","ActivityService","lookupService","indexerService","maxTransactions","tokenBalanceUpdated","updateTransactions","getAccount","getTransactonsCounter","flatMap","of","knownTokenIds","fromPromise","accountInfo","counter","unknownTokenIds","searchAllMetadata","recheckMetadata","updateTokenBalances","getAllTransactions","activities","storeWallet","upToDate","Array","isArray","idsWithBalance","updateTokenBalance","currentTokenIds","getTokenBalances","getOperations","resp","operations","oldActivities","unconfirmedOps","op","opNew","oldState","promptNewActivities","counterParty","check","newActivities","shortAddress","ref","metadataUpdated","takeUntil","delay","modify","withLookup","resolve","factory","BalanceService","tzrateService","getBalanceAll","getAccounts","getAccountBalance","updateAccountBalance","newBalance","updateTotalBalance","updateFiatBalances","change","totalBalanceXTZ","BeaconService","tzktService","client","peers","permissions","pairInfoJson","pairInfo","parse","isNewPairingRequest","addBeaconWait","peersJson","localStorage","getItem","newPublicKey","peer","force","removeBeaconMsg","getPeers","getPermissions","removePeers","removePeer","senderId","getSenderId","peerResponse","removeAppMetadata","removePermissions","removeAllPermissions","removePermission","accountIdentifier","getAppMetadataList","rejectOnPermission","respondWithError","BeaconErrorType","NOT_GRANTED_ERROR","rejectOnNetwork","NETWORK_NOT_SUPPORTED","rejectOnUserAbort","ABORTED_ERROR","rejectOnSourceAddress","NO_PRIVATE_KEY_FOUND_ERROR","rejectOnTooManyOps","TOO_MANY_OPERATIONS","rejectOnUnknown","UNKNOWN_ERROR","rejectOnParameters","PARAMETERS_INVALID_ERROR","rejectOnBroadcastError","BROADCAST_ERROR","errorType","requestMessage","BeaconMessageType","version","BEACON_VERSION","beaconId","respond","approvePermissionRequest","PermissionResponse","network","scopes","approveSignPayloadRequest","signature","SignPayloadResponse","signingType","responseSync","setItem","removeItem","providedIn","swapLiquidityService","stats","fetchLBGraphData","tzbtc","fetchHistoricalQuotesByContract","tzBTCContract","fetchHistoricalStatsByContract","lqdContract","interval","week","reverse","tvlUsd","getDate","getHours","defaultDatasetValues","borderColor","borderRadius","borderWidth","pointBorderWidth","pointBorderColor","pointRadius","pointHoverColor","fill","offset","req","query","json","quotes1h","quotes1d","stats1d","SignalService","balanceService","connection","init","HubConnectionBuilder","withUrl","API_URL","build","on","sender","invoke","parameter","confirmStatus","onclose","updateAccountData","acc","handleDelegateResponse","subscribeToAccount","types","State","CoordinatorService","dipdupService","signalService","scheduler","Map","defaultDelayActivity","shortDelayActivity","longDelayActivity","defaultDelayPrice","stopAll","accounts","startXTZ","tzrateInterval","debug","getTzrate","fetchTokensMidPrice","recheckWalletAddresses","restoreFeatures","scheduleData","UpToDate","stateCounter","setDelay","boost","metadata","addressExists","addUnconfirmedOperations","Wait","changeState","Updating","latestActivity","shift","checkSkExpiration","newState","time","delete","transactions","times","fee","parameters","unshift","destinationAccount","delegation","origination","kt1","DeeplinkService","pairingJson","params","extractPairingJson","b58cdecode","popPairingJson","qrPayload","DelegateService","bb","getDelegates","getDelegate","NETWORK","k","stakingBalance","logo","origin","payoutAccuracy","serviceType","resolveDelegateByAddress","Promise","EncryptionService","encrypt","plaintext","password","salt","encrypt_v2","decrypt","chiphertext","decrypt_v1","decrypt_v2","encrypt_v1","pbkdf2","AES","ctr","fromBytes","toBytes","salty","cryptob","scrypt","cipher","forge","createCipher","iv","byteStringBuffer","createBuffer","finish","toHex","tag","chipher","parts","decipher","createDecipher","shiftIV","isInteger","buf","http","imputValidationService","costPerByte","revealGasLimit","extraGas","queue","nodeURL","NODE_URL","contractsOverride","CONTRACT_OVERRIDES","chainId","manager","preLoadData","head","all","getHeader","toPromise","getCounter","getManager","chain_id","estimateTransactions","estimate","estimateOrigination","isOrigination","retry","_estimate","catch","simulation","gasLimit","min","HARD_LIMITS","hard_gas_limit_per_operation","floor","hard_gas_limit_per_block","storageLimit","hard_storage_limit_per_operation","tx","createOriginationObject","createTransactionObject","simulate","contents","reveal","limits","kind","operation_result","opObj","gas","storage","getOpUsage","localForge","fop","totalGasLimit","totalStorageLimit","dtp","customLimits","recommendFee","burn","burnFee","content","gasUsage","minus","plus","balance_updates","balanceUpdate","consumed_milligas","internal_operation_results","internalResult","storageUsage","getOpLimits","gasUnits","numberOfOperations","postRpc","operation","checkApplied","catchError","errHandler","limit","contractOverride","gasRecommendation","relativeLimit","percentage","gasEstimation","storageRecommendation","storageEstimation","getRpc","DipDupService","storeKey","maxTokensReturned","rehydrate","exchange","exchanges","sharesTotal","Boolean","midPrice","store","fromEntries","midPrices","refreshTokens","parsed","IndexerService","isUsedAccount","getContractAddresses","getTokenMetadata","metadataSource","MetadataSource","Any","ObjktService","utilsService","pending","OBJKT_URL","price_xtz","fa","resolveCollection","sleep","collect","reject","addresses","q","items","resolveCollections","promise","contractAddresses","_objkts","objkts","objkt","TzktService","tokenBalanceCache","TZKT_TOKEN_QUERY_SIZE","Tezos","TezosToolkit","customHandlers","IpfsHttpHandler","TezosStorageHandler","customMetadataProvider","MetadataProvider","addExtension","Tzip12Module","originatedContract","getHashAndBlockByIds","transactionIds","tokenBalances","getAllTokenBalances","digest","tokenBalancesCount","ops","hasInternals","opId","extractEntrypoint","newDelegate","contractBalance","tokenTxs","tokenArr","opIds","BLACKLISTED_TOKEN_CONTRACTS","transactionId","extra","substring","meta","tokenType","standard","normalizeMetadata","filterMetadata","TaquitoOnly","TzktOnly","getTokenMetadataWithTaquito","at","tzip12","parsed_uri","token_metadata_uri","fetchToken","tzktTokensResponse","toAsset","formats","charAt","aryCamelKey","char","toUpperCase","camelKey","mutableConvertObjectPropertiesSnakeToCamel","handleMetadataExceptions","isTransferable","shouldPreferSymbol","isBooleanAmount","displayUri","thumbnailUri","artifactUri","icon","f","getEntrypointMicheline","michelineParameters","InputValidationService","mnemonics","zxcvbn","score","passwordStrengthDisplay","torusAccount","verifierId","loginType","email","redditAccount","twitterAccount","tezosDomain","username","test","domain","sub","TEZOS_DOMAIN","TOP_DOMAINS","twitterId","expr","endsWith","hexString","isMessageSigning","isMichelineExpr","parsedPayload","valueDecoder","Uint8ArrayConsumer","fromHexString","invalidMnemonic","words","utils","wordCount","w","word","english","LookupService","torusService","tezosDomainsService","records","pendingLookups","initCheck","lookups","TezosDomains","clear","mark","indexTop","getDomainFromAddress","torusLookup","torusKeyLookup","Verifiers","verifierMap","verifier","Google","Reddit","verifierArray","twitterLookup","Twitter","noReveal","torusEntryExist","record","j","party","alias","Alias","MessageService","spinnerOn","spinnerText","messages","defaultTime","beaconResponse","pairingCompleteMsg","timeout","newMessage","emailNotify","redditNotify","twitterNotify","handler","loader","splice","stopSpinner","httpOptions","OperationService","errorHandlingPipe","tz4","sppk","spsk","spsig","KT","microTez","feeHardCap","header","branch","opbytes","sopbytes","preApplyResult","final","opCheck","newPkh","originate","actions","gas_limit","storage_limit","public_key","script","transfer","currentFee","invocation","txAmount","mod","eq","getFA12Transaction","getFA2Transaction","transactionOp","managerTransaction","getContractPkhTransaction","getContractKtTransaction","delegationOp","getContractDelegation","getContractUnDelegation","localOpbytes","signed","applied","originated_contracts","unsignedOperation","broadcast","sig2edsig","localForger","tz2address","decompress","torusReq","jsonrpc","pub_key_X","X","pub_key_Y","Y","post","PublicKey","failed","ior","with","statusText","localForgedBytes","getVotingRights","listings","isRevealed","getVerifiedOpBytes","operationLevel","operationHash","opHashes","opIndex","managerPubkey","manager_pubkey","opBytes","pk2pkh","verify","buf2hex","getConstants","seed2keyPair","b58cencode","mnemonic2seed","mnemonic2entropy","spPrivKeyToKeyPair","hex2buf","elliptic","keyFromPrivate","yArray","getPublic","getY","toArray","prefixVal","pad","getX","isInvertedPk","invertSpsk","inv","remainder","spPointsToPkh","pubX","pubY","keyFromPublic","decodedPk","hexPk","secp256k1","instantiateSecp256k1","compressed","hexToBin","uncompressed","uncompressPublicKey","xy","binToHex","hex2pk","ledgerPreHash","canonical","hexsigToEdsig","decodeString","zarithDecode","byte","zarithDecodeInt","prim","getManagerScript","pkHex","annots","getApproveAmountParameters","getRevokeAmountParameters","getXTZToTokenParameters","minimum","expirationTime","getTokenToXTZParameters","minimumToken","minimumXTZ","getAddLiquidityParameters","minimumLqt","getRemoveLiquidityParameters","lqtBurn","minXtzWithdrawn","minTokensWithdrawn","getTezToTokenPaymentParameters","getTokenToTezPaymentParameters","minimumXtz","parseTokenTransfer","opJson","amounts","fa12ref","isEqual","fa2ref","String","retryPipeline","retries","retryWhen","concatMap","iif","throwError","delayOperator","retryWithWarning","BuyProvider","SubjectService","login","wc2","Amount","decimalPlaces","internalBigInt","internalNormalised","rpcAmount","normalisedAmount","multiplierIntValue","pow","lqdTokenContract","dipdupContracts","fetchContracts","dipdupContract","fetchStorage","total_pool","tez_pool","token_pool","settings","dex","includeSubsidy","createPoolAmounts","xtzPool","tokenPool","calculateXtzToToken","xtzToSell","maxSlippage","expected","xtzToTokenExpectedReturn","xtzToTokenMinimumReturn","rate","xtzToTokenExchangeRateDisplay","impactDouble","xtzToTokenPriceImpact","calculateXtzToTokenFromToken","tokenToSell","calculateTokenToXTZ","xtz","tokenToXtzExpectedReturn","tokenToXtzMinimumReturn","tokenToXtzExchangeRateDisplay","tokenToXtzPriceImpact","calculateTokenToXTZFromXTZ","calculateAddLiquidityXTZ","totalLiquidity","tokenRequired","addLiquidityTokenRequired","liquidityReturned","addLiquidityReturn","exchangeRate","liquidityExpected","liquidityMinimum","calculateAddLiquidityToken","xtzRequired","addLiquidityXtzRequired","calculateRemoveLiquidity","liquidityBurned","xtzOut","removeLiquidityXtzReceived","tokenOut","removeLiquidityTokenReceived","xtzExpected","xtzMinimum","tokenExpected","tokenMinimum","xPool","tPool","dexterCalculations","includeSibsidy","tokenAmount","slippage","xtzToTokenRequiredXtzFor","xtzPoolRpc","tokenPoolRpc","xtzToTokenExchangeRate","xtzAmount","tokenToXtzRequiredTokenFor","tokenToXtzExchangeRate","tokenToXtzMarketRate","xtzToDeposit","xtzIn","totalLqt","tokenToDeposit","tokenIn","lqtBurned","tLqt","estimateLiquidityBakingAPY","TezosDomainsService","unsupportedNetwork","tezosToolkit","Tzip16Module","caching","TaquitoTezosDomainsClient","tezos","getAddressFromDomain","resolver","resolveNameToAddress","getDomainFromAddresses","baseUrl","reverseRecords","TokenBalancesService","_thumbnailsToCreate","combineLatest","sampleTime","resolveAsset","mintingTool","contractAlias","thumbnailUrl","getContractName","getContractLogo","link","visitUrl","getPlaceholderToken","orderedNfts","mergeMarket","getThumbnailUrl","_nfts","aliases","pixels","decode","canvas","createElement","imageData","createImageData","putImageData","toDataURL","NFT_CONTRACT_OVERRIDES","db","Dexie","stores","key_value_store","saveToKvDb","getFromKvDb","where","equals","TokenService","AUTO_DISCOVER","contracts","exploredIds","pendingSave","unlockablesKey","workers","events","evt","NavigationEnd","className","ASSETS","loadMetadata","saveMetadata","tokenIdArray","ids","idx","span","first","last","gte","lte","displayAsset","artifactAsset","isKnownTokenId","tokenIds","contractKeys","contractKey","tokenKeys","tokenKey","isCategoryType","regex","isKnownTokenContract","addAsset","currentKeys","newKeys","checkContractData","updated","_objkt","searchMetadata","tokenObject","ttl","exp","lastCheck","explore","startWorker","recentDay","firstCheck","handleMetadata","tokenCategory","TRUSTED_TOKEN_CONTRACTS","t1","searchTimeMs","isUnknownToken","_saveMetadata","metadataJson","baseUnit","GOOGLE","REDDIT","TWITTER","FACEBOOK","EMAIL","AUTH_DOMAIN","AUTH_DOMAIN_MAINNET","TorusService","torus","nodeDetails","verifierMaps","testnet","typeOfLogin","clientId","subVerifier","caseSensitiveVerifierID","aggregated","mainnet","_loginToConnectionMap","scope","verifierIdField","isVerifierIdCaseSensitive","isVerifierCaseSensitive","proxy","NodeDetailManager","PROXY_ADDRESS_MAINNET","TORUS_NETWORK","PROXY_ADDRESS_TESTNET","TESTNET","verifierMapKeys","initTorus","torusdirectsdk","DirectWebSdk","redirectToOpener","enableLogging","proxyContractAddress","skipSw","lookupPkh","selectedVerifier","fetchNodeDetails","proxyAddress","TorusUtils","sanitizedVerifierId","toLocaleLowerCase","torusNodeEndpoints","torusNodePub","torusIndexes","getNodeDetails","getPublicAddress","referrerPolicy","loginTorus","skipTorusKey","checkIfNewKey","host","mockLogin","jwtParams","login_hint","loginDetails","triggerAggregateLogin","aggregateVerifierType","verifierIdentifier","subVerifierDetailsArray","triggerLogin","userInfo","accessToken","existingPk","preexistingPkh","isNewKey","getTorusKeyPair","TzrateService","apiUrl","usd","tot","totalBalanceUSD","UnlockableService","settingsKey","unlockables","UtilsService","ms","promiseWithTimeout","race","MessageKind","BcService","elected","_elected","initDone","_initDone","subject","wc_pairing_request","wc_delete_request","wc_propagate_request","wc_propagate_response","wc_session_update","channel","BroadcastChannel","onmessage","handleMessage","waitOnLeadership","elector","createLeaderElection","onduplicate","hasLeader","_initAsLeader","awaitLeadership","initAsLeader","postMessage","SESSION_STORAGE_KEY","PAIRING_STORAGE_KEY","KEYCHAIN_STORAGE_KEY","WalletConnectService","bcService","supportedMethods","supportedEvents","sessions","expanded","dapp","pairings","pairing","pairingsExpanded","sessionsExpanded","storageEventHandler","core","relayer","transportOpen","transportClose","initBcSubscriptions","enableWc2","startClient","removeEventListener","PairingRequest","pairingString","DeleteRequest","PropagateRequest","request","UpdateRequest","updateSession","newAddress","PropagateResponse","pairingApproved","approvePairing","rejectPairing","wcResponse","createClient","initDoneAt","subscribeToEvents","delayedPairing","opts","projectId","relayUrl","logger","icons","Client","proposalHandler","getPendingSessionRequests","requestHandler","unhandledSignClientEvents","unhandledPairingEvents","appMetadata","proposer","wcData","requiredNamespaces","chains","methods","namespaces","optionalNamespaces","m","sessionProperties","algo","pubkey","Set","acknowledged","approve","relayProtocol","relays","transactionHash","formatJsonRpcResult","formatJsonRpcError","getSdkError","reason","allowedAccounts","allowedMethods","send_req","sourceAddress","operationDetails","sign_req","getImplicitAccount","extend","paired","lsS","lsP","_session","getAll","_pairing","getPairings","sessionsList","inKeychain","crypto","keychain","has","kc","accountAddress","expiry","_sessions","dSession","pairingsList","active","peerMetadata","_pairings","dPairing","deleteSession","deletePairing","disconnect","deletePairings","deleteSessions","stopClient","heartbeat","removeListeners","prop","eventNames","removeAllListeners","WalletService","encryptionService","storageId","createNewWallet","createEncryptedWallet","hdSeed","hd","encrypted","encryptedSeed","iv2","encryptedEntropy","exportKeyStoreInit","LegacyWallet","getKeys","pwd","LegacyWalletV1","LegacyWalletV2","IV","LedgerWallet","EmbeddedTorusWallet","getSk","updateSkExpiration","storeSk","revealMnemonicPhrase","addImplicitAccount","addOriginatedAccount","kt","implicitAccount","origAcc","OriginatedAccount","originatedAccounts","incrementAccountIndex","clearWallet","instanceId","removeSk","sessionStorage","isFullWallet","FullWallet","isViewOnlyWallet","isObserverWallet","isLedgerWallet","isHdWallet","isTorusWallet","isEmbeddedTorusWallet","isWatchWallet","WatchWallet","isPwdWallet","walletType","provider","initStorage","localStorageId","getLocalStorageId","getStorage","walletData","loadStoredWallet","parsedWalletData","wd","deserializeStoredWallet","implicit","originated","Wallet","originatedAccount","encrypedSeed","TORUS_WALLET_STORE_KEY","ONE_HOUR","displayName","getStoredData","skData","expiration","storedData","Account","getTokenBalance","isImplicit","ktAddress","managerPkh","managerPk","NAME","CONTRACT","admire","None","production","_TTC","_BLTC","_M3DW","ImportService","pwdRequired","importWalletFromJson","importWalletFromObject","findContracts","importWalletFromPk","verifierDetails","ledgerImport","torusImport","watch","embedded","torusWallet","updateTwitterName","StartComponent","importService","route","isMobile","queryParams","devtool","prompt","torusLogin","ExportService","downloadWallet","blob","Blob","filename","saveAs","downloadOperationData","$event","stopPropagation","NewWalletComponent","exportService","showTacos","pwd1","pwd2","userMnemonic","hideBlur","isSelectedMnemonic","pwdStrength","ekfDownloaded","activePanel","longClickTs","generateSeed","MNEMONIC","array","wordsToVerify","mnemonicLength","random","checkWord","wordInput","getElementById","blur","formatVerifyDescription","indexFormat","valueFormat","verifyView","pwdView","mnemonicMatch","encryptWallet","preventDefault","validPwd","offsetWidth","calcStrength","done","export","getPkh","download","mouseOut","getSelection","removeAllRanges","checkSelection","isTextSelected","selection","isCollapsed","hostVars","ctx_r10","_r6","ctx_r16","ctx_r38","ctx_r40","ctx_r41","ChooseWalletState","MnemonicImportComponent","MIN_PWD_LENGTH","importOption","Downloaded","fileName","browser","advancedForm","bip39Wordlist","hdImport","chooseWalletStateEnum","chooseWalletState","UserDoesNotNeedToChooseWallet","legacyCandidate","hdCandidate","navigation","getCurrentNavigation","extras","allowDrop","bind","handleFileDragAndDrop","clickPassword","removeAttribute","blurPassword","setAttribute","retrieve","legacyWalletAddress","used","isUsed","every","getCandidateBalances","table","legacy","getChooseWalletState","TzktErrorEncountered","UserNeedsToChooseWallet","setPwd","setPwdOrConfirmWalletType","setPwdAfterConfirmingWalletType","showPkh","importPreCheck","keyFile","typeCheckFile","walletJson","checkImportPwd","import","handleFileInput","dataTransfer","files","fileToUpload","validateFile","reader","FileReader","readAsText","onload","ext","lastIndexOf","seedWordKeydown","keyCode","selectionStart","selectionEnd","wordPos","charPos","metaKey","ctrlKey","second","firstSplit","pop","selStart","getAttribute","selEnd","LedgerService","setTransport","transport","TransportWebHID","create","TransportU2F","transportCheck","getAddress","sanitize","signOperation","signHash","getPk","ConnectLedgerComponent","ledgerService","defaultPath","defaultText","pendingLedgerConfirmation","isHDDerivationPathCustom","checkBrowser","navigator","userAgent","userAgentData","brands","some","brand","platform","importFromPk","setDefaultPath","v","P404Component","P500Component","PrivacyPolicyComponent","getHostName","hostname","TermsOfUseComponent","EmbeddedAuthService","authenticate","authReq","authMessage","createAuthMessage","nonce","signMessage","signExprSilent","hexExpr","requestId","authPayload","purpose","currentTime","_network","Parser","parseMichelineExpression","hexMessage","valueEncoder","LqdEntrypoints","ctx_r42","ctx_r43","Mode","zeroTxParams","SwapLiquidityComponent","estimateService","tezosDomainService","tezosDomains","chartService","prepareResponse","swap","xtzToToken","defaultTransactionParams","latestSimError","customFee","customGasLimit","customStorageLimit","minimumLqd","qty","qtyRaw","qtyOut","qtyRawOut","xtzBalance","lqdBalance","tzBTCBalance","simSemaphore","chartDatas","chartOptions","chartInit","setTokenBalances","initChartsMobile","arr","leftChart","miniChart","tokenToXtz","addLiquidity","removeLiquidity","initChartsDesktop","initCharts","birthExchangeRate","expectedRate","hydratePools","APY","xtzToBuy","tokenToBuy","calcSwap","calcAddLiquidity","toSell","calcRemoveLiquidity","lqtToBurn","estimateFees","preview","getFullyPreparedTxs","toggleMode","chartToggle","liquidity","toggleDirection","dir","evalAmount","getTotalFee","getTotalBurn","mul","burnAmount","customSlippage","customSlippageFocus","customSlippageBlur","getMaxAmount","accountBalance","tez","lqd","tzBTC","prevSimError","txs","getMinimalPreparedTxs","checkBalances","updateMaxAmount","assert","minimalTxs","opsWithCustomLimits","extraStorage","extraGasPerOp","extraStoragePerOp","fullyTx","maxTez","maxLQD","maxtzBTC","gt","sanitizeNumberInput","openInfoModal","ctx_r50","ctx_r72","ctx_r75","ConfirmSendComponent","tokenBalanceService","confirmRequest","operationResponse","externalReq","schema","batchParamIndex","micheline","batchParameters","parametersFormat","parametersDisplay","transformedParameters","extractedSchema","showAll","showFullBatch","sendResponse","ledgerError","pwdInvalid","syncSub","closeModalAction","loadParameters","num","updateParameters","parametersToMicheline","sc","Schema","Execute","parametersToTabular","children","setParametersFormat","beaconTokenTransfer","assertMichelsonData","emitMicheline","indent","newline","traverse","isObject","valueOf","getTotalAmount","totalSent","getTotalCost","totalFee","totalActiveStorageLimit","getTotalDefaultStorage","getTotalDefaultGas","totalGas","totalStorage","getQuantity","totalAmount","ledgerRetry","sendTransaction","inject","broadCastLedgerTransaction","torusNotification","requestLedgerSignature","signedOp","signedOperation","getUsername","getVerifier","previewAttention","recipientKind","tmp","toggleTab","elem","tagName","ctx_r3","PrepareSendDropdownComponent","torusVerifierName","torusVerifier","ctx_r18","ctx_r19","ctx_r44","ctx_r45","ctx_r47","ctx_r48","PrepareSendComponent","prepareRequest","isMultipleDestinations","hideAmount","accountDropdownIsOpen","torusLookupId","torusLookupAddress","torusTwitterId","torusPendingLookup","toMultipleDestinationsString","prevEquiClass","sendMax","toPkh","clearTorus","getTitle","getAssetName","short","amountChange","equiClass","checkBalance","updateDefaultValues","toPkhChange","finalCheck","getBatch","invalidTorusAccount","torusReady","checkTx","row","cols","col","torusError","google","reddit","twitter","sendEntireBalance","checkMaxAmount","toggleDestination","maxToSend","maxKt","maxTz","maxAmount","verifierChange","batchSpace","numberOfTxs","txsLimit","numberWithCommas","dynSize","pasteToPkh","clipboard","readText","clipText","handleScanResponse","ConfirmSendEmbedComponent","templateRequest","isApproved","descriptions","hideScrollbar","cancel","resetScrollbar","scrollBarWidth","overflow","SwapLiquidityConfirmComponent","semaphore","confirmTitle","parseTransactions","csr","hasTrailingZeroApproval","values","expectedXtz","expectedToken","expectedLqd","SendComponent","confirmSwapLiquidityRequest","thresholdUSD","swapLiquidityEntrypoints","externalRequest","selectedAccount","checkOpReq","operationRequest","opReq","silent","validParameters","simulateRequest","tokenTransferObj","getTokenTransferObj","partialOps","fullyPrepared","getTemplateFee","total","silentInject","confirmTransactions","isLbReq","getValue","handlePrepareResponse","preparedTransactions","handleConfirmResponse","handleTemplateApproval","ExprTemplateComponent","SignExprEmbedComponent","signResponse","isMessage","signRequest","ui","acceptSigning","rejectSigning","QueueEmbedComponent","queueTime","hours","updateTime","SigninComponent","loginResponse","loginOptions","queueTimeVisible","queueLen","statusCounter","queueEndpoint","viewportCheck","loginConfig","customPrio","LoginPrio","Low","queueLenInterval","getQueueLen","dismiss","startQueue","loginOption","screen","setHighPrio","queueInterval","timeBetweenChecks","checkQueue","stopQueue","clearInterval","abort","animation","back","loginData","len","LowFast","High","setLowPrio","skipQueue","action","identity","groups","updateQueue","EstimatedTimeSeconds","Status","triesLeft","CardComponent","Permission","EmbeddedComponent","embeddedAuthService","permissionMatrix","brio","origins","minterpop","interpop","humanMachine","ubisoft","gap","micheline_silent","manutd","lexus","blockspace","evian","souvie","tzstaging","studioexception","cleantree","vitality","kanvas","proofof","emergents","thegoodsociety","circa","mooncakes","truename","verticalcrypto","playrecord","mclaren","hek","flosports","serpentine","pendingOps","blockCard","queueMode","currentInstanceId","handleRequest","hasPermission","RequestTypes","loginRequest","handleLoginRequest","handleOperationRequest","signExprRequest","handleSignExprRequest","trackRequest","handleTrackRequest","logoutRequest","handleLogoutRequest","authRequest","handleAuthRequest","cardRequest","handleCardRequest","dismissRequest","background","attachEvent","parent","ResponseTypes","initComplete","MICHELINE","MICHELINE_SILENT","signExprResponse","normalizeTemplate","LOGIN","config","customSpinnerDismissal","OPERATIONS","isValidOperation","logoutResponse","noWalletError","toImport","dismissResponse","idToken","long_lived_token","filteredUserInfo","generateInstanceId","userData","authParams","authResponse","strictAuth","importAccount","show","cardResponse","common","ophashSubscription","subscribeToConfirmedOps","trackResponse","permission","allowedOrigin","ReceiveComponent","showReceiveFormat","btnOutline","dropdownItem","getQR","QRCode","errorCorrectionLevel","scaleFactor","color","light","ctx_r8","NewImplicitComponent","errorMsg","openPkhSpot","addPkh","navigateByUrl","PermissionRequestDropdownComponent","PermissionRequestComponent","permissionResponse","preSelectedAccount","permissionRequest","rejectPermissions","grantPermissions","scopeToText","cachedIcon","ctx_r22","SignExprComponent","isDeku","ctx_r21","ctx_r24","OriginateComponent","beaconMode","customGas","customStorage","simError","activeTab","isValidOrigination","recommendations","clearForm","assertMichelsonContract","getOrigination","getScript","validateOrigination","sendOrigination","ledgerSign","keyPressNumbersDecimal","charCode","which","DelegateComponent","domainPendingLookup","defaultFee","pkhFee","ktFee","advanced","snapshot","paramMap","estimateDefaultFee","pwdValid","sendDelegation","getFee","revealed","revealFee","invalidInput","ctx_r5","AccountListBodyComponent","postfix","substr","selRef","viewRef","getTotalBalance","getTotalFiat","AccountListComponent","ctx_r17","ExportMnemonicComponent","mnemonicPhrase","SessionSelectDropdownComponent","SessionSelectComponent","changeAddress","UriHandlerComponent","connectApp","WalletClient","connect","handleBeaconMessage","changeFavicon","handleStorageEvent","isConnected","hasFocus","src","SignPayloadRequest","isBlocked","PermissionRequest","handlePermissionRequest","OperationRequest","isSupportedOperationRequest","isSupportedSignPayload","PermissionScope","OPERATION_REQUEST","SIGN","invalidParameters","invalidOptionals","OperationResponse","newValue","senderIds","app","newPeer","BuyComponent","sanitizer","BuyProviderType","dev","mobile","isLoading","Coinbase","generateOnRampURL","appId","destinationWallets","blockchains","opener","Transak","walletAddressesData","coins","XTZ","apiKey","bypassSecurityTrustResourceUrl","MoonPay","signUrl","encodeURIComponent","iframeLoaded","iframeError","BuyModalComponent","onrampInstance","buyTez","LoggedInComponent","loadChildren","module","redirectTo","AppRoutingModule","forRoot","InfoComponent","href","proceed","newTab","AlertComponent","removeMessage","notifyFormat","mailtoFormat","redditPmFormat","twitterPmFormat","encodeURI","encodedBody","accountType","getAlias","MessagesComponent","ctx_r14","AccountDropdownComponent","trackAccount","ctx_r6","ctx_r12","ctx_r15","MobileMenuDropdownComponent","delegateName","newAccount","receive","HeaderComponent","getDelegateName","parentNode","FooterComponent","darkText","promptTelegramDialog","SpinnerNewComponent","SpinnerComponent","AgreementComponent","displayAgreement","accepted","accept","AppComponent","previous","container","setDefaultLang","getBrowserLang","use","checkEmbedded","brk","clientWidth","setProperty","oldValue","returnLanguage","lang","bg","resize","fontSize","setLanguage","TruncatePipe","endTrail","returnString","endTrailstring","HttpLoaderFactory","TranslateHttpLoader","AppModule","bootstrap","BrowserModule","BrowserAnimationsModule","TranslateModule","provide","TranslateLoader","useFactory","deps","HttpClient","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","webpackContext","webpackContextResolve","__webpack_require__","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[190]}