{"version":3,"file":"main.f5b559412c04fb8a.js","mappings":"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AAGrzB,GAVrC,MAUsD/jB,gDAb3Dg9D,+CAAY7vD,UAAZ6vD,GAAb,mBC4EM,YAA4B19C,GAChC,OAAO,IAAI89C,KAAoB99C,EAAM,iBAAkB,SA8FlD,IAAM+9C,GAAb,MAAM,MAAOA,8EAASC,WAFRnB,mCA5BD,CAEThvC,IACAud,IACAh8B,KACA6O,IACAxL,KACAm+B,EACAhG,KACArwB,IACAuU,IACAkjB,EACAv0B,KACAsM,IACAkuB,GACA7kC,KACAm0B,IACA4S,GACA1f,KACA0G,KACAlkB,KACAguB,KAEAl+B,KACA2wD,GACA5vD,KACAnC,MACDC,SAzCCqyD,KACAC,MACAnyD,KACAouD,GACAruD,KACAP,kBACA4yD,aAAwB,CACtB7vC,OAAQ,CACN8vC,QAASC,KACTC,WAAYC,GACZC,KAAM,CAACC,YAkCFV,GAAb,GC1KI10E,sBACFq1E,SACA52E,OAAO4C,QAAQI,IAAM,cAGvB6zE,OACGC,gBAAgBb,IAChB18C,MAAOzU,GAAQliB,QAAQI,IAAI8hB,sBCb9B,OACA,aACA,gBACA,WACA,eACA,kBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,cACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,aACA,gBACA,YACA,eACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,gBACA,mBACA,gBACA,mBACA,eACA,kBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,cACA,iBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,mBACA,gBACA,WACA,cACA,aACA,gBACA,aACA,gBACA,YACA,eACA,mBACA,sBACA,kBACA,qBACA,aACA,gBACA,aACA,gBACA,WACA,cACA,aACA,gBACA,aACA,gBACA,gBACA,mBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,aACA,gBACA,iBACA,oBACA,gBACA,mBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,kBACA,qBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,cACA,iBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,gBACA,mBACA,cACA,iBACA,aACA,gBACA,cACA,iBACA,cACA,kBACA,qBACA,iBACA,gBACA,mBACA,aACA,gBACA,aACA,gBACA,aACA,kBACA,qBACA,gBACA,aACA,gBACA,mBACA,sBACA,aACA,gBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,oBAIA,cACA,WACA,YAEA,cACA,cACA,8CACA,gCACAe,EAEA,YAEAwlB,kBACA,uBAEAA,YACA0rC,aACA1rC","names":["ModalComponent","constructor","cd","this","Subscription","modalSub","currentModel","subscribe","load","forceClose","undefined","name","isOpen","willOpen","open","data","close","detectChanges","ngOnInit","ngOnDestroy","unsubscribe","window","innerHeight","document","body","scrollHeight","style","marginRight","overflowY","isMobile","documentElement","getPropertyValue","setTimeout","scrollTo","top","BehaviorSubject","i0","selectors","QrScannerComponent","beaconService","deeplinkService","messageService","super","_CONSTANTS","environment","EventEmitter","openModal","override","scan","loadingCam","QrScanner","v","videoplayer","_a","nativeElement","errorMessage","qrScanner","f","_b","result","handleQrCode","start","stop","destroy","e","console","warn","scanResult","qrString","log","pairingInfo","QRtoPairingJson","preNotifyPairing","addPeer","scanResponse","emit","pkh","closeModal","addError","handlePaste","ev","clipboardString","clipboardData","getData","manualInput","Display","Size","AssetComponent","elRef","tokenService","image","medium","loaderUrl","hideSpinner","display","none","ngOnChanges","changes","P","assets","previousValue","currentValue","JSON","stringify","N","_c","j","_d","p0","assetToUrl","pickAsset","z","_e","p1","A","_f","from","to","reload","ngAfterViewInit","lazyLoad","dataSrc","preSrc","postSrc","mimeType","updateDisplay","isImage","requires","includes","isAudio","audio","isVideo","video","is3D","threeD","startsWith","onLoad","target","id","onLoadData","muted","volume","onError","errors","evaluateInvalid","unknownUrl","type","priorityList","uri","evaluate","poster","asset","determineMime","error","setSrc","obs","IntersectionObserver","entries","_","forEach","entry","isIntersecting","unobserve","inView","observe","url","Error","MODEL_3D_WHITELIST","getContractAddressFromAsset","response","i","ok","fetch","method","headers","get","contractAddress","size","slice","CONSTANTS","ToggleComponent","state","default","toggle","stateChange","AdvancedToggleComponent","ctx","ctx_r7","l","width","height","gradient","chartArea","theme","replace","chartWidth","right","left","chartHeight","bottom","createLinearGradient","H","addColorStop","Chart","registerables","ChartSeries","ChartComponent","Object","datasets","labels","day","afterTooltipDraw","chart","args","options","x","tooltip","dataPoints","element","yAxis","scales","y","save","beginPath","moveTo","lineTo","lineWidth","setLineDash","strokeStyle","stroke","textAlign","cn","font","fillStyle","getComputedStyle","fillText","title","restore","toggleChartExpand","chartExpanded","chartRef","parentElement","classList","refreshDDSets","ddSets","D","sets","sort","a","b","nameA","toLowerCase","nameB","draw","set","ChartTitle","datas","series","find","ds","label","tooltipValue","parseFloat","length","toString","toFixed","toLocaleString","V","Mn","Cn","zn","_g","Zn","_h","getContext","En","_j","q","_k","map","plugins","drawn","toggleSeries","overrideDatasetConfig","getChartOptions","toggleSet","reset","key","keys","hidden","units","month","pointHoverBorderWidth","design","pointHitRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointBackgroundColor","backgroundColor","context","getGradientBackground","yTickPadding","layout","padding","beginAtZero","position","ticks","maxTicksLimit","align","weight","family","textStrokeColor","callback","index","Number","grid","drawBorder","responsive","maintainAspectRatio","legend","hover","mode","axis","intersect","tooltips","interaction","elements","line","tension","point","radius","enabled","titleColor","bodyColor","footerColor","displayColors","callbacks","item","dataset","dataIndex","DropdownComponent","ListComponent","closeDropdown","closest","ecmpId","toggleDropdown","EventComponent","translate","timeAgoPipe","activityService","subjectService","OpStatus","LookupType","setInterval","trigger","subscriptions","add","confirmedOp","opHash","activity","hash","fresh","getType","destination","address","operationType","source","account","explorerURL","getCounterparty","transaction","c","trim","getEventIcon","lookupType","getEventStatusIcon","status","printAmount","formatAmount","tokenId","amount","sentKind","entrypoint","zeroSent","receivedKind","split","getAddressPrefix","copy","copyToClipboard","instant","ActivityComponent","trackEvent","block","NftsTokenComponent","tokenBalancesService","DisplayLinkOption","m","token","balance","F","nn","dn","isNew","viewToken","balanceChangeTimer","formatBalance","Big","div","Math","parseInt","decimals","SearchBarComponent","Subject","inputUpdated","pipe","debounceTime","filter","value","onInput","hasValue","activeAccount","placeholderText","placeholder","onKeydown","next","onFocus","isActive","searchButtonClicked","input","focus","onBlur","searchText","NftsBodyComponent","loaded","filtered","raw","chunkSize","refresh","isDisplaying","tokensToDisplay","tokens","search","sliceEnd","cb","Pn","scrollTop","Tn","rn","Un","Dn","clientHeight","Fn","An","addEventListener","t","match","RegExp","isNaN","updateFilter","prevFilter","trackToken","ctx_r9","NftsComponent","walletService","nftsUpdated","p","activeAddress","getValue","isInitLoad","nfts","isDiscover","nftsArray","flat","logout","o","displayTokenCard","sel","querySelector","innerWidth","scroll","offsetTop","shouldDisplayLink","option","wallet","TorusWallet","sanitizeKey","trackContract","contract","getContractAlias","category","join","BasicButtonComponent","SendButtonComponent","getAsset","tokenTransfer","prepareTransaction","prepareTokenTransfer","symbol","BalanceTokenComponent","removeCommaPipe","getBalance","balanceXTZ","getBalanceFiat","balanceUSD","price","buyTez","moonpay","BalancesComponent","balances","calcTotalBalances","walletUpdated","wrap","remove","ngAfterViewChecked","thumbnailAsset","toggleTotalBalances","isFiat","totalBalances","reduce","prev","XTZrate","openSwap","startSpinner","TokenDetail","unlockableService","feat","contains","blacklistMeta","tokenFiltered","isNFT","descOverflow","description","expand","moreInfo","autoOverflow","expandImage","imageExpanded","toggleFeature","assetLoaded","AccountViewComponent","moreThan15","ImplicitAccount","SettingsComponent","router","coordinatorService","implicitAccounts","getImplicitAccounts","syncBeaconState","onResize","accountAvailable","findIndex","impAcc","wideAccounts","formatAddress","rescan","resetCounters","update","navigate","rescanAll","resetAllMetadata","revealMnemonic","canRevealMnomonic","HdWallet","LegacyWalletV3","routes","path","component","DelegatePageComponent","delegateService","inputValidationService","messageServcie","delegates","take","d","delegate","ceil","freeSpace","estimatedRoi","openForDelegation","minDelegation","obj","stake","round","val","toPercent","toggleCustom","isShowingCustom","ActivateComponent","LoggedInRoutingModule","RouterModule","LoggedInModule","SwapLiquidityService","ChartService","EstimateService","RemoveCommaPipe","imports","CommonModule","HttpClientModule","FormsModule","operationService","activate","formInvalid","checkInput","secret","ans","success","payload","res","addSuccess","addWarning","msg","err","code","WalletType","ErrorHandlingPipe","transform","errorId","withObj","location","protocol","ERROR_LIST","s","string","k","int","jsonWith","Z","indexOf","pure","TimeAgoPipe","timestamp","now","sec","secs","mn","mns","hr","hrs","days","months","year","years","timeNow","Date","getTime","diff","timediff","count","output","minutes","seconds","ActivityService","lookupService","indexerService","updateTransactions","getAccount","getTransactonsCounter","flatMap","of","knownTokenIds","fromPromise","accountInfo","counter","searchAllMetadata","unknownTokenIds","recheckMetadata","updateTokenBalances","getAllTransactions","activities","storeWallet","upToDate","Array","isArray","idsWithBalance","push","updateTokenBalance","currentTokenIds","getTokenBalances","tokenBalanceUpdated","getOperations","resp","operations","oldActivities","unconfirmedOps","op","opNew","concat","oldState","promptNewActivities","counterParty","check","newActivities","timeDiff","shortAddress","ref","metadataUpdated","takeUntil","delay","Y","modify","withLookup","u","resolve","factory","BalanceService","tzrateService","getBalanceAll","getAccounts","getAccountBalance","updateAccountBalance","newBalance","updateTotalBalance","updateFiatBalances","change","totalBalanceXTZ","BeaconService","tzktService","pairInfoJson","pairInfo","parse","isNewPairingRequest","addBeaconWait","peersJson","localStorage","getItem","newPublicKey","peers","publicKey","peer","force","client","removeBeaconMsg","icon","cacheIcon","json","cachedIcon","setItem","getPeers","permissions","getPermissions","removePeers","removePeer","senderId","getSenderId","peerResponse","removeAppMetadata","removePermissions","removeAllPermissions","removePermission","accountIdentifier","getAppMetadataList","rejectOnPermission","message","respondWithError","BeaconErrorType","rejectOnNetwork","rejectOnUserAbort","rejectOnSourceAddress","rejectOnTooManyOps","rejectOnUnknown","rejectOnParameters","rejectOnBroadcastError","errorType","requestMessage","BeaconMessageType","version","BEACON_VERSION","beaconId","respond","approvePermissionRequest","network","scopes","approveSignPayloadRequest","signature","signingType","responseSync","removeItem","swapLiquidityService","fetchLBGraphData","tzbtc","fetchHistoricalQuotesByContract","tzBTCContract","stats","fetchHistoricalStatsByContract","lqdContract","interval","reverse","tvlUsd","getDate","getHours","defaultDatasetValues","borderColor","borderRadius","borderWidth","pointBorderWidth","pointBorderColor","pointRadius","pointHoverColor","fill","XTZtzBTC","tzBTCXTZ","totalValueLocked","offset","req","query","r","quotes1h","C","quotes1d","stats1d","SignalService","balanceService","init","connection","HubConnectionBuilder","withUrl","build","on","sender","invoke","parameter","confirmStatus","onclose","__awaiter","updateAccountData","acc","handleDelegateResponse","subscribeToAccount","types","State","CoordinatorService","teztoolsService","signalService","Map","stopAll","accounts","defaultDelayActivity","longDelayActivity","startXTZ","tzrateInterval","getTzrate","getMarkets","recheckWalletAddresses","defaultDelayPrice","restoreFeatures","scheduler","scheduleData","UpToDate","stateCounter","setDelay","boost","metadata","addressExists","addUnconfirmedOperations","Wait","changeState","Updating","shortDelayActivity","latestActivity","age","shift","newState","time","delete","transactions","times","fee","parameters","unshift","delegation","origination","kt1","DeeplinkService","params","pairingJson","extractPairingJson","b58cdecode","popPairingJson","qrPayload","T","DelegateService","getDelegates","getDelegate","I","bcd","then","resolveDelegateByAddress","Promise","EncryptionService","encrypt","plaintext","password","salt","encrypt_v2","decrypt","chiphertext","decrypt_v1","decrypt_v2","encrypt_v1","pbkdf2","aesCtr","AES","salty","Buffer","cryptob","scrypt","cipher","forge","iv","byteStringBuffer","finish","toHex","tag","chipher","parts","decipher","shiftIV","isInteger","buf","http","imputValidationService","contractsOverride","chainId","manager","pk","preLoadData","head","all","getHeader","toPromise","getCounter","getManager","chain_id","estimateTransactions","estimate","estimateOrigination","isOrigination","queue","retry","_estimate","catch","simulation","gasLimit","min","floor","storageLimit","tx","createOriginationObject","createTransactionObject","simulate","contents","reveal","limits","kind","operation_result","opObj","gas","storage","getOpUsage","localForge","fop","bytes","totalGasLimit","totalStorageLimit","dtp","customLimits","recommendFee","burn","burnFee","content","gasUsage","minus","plus","balance_updates","balanceUpdate","consumed_gas","internal_operation_results","internalResult","storageUsage","costPerByte","getOpLimits","gasUnits","numberOfOperations","revealGasLimit","minimalFee","feePerByte","feePerGasUnit","postRpc","operation","checkApplied","catchError","errHandler","limit","contractOverride","gasRecommendation","relativeLimit","percentage","max","gasEstimation","storageRecommendation","storageEstimation","getRpc","IndexerService","isUsedAccount","getContractAddresses","getTokenMetadata","skipTzkt","TeztoolsService","rehydrate","_defiTokens","_markets","contracts","tokenAddress","usdValue","tezPool","markets","defiTokens","store","storeKey","parsed","TzktService","Tezos","TezosToolkit","customHandlers","IpfsHttpHandler","TezosStorageHandler","customMetadataProvider","MetadataProvider","addExtension","Tzip12Module","tzkt","originatedContract","getHashAndBlockById","transactionId","ops","tokenBalances","getAllTokenBalances","digest","tokenBalancesCount","tokenCount","hasInternals","opId","extractEntrypoint","newDelegate","contractBalance","tokenTxs","tokenArr","O","meta","tokenType","tokenBalanceCache","standard","normalizeMetadata","filterMetadata","getTokenMetadataWithTaquito","at","tzip12","parsed_uri","token_metadata_uri","fetchToken","TZKT_TOKEN_QUERY_SIZE","tzktTokensResponse","toAsset","formats","charAt","aryCamelKey","char","toUpperCase","camelKey","hasOwnProperty","mutableConvertObjectPropertiesSnakeToCamel","handleMetadataExceptions","isTransferable","shouldPreferSymbol","isBooleanAmount","displayUri","thumbnailUri","artifactUri","InputValidationService","mnemonics","validMnemonic","zxcvbn","score","passwordStrengthDisplay","validAddress","torusAccount","verifierId","loginType","email","redditAccount","twitterAccount","tezosDomain","username","re","test","domain","sub","twitterId","passphrase","expr","endsWith","derivationPath","hexString","hex","isMessageSigning","isMichelineExpr","parsedPayload","valueDecoder","Uint8ArrayConsumer","LookupService","torusService","tezosDomainsService","initCheck","records","lookups","TezosDomains","clear","pendingLookups","mark","indexTop","getDomainFromAddress","torusLookup","torusKeyLookup","Verifiers","verifierMap","google","verifier","Google","reddit","Reddit","twitter","verifierArray","twitterLookup","Twitter","noReveal","torusEntryExist","record","party","alias","Alias","MessageService","defaultTime","messages","timeout","newMessage","emailNotify","redditNotify","twitterNotify","handler","loader","splice","pairingCompleteMsg","text","spinnerText","spinnerOn","stopSpinner","httpOptions","OperationService","errorHandlingPipe","tz1","Uint8Array","tz2","tz3","edpk","sppk","edsk","spsk","edsig","spsig","sig","B","TZ","KT","header","branch","opbytes","sopbytes","preApplyResult","final","opCheck","newPkh","originate","actions","feeHardCap","gas_limit","storage_limit","public_key","microTez","script","transfer","currentFee","invocation","txAmount","mod","eq","getFA12Transaction","getFA2Transaction","transactionOp","managerTransaction","getContractPkhTransaction","getContractKtTransaction","delegationOp","getContractDelegation","getContractUnDelegation","localOpbytes","sk","signed","sign","sbytes","applied","originated_contracts","unsignedOperation","broadcast","sig2edsig","localForger","tz2address","decompress","post","jsonrpc","pub_key_X","X","pub_key_Y","PublicKey","tn","failed","lines","n","with","statusText","localForgedBytes","getVotingRights","listings","isRevealed","getVerifiedOpBytes","operationLevel","operationHash","opHashes","opIndex","managerPubkey","manager_pubkey","opBytes","pk2pkh","verify","buf2hex","prefix","getConstants","seed2keyPair","seed","keyPair","naclSign","b58cencode","secretKey","blake2b","mnemonic2seed","mnemonic","bip39","mnemonic2entropy","pkDecoded","spPrivKeyToKeyPair","hex2buf","elliptic","keyFromPrivate","yArray","getPublic","getY","toArray","prefixVal","pad","getX","isInvertedPk","invertSpsk","invertedPks","inv","remainder","spPointsToPkh","pubX","pubY","keyFromPublic","decodedPk","hexPk","secp256k1","instantiateSecp256k1","compressed","hexToBin","uncompressed","uncompressPublicKey","xy","binToHex","hex2pk","h","buffer","byteArray","hexParts","paddedHex","prefixx","Bs58check","enc","ledgerPreHash","canonical","hexsigToEdsig","decodeString","zarithDecode","byte","zarithDecodeInt","R","prim","getManagerScript","pkHex","annots","getApproveAmountParameters","getRevokeAmountParameters","getXTZToTokenParameters","minimum","expirationTime","getTokenToXTZParameters","minimumToken","minimumXTZ","getAddLiquidityParameters","minimumLqt","getRemoveLiquidityParameters","lqtBurn","minXtzWithdrawn","minTokensWithdrawn","getTezToTokenPaymentParameters","getTokenToTezPaymentParameters","minimumXtz","parseTokenTransfer","opJson","addresses","amounts","K","fa12ref","isEqual","fa2ref","String","nodeURL","retryPipeline","retries","retryWhen","concatMap","iif","throwError","delayOperator","retryWithWarning","SubjectService","origin","beaconResponse","Amount","rpcAmount","normalisedAmount","decimalPlaces","multiplierIntValue","pow","internalNormalised","internalBigInt","fetchContracts","dipdupContract","dipdupContracts","fetchStorage","total_pool","lqtTotal","tez_pool","xtzPool","token_pool","tokenPool","settings","dex","includeSubsidy","createPoolAmounts","calculateXtzToToken","xtzToSell","maxSlippage","expected","xtzToTokenExpectedReturn","xtzToTokenMinimumReturn","rate","xtzToTokenExchangeRateDisplay","priceImpact","xtzToTokenPriceImpact","impactDouble","calculateXtzToTokenFromToken","tokenToSell","calculateTokenToXTZ","xtz","tokenToXtzExpectedReturn","tokenToXtzMinimumReturn","tokenToXtzExchangeRateDisplay","tokenToXtzPriceImpact","calculateTokenToXTZFromXTZ","calculateAddLiquidityXTZ","totalLiquidity","tokenRequired","addLiquidityTokenRequired","liquidityReturned","addLiquidityReturn","exchangeRate","liquidityExpected","liquidityMinimum","calculateAddLiquidityToken","xtzRequired","addLiquidityXtzRequired","calculateRemoveLiquidity","liquidityBurned","xtzOut","removeLiquidityXtzReceived","tokenOut","removeLiquidityTokenReceived","xtzExpected","xtzMinimum","tokenExpected","tokenMinimum","xPool","tPool","dexterCalculations","includeSibsidy","tokenAmount","slippage","xtzToTokenRequiredXtzFor","xtzPoolRpc","tokenPoolRpc","xtzToTokenExchangeRate","xtzAmount","tokenToXtzRequiredTokenFor","tokenToXtzExchangeRate","tokenToXtzMarketRate","xtzToDeposit","xtzIn","totalLqt","tokenToDeposit","tokenIn","lqtBurned","tLqt","estimateLiquidityBakingAPY","TezosDomainsService","tezosToolkit","Tzip16Module","TaquitoTezosDomainsClient","tezos","caching","getAddressFromDomain","resolver","resolveNameToAddress","pending","collect","reject","items","getDomainFromAddresses","promise","baseUrl","reverseRecords","TokenBalancesService","mergeMarket","combineLatest","resolveAsset","contractAlias","CONTRACT_ALIASES","thumbnailUrl","_thumbnailsToCreate","getContractName","getContractLogo","link","visitUrl","unknown","getPlaceholderToken","orderedNfts","getThumbnailUrl","_nfts","aliases","pixels","decode","canvas","createElement","imageData","createImageData","putImageData","toDataURL","logo_url","displayUrl","ObjktService","resolveToken","resolveCollection","sleep","resolveCollections","contractAddresses","_objkts","fa","objkts","objkt","logo","ms","TokenService","objktService","loadMetadata","saveMetadata","events","evt","NavigationEnd","className","tokenIdArray","ids","idx","span","first","last","gte","lte","displayAsset","artifactAsset","isKnownTokenId","tokenIds","contractKeys","contractKey","tokenKeys","tokenKey","isCategoryType","regex","isKnownTokenContract","addAsset","currentKeys","newKeys","checkObjktData","updated","_objkt","_saveMetadata","searchMetadata","tokenObject","ttl","exp","exploredIds","lastCheck","explore","workers","startWorker","recentDay","firstCheck","handleMetadata","tokenCategory","TRUSTED_TOKEN_CONTRACTS","t1","searchTimeMs","isUnknownToken","pendingSave","metadataJson","BLACKLISTED_TOKEN_CONTRACTS","baseUnit","GOOGLE","REDDIT","TWITTER","FACEBOOK","AUTH_DOMAIN","TorusService","testnet","typeOfLogin","clientId","subVerifier","caseSensitiveVerifierID","aggregated","mainnet","scope","verifierIdField","isVerifierIdCaseSensitive","verifierMaps","proxy","verifierMapKeys","initTorus","torus","torusdirectsdk","DirectWebSdk","redirectToOpener","enableLogging","proxyContractAddress","skipSw","lookupPkh","selectedVerifier","fetchNodeDetails","FetchNodeDetails","proxyAddress","TorusUtils","nodeDetails","torusNodeEndpoints","torusNodePub","getNodeDetails","sanitizedVerifierId","toLocaleLowerCase","getPublicAddress","referrerPolicy","loginTorus","skipTorusKey","host","mockLogin","jwtParams","_loginToConnectionMap","login_hint","loginDetails","triggerAggregateLogin","aggregateVerifierType","verifierIdentifier","subVerifierDetailsArray","triggerLogin","userInfo","accessToken","privateKey","getTorusKeyPair","TzrateService","apiUrl","usd","tot","totalBalanceUSD","UnlockableService","unlockables","settingsKey","WalletService","encryptionService","createNewWallet","utils","createEncryptedWallet","hdSeed","entropy","hd","encrypted","encryptedSeed","iv2","encryptedEntropy","exportKeyStoreInit","getKeys","pwd","LegacyWalletV1","LegacyWalletV2","IV","LedgerWallet","EmbeddedTorusWallet","getImplicitAccount","revealMnemonicPhrase","addImplicitAccount","addOriginatedAccount","kt","implicitAccount","origAcc","OriginatedAccount","originatedAccounts","incrementAccountIndex","clearWallet","instanceId","storageId","sessionStorage","isFullWallet","FullWallet","isViewOnlyWallet","isObserverWallet","isLedgerWallet","isHdWallet","isTorusWallet","isEmbeddedTorusWallet","isWatchWallet","WatchWallet","isPwdWallet","walletType","provider","initStorage","localStorageId","getLocalStorageId","getStorage","walletData","loadStoredWallet","parsedWalletData","deserializeStoredWallet","wd","implicit","originated","Wallet","originatedAccount","encrypedSeed","displayName","Account","getTokenBalance","isImplicit","ktAddress","managerPkh","managerPk","NETWORK","NAME","TEZOS_DOMAIN","CONTRACT","TOP_DOMAINS","MAINNET","NODE_URL","BLOCK_EXPLORER_URL","HARD_LIMITS","hard_gas_limit_per_operation","hard_gas_limit_per_block","hard_storage_limit_per_operation","ASSETS","NFT_CONTRACT_OVERRIDES","CONTRACT_OVERRIDES","FEATURE_CONTRACTS","production","_TTC","_BLTC","_M3DW","ImportService","pwdRequired","importWalletFromJson","g","importWalletFromObject","findContracts","importWalletFromPk","verifierDetails","ledgerImport","torusImport","watch","embedded","updateTwitterName","StartComponent","importService","route","queryParams","devtool","prompt","torusLogin","ExportService","downloadWallet","blob","Blob","filename","saveAs","downloadOperationData","$event","NewWalletComponent","exportService","generateSeed","MNEMONIC","array","wordsToVerify","mnemonicLength","random","activePanel","checkWord","wordInput","getElementById","blur","formatVerifyDescription","indexFormat","valueFormat","verifyView","pwdView","userMnemonic","mnemonicMatch","encryptWallet","validPwd","pwd1","pwd2","offsetWidth","showTacos","calcStrength","pwdStrength","done","export","getPkh","download","ekfDownloaded","mouseOut","stopPropagation","hideBlur","getSelection","removeAllRanges","checkSelection","isTextSelected","isSelectedMnemonic","selection","isCollapsed","_r5","ctx_r15","ctx_r40","ctx_r42","ctx_r43","MnemonicImportComponent","navigation","getCurrentNavigation","importOption","gn","W","extras","allowDrop","bind","handleFileDragAndDrop","clickPassword","removeAttribute","blurPassword","setAttribute","retrieve","hdImport","setPwd","showPkh","Downloaded","importPreCheck","keyFile","typeCheckFile","walletJson","checkImportPwd","import","preventDefault","handleFileInput","dataTransfer","files","fileToUpload","validateFile","fileNotSupported","reader","FileReader","readAsText","onload","fileName","ext","substring","lastIndexOf","advancedForm","LedgerService","setTransport","transport","TransportWebHID","TransportU2F","transportCheck","getAddress","sanitize","signOperation","signHash","getPk","ConnectLedgerComponent","ledgerService","defaultText","checkBrowser","navigator","userAgent","browser","userAgentData","brands","some","brand","platform","defaultPath","pendingLedgerConfirmation","importFromPk","setDefaultPath","isHDDerivationPathCustom","P404Component","P500Component","PrivacyPolicyComponent","getHostName","hostname","TermsOfUseComponent","EmbeddedAuthService","authenticate","authReq","authMessage","createAuthMessage","nonce","signMessage","signExprSilent","hexExpr","requestId","authPayload","purpose","currentTime","_network","parser","Parser","parseMichelineExpression","hexMessage","valueEncoder","LqdEntrypoints","Mode","zeroTxParams","SwapLiquidityComponent","estimateService","tezosDomainService","tezosDomains","chartService","swap","setTokenBalances","xtzBalance","Nn","wn","lqdBalance","ot","Kn","lqdTokenContract","tzBTCBalance","Ie","Ae","initChartsMobile","arr","chartDatas","leftChart","miniChart","w","U","J","initChartsDesktop","initCharts","birthExchangeRate","qty","expectedRate","qtyRaw","hydratePools","attributes","APY","_super","call","chartInit","qtyOut","qtyRawOut","xtzToBuy","tokenToBuy","calcSwap","calcAddLiquidity","minimumLqd","qn","pn","calcRemoveLiquidity","lqtToBurn","customFee","customGasLimit","customStorageLimit","defaultTransactionParams","latestSimError","estimateFees","preview","prepareResponse","getFullyPreparedTxs","toggleMode","chartToggle","liquidity","toggleDirection","dir","evalAmount","getTotalFee","getTotalBurn","mul","burnAmount","customSlippage","customSlippageFocus","customSlippageBlur","getMaxAmount","accountBalance","tez","lqd","tzBTC","prevSimError","txs","getMinimalPreparedTxs","simSemaphore","checkBalances","updateMaxAmount","removeLiquidity","tokenToXtz","xtzToToken","addLiquidity","assert","minimalTxs","opsWithCustomLimits","extraGas","extraStorage","extraGasPerOp","extraStoragePerOp","fullyTx","maxTez","maxLQD","maxtzBTC","gt","sanitizeNumberInput","openInfoModal","ctx_r51","ctx_r54","ConfirmSendComponent","tokenBalanceService","confirmRequest","externalReq","syncSub","closeModalAction","loadParameters","ledgerError","batchParameters","num","updateParameters","batchParamIndex","parametersToMicheline","parametersDisplay","parametersTextboxDisplay","parametersFormat","micheline","setParametersFormat","beaconTokenTransfer","assertMichelsonData","emitMicheline","indent","newline","getTotalAmount","totalSent","getTotalCost","totalFee","totalActiveStorageLimit","getTotalDefaultStorage","getTotalDefaultGas","totalGas","totalStorage","getQuantity","totalAmount","ledgerRetry","sendTransaction","inject","broadCastLedgerTransaction","sendResponse","pwdInvalid","operationResponse","torusNotification","requestLedgerSignature","signedOperation","getUsername","getVerifier","previewAttention","recipientKind","tmp","showFullBatch","PrepareSendDropdownComponent","dropdownResponse","torusVerifierName","torusVerifier","ctx_r19","ctx_r44","ctx_r45","ctx_r47","ctx_r48","PrepareSendComponent","prepareRequest","active","isMultipleDestinations","hideAmount","accountDropdownIsOpen","toMultipleDestinationsString","prevEquiClass","sendMax","toPkh","clearTorus","getTitle","getAssetName","short","amountChange","equiClass","checkBalance","updateDefaultValues","toPkhChange","finalCheck","getBatch","invalidTorusAccount","torusReady","checkTx","torusLookupAddress","torusLookupId","torusTwitterId","row","cols","col","sendEntireBalance","event","checkMaxAmount","toggleDestination","torusPendingLookup","maxToSend","maxKt","maxTz","maxAmount","verifierChange","batchSpace","numberOfTxs","txsLimit","numberWithCommas","dynSize","pasteToPkh","clipboard","readText","clipText","handleScanResponse","ConfirmSendEmbedComponent","template","templateRequest","descriptions","hideScrollbar","cancel","isApproved","approve","showMore","resetScrollbar","scrollBarWidth","overflow","SwapLiquidityConfirmComponent","parseTransactions","csr","hasTrailingZeroApproval","values","kn","ln","confirmTitle","expectedXtz","bn","expectedToken","expectedLqd","semaphore","toSell","SendComponent","externalRequest","selectedAccount","checkOpReq","operationRequest","opReq","operationDetails","silent","validParameters","simulateRequest","tokenTransferObj","getTokenTransferObj","partialOps","fullyPrepared","getTemplateFee","total","thresholdUSD","silentInject","confirmTransactions","isLbReq","confirmSwapLiquidityRequest","Set","yn","_l","_m","_o","_p","_q","_r","_s","_t","handlePrepareResponse","preparedTransactions","handleConfirmResponse","handleTemplateApproval","ExprTemplateComponent","SignExprEmbedComponent","signRequest","ui","isMessage","acceptSigning","rejectSigning","signResponse","QueueEmbedComponent","updateTime","queueTime","hours","SigninComponent","dismiss","loginResponse","loginConfig","customPrio","loginOptions","startQueue","loginOption","setHighPrio","queueTimeVisible","queueInterval","timeBetweenChecks","statusCounter","checkQueue","stopQueue","clearInterval","abort","login","loginData","LoginPrio","setLowPrio","updateQueue","EstimatedTimeSeconds","Status","triesLeft","CardComponent","Permission","EmbeddedComponent","embeddedAuthService","brio","origins","minterpop","interpop","humanMachine","ubisoft","gap","micheline_silent","lexus","blockspace","evian","souvie","tzstaging","studioexception","cleantree","vitality","kanvas","proofof","hasPermission","RequestTypes","handleLoginRequest","handleOperationRequest","handleSignExprRequest","handleTrackRequest","handleLogoutRequest","handleAuthRequest","handleCardRequest","fontSize","background","handleRequest","attachEvent","currentInstanceId","subscribeToConfirmedOps","parent","postMessage","ResponseTypes","MICHELINE","MICHELINE_SILENT","normalizeTemplate","LOGIN","queueMode","config","customSpinnerDismissal","OPERATIONS","isValidOperation","pendingOps","noWalletError","toImport","idToken","long_lived_token","filteredUserInfo","generateInstanceId","userData","authParams","authResponse","strictAuth","importAccount","blockCard","show","common","ophashSubscription","permission","permissionMatrix","allowedOrigin","ReceiveComponent","btnOutline","dropdownItem","getQR","QRCode","errorCorrectionLevel","scaleFactor","color","light","ctx_r8","NewImplicitComponent","openPkhSpot","addPkh","navigateByUrl","errorMsg","PermissionRequestDropdownComponent","current","list","PermissionRequestComponent","preSelectedAccount","permissionRequest","permissionResponse","rejectPermissions","grantPermissions","scopeToText","app","ctx_r16","SignExprComponent","ctx_r21","ctx_r24","OriginateComponent","beaconMode","isValidOrigination","clearForm","assertMichelsonContract","recommendations","getOrigination","simError","customGas","customStorage","getScript","activeTab","validateOrigination","sendOrigination","ledgerSign","keyPressNumbersDecimal","charCode","which","keyCode","ctx_r22","DelegateComponent","snapshot","paramMap","estimateDefaultFee","pwdValid","sendDelegation","getFee","revealed","revealFee","defaultFee","pkhFee","ktFee","domainPendingLookup","advanced","invalidInput","ctx_r5","AccountListBodyComponent","accountAddress","substr","postfix","selRef","viewRef","getTotalBalance","getTotalFiat","AccountListComponent","ctx_r17","ctx_r18","ExportMnemonicComponent","mnemonicPhrase","UriHandlerComponent","WalletClient","connect","handlePermissionRequest","isSupportedOperationRequest","changeFavicon","isSupportedSignPayload","pairingString","handleStorageEvent","connectApp","isConnected","hasFocus","src","PermissionScope","sourceAddress","invalidParameters","invalidOptionals","transactionHash","newValue","senderIds","newPeers","newPeer","pop","MoonpayComponent","sanitizer","dev","mobile","signUrl","encodeURIComponent","bypassSecurityTrustResourceUrl","children","LoggedInComponent","loadChildren","module","redirectTo","AppRoutingModule","relativeLinkResolution","InfoComponent","action","href","proceed","newTab","opener","AlertComponent","removeMessage","notifyFormat","mailtoFormat","redditPmFormat","twitterPmFormat","subject","encodeURI","encodedBody","accountType","getAlias","MessagesComponent","ctx_r14","AccountDropdownComponent","showAll","trackAccount","ctx_r6","ctx_r10","ctx_r12","MobileMenuDropdownComponent","HeaderComponent","delegateName","getDelegateName","parentNode","newAccount","receive","FooterComponent","promptTelegramDialog","SpinnerNewComponent","SpinnerComponent","AgreementComponent","accepted","displayAgreement","accept","AppComponent","setDefaultLang","getBrowserLang","use","checkEmbedded","brk","clientWidth","setProperty","oldValue","returnLanguage","lang","resize","setLanguage","TruncatePipe","endTrail","returnString","endTrailstring","TranslateHttpLoader","AppModule","bootstrap","BrowserModule","BrowserAnimationsModule","TranslateModule","provide","TranslateLoader","useFactory","HttpLoaderFactory","deps","HttpClient","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","_n"],"sourceRoot":"webpack:///","sources":["./src/app/components/modals/modal.component.ts","./src/app/components/modals/qr-scanner/qr-scanner.component.html","./src/app/components/modals/qr-scanner/qr-scanner.component.ts","./src/app/components/ui/asset/asset.component.html","./src/app/components/ui/asset/asset.component.ts","./src/app/components/ui/button/toggle/toggle.component.ts","./src/app/components/ui/button/toggle/advanced/advanced.component.ts","./src/app/components/ui/button/toggle/advanced/advanced.component.html","./src/app/components/ui/chart/chart.component.html","./src/app/components/ui/chart/chart.component.ts","./src/app/components/ui/dropdown/dropdown.component.ts","./src/app/components/ui/generic/list.component.ts","./src/app/components/views/logged-in/account-view/activity/event/event.component.html","./src/app/components/views/logged-in/account-view/activity/event/event.component.ts","./src/app/components/views/logged-in/account-view/activity/activity.component.html","./src/app/components/views/logged-in/account-view/activity/activity.component.ts","./src/app/components/views/logged-in/account-view/nfts/token/token.component.html","./src/app/components/views/logged-in/account-view/nfts/token/token.component.ts","./src/app/components/ui/search/search.component.html","./src/app/components/ui/search/search.component.ts","./src/app/components/views/logged-in/account-view/nfts/body/body.component.html","./src/app/components/views/logged-in/account-view/nfts/body/body.component.ts","./src/app/components/views/logged-in/account-view/nfts/nfts.component.html","./src/app/components/views/logged-in/account-view/nfts/nfts.component.ts","./src/app/components/ui/button/basic/basic.component.ts","./src/app/components/ui/button/basic/send/send-button.component.html","./src/app/components/ui/button/basic/send/send-button.component.ts","./src/app/components/views/logged-in/account-view/balances/token/balance-token.component.html","./src/app/components/views/logged-in/account-view/balances/token/balance-token.component.ts","./src/app/components/views/logged-in/account-view/balances/balances.component.html","./src/app/components/views/logged-in/account-view/balances/balances.component.ts","./src/app/components/modals/send/detail/token-detail.component.html","./src/app/components/modals/send/detail/token-detail.component.ts","./src/app/components/views/logged-in/account-view/account-view.component.html","./src/app/components/views/logged-in/account-view/account-view.component.ts","./src/app/components/views/logged-in/settings/settings.component.html","./src/app/components/views/logged-in/settings/settings.component.ts","./src/app/components/views/logged-in/delegate-page/delegate-page.component.html","./src/app/components/views/logged-in/logged-in-routing.module.ts","./src/app/components/views/logged-in/delegate-page/delegate-page.component.ts","./src/app/components/views/logged-in/logged-in.module.ts","./src/app/components/views/start/activate/activate.component.html","./src/app/components/views/start/activate/activate.component.ts","./src/app/interfaces.ts","./src/app/pipes/error-handling.pipe.ts","./src/app/pipes/remove-comma.pipe.ts","./src/app/pipes/time-ago.pipe.ts","./src/app/services/activity/activity.service.ts","./src/app/services/balance/balance.service.ts","./src/app/services/beacon/beacon.service.ts","./src/app/services/chart/chart.service.ts","./src/app/services/indexer/signal/signal.service.ts","./src/app/services/coordinator/coordinator.service.ts","./src/app/services/deeplink/deeplink.service.ts","./src/app/services/delegate/delegate.service.ts","./src/app/services/encryption/encryption.service.ts","./src/app/services/estimate/estimate.service.ts","./src/app/services/indexer/indexer.service.ts","./src/app/services/indexer/teztools/teztools.service.ts","./src/app/services/indexer/tzkt/tzkt.service.ts","./src/app/services/input-validation/input-validation.service.ts","./src/app/services/lookup/lookup.service.ts","./src/app/services/message/message.service.ts","./src/app/services/operation/operation.service.ts","./src/app/services/subject/subject.service.ts","./src/app/services/swap-liquidity/classes/Amount.ts","./src/app/services/swap-liquidity/swap-liquidity.service.ts","./src/app/services/tezos-domains/tezos-domains.service.ts","./src/app/services/token-balances/token-balances.service.ts","./src/app/services/indexer/objkt/objkt.service.ts","./src/app/services/token/token.service.ts","./src/app/services/torus/torus.service.ts","./src/app/services/tzrate/tzrate.service.ts","./src/app/services/unlockable/unlockable.service.ts","./src/app/services/wallet/wallet.service.ts","./src/app/services/wallet/wallet.ts","./src/environments/environment.ghostnet.ts","./src/environments/environment.ts","./src/app/services/import/import.service.ts","./src/app/components/views/start/start.component.html","./src/app/components/views/start/start.component.ts","./src/app/services/export/export.service.ts","./src/app/components/views/start/login-types/new-wallet/new-wallet.component.html","./src/app/components/views/start/login-types/new-wallet/new-wallet.component.ts","./src/app/components/views/start/login-types/mnemonic-import/mnemonic-import.component.html","./src/app/components/views/start/login-types/mnemonic-import/mnemonic-import.component.ts","./src/app/services/ledger/ledger.service.ts","./src/app/components/views/start/login-types/connect-ledger/connect-ledger.component.ts","./src/app/components/views/start/login-types/connect-ledger/connect-ledger.component.html","./src/app/components/views/error/404.component.ts","./src/app/components/views/error/404.component.html","./src/app/components/views/error/500.component.ts","./src/app/components/views/error/500.component.html","./src/app/components/views/start/agreement/privacy-policy/privacy-policy.component.ts","./src/app/components/views/start/agreement/privacy-policy/privacy-policy.component.html","./src/app/components/views/start/agreement/terms-of-use/terms-of-use.component.ts","./src/app/components/views/start/agreement/terms-of-use/terms-of-use.component.html","./src/app/services/embedded-auth/embedded-auth.service.ts","./src/app/components/misc/send/interfaces.ts","./src/app/components/modals/swap-liquidity/swap-liquidity.component.html","./src/app/components/modals/swap-liquidity/swap-liquidity.component.ts","./src/app/components/modals/send/confirm/send-confirmation.component.html","./src/app/components/modals/send/confirm/send-confirmation.component.ts","./src/app/components/ui/dropdown/prepare-send/prepare-send-dropdown.component.html","./src/app/components/ui/dropdown/prepare-send/prepare-send-dropdown.component.ts","./src/app/components/modals/send/prepare/prepare-send.component.html","./src/app/components/modals/send/prepare/prepare-send.component.ts","./src/app/components/views/embedded/confirm-send/confirm-send.component.html","./src/app/components/views/embedded/confirm-send/confirm-send.component.ts","./src/app/components/modals/swap-liquidity/swap-liquidity-confirm.component.html","./src/app/components/modals/swap-liquidity/swap-liquidity-confirm.component.ts","./src/app/components/misc/send/send.component.html","./src/app/components/misc/send/send.component.ts","./src/app/components/views/embedded/sign-expr/template/template.component.html","./src/app/components/views/embedded/sign-expr/template/template.component.ts","./src/app/components/views/embedded/sign-expr/sign-expr.component.html","./src/app/components/views/embedded/sign-expr/sign-expr.component.ts","./src/app/components/views/embedded/queue/queue.component.html","./src/app/components/views/embedded/queue/queue.component.ts","./src/app/components/views/embedded/signin/signin.component.html","./src/app/components/views/embedded/signin/signin.component.ts","./src/app/components/views/embedded/card/card.component.ts","./src/app/components/views/embedded/card/card.component.html","./src/app/components/views/embedded/embedded.component.html","./src/app/components/views/embedded/embedded.component.ts","./src/app/components/modals/receive/receive.component.html","./src/app/components/modals/receive/receive.component.ts","./src/app/components/modals/new-implicit/new-implicit.component.html","./src/app/components/modals/new-implicit/new-implicit.component.ts","./src/app/components/ui/dropdown/permission-request/permission-request.component.html","./src/app/components/ui/dropdown/permission-request/permission-request.component.ts","./src/app/components/modals/permission-request/permission-request.component.html","./src/app/components/modals/permission-request/permission-request.component.ts","./src/app/components/modals/sign-expr/sign-expr.component.html","./src/app/components/modals/sign-expr/sign-expr.component.ts","./src/app/components/modals/originate/originate.component.html","./src/app/components/modals/originate/originate.component.ts","./src/app/components/modals/delegate/delegate.component.html","./src/app/components/modals/delegate/delegate.component.ts","./src/app/components/modals/account-list/body/body.component.html","./src/app/components/modals/account-list/body/body.component.ts","./src/app/components/modals/account-list/list.component.ts","./src/app/components/modals/account-list/list.component.html","./src/app/components/modals/export-mnemonic/export-mnemonic.component.html","./src/app/components/modals/export-mnemonic/export-mnemonic.component.ts","./src/app/components/misc/uri-handler/uri-handler.component.ts","./src/app/components/misc/uri-handler/uri-handler.component.html","./src/app/components/views/logged-in/account-view/moonpay/moonpay.component.html","./src/app/components/views/logged-in/account-view/moonpay/moonpay.component.ts","./src/app/app-routing.module.ts","./src/app/components/views/logged-in/logged-in.component.ts","./src/app/components/views/logged-in/logged-in.component.html","./src/app/components/modals/info/info.component.html","./src/app/components/modals/info/info.component.ts","./src/app/components/modals/alert/alert.component.html","./src/app/components/modals/alert/alert.component.ts","./src/app/components/ui/messages/messages.component.html","./src/app/components/ui/messages/messages.component.ts","./src/app/components/ui/dropdown/account/account-dropdown.component.html","./src/app/components/ui/dropdown/account/account-dropdown.component.ts","./src/app/components/ui/dropdown/mobile-menu/mobile-menu.component.html","./src/app/components/ui/dropdown/mobile-menu/mobile-menu.component.ts","./src/app/components/views/layouts/header/header.component.html","./src/app/components/views/layouts/header/header.component.ts","./src/app/components/views/layouts/footer/footer.component.html","./src/app/components/views/layouts/footer/footer.component.ts","./src/app/components/ui/spinner/new/spinner-new.component.ts","./src/app/components/ui/spinner/new/spinner-new.component.html","./src/app/components/ui/spinner/spinner.component.html","./src/app/components/ui/spinner/spinner.component.ts","./src/app/components/views/start/agreement/agreement.component.html","./src/app/components/views/start/agreement/agreement.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/pipes/truncate.pipe.ts","./src/app/app.module.ts","./src/main.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import { Component, OnInit, Optional, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\ninterface ModalPayload {\n  name: string | null;\n  data: any;\n  forceClose?: boolean;\n}\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html'\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n  public isOpen = false;\n  name = '';\n  static currentModel = new BehaviorSubject<ModalPayload>({\n    name: '',\n    data: null\n  });\n  private modalSub: Subscription = new Subscription();\n  constructor(@Optional() public cd?: ChangeDetectorRef) {\n    this.cd = cd;\n    this.modalSub = ModalComponent.currentModel.subscribe((load) => {\n      load.forceClose = load.forceClose === undefined ? true : load.forceClose;\n      if (!!load.name && load.name === this.name) {\n        if (!this.isOpen) {\n          this.willOpen();\n          this.open(load.data);\n        }\n      } else {\n        if (this.isOpen && load.forceClose) {\n          this.close();\n          if (this.cd) {\n            this.cd.detectChanges();\n          }\n        }\n      }\n    });\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.modalSub.unsubscribe();\n  }\n\n  willOpen(): void {}\n\n  open(data?: any): void {\n    if (window.innerHeight < document.body.scrollHeight) {\n      document.body.style.marginRight = '0.5rem !important';\n      document.body.style.overflowY = 'hidden !important';\n    }\n    const isMobile = Number(document.documentElement.style.getPropertyValue('--is-mobile'));\n    if (isMobile) {\n      setTimeout(() => {\n        window.scrollTo({ top: 0 });\n      }, 0);\n    }\n    this.isOpen = true;\n  }\n\n  close(): void {\n    document.body.style.marginRight = '';\n    document.body.style.overflowY = '';\n    this.isOpen = false;\n  }\n}\n","<button *ngIf=\"!override\" class=\"scan\" (click)=\"openModal()\">Scan QR code</button>\n<img *ngIf=\"override\" class=\"scan override\" (click)=\"openModal()\" src=\"assets/img/qr.svg\" />\n<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <form autocomplete=\"off\">\n    <div class=\"content\">\n      <div class=\"flex-row top\">\n        <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n            src=\"../../../assets/img/close-btn-x.png\" /></div>\n        <h1 class=\"title\">QR-Scanner</h1>\n      </div>\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column qr-scanner\">\n        <div class=\"video-container\">\n          <video #videoPlayer>\n            Browser not supported\n          </video>\n          <p class=\"no-cam\" *ngIf=\"!qrScanner\">No camera detected</p>\n          <p class=\"no-cam\" *ngIf=\"!!errorMessage\">{{ errorMessage }}</p>\n          <p class=\"no-cam\" *ngIf=\"!!errorMessage\">Please check site permissions</p>\n        </div>\n        <input *ngIf=\"!override\" name=\"none\" type=\"text\" [(ngModel)]=\"manualInput\" class=\"text\" (paste)=\"handlePaste($event)\"\n          placeholder=\"...or paste pairing string here\">\n      </div>\n    </div>\n  </form>\n</div>","import { Component, ViewChild, ElementRef, Input, EventEmitter, Output } from '@angular/core';\nimport { BeaconService } from '../../../services/beacon/beacon.service';\nimport QrScanner from 'qr-scanner';\nimport { DeeplinkService } from '../../../services/deeplink/deeplink.service';\nimport { CONSTANTS as _CONSTANTS, environment } from '../../../../environments/environment';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ModalComponent } from '../modal.component';\n\n@Component({\n  selector: 'app-qr-scanner',\n  templateUrl: './qr-scanner.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class QrScannerComponent extends ModalComponent {\n  readonly CONSTANTS = _CONSTANTS;\n  readonly env = environment;\n  constructor(private beaconService: BeaconService, private deeplinkService: DeeplinkService, private messageService: MessageService) {\n    super();\n  }\n  @Output('scanResponse') scanResponse = new EventEmitter();\n  @ViewChild('videoPlayer') videoplayer: ElementRef;\n  @Input() override = false;\n  qrScanner: QrScanner;\n  manualInput = '';\n  name = 'qr-scanner';\n  loadingCam = false;\n  errorMessage = '';\n  openModal(): void {\n    if (!this.override) {\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n    } else {\n      super.open();\n    }\n    this.scan();\n  }\n  async scan(): Promise<void> {\n    this.loadingCam = true;\n    const hasCamera = await QrScanner.hasCamera();\n    if (hasCamera && this.videoplayer?.nativeElement) {\n      this.errorMessage = '';\n      try {\n        this.qrScanner = new QrScanner(this.videoplayer?.nativeElement, (result: QrScanner.ScanResult) => this.handleQrCode(result), {});\n        await this.qrScanner.start();\n        if (!this.isOpen) {\n          this.qrScanner.stop();\n          this.qrScanner.destroy();\n          this.qrScanner = null;\n        }\n      } catch (e) {\n        this.errorMessage = e;\n      }\n    } else {\n      console.warn('no camera found');\n    }\n    this.loadingCam = false;\n  }\n  handleQrCode(scanResult: QrScanner.ScanResult): void {\n    const qrString = scanResult.data;\n    console.log('QR Code', qrString);\n    try {\n      const pairingInfo = this.deeplinkService.QRtoPairingJson(qrString);\n      if (pairingInfo && !this.override) {\n        this.beaconService.preNotifyPairing(pairingInfo);\n        this.beaconService.addPeer(pairingInfo);\n      } else if (qrString && this.override) {\n        this.scanResponse.emit({ pkh: qrString });\n      }\n      this.closeModal();\n    } catch (e) {\n      if (!this.override) {\n        this.messageService.addError('Invalid Base58 checksum!');\n      }\n    }\n  }\n  handlePaste(ev: ClipboardEvent): void {\n    try {\n      const clipboardString = ev?.clipboardData?.getData('text');\n      const pairingInfo = clipboardString ? this.deeplinkService.QRtoPairingJson(clipboardString) : '';\n      if (!this.override && pairingInfo) {\n        this.beaconService.preNotifyPairing(pairingInfo);\n        this.beaconService.addPeer(pairingInfo);\n      } else if (clipboardString && this.override) {\n        this.scanResponse.emit({ pkh: clipboardString });\n      }\n      this.closeModal();\n    } catch (e) {\n      if (!this.override) {\n        this.messageService.addError('Invalid Base58 checksum!');\n      }\n    }\n  }\n  closeModal(): void {\n    // restore body scrollbar\n    if (this.qrScanner && !this.loadingCam) {\n      this.qrScanner.stop();\n      this.qrScanner.destroy();\n      this.qrScanner = null;\n    }\n    if (!this.override) {\n      ModalComponent.currentModel.next({ name: '', data: null });\n    } else {\n      super.close();\n    }\n    this.manualInput = '';\n  }\n}\n","<ng-container *ngIf=\"this.display === Display.image || (this.display === Display.audio && !!poster)\">\n  <!-- Need crossorigin anonymous here to leverage caching from first GET (check mime type) -->\n  <img crossorigin=\"anonymous\" #postImage [src]=\"postSrc\" id=\"postImage\" [style.objectFit]=\"postSrc?.indexOf(loaderUrl) > -1 ? 'scale-down' : ''\" (error)=\"onError($event)\" (load)=\"onLoad($event)\" />\n  <img crossorigin=\"anonymous\" #preImage [src]=\"preSrc\" id=\"preImage\" (error)=\"onError($event)\" (load)=\"onLoad($event)\" />\n</ng-container>\n<audio crossorigin=\"anonymous\" #audio *ngIf=\"this.display === Display.audio\" preload=\"metadata\" [controls]=\"controls\" [controlsList]=\"controlsList\" id=\"audio\" (error)=\"onError($event)\" (loadeddata)=\"onLoadData($event)\">\n  <source crossorigin=\"anonymous\" [src]=\"dataSrc\" [type]=\"mimeType\" />\n</audio>\n<video crossorigin=\"anonymous\" #video *ngIf=\"this.display === Display.video\" preload=\"metadata\" id=\"video\" [controls]=\"controls\" [playsinline]=\"playsinline\" [muted]=\"muted\" [loop]=\"loop\" [autoplay]=\"autoplay\" (error)=\"onError($event)\" (loadeddata)=\"onLoadData($event)\">\n  <source crossorigin=\"anonymous\" [src]=\"dataSrc\" [type]=\"mimeType\" />\n  <img crossorigin=\"anonymous\" [src]=\"loaderUrl\" class=\"spinner\" />\n</video>\n<div *ngIf=\"this.display === Display.threeD\" class=\"model-wrapper\">\n  <model-viewer crossorigin=\"anonymous\" #model id=\"modelCanvas\" auto-rotate rotation-per-second=\"30deg\"\n    [src]=\"dataSrc\" alt=\"postSrc\" (load)=\"onLoad($event)\" (error)=\"onError($event)\"\n    camera-controls ar ar-modes=\"webxr scene-viewer quick-look\"></model-viewer>\n</div>","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, Sanitizer, SimpleChanges, ViewChild } from '@angular/core';\nimport { Asset, CachedAsset, TokenService } from '../../../services/token/token.service';\nimport { CONSTANTS, MODEL_3D_WHITELIST } from '../../../../environments/environment';\n\nenum Display {\n  'none',\n  'audio',\n  'image',\n  'video',\n  'threeD'\n}\n\nenum Size {\n  'icon' = 'icon',\n  'small' = 'small',\n  'medium' = 'medium',\n  'gallery' = 'gallery',\n  'raw' = 'raw'\n}\n\nconst MIMETYPE_OVERLOADS = ['unknown', 'image/gif'];\n\n@Component({\n  selector: 'app-asset',\n  templateUrl: './asset.component.html',\n  styleUrls: ['../../../../scss/components/ui/asset/asset.component.scss']\n})\nexport class AssetComponent implements OnInit, AfterViewInit {\n  Display = Display;\n  display = Display.image;\n  @ViewChild('preImage') preImage;\n  @ViewChild('postImage') postImage;\n  @ViewChild('audio') audio;\n  @ViewChild('video') video;\n  @ViewChild('model') model;\n  @Input() assets: any;\n  @Input() size = Size.medium;\n  @Input() priorityList = ['displayAsset', 'thumbnailAsset'];\n  @Input() controlsList = 'nofullscreen nodownload noremoteplayback noplaybackrate';\n  @Input() poster: CachedAsset;\n  @Input() controls = false;\n  @Input() requires = ['all'];\n  @Input() hideSpinner = false;\n  @Input() muted = false;\n  @Input() autoplay = false;\n  @Input() loop = false;\n  @Input() playsinline = false;\n  @Output() inView = new EventEmitter(null);\n  @Output() load = new EventEmitter(null);\n  readonly loaderUrl = 'assets/img/loader.svg';\n  readonly unknownUrl = 'assets/img/unknown-token-grayscale.svg';\n  dataSrc = undefined;\n  preSrc = this.loaderUrl;\n  postSrc = this.loaderUrl;\n  mimeType = 'image/*';\n  errors = 0;\n  obs: IntersectionObserver;\n\n  constructor(private elRef: ElementRef, private tokenService: TokenService) {}\n\n  ngOnInit(): void {\n    if (this.hideSpinner) {\n      this.display = Display.none;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes?.assets?.previousValue &&\n      changes?.assets?.currentValue &&\n      JSON.stringify(changes?.assets?.previousValue) !== JSON.stringify(changes?.assets?.currentValue)\n    ) {\n      const p0 = this.assetToUrl(this.pickAsset(changes?.assets?.previousValue));\n      const p1 = this.assetToUrl(this.pickAsset(changes?.assets?.currentValue));\n      if (p0 !== p1) {\n        console.log('reload asset', { from: p0, to: p1 });\n        this.reload();\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.lazyLoad();\n  }\n  private reload() {\n    this.display = Display.none;\n    this.dataSrc = undefined;\n    this.preSrc = this.loaderUrl;\n    this.postSrc = this.loaderUrl;\n    this.mimeType = 'image/*';\n    this.updateDisplay();\n    this.lazyLoad();\n  }\n  updateDisplay(): void {\n    if (this.isImage() && (this.requires.includes('image') || this.requires.includes('all'))) {\n      this.display = Display.image;\n    } else if (this.isAudio() && (this.requires.includes('audio') || this.requires.includes('all'))) {\n      this.display = Display.audio;\n    } else if (this.isVideo() && (this.requires.includes('video') || this.requires.includes('all'))) {\n      this.display = Display.video;\n    } else if (this.is3D() && (this.requires.includes('model') || this.requires.includes('all'))) {\n      this.display = Display.threeD;\n    } else {\n      this.display = Display.none;\n    }\n  }\n\n  isImage(): boolean {\n    return this.mimeType?.startsWith('image/') || this.mimeType?.startsWith('application/');\n  }\n\n  isVideo(): boolean {\n    return this.mimeType?.startsWith('video/');\n  }\n\n  isAudio(): boolean {\n    return this.mimeType?.startsWith('audio/');\n  }\n\n  is3D(): boolean {\n    return this.mimeType?.startsWith('model/');\n  }\n\n  onLoad(e): void {\n    if (e?.target?.id === 'preImage') {\n      this.postSrc = this.preSrc;\n      this.updateDisplay();\n    }\n  }\n\n  onLoadData(e): void {\n    if (this.isAudio()) {\n      if (this.audio.nativeElement.muted) {\n        this.audio.nativeElement.volume = 1.0;\n      }\n    }\n  }\n\n  onError(e): void {\n    if ((e?.target?.id === 'postImage' || e?.target?.id === 'preImage') && this.isImage()) {\n      this.errors++;\n      if (this.errors <= 2) {\n        console.log('retry lazyload', this.preSrc);\n        this.reload();\n      } else {\n        console.log('failed to load asset', this.preSrc);\n        this.evaluateInvalid();\n      }\n    }\n  }\n\n  evaluateInvalid(): void {\n    this.mimeType = 'image/*';\n    this.updateDisplay();\n    this.preSrc = this.unknownUrl;\n  }\n  pickAsset(assets): Asset {\n    for (let type of this.priorityList) {\n      if (assets && assets[type] && !(typeof assets[type] === 'object' && !assets[type]?.uri)) {\n        return assets[type];\n      }\n    }\n    return null;\n  }\n\n  async evaluate(assets): Promise<void> {\n    if (this.poster) {\n      this.preSrc = this.assetToUrl(this.poster);\n    }\n    let asset = this.pickAsset(assets);\n    if (asset) {\n      try {\n        await this.determineMime(asset);\n      } catch (e) {\n        console.error(e);\n        this.evaluateInvalid();\n        return;\n      }\n      this.setSrc(asset);\n    } else {\n      this.evaluateInvalid();\n    }\n  }\n\n  lazyLoad(): void {\n    this.obs = new IntersectionObserver((entries, _) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          this.evaluate(this.assets);\n          this.obs.unobserve(this.elRef?.nativeElement);\n        }\n        this.inView.emit();\n      });\n    });\n    if (this.elRef?.nativeElement) {\n      this.obs.observe(this.elRef?.nativeElement);\n    }\n  }\n\n  async determineMime(asset: Asset) {\n    const url = this.assetToUrl(asset);\n    if (!url) {\n      throw new Error('InvalidUrl');\n    }\n    if (url?.startsWith('data:image')) {\n      this.mimeType = 'image/*';\n      return (this.preSrc = url);\n    }\n    // Ignore MIME type provided in metadata for now. Way too unreliable. Exception for nfts in 3d wl. (media proxy don't return the correct mime type)\n    if (\n      typeof asset !== 'string' &&\n      !(asset?.mimeType?.startsWith('model/') && (MODEL_3D_WHITELIST as Array<any>).includes(this.tokenService.getContractAddressFromAsset(asset?.uri)))\n    ) {\n      let response;\n      for (let i = 0; i < 3 && !response?.ok; i++) {\n        response = await fetch(url, { method: 'GET' });\n      }\n      if (!response?.ok) {\n        throw new Error();\n      }\n      this.mimeType = response.headers.get('content-type');\n    } else if (typeof asset === 'string') {\n      this.mimeType = 'image/*';\n    } else {\n      this.mimeType = asset.mimeType;\n    }\n  }\n\n  setSrc(asset): void {\n    this.updateDisplay();\n    if (this.isAudio() || this.isVideo() || this.is3D()) {\n      this.isAudio() ? this.load.emit() : undefined;\n      if (this.is3D()) {\n        const contractAddress = this.tokenService.getContractAddressFromAsset(asset?.uri);\n        if (!(MODEL_3D_WHITELIST as Array<any>).includes(contractAddress)) {\n          console.warn('Content blocked');\n          this.evaluateInvalid();\n          return;\n        }\n      }\n      this.dataSrc = this.assetToUrl(asset);\n    } else if (this.isImage()) {\n      this.preSrc = this.assetToUrl(asset);\n    } else {\n      console.warn(`Unrecognized MIME type: ${this.mimeType}`, '\\n', 'Assuming: image/*');\n      this.mimeType = 'image/*';\n      this.updateDisplay();\n      this.preSrc = this.assetToUrl(asset);\n    }\n  }\n  assetToUrl(asset: Asset): string {\n    let url = '';\n    const uri = typeof asset === 'string' ? asset : asset?.uri;\n    if (uri.startsWith('ipfs://')) {\n      url = `https://static.tcinfra.net/media/${this.size}/ipfs/${uri.slice(7)}`;\n    } else if (uri.startsWith('https://')) {\n      url = `https://static.tcinfra.net/media/${this.size}/web/${uri.slice(8)}`;\n    } else if (!CONSTANTS.MAINNET && (uri.startsWith('http://localhost') || uri.startsWith('http://127.0.0.1'))) {\n      url = uri.slice(16);\n    } else if (typeof asset === 'string') {\n      url = uri;\n    } else {\n      console.warn('failed to parse asset', asset);\n      url = uri;\n    }\n    return url ?? '';\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-ui-toggle',\n  templateUrl: './toggle.component.html'\n})\nexport class ToggleComponent implements OnInit {\n  @Input() state: boolean;\n  @Input() text = 'Advanced:';\n  @Input() default: boolean = false;\n  @Output() stateChange = new EventEmitter<boolean>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.state = this.default;\n  }\n\n  toggle(): void {\n    this.state = !this.state;\n    this.stateChange.emit(this.state);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ToggleComponent } from '../toggle.component';\n\n@Component({\n  selector: 'app-ui-toggle-advanced',\n  templateUrl: './advanced.component.html',\n  styleUrls: ['../../../../../../scss/components/ui/button/toggle.component.scss']\n})\nexport class AdvancedToggleComponent extends ToggleComponent implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"flex-row advanced\">\n  <div class=\"flex-row switch-container\">\n    <span class=\"value\">{{ text }}&nbsp;&nbsp;&nbsp;&nbsp;</span>\n    <label class=\"flex-row switch\">\n      <span class=\"key\" [class]=\"state ? 'active' : ''\">{{ state ? ' ON' : 'OFF' }}</span>\n      <span class=\"slider\" [class]=\"state ? 'active' : ''\" (click)=\"toggle()\">\n        <span class=\"round\"></span>\n      </span>\n    </label>\n  </div>\n</div>","<div class=\"title-dropdown\" [class.expanded]=\"ddExpanded\">\n  <ng-container *ngFor=\"let value of ddSets\">\n    <p [class.active]=\"set === value?.name\" (click)=\"toggleSet(value?.name);ddExpanded = !ddExpanded\">{{ value?.name ||\n      '' }}</p>\n  </ng-container>\n</div>\n<div *ngIf=\"sets?.length\" class=\"flex-row mode\">\n  <div class=\"flex-column left\">\n    <span class=\"title\" (click)=\"ddExpanded = !ddExpanded\">{{ set }}<img [class.expanded]=\"ddExpanded\"\n        src=\"assets/img/chevron-down.svg\" /></span>\n    <span class=\"tooltip value\">{{ tooltipValue }}\n      <span class=\"unit\">{{ units }}</span>\n    </span>\n  </div>\n  <div class=\"right\">\n    <div class=\"attributes\">\n      <ng-container *ngFor=\"let key of Object.keys(attributes)\">\n        <span>{{ attributes[key] }}</span>\n      </ng-container>\n    </div>\n  </div>\n</div>\n<svg *ngIf=\"!sets?.length\" class=\"spinner\" viewBox=\"0 0 50 50\">\n  <circle class=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"5\"></circle>\n</svg>\n<span *ngIf=\"!sets?.length\" class=\"loading-text\">Loading Chart...</span>\n<div class=\"expand\" (click)=\"toggleChartExpand(); ddExpanded = false; toggleSet(set)\">{{ !chartExpanded ? 'Expand' : 'Collapse' }}\n</div>\n<ng-container *ngIf=\"design === 'default'\">\n  <div class=\"flex-column canvas-wrapper\">\n    <canvas #chart [class.loaded]=\"sets?.length\"></canvas>\n    <div *ngIf=\"sets?.length\" class=\"flex-row time\" [class.expanded]=\"chartExpanded\">\n      <span *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'day'\" (click)=\"toggleSeries('day')\">24H</span><span\n      *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'week'\" (click)=\"toggleSeries('week')\">1W</span>\n      <span [class.active]=\"series === 'month'\" (click)=\"toggleSeries('month')\">1M</span><span\n      *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'year'\" (click)=\"toggleSeries('year')\">1Y</span>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"design === 'mini'\">\n  <div class=\"canvas-wrapper\">\n    <canvas #chart [class.loaded]=\"sets?.length\"></canvas>\n    <div *ngIf=\"sets?.length\" class=\"flex-row time\" [class.expanded]=\"chartExpanded\">\n      <span *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'day'\"\n        (click)=\"toggleSeries('day')\">24H</span><span *ngIf=\"set !== 'Total Value Locked'\"\n        [class.active]=\"series === 'week'\" (click)=\"toggleSeries('week')\">1W</span>\n      <span [class.active]=\"series === 'month'\" (click)=\"toggleSeries('month')\">1M</span><span\n        *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'year'\" (click)=\"toggleSeries('year')\">1Y</span>\n    </div>\n  </div>\n</ng-container>","import { Component, ElementRef, EventEmitter, Input, Output, SimpleChange, SimpleChanges, ViewChild } from '@angular/core';\nimport { Chart, ChartOptions, ChartTypeRegistry, registerables } from 'chart.js';\nimport { ChartTitle } from '../../../services/chart/chart.service';\n\nChart.register(...registerables);\n\nlet width, height, gradient;\nfunction getGradientBackground(ctx, chartArea) {\n  const style = getComputedStyle(document.body);\n  const theme = style.getPropertyValue('--theme').replace(/[ \\\"]/g, '');\n  const chartWidth = chartArea.right - chartArea.left;\n  const chartHeight = chartArea.bottom - chartArea.top;\n  if (gradient === null || width !== chartWidth || height !== chartHeight) {\n    width = chartWidth;\n    height = chartHeight;\n    gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n    // gradient.addColorStop(1, '#5963ff88');\n    // gradient.addColorStop(0.5, '#5963ff33');\n    // gradient.addColorStop(0, '#5963ff19');\n    if (theme === 'dark') {\n      gradient.addColorStop(1, '#383d7d');\n      gradient.addColorStop(0.5, '#2e304f');\n      gradient.addColorStop(0, '#2a2c3f');\n    } else {\n      gradient.addColorStop(1, '#c2c5fc');\n      gradient.addColorStop(0.5, '#e0e1fb');\n      gradient.addColorStop(0, '#e8eafb');\n    }\n  }\n\n  return gradient;\n}\n\nexport enum ChartSeries {\n  'day' = 'day',\n  'week' = 'week',\n  'month' = 'month',\n  'year' = 'year'\n}\n@Component({\n  selector: 'app-ui-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['../../../../scss/components/ui/chart/chart.component.scss']\n})\nexport class ChartComponent {\n  Object = Object;\n  @Input() attributes: any = {};\n  @Input() type: keyof ChartTypeRegistry = 'line';\n  @Input() data = { datasets: [], labels: [] };\n  @Input() datas = {};\n  @Input() options: ChartOptions = {};\n  @Input() design: string;\n  @Input() ddSets = [];\n  @Input() sets = [];\n  @Input() set = '';\n  @Input() units = {};\n  @Input() layout = 'default';\n  tooltipValue: string = '';\n  @ViewChild('chart') chartRef: ElementRef;\n  @Output('drawn') drawn = new EventEmitter();\n\n  chart = null;\n  series: ChartSeries = ChartSeries.day;\n  ddExpanded = false;\n  chartExpanded = false;\n\n  constructor() {\n    Chart.register({\n      id: 'my-plugin',\n      afterTooltipDraw: (chart, args, options) => {\n        if (chart) {\n          let x = chart.tooltip.dataPoints[0].element.x;\n          let yAxis = chart.scales.y;\n          let ctx = chart.ctx;\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(x, yAxis.bottom + 60);\n          ctx.lineTo(x, yAxis.top + 60);\n          ctx.lineWidth = 2;\n          ctx.setLineDash([3, 1]);\n          ctx.strokeStyle = 'rgba(0, 0, 255, 0.3)';\n          ctx.stroke();\n          ctx.setLineDash([0, 0]);\n          ctx.textAlign = 'center';\n          if (x >= chart.chartArea.right + -30) {\n            ctx.textAlign = 'right';\n          } else if (x <= chart.chartArea.left + 30) {\n            ctx.textAlign = 'left';\n          }\n          ctx.font = '14px sans-serif';\n          ctx.fillStyle = getComputedStyle(document.documentElement).getPropertyValue('--base-font-color-secondary');\n          ctx.fillText(chart.tooltip.title[0], x, yAxis.top + 45);\n          ctx.restore();\n        }\n      }\n    });\n  }\n\n  toggleChartExpand() {\n    this.chartExpanded = !this.chartExpanded;\n    (this.chartRef.nativeElement as HTMLCanvasElement).parentElement.parentElement.classList.toggle('expanded');\n  }\n\n  refreshDDSets(): void {\n    this.ddSets = this.sets?.sort(function (a, b) {\n      const nameA = a.name.toLowerCase(),\n        nameB = b.name.toLowerCase();\n      if (nameA > nameB) return -1;\n      if (nameA < nameB) return 1;\n      return 0;\n    });\n  }\n\n  draw(): void {\n    if (this.set === ChartTitle.totalValueLocked) {\n      const data = this.datas[this.series]?.datasets?.find((ds) => ds.label === ChartTitle.totalValueLocked).data;\n      if (!data) {\n        return;\n      }\n      this.tooltipValue = parseFloat(parseFloat(data[data.length - 1].toString()).toFixed(2)).toLocaleString();\n    } else if (this.set === ChartTitle.XTZtzBTC) {\n      const data = this.datas[this.series]?.datasets?.find((ds) => ds.label === ChartTitle.XTZtzBTC).data;\n      if (!data) {\n        return;\n      }\n      this.tooltipValue = parseFloat(data[data.length - 1].toString()).toFixed(8);\n    } else if (this.set === ChartTitle.tzBTCXTZ) {\n      const data = this.datas[this.series]?.datasets?.find((ds) => ds.label === ChartTitle.tzBTCXTZ).data;\n      if (!data) {\n        return;\n      }\n      this.tooltipValue = parseFloat(parseFloat(data[data.length - 1].toString()).toFixed(6)).toLocaleString();\n    }\n\n    if (this.chartRef?.nativeElement && this.datas[this.series]?.datasets) {\n      const ctx = this.chartRef.nativeElement.getContext('2d');\n      this.chart?.destroy();\n      this.sets = this.data?.datasets.map((set) => ({ name: set.label }));\n      this.chart = new Chart(ctx, {\n        type: this.type,\n        data: this.data,\n        options: this.options,\n        plugins: []\n      });\n      this.drawn.emit(null);\n    }\n  }\n  toggleSeries(series): void {\n    this.series = series;\n    this.data = this.datas[series];\n    this.overrideDatasetConfig();\n    this.options = this.getChartOptions();\n    this.draw();\n  }\n  toggleSet(set): void {\n    this.reset();\n    this.overrideDatasetConfig();\n    for (let key of Object.keys(this.datas)) {\n      for (let i = 0; i < this.datas[key].datasets.length; ++i) {\n        if (this.datas[key].datasets[i].label === set) {\n          this.datas[key].datasets[i].hidden = false;\n          if (set === ChartTitle.XTZtzBTC) {\n            this.units = 'tzBTC';\n          } else if (set === ChartTitle.tzBTCXTZ) {\n            this.units = 'XTZ';\n          } else {\n            this.toggleSeries(ChartSeries['month']);\n            this.units = 'usd';\n          }\n        } else {\n          this.datas[key].datasets[i].hidden = true;\n        }\n      }\n    }\n    this.data = this.datas[this.series];\n    this.sets = this.data?.datasets.map((set) => ({ name: set.label }));\n    this.set = set ?? this.sets[0].name;\n    this.refreshDDSets();\n    this.options = this.getChartOptions();\n    this.draw();\n  }\n  reset(): void {\n    this.ddSets = [];\n    this.sets = [];\n    this.set = '';\n    this.data = null;\n  }\n  overrideDatasetConfig(): void {\n    for (let i = 0; i < this.datas[this.series]?.datasets.length; ++i) {\n      this.datas[this.series].datasets[i].pointHoverBorderWidth = this.design === 'mini' && !this.chartExpanded ? 0 : 6;\n      this.datas[this.series].datasets[i].pointHitRadius = this.design === 'mini' && !this.chartExpanded ? 0 : 6;\n      this.datas[this.series].datasets[i].pointHoverBackgroundColor = this.design === 'mini' && !this.chartExpanded ? '#00000000' : '#5963ff88';\n      this.datas[this.series].datasets[i].pointHoverBorderColor = this.design === 'mini' && !this.chartExpanded ? '#00000000' : '#5963ff88';\n      this.datas[this.series].datasets[i].pointBackgroundColor = this.design === 'mini' && !this.chartExpanded ? '#00000000' : '#5963ff88';\n      this.datas[this.series].datasets[i].backgroundColor = function (context) {\n        const chart = context.chart;\n        const { ctx, chartArea } = chart;\n\n        if (!chartArea) {\n          return null;\n        }\n        return getGradientBackground(ctx, chartArea);\n      };\n    }\n  }\n  getChartOptions(): any {\n    let yTickPadding = -102;\n    if (this.set === ChartTitle.tzBTCXTZ) {\n      yTickPadding = -71;\n    } else if (this.set === ChartTitle.totalValueLocked) {\n      yTickPadding = -95;\n    }\n    return {\n      layout: {\n        padding: 0\n      },\n      scales: {\n        y: {\n          beginAtZero: false,\n          position: 'right',\n          ticks: {\n            maxTicksLimit: 5,\n            display: this.design === 'mini' && this.chartExpanded === false ? false : true,\n            padding: yTickPadding,\n            align: 'start',\n            font: {\n              size: 14,\n              weight: 500,\n              family: 'Roboto'\n            },\n            textStrokeColor: '#333',\n            z: 1,\n            callback: (label, index, ticks) => {\n              if (index >= 1 && index < 4) {\n                return label < 1 ? label.toFixed(8) : Number(label.toFixed(8).replace(/(\\.0+|0+)$/, '')).toLocaleString();\n              } else {\n                return '';\n              }\n            }\n          },\n          grid: {\n            drawBorder: false,\n            lineWidth: 0\n          }\n        },\n        x: {\n          ticks: {\n            maxTicksLimit: 0,\n            display: false\n          },\n          grid: {\n            drawBorder: false,\n            lineWidth: 0\n          }\n        }\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      hover: {\n        mode: 'nearest',\n        axis: 'x',\n        intersect: false\n      },\n      tooltips: {\n        mode: 'index',\n        axis: 'x',\n        intersect: false\n      },\n      interaction: {\n        intersect: false,\n        mode: 'index',\n        axis: 'x'\n      },\n      elements: {\n        line: {\n          tension: 0.0\n        },\n        point: {\n          radius: 0\n        }\n      },\n      plugins: {\n        tooltip: {\n          enabled: this.design === 'mini' && !this.chartExpanded ? false : true,\n          mode: 'nearest',\n          intersect: false,\n          backgroundColor: 'rgba(0, 0, 0, 0.0)',\n          titleColor: 'rgba(0, 0, 0, 0.0)',\n          bodyColor: 'rgba(0, 0, 0, 0.0)',\n          footerColor: 'rgba(0, 0, 0, 0.0)',\n          displayColors: false,\n          callbacks: {\n            label: (item, a, b) => {\n              this.tooltipValue =\n                item.dataset.data[item.dataIndex] < 1\n                  ? item.dataset.data[item.dataIndex].toFixed(8).toLocaleString()\n                  : parseFloat(item.dataset.data[item.dataIndex].toFixed(2).replace(/(\\.0+|0+)$/, '')).toLocaleString() ?? '';\n              return parseFloat(item.dataset.data[item.dataIndex].toFixed(8)).toLocaleString();\n            }\n          }\n        },\n        legend: { display: false }\n      }\n    };\n  }\n}\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { ListComponent } from '../generic/list.component';\n\n@Component({\n  selector: 'app-ui-dropdown',\n  templateUrl: './dropdown.component.html'\n})\nexport class DropdownComponent extends ListComponent implements OnInit {\n  @Output() dropdownResponse = new EventEmitter();\n  @Input() options: any[];\n  selection: any;\n  ecmpId = this.constructor['ɵcmp'].id;\n  isOpen = false;\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  @HostListener('document:click', ['$event'])\n  @HostListener('document:touchend', ['$event'])\n  closeDropdown(e): void {\n    if (!e.target.closest('#' + this.ecmpId) && this.isOpen) {\n      this.isOpen = false;\n    }\n  }\n\n  toggleDropdown(): void {\n    this.isOpen = !this.isOpen;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html'\n})\nexport class ListComponent implements OnInit {\n  @Input() current;\n  @Input() list: any[];\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"flex-column\" [class]=\"getType().replace('undelegated', 'delegated')\"\n  [class.unconfirmed]=\"activity.status === OpStatus.UNCONFIRMED\" [class.half_confirmed]=\"activity.status === OpStatus.HALF_CONFIRMED\"\n  [class.confirmed]=\"activity.status === OpStatus.CONFIRMED\" [class.new]=\"fresh && activity.status === OpStatus.CONFIRMED\"\n  [class.failed]=\"activity.status === OpStatus.FAILED\">\n  <div class=\"flex-row top\">\n    <div class=\"flex-row title\">\n      <ng-container *ngIf=\"!activity.entrypoint; else callEntrypoint\">\n        <ng-container [ngSwitch]=\"getType()?.replace('undelegated', 'delegated')\">\n          <img *ngSwitchCase=\"'sent'\" [src]=\"activity.status === OpStatus.FAILED ? '../../../../assets/img/up-arrow-red.svg' : '../../../../assets/img/up-arrow-black.svg'\"\n            style=\"transform: rotate(45deg)\" />\n          <img *ngSwitchCase=\"'received'\" [src]=\"activity.status === OpStatus.FAILED ? '../../../../assets/img/up-arrow-red.svg' : '../../../../assets/img/up-arrow.svg'\" style=\"transform: rotate(135deg)\" />\n          <div *ngSwitchDefault class=\"blank\"></div>\n        </ng-container>{{ printAmount() }}\n      </ng-container>\n      <ng-template #callEntrypoint>\n        <ng-container *ngIf=\"zeroSent(activity); else notZero\">\n          <div class=\"blank\"></div>\n        </ng-container>\n        <ng-template #notZero>\n          <img src=\"../../../../assets/img/up-arrow-black.svg\" style=\"transform: rotate(45deg)\" />\n        </ng-template>\n        {{ sentKind(activity) }}\n      </ng-template>\n    </div>\n    <span class=\"failed\" *ngIf=\"activity.status === OpStatus.FAILED\">Error</span>\n    <div class=\"updating-balances\" *ngIf=\"activity.status === OpStatus.HALF_CONFIRMED\">\n      <img class=\"spinner\" src=\"../../../../../assets/img/feeLoader.gif\">\n      <span>Updating balances</span>\n    </div>\n  </div>\n  <div class=\"flex-row bottom\">\n    <div class=\"flex-row address\"><img\n        *ngIf=\"!!getCounterparty(activity)?.lookupType && getCounterparty(activity)?.lookupType !== 5\"\n        [src]=\"getEventIcon()\" class=\"event-icon\" />\n      <div class=\"flex-row value\">{{ getAddressPrefix(getType()) }}&nbsp;{{getCounterparty(activity)?.name ||\n        getCounterparty(activity)?.address || ''}}</div>\n      <img class=\"copy\" src=\"../../../../assets/img/copy-icon.svg\"\n          (click)=\"copy(getCounterparty(activity)?.address)\" />\n    </div>\n    <span class=\"flex-row time\">\n      <img [src]=\"getEventStatusIcon()\" />\n      <a class=\"status\" *ngIf=\"activity.status !== OpStatus.UNCONFIRMED\" href=\"{{ explorerURL(activity.hash) }}\" target=\"_blank\">\n        <ng-container *ngIf=\"activity.status !== OpStatus.HALF_CONFIRMED; else halfConfirmed\">\n          {{ activity.timestamp | timeAgo:trigger }}\n        </ng-container>\n        <ng-template #halfConfirmed>\n          Confirmed\n        </ng-template>\n      </a>\n      <div class=\"status\" *ngIf=\"activity.status === OpStatus.UNCONFIRMED\">Unconfirmed</div>\n    </span>\n  </div>\n</div>","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { Account, Activity, OpStatus } from '../../../../../../services/wallet/wallet';\nimport { TimeAgoPipe } from '../../../../../../pipes/time-ago.pipe';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../../services/message/message.service';\nimport { ActivityService } from '../../../../../../services/activity/activity.service';\nimport { TokenService } from '../../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { LookupType } from '../../../../../../services/lookup/lookup.service';\nimport copy from 'copy-to-clipboard';\nimport { SubjectService } from '../../../../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/activity/event.component.scss']\n})\nexport class EventComponent implements OnInit, OnChanges, OnDestroy {\n  public OpStatus = OpStatus;\n  public LookupType = LookupType;\n  public fresh = undefined;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public timeAgoPipe: TimeAgoPipe,\n    private activityService: ActivityService,\n    public tokenService: TokenService,\n    private subjectService: SubjectService\n  ) {}\n  trigger = true;\n  @Input() activity: Activity;\n  @Input() account: Account;\n  ngOnInit(): void {\n    setInterval(() => {\n      this.trigger = !this.trigger;\n    }, 1000);\n    this.subscriptions.add(\n      this.subjectService.confirmedOp.subscribe((opHash) => {\n        if (opHash === this.activity.hash && this.fresh === undefined) {\n          this.fresh = true;\n          setTimeout(() => {\n            this.fresh = false;\n          }, 20000);\n        }\n      })\n    );\n  }\n  ngOnChanges(changes: SimpleChanges): void {}\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  getType(): string {\n    if (this.activity.type !== 'transaction') {\n      if (this.activity.type === 'delegation') {\n        if (this.activity.destination.address) {\n          return 'delegated';\n        } else {\n          return 'undelegated';\n        }\n      } else {\n        return this.activity.type;\n      }\n    } else {\n      let operationType = '';\n      if (this.activity.source.address === this.account.address) {\n        operationType = 'sent';\n      } else {\n        operationType = 'received';\n      }\n      return operationType;\n    }\n  }\n\n  explorerURL(hash: string): string {\n    const baseURL = CONSTANTS.BLOCK_EXPLORER_URL;\n    return `${baseURL}/${hash}`;\n  }\n  getCounterparty(transaction): any {\n    const c = this.activityService.getCounterparty(transaction, this.account);\n    if (!c.name) {\n      c.name = c.address ? `${c.address.slice(0, 7)}...${c.address.slice(-4)}` : '—';\n    }\n    c.name.trim();\n    return c;\n  }\n  getEventIcon(): string {\n    return `../../../../assets/img/${LookupType[this.getCounterparty(this.activity)?.lookupType].toLowerCase().replace('tezosdomains', 'domain')}-logo.svg`;\n  }\n  getEventStatusIcon(): string {\n    return this.fresh && this.activity.status === OpStatus.CONFIRMED\n      ? '../../../../assets/img/event-new.png'\n      : this.activity.status === OpStatus.CONFIRMED\n      ? '../../../../assets/img/event-confirmed.png'\n      : this.activity.status === OpStatus.UNCONFIRMED\n      ? '../../../../assets/img/event-unconfirmed.png'\n      : this.activity.status === OpStatus.FAILED\n      ? '../../../../assets/img/event-error.png'\n      : this.activity.status === OpStatus.HALF_CONFIRMED\n      ? '../../../../../assets/img/event-half-confirmed.png'\n      : '../../../../assets/img/event-unconfirmed.png';\n  }\n  printAmount(): string {\n    switch (this.getType()) {\n      case 'sent':\n        return this.tokenService.formatAmount(this.activity.tokenId, this.activity.amount.toString());\n      case 'received':\n        return this.tokenService.formatAmount(this.activity.tokenId, this.activity.amount.toString());\n      case 'delegated':\n        return 'Staked';\n      case 'undelegated':\n        return 'Unstaked';\n      case 'origination':\n        return this.tokenService.formatAmount(this.activity.tokenId, this.activity.amount.toString());\n      default:\n        return '';\n    }\n  }\n  sentKind(activity): string {\n    if (activity.entrypoint) {\n      if (activity.amount !== '0') {\n        return `${this.printAmount()}, Call ${activity.entrypoint}`;\n      }\n      return `Call ${activity.entrypoint}`;\n    }\n    return '0';\n  }\n  zeroSent(activity): boolean {\n    return this.sentKind(activity).length > 4 && activity.amount === '0';\n  }\n  receivedKind(activity): string {\n    return activity.tokenId && activity.source.address && activity.tokenId.split(':')[0] === activity.source.address ? 'Minted' : 'Received';\n  }\n  getAddressPrefix(type: string) {\n    switch (type.toLowerCase()) {\n      case 'sent':\n        return 'Sent to:';\n      case 'received':\n        return this.receivedKind(this.activity) + ' from:';\n      case 'delegated':\n        return 'To:';\n      case 'undelegated':\n        return 'To:';\n      case 'origination':\n        return 'Originated contract:';\n    }\n  }\n  copy(address: string): void {\n    copy(address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(address + ' ' + copyToClipboard, 5);\n  }\n}\n","<div class=\"selectable main-container\">\n  <div class=\"top-container-activity\">\n    <h1>Recent Activity</h1>\n    <div class=\"right\">\n      <a class=\"view-all\" href=\"{{ explorerURL(account.address) }}\" target=\"_blank\">View in Explorer</a>\n      <!-- <img class=\"button icon\" src=\"../../../../assets/img/info.svg\" /> -->\n    </div>\n  </div>\n  <div class=\"selectable\" id=\"operations-container\" *ngIf=\"this.translate.store.translations.en\">\n    <ng-container *ngIf=\"account.activities; else loading\">\n      <ng-container *ngIf=\"!account.activities.length\">\n        <div class=\"line\"><span>No activity yet</span></div>\n      </ng-container>\n      <ng-container *ngFor=\"let activity of account.activities | slice:0:10; trackBy: trackEvent\">\n        <app-event [activity]=\"activity\" [account]=\"account\"></app-event>\n      </ng-container>\n    </ng-container>\n    <ng-template #loading>Loading activity...</ng-template>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { TimeAgoPipe } from '../../../../../pipes/time-ago.pipe';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { CONSTANTS } from '../../../../../../environments/environment';\nimport { TokenService } from '../../../../../services/token/token.service';\n\n@Component({\n  selector: 'app-activity',\n  templateUrl: './activity.component.html',\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/cards/activity/activity.component.scss']\n})\nexport class ActivityComponent implements OnInit {\n  public currTimeStamp: number;\n  constructor(public translate: TranslateService, public messageService: MessageService, public timeAgoPipe: TimeAgoPipe, public tokenService: TokenService) {}\n  trigger = true;\n  @Input() activity: any;\n  @Input() account: Account;\n  ngOnInit(): void {}\n  explorerURL(hash: string): string {\n    const baseURL = CONSTANTS.BLOCK_EXPLORER_URL;\n    return `${baseURL}/${hash}`;\n  }\n\n  trackEvent(index: number, activity: any): string {\n    return activity.block + activity.hash;\n  }\n}\n","<div class=\"flex-row token\" (click)=\"viewToken(token)\">\n  <div class=\"dot\"></div>\n  <div class=\"wrapper\">\n    <app-asset class=\"asset\" (inView)=\"balanceChangeTimer()\" [assets]=\"token\" [size]=\"'small'\" [muted]=\"true\" [autoplay]=\"true\" [playsinline]=\"true\" [loop]=\"true\" [priorityList]=\"['thumbnailAsset', 'displayAsset']\"></app-asset>\n    <div *ngIf=\"Number.parseInt(token?.balance) > 1\" class=\"balance\">x{{\n      formatBalance(token) }}</div>\n  </div>\n  <div class=\"flex-column right\">\n    <div class=\"title\">\n      {{token?.name}}\n    </div>\n    <div *ngIf=\"token?.series\" class=\"series\">\n      {{ token?.series }}\n    </div>\n  </div>\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../../services/message/message.service';\nimport { TokenService } from '../../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { ModalComponent } from '../../../../../modals/modal.component';\nimport { TokenBalancesService } from '../../../../../../services/token-balances/token-balances.service';\nimport { DisplayLinkOption } from '../../../../../../interfaces';\nimport Big from 'big.js';\n\n@Component({\n  selector: 'app-nfts-token',\n  templateUrl: './token.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/nfts/token.component.scss']\n})\nexport class NftsTokenComponent implements OnInit, OnChanges {\n  DisplayLinkOption = DisplayLinkOption;\n  Number = Number;\n  @Input() token;\n  isNew = false;\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public tokenService: TokenService,\n    public tokenBalancesService: TokenBalancesService\n  ) {}\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes.token.previousValue?.balance > -1 &&\n      changes.token.currentValue?.balance > -1 &&\n      changes.token.currentValue?.balance != changes.token.previousValue?.balance\n    ) {\n      this.isNew = true;\n    }\n  }\n  viewToken(token): void {\n    ModalComponent.currentModel.next({ name: 'token-detail', data: token });\n  }\n  balanceChangeTimer(): void {\n    setTimeout(() => {\n      this.isNew = false;\n    }, 5000);\n  }\n  formatBalance(token): string {\n    return Big(token.balance)\n      .div(10 ** parseInt(token.decimals))\n      .toFixed();\n  }\n}\n","<form autocomplete=\"off\">\n  <div class=\"flex-row\" [id]=\"ecmpId\">\n    <div class=\"flex-row search-bar\" [class.active]=\"isActive\" [class.has-value]=\"hasValue\">\n      <img class=\"search-button\" src=\"assets/img/search.svg\" (click)=\"searchButtonClicked()\" />\n      <input #input name=\"none\" type=\"text\" [(ngModel)]=\"searchText\" [placeholder]=\"placeholderText\" (focus)=\"onFocus()\"\n        (keydown)=\"onKeydown($event)\" />\n      <div *ngIf=\"isActive && hasValue\" class=\"flex-row match-count\"><span>{{ matchCount + ' matches' }}</span></div>\n    </div>\n    <div *ngIf=\"!hasValue\" class=\"flex-row item-count\"><span>{{ '(' + itemCount + ')' }}</span></div>\n  </div>\n</form>","import { Component, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { DropdownComponent } from '../dropdown/dropdown.component';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search.component.html',\n  styleUrls: ['../../../../scss/components/ui/search-bar/search.component.scss']\n})\nexport class SearchBarComponent extends DropdownComponent implements OnInit, OnDestroy {\n  @ViewChild('input') input: ElementRef;\n  @Output() onInput = new EventEmitter();\n  @Input() itemCount = 0;\n  @Input() matchCount = 0;\n  inputUpdated = new Subject<any>();\n  filter = '.*';\n  isActive = false;\n  hasValue = false;\n  @Input() placeholder = '';\n  placeholderText = '';\n  searchText = '';\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(private subjectService: SubjectService) {\n    super();\n    this.subscriptions.add(\n      this.inputUpdated.pipe(debounceTime(150)).subscribe((e) => {\n        this.filter = !!e?.target.value ? `${e.target.value.replace(/(\\W)/g, '\\\\$1')}` : '';\n        if (!!e) {\n          this.onInput.emit(this.filter);\n        }\n        this.hasValue = !!this.filter;\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((_) => {\n        this.reset();\n      })\n    );\n  }\n  ngOnInit(): void {\n    this.placeholderText = this.placeholder;\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  onKeydown(e): void {\n    this.inputUpdated.next(e);\n  }\n  onFocus(): void {\n    this.isActive = true;\n    this.onInput.emit(this.filter);\n  }\n  searchButtonClicked(): void {\n    if (!this.isActive) {\n      this.input.nativeElement.focus();\n    }\n  }\n  @HostListener('document:click', ['$event'])\n  @HostListener('document:touchend', ['$event'])\n  onBlur(e): void {\n    if (!e.target.closest('#' + this.ecmpId) && this.isActive && !this.hasValue) {\n      this.isActive = false;\n      this.onInput.emit('');\n    }\n  }\n  reset(): void {\n    this.isActive = false;\n    this.filter = '';\n    this.searchText = '';\n    this.hasValue = false;\n    this.onInput.emit(this.filter);\n  }\n}\n","<app-search-bar *ngIf=\"tokens?.length > 12 && searchable\" [placeholder]=\"'Search'\"\n  [matchCount]=\"tokensToDisplay?.filtered.length || 0\" [itemCount]=\"tokensToDisplay?.raw.length || 0\"\n  (onInput)=\"updateFilter($event)\"></app-search-bar>\n<div class=\"scroll-wrapper\">\n  <div #body [style.display]=\"!isDisplaying ? 'none' : ''\" class=\"body\">\n    <ng-container *ngFor=\"let token of tokensToDisplay.loaded; trackBy:trackToken\">\n      <app-nfts-token class=\"token\" [token]=\"token\"></app-nfts-token>\n    </ng-container>\n    <ng-container *ngIf=\"filter !== '.*' && !tokensToDisplay.filtered.length\">\n      No Matches Found\n    </ng-container>\n  </div>\n</div>","import { AfterViewInit, Component, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../../services/message/message.service';\nimport { TokenService } from '../../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { TokenBalancesService } from '../../../../../../services/token-balances/token-balances.service';\nimport { DisplayLinkOption } from '../../../../../../interfaces';\nimport { Subject } from 'rxjs';\nimport { Token } from '../../../../../../services/wallet/wallet';\n\n@Component({\n  selector: 'app-nfts-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/nfts/body.component.scss']\n})\nexport class NftsBodyComponent implements OnInit, OnChanges, AfterViewInit {\n  DisplayLinkOption = DisplayLinkOption;\n  @ViewChild('body') body;\n  @Input() isDisplaying;\n  @Input() tokens;\n  @Input() searchable = false;\n  tokensToDisplay = { loaded: [], filtered: [], raw: [] };\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n  readonly chunkSize = 24;\n  sliceEnd = this.chunkSize;\n  inputUpdated = new Subject<any>();\n  filter = '.*';\n\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public tokenService: TokenService,\n    public tokenBalancesService: TokenBalancesService\n  ) {}\n  ngOnInit(): void {\n    this.refresh();\n  }\n  ngOnChanges(): void {\n    if (this.isDisplaying) {\n      this.refresh();\n    }\n  }\n  refresh(): void {\n    this.tokensToDisplay.raw = this.tokens;\n    this.tokensToDisplay.filtered = this.search(this.tokens);\n    this.tokensToDisplay.loaded = this.tokensToDisplay.filtered.slice(0, this.sliceEnd);\n  }\n  ngAfterViewInit(): void {\n    const cb = (e) => {\n      if (\n        this.body?.nativeElement?.scrollTop >= this.body?.nativeElement?.scrollHeight - this.body?.nativeElement?.clientHeight - 15 &&\n        (this.sliceEnd < this.tokensToDisplay.raw?.length ?? 0)\n      ) {\n        this.sliceEnd += this.chunkSize;\n        this.refresh();\n      }\n    };\n    this.body?.nativeElement.addEventListener('scroll', cb);\n    this.body?.nativeElement.addEventListener('touchmove', cb);\n  }\n  search(tokens): Token[] {\n    if (this.filter.length > 0 && this.filter !== '.*') {\n      return tokens.filter(\n        (t: any) =>\n          t.name.match(new RegExp(`.*${this.filter}.*`, 'i')) ||\n          (!isNaN(Number(this.filter)) && t.id.toString().match(new RegExp(`.*${parseInt(this.filter)}.*`, 'g')))\n      );\n    }\n    return tokens;\n  }\n  updateFilter(filter: string): void {\n    const prevFilter = this.filter;\n    this.filter = filter || '.*';\n    if (prevFilter !== this.filter) {\n      this.sliceEnd = this.chunkSize;\n      this.refresh();\n      this.body.nativeElement.scrollTo(0, 0);\n    }\n  }\n  trackToken(index: number, token: any): string | number {\n    return token?.contractAddress ? token?.contractAddress + ':' + token?.id : index;\n  }\n}\n","<div class=\"main-container\" *ngIf=\"displayTokenCard()\">\n  <div class=\"flex-row top-container-nfts\">\n    <div class=\"flex-row toggle\">\n      <h1 class=\"flex-row\" [class.selected]=\"!isDiscover\" (click)=\"isDiscover = false\">NFT<span> / Collectibles</span>\n      </h1>\n      <h1 class=\"flex-row\" [class.selected]=\"isDiscover\" (click)=\"isDiscover = true\">{{ 'Discover' }}</h1>\n    </div>\n    <div class=\"flex-row right\">\n      <ng-container *ngIf=\"this.nfts && Object.keys(this.nfts).length > 0 && !isDiscover\">\n        <span class=\"flex-row button icon-grey\" [class.selected]=\"filter === 'ALL'\" (click)=\"filter = 'ALL';\">ALL</span>\n        <span class=\"flex-row button icon-grey\" [class.selected]=\"filter !== 'ALL'\" (click)=\"filter = '';\">APP</span>\n      </ng-container>\n      <!-- <img class=\"button icon\" src=\"../../../../assets/img/filter.svg\" />\n      <img class=\"button icon\" src=\"../../../../assets/img/info.svg\" /> -->\n    </div>\n  </div>\n  <div class=\"flex-row-wrap nfts\" [class.d]=\"isDiscover\">\n    <!-- loop through contracts -->\n    <ng-container *ngIf=\"!nftsArray?.length && !isDiscover\"><span>There are no NFTs in this account</span>\n    </ng-container>\n    <ng-container *ngFor=\"let contract of nftsArray; trackBy:trackContract\">\n      <div class=\"flex-column collection\" [class.expanded]=\"filter === sanitizeKey(contract?.key)\"\n        [id]=\"sanitizeKey(contract?.key)\" [style.display]=\"!isDiscover && filter !== 'ALL' ? '' : 'none'\">\n        <div class=\"flex-row head\" (click)=\"toggleDropdown(sanitizeKey(contract?.key))\">\n          <div class=\"flex-row left\">\n            <app-asset class=\"nfts-head-thumbnail\" [assets]=\"{ thumbnailAsset:contract?.thumbnailUrl}\"></app-asset>\n            <div class=\"title\">\n              {{ contract?.name }}\n            </div>\n          </div>\n          <div class=\"flex-row right\">\n            <div class=\"count\">({{ contract?.tokens?.length }})</div>\n            <div class=\"flex-row button toggle\"><img src=\"../../../../assets/img/caret-left.svg\" /></div>\n          </div>\n        </div>\n        <div class=\"flex-column scroll\">\n          <app-nfts-body [isDisplaying]=\"filter === sanitizeKey(contract?.key)\" [tokens]=\"contract?.tokens\">\n          </app-nfts-body>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"flex-column collection scroll all\" [style.display]=\"!isDiscover && filter === 'ALL' ? '' : 'none'\">\n      <app-nfts-body class=\"all\" [isDisplaying]=\"!isDiscover && filter === 'ALL'\" [tokens]=\"tokens\" [searchable]=\"true\">\n      </app-nfts-body>\n    </div>\n    <ng-container *ngIf=\"isDiscover\">\n      <ng-container *ngFor=\"let contractAlias of contractAliases\">\n        <ng-container *ngIf=\"shouldDisplayLink(contractAlias?.shouldDisplayLink)\">\n          <a class=\"flex-column discover\" rel=\"noreferrer\" [href]=\"contractAlias?.link || '/'\" target=\"_blank\"\n            [style.display]=\"isDiscover ? '' : 'none'\">\n            <div class=\"flex-row top\">{{ getContractAlias(contractAlias?.category) || '' }}</div>\n            <div class=\"flex-column middle\" [class.zoom]=\"contractAlias?.zoomDiscoverImg\"\n              [style.backgroundColor]=\"contractAlias?.backgroundColor\">\n              <app-asset class=\"discover\" [class.zoom]=\"contractAlias?.zoomDiscoverImg\" [size]=\"'raw'\"\n                [assets]=\"{displayAsset: contractAlias.discoverUrl, thumbnailAsset: contractAlias.thumbnailUrl}\">\n              </app-asset>\n            </div>\n            <div class=\"flex-row bottom\">\n              <div class=\"flex-column left\">\n                <div class=\"title\">{{ contractAlias?.name || key }}</div>\n                <div class=\"description\">{{ contractAlias?.description }}</div>\n              </div>\n              <div class=\"flex-column right\">\n                <a class=\"link-to-app\">\n                  <button class=\"flex-row button\">GO <img src=\"assets/img/discover-right-angle.svg\" /></button>\n                </a>\n              </div>\n            </div>\n          </a>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { TorusWallet } from '../../../../../services/wallet/wallet';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { TokenService } from '../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../environments/environment';\nimport { TokenBalancesService } from '../../../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../../../services/subject/subject.service';\nimport { DisplayLinkOption } from '../../../../../interfaces';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-nfts',\n  templateUrl: './nfts.component.html',\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/cards/nfts/nfts.component.scss']\n})\nexport class NftsComponent implements OnInit, OnDestroy {\n  DisplayLinkOption = DisplayLinkOption;\n  Object = Object;\n  nfts = undefined;\n  nftsArray = [];\n  tokens = [];\n  isDiscover: boolean = false;\n  isInitLoad: boolean = true;\n  filter: string = 'APP';\n  contractAliases = Object.keys(CONSTANTS.CONTRACT_ALIASES).map((key: any) => ({ key, ...CONSTANTS.CONTRACT_ALIASES[key] }));\n  activeAddress: string = '';\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public tokenService: TokenService,\n    public tokenBalancesService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private walletService: WalletService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        const activeAddress = this.subjectService.activeAccount.getValue()?.address;\n        if (activeAddress !== this.activeAddress) {\n          this.activeAddress = activeAddress;\n          this.reset();\n        }\n        if (this.isInitLoad) {\n          if (!p?.nfts || !Object.keys(p.nfts)?.length) {\n            this.isDiscover = true;\n          } else {\n            this.isInitLoad = false;\n            this.isDiscover = false;\n          }\n        }\n        this.nfts = p?.nfts;\n        this.nftsArray = p?.nfts ? Object.keys(p.nfts).map((key: any) => ({ key, ...p.nfts[key] })) : [];\n        this.tokens = p?.nfts\n          ? Object.keys(p.nfts)\n              .map((key: any) => p.nfts[key]?.tokens)\n              .flat()\n          : [];\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.logout.subscribe((o) => {\n        if (o) {\n          this.reset();\n          this.activeAddress = '';\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        const activeAddress = activeAccount?.address;\n        if (activeAddress !== this.activeAddress) {\n          this.activeAddress = activeAddress;\n          this.reset();\n        }\n      })\n    );\n  }\n  @Input() activity: any;\n  @Input() account;\n  ngOnInit(): void {}\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  displayTokenCard(): boolean {\n    return this.nfts !== undefined;\n  }\n  toggleDropdown(sel): void {\n    if (this.filter === sel) {\n      this.filter = '';\n    } else {\n      this.filter = sel;\n      const c = document.querySelector('#' + sel) as HTMLElement;\n      if (window.innerWidth < 1024) {\n        setTimeout(() => {\n          document.body.scroll(0, c.offsetTop - 25);\n        }, 25);\n      }\n    }\n  }\n  shouldDisplayLink(option: DisplayLinkOption): boolean {\n    if (option === 0 || (option === 1 && this.walletService.wallet instanceof TorusWallet)) {\n      return true;\n    }\n    return false;\n  }\n  sanitizeKey(key: string): string {\n    return 'ku' + key?.replace(/ /g, '');\n  }\n\n  trackContract(index: number, contract: any): string | number {\n    return contract?.key ? contract.key : index;\n  }\n\n  getContractAlias(category): string {\n    return category?.join(' · ');\n  }\n  reset(): void {\n    this.nfts = undefined;\n    this.isDiscover = false;\n    this.tokens = [];\n    this.nftsArray = [];\n    this.isInitLoad = true;\n    this.filter = 'APP';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-basic-button',\n  templateUrl: './basic.component.html'\n})\nexport class BasicButtonComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<button *ngIf=\"symbol && !override; else detailButton\" class=\"flex-row button button-primary with-image\"\n  [class]=\"symbol === 'tez' ? 'tez' : ''\" (click)=\"prepareTransaction()\">\n  <svg *ngIf=\"symbol === 'tez'\" width=\"18\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\">\n    <path id=\"svg_1\"\n      d=\"m16.4439,9.50064c-0.764,0.764 -2.003,0.764 -2.767,0l-2.66,-2.659l0,9.231c0,1.105 -0.895,2 -2,2c-1.104,0 -2,-0.895 -2,-2l0,-9.254l-2.679,2.68c-0.767,0.767 -2.01,0.767 -2.777,0c-0.767,-0.767 -0.767,-2.01 0,-2.776l5.936,-5.936c0.037,-0.044 0.052,-0.099 0.093,-0.14c0.203,-0.203 0.558,-0.344 0.693,-0.439c0.716,-0.307 1.575,-0.176 2.16,0.409c0.101,0.101 0.152,0.227 0.227,0.342l5.774,5.774c0.765,0.764 0.765,2.004 0,2.768z\"\n      fill=\"rgb(255, 255, 255)\" fill-rule=\"evenodd\" />\n  </svg>\n  <img *ngIf=\"symbol !== 'tez'\" [src]=\"'../../../../assets/img/up-arrow.svg'\" />\n  <div class=\"tooltip\">\n    <div class=\"description\">SEND {{ symbol }}</div>\n  </div>\n</button>\n<ng-template #detailButton>\n  <button class=\"button button-primary detail\" (click)=\"prepareTransaction()\">SEND</button>\n</ng-template>","import { Component, OnInit, Input } from '@angular/core';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { TokenService } from '../../../../../services/token/token.service';\nimport { SubjectService } from '../../../../../services/subject/subject.service';\nimport { BasicButtonComponent } from '../basic.component';\n\n@Component({\n  selector: 'app-send-button',\n  templateUrl: './send-button.component.html',\n  styleUrls: ['../../../../../../scss/components/ui/button/send.component.scss']\n})\nexport class SendButtonComponent extends BasicButtonComponent implements OnInit {\n  @Input() activeAccount: Account;\n  @Input() tokenTransfer: string;\n  @Input() symbol: string;\n  @Input() override = false;\n  asset = null;\n  constructor(public tokenService: TokenService, private subjectService: SubjectService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.asset = this.tokenService.getAsset(this.tokenTransfer);\n  }\n  prepareTransaction(): void {\n    this.subjectService.prepareTokenTransfer.next({\n      account: this.activeAccount,\n      tokenTransfer: this.tokenTransfer,\n      symbol: this.symbol\n    });\n  }\n}\n","<div class=\"flex-row balance\">\n  <div class=\"flex-row left\">\n    <app-asset class=\"asset\" [priorityList]=\"['thumbnailAsset', 'displayAsset', 'fallback']\" [assets]=\"token\" [class.sd]=\"token.name === 'tezos'\"\n      (click)=\"viewToken()\">\n    </app-asset>\n    <div class=\"flex-row title\" (click)=\"viewToken()\">{{token.name === 'tezos' ? 'Tezos' : token.symbol}}</div>\n    <div class=\"flex-column prices\">\n      <div class=\"price\">{{ token.name === 'tezos' ? (getBalance() | number: '1.0-' + (token?.decimals || 6) | removeComma) || '—' :\n        getBalance() }}</div>\n      <div class=\"price-usd\">{{ getBalanceFiat() ? '$' + (getBalanceFiat() | number:'1.2-2' | removeComma) : '—' }}\n      </div>\n    </div>\n  </div>\n  <div class=\"flex-row right\">\n    <ng-container *ngIf=\"token?.name === 'tezos'\">\n      <button *ngIf=\"this.account?.balanceXTZ\" class=\"flex-row button button-primary with-image buy\" (click)=\"this.buyTez()\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 5.00024V19.0002\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M5 12H19\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n        <div class=\"tooltip\">\n          <div class=\"description\">BUY tez</div>\n        </div>\n      </button>\n      <button *ngIf=\"this.account?.balanceXTZ === 0\" class=\"flex-row button button-primary with-image buy tez\" (click)=\"this.buyTez()\">\n        <span>Buy</span>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 5.00024V19.0002\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M5 12H19\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n        <div class=\"tooltip alt\">\n          <div class=\"description\">BUY tez</div>\n        </div>\n      </button>\n    </ng-container>\n    <app-send-button *ngIf=\"token && this.account?.balanceXTZ !== 0\" [activeAccount]=\"account\"\n      [tokenTransfer]=\"token?.name === 'tezos' ? null : token?.contractAddress + ':' + token?.id\"\n      [symbol]=\"token?.name === 'tezos' ? 'tez' : token?.symbol\"></app-send-button>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalComponent } from '../../../../../modals/modal.component';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { Big } from 'big.js';\nimport { RemoveCommaPipe } from '../../../../../../pipes/remove-comma.pipe';\nimport { SubjectService } from '../../../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-balance-token',\n  templateUrl: './balance-token.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/balances/balance-token.component.scss']\n})\nexport class BalanceTokenComponent implements OnInit {\n  @Input() token = null;\n  @Input() account;\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n\n  constructor(public removeCommaPipe: RemoveCommaPipe, private subjectService: SubjectService) {}\n  ngOnInit(): void {}\n\n  getBalance(): number | string {\n    return this.token?.name === 'tezos'\n      ? this.account?.balanceXTZ !== null\n        ? Big(this.account?.balanceXTZ).div(1000000).toFixed()\n        : undefined\n      : this.token?.balance;\n  }\n\n  getBalanceFiat(): number | undefined {\n    return this.token.name === 'tezos' ? this.account?.balanceUSD || undefined : this.token?.price && this.token.price >= 0.005 ? this.token.price : undefined;\n  }\n  viewToken(): void {\n    if (this.token?.name !== 'tezos') {\n      ModalComponent.currentModel.next({\n        name: 'token-detail',\n        data: this.token\n      });\n    }\n  }\n  buyTez(): void {\n    this.subjectService.moonpay.next(true);\n  }\n}\n","<div class=\"main-container\">\n  <div class=\"flex-row top-container-balances\">\n    <h1>Balances</h1>\n    <div class=\"flex-row button right\">\n      <button class=\"swap-liquidity\" (click)=\"openSwap()\">Liquidity Baking</button>\n    </div>\n  </div>\n  <div class=\"scroll-wrapper\">\n    <app-balance-token [account]=\"account\" [token]=\"{name: 'tezos', fallback: 'assets/img/tezos-xtz-logo.svg'}\" class=\"tez no-box\"></app-balance-token>\n    <div *ngIf=\"!!this.tokenBalancesService?.balances?.length\" class=\"flex-column balances\">\n      <ng-container *ngFor=\"let balance of balances; let i = index; trackBy: trackToken\">\n        <app-balance-token [account]=\"account\" [token]=\"balance\" [class.first]=\"i === 0\"></app-balance-token>\n      </ng-container>\n    </div>\n    <div class=\"flex-row total-balances no-box\">\n      <div class=\"flex-row left\">\n        <h3>TOTAL VALUE:</h3>\n        <h1>{{ !!totalBalances && isFiat ? '$' + (totalBalances | number: '1.2-2' | removeComma) : '' }}{{ !!totalBalances && !isFiat ? (totalBalances | number: '1.0-6' | removeComma) + ' tez' : '' }}{{ !totalBalances ? '—' : '' }}</h1>\n      </div>\n      <div class=\"flex-row\" (click)=\"toggleTotalBalances()\">\n        <span class=\"fiat\" [class.selected]=\"isFiat\">\n          {{ 'usd' }}\n        </span>\n        <span class=\"sep\">&nbsp;{{ '|' }}&nbsp;</span>\n        <span class=\"tez\" [class.selected]=\"!isFiat\">\n          {{ 'tez' }}\n        </span>\n      </div>\n    </div>\n  </div>\n</div>","import { AfterViewChecked, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { CONSTANTS } from '../../../../../../environments/environment';\nimport { TokenBalancesService } from '../../../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../../../services/subject/subject.service';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Big } from 'big.js';\nimport { RemoveCommaPipe } from '../../../../../pipes/remove-comma.pipe';\nimport { ModalComponent } from '../../../../../components/modals/modal.component';\nimport { MessageService } from '../../../../../services/message/message.service';\n\n@Component({\n  selector: 'app-balances',\n  templateUrl: './balances.component.html',\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/cards/balances/balances.component.scss']\n})\nexport class BalancesComponent implements OnInit, AfterViewChecked, OnDestroy {\n  Object = Object;\n  @Input() account: Account;\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n  totalBalances: string | number = 0;\n  balances: any[];\n  isFiat = false;\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    public tokenBalancesService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private walletService: WalletService,\n    public removeCommaPipe: RemoveCommaPipe,\n    private messageService: MessageService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.pipe(filter((account: Account) => account?.address !== this.account?.address)).subscribe((account) => {\n        this.account = account;\n        this.balances = this.tokenBalancesService?.balances;\n        this.calcTotalBalances();\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        this.balances = p?.balances ?? this.tokenBalancesService?.balances;\n        this.calcTotalBalances();\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(() => {\n        this.balances = this.tokenBalancesService?.balances;\n        this.calcTotalBalances();\n      })\n    );\n  }\n  e(wrap) {\n    if (!!wrap) {\n      if (wrap.scrollTop < 1 || this.tokenBalancesService?.balances?.length <= 5) {\n        document.querySelector('.scroll-wrapper .tez').classList.add('no-box');\n        document.querySelector('.total-balances').classList.add('no-box');\n      } else {\n        document.querySelector('.scroll-wrapper .tez').classList.remove('no-box');\n        document.querySelector('.total-balances').classList.remove('no-box');\n      }\n\n      if (this.tokenBalancesService?.balances?.length > 4) {\n        wrap.style.overflowY = 'auto';\n        wrap.style.width = 'calc(100% - 2.675rem)';\n        wrap.style.padding = '0 0 0 2rem';\n      } else {\n        wrap.style.overflowY = '';\n        wrap.style.width = '';\n        wrap.style.padding = '';\n      }\n    }\n  }\n  ngOnInit(): void {\n    this.balances = this.tokenBalancesService?.balances;\n    this.calcTotalBalances();\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  ngAfterViewChecked(): void {\n    const wrap = document.querySelector('.scroll-wrapper .balances') as HTMLElement;\n    this.e(wrap);\n  }\n  trackToken(index: number, token: any): string | number {\n    return token?.contractAddress ? token.contractAddress + ':' + token?.id + ':' + token?.balance + ':' + token?.thumbnailAsset : index;\n  }\n\n  toggleTotalBalances(): void {\n    this.isFiat = !this.isFiat;\n    this.calcTotalBalances();\n  }\n  calcTotalBalances(): void {\n    this.totalBalances = this.isFiat\n      ? this.balances.reduce((prev, balance) => prev + parseFloat(balance?.price ?? 0), 0) + this.account?.balanceUSD\n      : this.balances.reduce((prev, balance) => prev + parseFloat(balance?.price ?? 0), 0) / this.walletService.wallet.XTZrate +\n        parseFloat(\n          Big(this.account?.balanceXTZ ?? 0)\n            .div(1000000)\n            .toFixed()\n        );\n  }\n  openSwap() {\n    this.messageService.startSpinner();\n    ModalComponent.currentModel.next({ name: 'swap-liquidity', data: null });\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"close()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <h1 class=\"title\">Token Info</h1>\n    </div>\n    <div class=\"flex-column token-info\">\n      <div class=\"flex-row-wrap data\">\n        <div class=\"flex-column wrapper\" [class]=\"imageExpanded ? 'expanded' : ''\">\n          <app-asset [style.display]=\"imageExpanded ? 'none' : ''\" class=\"flex-row button sd-only\"\n            [priorityList]=\"['displayAsset', 'thumbnailAsset']\"\n            [assets]=\"{thumbnailAsset: token?.thumbnailAsset, displayAsset: token?.displayAsset}\" [size]=\"'small'\"\n            (click)=\"expandImage()\" (loaded)=\"assetLoaded = true\" [autoplay]=\"true\" [muted]=\"true\" [loop]=\"true\" [playsinline]=\"true\"></app-asset>\n          <app-asset [style.display]=\"!imageExpanded ? 'none' : ''\" class=\"flex-row button sd-only\"\n            [priorityList]=\"['artifactAsset', 'displayAsset', 'thumbnailAsset']\"\n            [assets]=\"{thumbnailAsset: token?.thumbnailAsset, displayAsset: token?.displayAsset, artifactAsset: token?.artifactAsset}\"\n            [size]=\"'raw'\" [poster]=\"token?.displayAsset\" [controls]=\"true\"></app-asset>\n          <img *ngIf=\"imageExpanded\" class=\"flex-row button close\" (click)=\"expandImage()\"\n            src=\"../../../../../assets/img/close-btn-x.png\" />\n          <img *ngIf=\"!imageExpanded && assetLoaded && !token.displayAsset?.mimeType?.startsWith('model/')\"\n            class=\"expand\" src=\"../../../../../assets/img/expand.png\" (click)=\"expandImage()\" />\n          <b *ngIf=\"!imageExpanded && token.artifactAsset?.mimeType?.startsWith('model/')\" class=\"expand icon-threed\"\n            (click)=\"expandImage()\">3D</b>\n        </div>\n        <div class=\"flex-column meta\">\n          <div class=\"flex-column top\">\n            <div *ngIf=\"token?.name\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                name\n              </div>\n              <div class=\"value\">\n                {{ token?.name }}\n              </div>\n            </div>\n            <div *ngIf=\"!isNFT && token?.symbol\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                symbol\n              </div>\n              <div class=\"value\">\n                {{ token?.symbol }}\n              </div>\n            </div>\n            <div *ngIf=\"!isNFT && !!token?.decimals\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                decimals\n              </div>\n              <div class=\"value\">\n                {{ token?.decimals }}\n              </div>\n            </div>\n            <div *ngIf=\"token?.description\" class=\"flex-column key-value desc\">\n              <div class=\"key\">\n                description\n              </div>\n              <div class=\"value\" style=\"white-space: pre-line\">\n                {{token?.description}}\n              </div>\n            </div>\n            <div *ngIf=\"token?.creator\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                creator\n              </div>\n              <div class=\"value\">\n                {{ token?.creator }}\n              </div>\n            </div>\n          </div>\n        </div>\n        <app-asset [style.height]=\"isAudio ? '' : '0px'\" class=\"flex-row audio minimal-controls\" [requires]=\"['audio']\"\n          [assets]=\"token\" [priorityList]=\"['artifactAsset']\" [size]=\"'raw'\" [autoplay]=\"true\" [muted]=\"true\"\n          [hideSpinner]=\"true\" [controls]=\"true\" (load)=\"isAudio = true\"></app-asset>\n      </div>\n      <ng-container *ngFor=\"let type of Object.keys(CONSTANTS.FEATURE_CONTRACTS)\">\n        <ng-container *ngFor=\"let feat of Object.keys(CONSTANTS.FEATURE_CONTRACTS[type])\">\n          <app-ui-toggle-advanced\n            *ngIf=\"CONSTANTS.FEATURE_CONTRACTS[type][feat]?.includes(token?.contractAddress + ':' + token?.id)\"\n            [class]=\"'feat ' + feat\" style=\"width: 100%\" (stateChange)=\"toggleFeature(type, feat)\"\n            [text]=\"(feat + ' Mode').toUpperCase()\" [state]=\"theme === feat\" [default]=\"theme === feat\">\n          </app-ui-toggle-advanced>\n        </ng-container>\n      </ng-container>\n      <div *ngIf=\"!!token\" class=\"flex-row button more-info\" [class]=\"moreInfo ? 'open' : ''\" (click)=\"expand()\">\n        <span>{{ moreInfo ? 'LESS' : 'MORE' }} INFO</span><img src=\"../../../assets/img/chevron-down.svg\" />\n      </div>\n      <div *ngIf=\"!!token\" [style.maxHeight]=\"moreInfo ? (3.25 * Object.keys(tokenFiltered).length) + 'rem' : ''\"\n        [style.overflowY]=\"autoOverflow ? 'auto' : ''\" class=\"flex-column meta-more\">\n        <ng-container *ngFor=\"let key of Object.keys(tokenFiltered)\">\n          <div *ngIf=\"key === 'contractAddress'\" class=\"flex-column key-value\">\n            <div class=\"key\">\n              {{ 'CONTRACT (ID)' }}\n            </div>\n            <div class=\"value\">\n              {{ token[key] + ' ' + '(' + token['id'] + ')' }}\n            </div>\n          </div>\n          <div *ngIf=\"key !== 'contractAddress' && key !== 'description' && key !== 'id' && !!token[key]\"\n            class=\"flex-column key-value\">\n            <div class=\"key\">\n              {{key}}\n            </div>\n            <div class=\"value\">\n              {{ token[key] }}\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <div *ngIf=\"!token?.isUnknownToken\" class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <app-send-button class=\"send\" [override]=\"true\" [activeAccount]=\"activeAccount\"\n          [tokenTransfer]=\"!token ? null : token['contractAddress']+':'+token['id']\"\n          [symbol]=\"!token ? 'tez' : token?.symbol\">\n        </app-send-button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ModalComponent } from '../../modal.component';\nimport { TokenBalancesService } from '../../../../services/token-balances/token-balances.service';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { CONSTANTS } from '../../../../../environments/environment';\nimport { UnlockableService } from '../../../../services/unlockable/unlockable.service';\n\n@Component({\n  selector: 'app-token-detail',\n  templateUrl: './token-detail.component.html',\n  styleUrls: ['../../../../../scss/components/modals/modal.scss']\n})\nexport class TokenDetail extends ModalComponent implements OnInit, OnDestroy {\n  Object = Object;\n  CONSTANTS = CONSTANTS;\n  token = null;\n  tokenFiltered = {};\n  activeAccount = null;\n  moreInfo = false;\n  imageExpanded = false;\n  autoOverflow = false;\n  descOverflow = false;\n  isNFT = false;\n  assetLoaded = false;\n  isAudio = false;\n  name = 'token-detail';\n  readonly blacklistMeta = [\n    'name',\n    'kind',\n    'artifactAsset',\n    'displayAsset',\n    'thumbnailAsset',\n    'rawUrl',\n    'isTransferable',\n    'isBooleanAmount',\n    'balance',\n    'category',\n    'symbol',\n    'decimals',\n    'status',\n    'shouldPreferSymbol',\n    'price',\n    'formats',\n    'isUnknownToken'\n  ];\n\n  theme = '';\n\n  private subscriptions: Subscription = new Subscription();\n  constructor(private subjectService: SubjectService, private tokenBalancesService: TokenBalancesService, private unlockableService: UnlockableService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.activeAccount = activeAccount;\n      })\n    );\n    for (let type of Object.keys(CONSTANTS.FEATURE_CONTRACTS)) {\n      for (let feat of Object.keys(CONSTANTS.FEATURE_CONTRACTS[type])) {\n        if (document.documentElement.classList.contains(feat)) {\n          this.theme = feat;\n        }\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  open(data): void {\n    !!data\n      ? Object.keys(data)\n          .filter((key) => !this.blacklistMeta.includes(key))\n          .forEach((key) => (this.tokenFiltered[key] = data[key]))\n      : undefined;\n    this.token = data;\n    this.isNFT = this.tokenBalancesService.isNFT(this.token);\n    this.descOverflow = this.token?.description && this.token?.description.length > 250 ? true : false;\n    super.open();\n  }\n\n  close(): void {\n    this.reset();\n    super.close();\n  }\n\n  expand(): void {\n    this.moreInfo = !this.moreInfo;\n    if (!this.autoOverflow) {\n      setTimeout(() => {\n        this.autoOverflow = !this.autoOverflow;\n      }, 160);\n    } else {\n      this.autoOverflow = !this.autoOverflow;\n    }\n  }\n\n  expandImage(): void {\n    this.imageExpanded = !this.imageExpanded;\n  }\n\n  async toggleFeature(type, feat): Promise<void> {\n    this.theme = this.unlockableService.toggleFeature(type, feat) ? feat : '';\n  }\n\n  reset(): void {\n    this.moreInfo = false;\n    this.imageExpanded = false;\n    this.descOverflow = false;\n    this.assetLoaded = false;\n    this.isAudio = false;\n  }\n}\n","<div class=\"flex-column wrapper\" *ngIf=\"account\">\n  <div class=\"grid\" [class.more-than-15]=\"moreThan15\">\n    <app-balances [account]=\"account\"></app-balances>\n    <app-nfts [account]=\"account\"></app-nfts>\n    <app-activity [account]=\"account\"></app-activity>\n  </div>\n</div>\n<app-token-detail></app-token-detail>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Account, Activity, ImplicitAccount } from '../../../../services/wallet/wallet';\nimport { TimeAgoPipe } from '../../../../pipes/time-ago.pipe';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../services/message/message.service';\nimport * as copy from 'copy-to-clipboard';\nimport { CONSTANTS } from '../../../../../environments/environment';\nimport { ActivityService } from '../../../../services/activity/activity.service';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-account-view',\n  templateUrl: './account-view.component.html',\n  styleUrls: ['../../../../../scss/components/views/logged-in/account-view/account-view.component.scss']\n})\nexport class AccountViewComponent implements OnInit, OnDestroy {\n  account: Account;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public timeAgoPipe: TimeAgoPipe,\n    private activityService: ActivityService,\n    public tokenService: TokenService,\n    private subjectService: SubjectService\n  ) {}\n  trigger = true;\n  @Input() activity: any;\n  moreThan15 = false;\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.account = activeAccount;\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        this.moreThan15 = Object.keys(p?.nfts ?? {})?.length > 15 ? true : false;\n      })\n    );\n    setInterval(() => (this.trigger = !this.trigger), 1000);\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  getType(transaction: Activity): string {\n    if (transaction.type !== 'transaction') {\n      if (transaction.type === 'delegation') {\n        if (transaction.destination.address) {\n          return 'delegated';\n        } else {\n          return 'undelegated';\n        }\n      } else {\n        return transaction.type;\n      }\n    } else {\n      let operationType = '';\n      if (transaction.source.address === this.account.address) {\n        operationType = 'sent';\n      } else {\n        operationType = 'received';\n      }\n      return operationType;\n    }\n  }\n\n  getCounterparty(transaction: any): string {\n    return this.activityService.getCounterparty(transaction, this.account);\n  }\n  copy(account: Account): void {\n    copy(account.address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(account.address + ' ' + copyToClipboard, 5);\n  }\n  explorerURL(hash: string): string {\n    const baseURL = CONSTANTS.BLOCK_EXPLORER_URL;\n    return `${baseURL}/${hash}`;\n  }\n  printAmount(activity: Activity): string {\n    return this.tokenService.formatAmount(activity.tokenId, activity.amount.toString());\n  }\n  sentKind(activity): string {\n    if (activity.entrypoint) {\n      return `Called ${activity.entrypoint}`;\n    }\n    return 'Sent';\n  }\n  zeroSent(activity): boolean {\n    return this.sentKind(activity).length > 4 && activity.amount === '0';\n  }\n  receivedKind(activity): string {\n    return activity.tokenId && activity.source.address && activity.tokenId.split(':')[0] === activity.source.address ? 'Minted' : 'Received';\n  }\n  displayTokenCard(): boolean {\n    return this.account instanceof ImplicitAccount || this.account?.tokens?.length > 0;\n  }\n}\n","<div class=\"flex-column settings\">\n  <a><button class=\"flex-row back\" [routerLink]=\"'/account/' + activeAccount?.address\"><img src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n  <h3>Connect with dApps</h3>\n  <div class=\"seperator\"></div>\n  <div class=\"flex-column handler\">\n    <div>\n      <h4>Connect to dApps on <u>another device</u> by scanning a QR code.</h4>\n    </div>\n    <div class=\"scan-button\">\n      <app-qr-scanner></app-qr-scanner>\n    </div>\n  </div>\n  <h3>Peers</h3>\n  <div class=\"seperator\"></div>\n  <table *ngIf=\"beaconService.peers.length\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Relay server</th>\n        <th><span (click)=\"beaconService.removePeers()\">Remove&nbsp;all</span></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let peer of beaconService.peers; index as i\">\n        <td>{{ peer.name }}</td>\n        <td>{{ peer.relayServer }}</td>\n        <td (click)=\"beaconService.removePeer(i)\"><img (click)=\"beaconService.removePeer(i)\" src=\"../../../assets/img/cross.svg\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <h3>Permissions</h3>\n  <div class=\"seperator\"></div>\n  <table *ngIf=\"beaconService.permissions.length\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Address</th>\n        <th><span (click)=\"beaconService.removePermissions()\">Remove&nbsp;all</span></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let permission of beaconService.permissions; index as i\"\n        [class.inactive]=\"!accountAvailable(permission.address)\">\n        <td>{{ permission.appMetadata.name }}</td>\n        <td>{{ formatAddress(permission.address) }}</td>\n        <td><img (click)=\"beaconService.removePermission(i)\" src=\"../../../assets/img/cross.svg\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <h3>Tokens</h3>\n  <div class=\"seperator\"></div>\n  <button class=\"rescan\" (click)=\"rescan()\">Rescan unknown tokens</button>\n  <button id=\"all\" class=\"rescan\" (click)=\"rescanAll()\">Clear all token metadata</button>\n  <button *ngIf=\"canRevealMnomonic()\" class=\"reveal-mnemonic\" (click)=\"revealMnemonic()\">Reveal Seed Words</button>\n</div>","import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\nimport { BeaconService } from '../../../../services/beacon/beacon.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { Router } from '@angular/router';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { Subscription } from 'rxjs';\nimport { CoordinatorService } from '../../../../services/coordinator/coordinator.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { ModalComponent } from '../../../../components/modals/modal.component';\nimport { HdWallet, LegacyWalletV3 } from '../../../../services/wallet/wallet';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['../../../../../scss/components/views/logged-in/settings/settings.component.scss']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  implicitAccounts = [];\n  wideAccounts = false;\n  activeAccount = null;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public beaconService: BeaconService,\n    private messageService: MessageService,\n    private walletService: WalletService,\n    private router: Router,\n    private tokenService: TokenService,\n    private coordinatorService: CoordinatorService,\n    private subjectService: SubjectService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.implicitAccounts = this.walletService.wallet.getImplicitAccounts();\n      this.beaconService.syncBeaconState();\n      this.onResize();\n    }\n\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.activeAccount = activeAccount;\n      })\n    );\n  }\n  ngOnDestroy(): void {}\n  accountAvailable(pkh: string): boolean {\n    const index = this.implicitAccounts.findIndex((impAcc: any) => impAcc.pkh === pkh);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n  @HostListener('window:resize')\n  onResize(): void {\n    this.wideAccounts = window.innerWidth > 600;\n  }\n  formatAddress(address: string): string {\n    if (this.wideAccounts) {\n      return address;\n    } else {\n      return address.slice(0, 6) + '...' + address.slice(-4);\n    }\n  }\n  rescan(): void {\n    this.tokenService.resetCounters();\n    this.messageService.add('Scanning for token metadata...');\n    this.coordinatorService.update(this.activeAccount.address);\n    this.router.navigate([`/account/${this.activeAccount.address}`]);\n  }\n  rescanAll(): void {\n    this.tokenService.resetAllMetadata();\n    this.messageService.add('Rescanning all token metadata...');\n    this.coordinatorService.update(this.activeAccount.address);\n    this.router.navigate([`/account/${this.activeAccount.address}`]);\n  }\n  revealMnemonic(): void {\n    ModalComponent.currentModel.next({ name: 'export-mnemonic', data: null });\n  }\n  canRevealMnomonic(): boolean {\n    return this.walletService.wallet && (this.walletService.wallet instanceof HdWallet || this.walletService.wallet instanceof LegacyWalletV3);\n  }\n}\n","<div class=\"flex-column delegate-page\">\n  <div class=\"content\">\n    <div class=\"flex-column manual\">\n      <div class=\"flex-column delegate\">\n        <a [routerLink]=\"'/account/' + activeAccount?.address\"><button class=\"flex-row back\"><img\n              src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n        <h1>Staking</h1>\n        <div class=\"flex-row toolbar\"><span class=\"button blue\" (click)=\"toggleCustom()\">Enter Custom Baker</span><span\n            *ngIf=\"!delegates?.length\" class=\"button blue\" (click)=\"this.delegateService.getDelegates()\">Reload</span>\n        </div>\n        <ng-container *ngIf=\"isShowingCustom\">\n          <span>Address or domain of a registered baker</span>\n          <div class=\"custom\">\n            <input [(ngModel)]=\"customAddress\" placeholder=\"Custom baker address\" /><button class=\"button\" (click)=\"stake({address: customAddress})\">STAKE</button>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"flex-column list\">\n      <ng-container *ngFor=\"let delegate of delegates\">\n        <div class=\"flex-row delegate desktop\">\n          <img class=\"logo\" [src]=\"delegate.logo ? delegate.logo : ''\" />\n          <span class=\"name\">{{ delegate.name }}</span>\n          <span class=\"fee\">SPLIT:&nbsp;<b class=\"value\">{{ toPercent(delegate?.fee) }}</b></span>\n          <span class=\"freespace\">SPACE:&nbsp;<b class=\"value\">{{ round(delegate?.freeSpace) + ' tez' }}</b></span>\n          <span class=\"estROI\">EST REWARDS:&nbsp;<b class=\"value\">{{ toPercent(delegate?.estimatedRoi) }}</b></span>\n          <span class=\"accuracy\">ACCURACY:&nbsp;<b class=\"value\">{{ delegate?.payoutAccuracy }}</b></span>\n          <button *ngIf=\"delegate?.address !== activeAccount?.delegate\" class=\"button\" (click)=\"stake(delegate)\">STAKE</button>\n          <span class=\"current\" *ngIf=\"delegate?.address === activeAccount?.delegate\">CURRENT</span>\n        </div>\n        <div class=\"flex-row delegate mobile\">\n          <div class=\"flex-column props\">\n            <img class=\"logo\" [src]=\"delegate.logo ? delegate.logo : ''\" />\n            <span class=\"name\">{{ delegate.name }}</span>\n            <span class=\"fee\">SPLIT:&nbsp;<b class=\"value\">{{ toPercent(delegate?.fee) }}</b></span>\n            <span class=\"freespace\">SPACE:&nbsp;<b class=\"value\">{{ round(delegate?.freeSpace) + ' tez' }}</b></span>\n            <span class=\"estROI\">EST REWARDS:&nbsp;<b class=\"value\">{{ toPercent(delegate?.estimatedRoi) }}</b></span>\n          </div>\n          <button *ngIf=\"delegate?.address !== activeAccount?.delegate\" class=\"button\" (click)=\"stake(delegate)\">STAKE</button>\n          <span class=\"current\" *ngIf=\"delegate?.address === activeAccount?.delegate\">CURRENT</span>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccountViewComponent } from './account-view/account-view.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { DelegatePageComponent } from './delegate-page/delegate-page.component';\nimport { ActivateComponent } from '../start/activate/activate.component';\n\nconst routes: Routes = [\n  { path: ':address', component: AccountViewComponent },\n  { path: ':address/settings', component: SettingsComponent },\n  { path: ':address/stakers', component: DelegatePageComponent },\n  { path: 'activate', component: ActivateComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoggedInRoutingModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { DelegateService } from '../../../../services/delegate/delegate.service';\nimport { ModalComponent } from '../../../modals/modal.component';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-delegate-page',\n  templateUrl: './delegate-page.component.html',\n  styleUrls: ['../../../../../scss/components/views/logged-in/delegate/delegate.component.scss']\n})\nexport class DelegatePageComponent implements OnInit, OnDestroy {\n  delegates;\n  activeAccount = null;\n  customAddress: string = '';\n  isShowingCustom = false;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    public delegateService: DelegateService,\n    public router: Router,\n    public walletService: WalletService,\n    public inputValidationService: InputValidationService,\n    private messageServcie: MessageService,\n    private subjectService: SubjectService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        if (this.activeAccount !== activeAccount) {\n          this.activeAccount = activeAccount;\n          this.subscriptions.add(\n            this.delegateService.delegates.pipe(take(1)).subscribe((d) => {\n              this.delegates = this.filter(d).sort((x, y) => (x.address === this.activeAccount?.delegate ? -1 : y === this.activeAccount?.delegate ? 1 : 0));\n            })\n          );\n        }\n      })\n    );\n\n    this.subscriptions.add(\n      this.delegateService.delegates.subscribe((d) => {\n        this.delegates = this.filter(d).sort((x, y) => (x.address === this.activeAccount?.delegate ? -1 : y === this.activeAccount?.delegate ? 1 : 0));\n      })\n    );\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  filter(delegates: any): any[] | null {\n    if (delegates?.length) {\n      const balanceXTZ = this.activeAccount ? Math.ceil(this.activeAccount.balanceXTZ / 1000000) : 0;\n      return delegates\n        .map((d) => {\n          try {\n            if (d.freeSpace > balanceXTZ && d.estimatedRoi > 0 && d.openForDelegation === true && d.minDelegation < balanceXTZ) {\n              return d;\n            }\n          } catch {\n            return null;\n          }\n          return null;\n        })\n        .filter((obj) => obj);\n    }\n    return [];\n  }\n  stake(delegate: any): void {\n    if (delegate.address === '' || this.inputValidationService.address(delegate.address)) {\n      ModalComponent.currentModel.next({\n        name: 'delegate-confirm',\n        data: delegate\n      });\n    } else {\n      this.messageServcie.addError(`Invalid baker address: ${delegate?.address}`);\n    }\n  }\n\n  round(val): string {\n    return Math.round(Number(val)).toString();\n  }\n\n  toPercent(val): string {\n    return parseFloat((Number(val) * 100).toFixed(2)).toString() + '%';\n  }\n\n  toggleCustom(): void {\n    this.isShowingCustom = this.isShowingCustom ? false : true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { SendComponent } from '../../misc/send/send.component';\nimport { ReceiveComponent } from '../../modals/receive/receive.component';\nimport { DelegateComponent } from '../../modals/delegate/delegate.component';\nimport { DelegatePageComponent } from './delegate-page/delegate-page.component';\nimport { ActivateComponent } from '../start/activate/activate.component';\nimport { NewImplicitComponent } from '../../modals/new-implicit/new-implicit.component';\nimport { UriHandlerComponent } from '../../misc/uri-handler/uri-handler.component';\nimport { PermissionRequestComponent } from '../../modals/permission-request/permission-request.component';\nimport { PermissionRequestDropdownComponent } from '../../ui/dropdown/permission-request/permission-request.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { QrScannerComponent } from '../../modals/qr-scanner/qr-scanner.component';\nimport { SignExprComponent } from '../../modals/sign-expr/sign-expr.component';\nimport { ConfirmSendComponent } from '../../modals/send/confirm/send-confirmation.component';\nimport { PrepareSendComponent } from '../../modals/send/prepare/prepare-send.component';\nimport { OriginateComponent } from '../../modals/originate/originate.component';\nimport { LoggedInComponent } from './logged-in.component';\nimport { LoggedInRoutingModule } from './logged-in-routing.module';\nimport { ConfirmSendEmbedComponent } from '../embedded/confirm-send/confirm-send.component';\nimport { SignExprEmbedComponent } from '../embedded/sign-expr/sign-expr.component';\nimport { AdvancedToggleComponent } from '../../ui/button/toggle/advanced/advanced.component';\nimport { PrepareSendDropdownComponent } from '../../ui/dropdown/prepare-send/prepare-send-dropdown.component';\nimport { AssetComponent } from '../../ui/asset/asset.component';\nimport { NftsBodyComponent } from './account-view/nfts/body/body.component';\nimport { NftsTokenComponent } from './account-view/nfts/token/token.component';\nimport { AccountListComponent } from '../../modals/account-list/list.component';\nimport { AccountListBodyComponent } from '../../modals/account-list/body/body.component';\nimport { ListComponent } from '../../ui/generic/list.component';\nimport { SearchBarComponent } from '../../ui/search/search.component';\nimport { RemoveCommaPipe } from '../../../pipes/remove-comma.pipe';\nimport { ExprTemplateComponent } from '../embedded/sign-expr/template/template.component';\nimport { QueueEmbedComponent } from '../embedded/queue/queue.component';\nimport { MoonpayComponent } from './account-view/moonpay/moonpay.component';\nimport { SwapLiquidityComponent } from '../../modals/swap-liquidity/swap-liquidity.component';\nimport { SwapLiquidityService } from '../../../services/swap-liquidity/swap-liquidity.service';\nimport { InfoComponent } from '../../modals/info/info.component';\nimport { ExportMnemonicComponent } from '../../modals/export-mnemonic/export-mnemonic.component';\nimport { SwapLiquidityConfirmComponent } from '../../modals/swap-liquidity/swap-liquidity-confirm.component';\nimport { ChartComponent } from '../../ui/chart/chart.component';\nimport { ChartService } from '../../../../app/services/chart/chart.service';\n\n@NgModule({\n  declarations: [\n    SendComponent,\n    ReceiveComponent,\n    DelegatePageComponent,\n    SwapLiquidityComponent,\n    ActivateComponent,\n    LoggedInComponent,\n    NewImplicitComponent,\n    UriHandlerComponent,\n    PermissionRequestComponent,\n    PermissionRequestDropdownComponent,\n    SettingsComponent,\n    QrScannerComponent,\n    SignExprComponent,\n    OriginateComponent,\n    ConfirmSendComponent,\n    PrepareSendComponent,\n    DelegateComponent,\n    AdvancedToggleComponent,\n    ConfirmSendEmbedComponent,\n    SignExprEmbedComponent,\n    QueueEmbedComponent,\n    PrepareSendDropdownComponent,\n    AssetComponent,\n    NftsBodyComponent,\n    NftsTokenComponent,\n    AccountListComponent,\n    AccountListBodyComponent,\n    ListComponent,\n    SearchBarComponent,\n    RemoveCommaPipe,\n    ExprTemplateComponent,\n    MoonpayComponent,\n    SwapLiquidityConfirmComponent,\n    InfoComponent,\n    RemoveCommaPipe,\n    ExportMnemonicComponent,\n    ChartComponent\n  ],\n  imports: [CommonModule, LoggedInRoutingModule, HttpClientModule, FormsModule],\n  exports: [\n    AdvancedToggleComponent,\n    SendComponent,\n    ConfirmSendEmbedComponent,\n    SignExprEmbedComponent,\n    QueueEmbedComponent,\n    AssetComponent,\n    NftsBodyComponent,\n    NftsTokenComponent,\n    PermissionRequestComponent,\n    PermissionRequestDropdownComponent,\n    ListComponent,\n    AccountListComponent,\n    AccountListBodyComponent,\n    SearchBarComponent,\n    RemoveCommaPipe,\n    ExprTemplateComponent,\n    InfoComponent,\n    ChartComponent\n  ],\n  providers: [SwapLiquidityService, ChartService, EstimateService, RemoveCommaPipe]\n})\nexport class LoggedInModule {}\n","<form autocomplete=\"off\">\n  <div class=\"flex-column card\">\n    <a routerLink=\"/import/\" [state]=\"{ option: 2 }\"><button class=\"flex-row back\"><img\n          src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n    <div class=\"flex-column body\">\n      <h1>\n        Activate a Fundraiser wallet\n      </h1>\n      <p class=\"description\">Wallets created during the fundraiser need to be activated. No private key is required for\n        the activation process.</p>\n      <span class=\"description\">Your public key hash</span>\n      <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"pkh\" [placeholder]=\"'tz1...'\">\n      <span class=\"description\">Your activation code</span>\n      <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"secret\" [placeholder]=\"'Code'\">\n      <button class=\"button next\" (click)=\"activate()\">Activate</button>\n      <span *ngIf=\"formInvalid\" class=\"description red\">\n        {{ formInvalid }}\n      </span>\n    </div>\n  </div>\n</form>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { OperationService } from '../../../../services/operation/operation.service';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-activate',\n  templateUrl: './activate.component.html',\n  styleUrls: ['../../../../../scss/components/views/start/login.component.scss']\n})\nexport class ActivateComponent implements OnInit, OnDestroy {\n  pkh: string;\n  secret: string;\n  formInvalid = '';\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    private messageService: MessageService,\n    private operationService: OperationService,\n    private inputValidationService: InputValidationService,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit(): void {}\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  activate(): void {\n    this.formInvalid = this.checkInput();\n    if (!this.formInvalid) {\n      const pkh = this.pkh;\n      const secret = this.secret;\n      this.pkh = '';\n      this.secret = '';\n      this.subscriptions.add(\n        this.operationService.activate(pkh, secret).subscribe(\n          (ans: any) => {\n            if (ans.success) {\n              if (ans.payload.opHash) {\n                this.subscriptions.add(\n                  this.translate.get('ACTIVATECOMPONENT.ACTIVATESUCCESS').subscribe(\n                    (res: string) => this.messageService.addSuccess(res) // 'Activation successfully broadcasted to the blockchain!'\n                  )\n                );\n              } else {\n                this.subscriptions.add(\n                  this.translate.get('ACTIVATECOMPONENT.RETRIEVEFAIL').subscribe(\n                    (res: string) => this.messageService.addWarning(res) // Could not retrieve an operation hash\n                  )\n                );\n              }\n            } else {\n              let errorMessage = '';\n              if (typeof ans.payload.msg === 'string') {\n                errorMessage = 'NodeError ' + ans.payload.msg;\n              } else {\n                errorMessage = 'NodeError ' + JSON.stringify(ans.payload.msg);\n              }\n              this.messageService.addError(errorMessage);\n              console.log(JSON.stringify(ans.payload.msg));\n            }\n          },\n          (err) => {\n            this.subscriptions.add(\n              this.translate.get('ACTIVATECOMPONENT.ACTIVATEFAIL').subscribe(\n                (res: string) => {\n                  let errorMessage = '';\n                  const activateFailed = res;\n                  if (typeof err.payload.msg === 'string') {\n                    errorMessage = activateFailed + ' ' + err.payload.msg;\n                  } else {\n                    errorMessage = activateFailed;\n                  }\n                  this.messageService.addError(errorMessage);\n                } // 'Failed to activate wallet!'\n              )\n            );\n            console.log(JSON.stringify(err));\n          }\n        )\n      );\n    }\n  }\n  checkInput(): string {\n    if (!this.inputValidationService.address(this.pkh)) {\n      return 'Invalid public key hash!';\n    } else if (!this.inputValidationService.code(this.secret)) {\n      return 'Invalid activation code!';\n    }\n    return '';\n  }\n}\n","import { Activity, Account as WalletAccount } from './services/wallet/wallet';\nimport { Asset, ContractType } from './services/token/token.service';\n\nexport { Activity };\n\nexport interface KeyPair {\n  sk: string | null;\n  pk: string | null;\n  pkh: string;\n}\nexport interface Wallet {\n  seed: null | string;\n  salt: null | string;\n  pk?: string;\n  encryptionVersion: number | null;\n  type: WalletType;\n  balance: Balance;\n  XTZrate: number | null;\n  accounts: Account[];\n  derivationPath?: string;\n}\nexport interface Account {\n  pkh: string | null;\n  delegate: string;\n  balance: Balance;\n  numberOfActivites: number;\n  activities: Activity[];\n}\nexport interface Balance {\n  balanceXTZ: number | null;\n  pendingXTZ: number | null;\n  balanceFiat: number | null;\n  pendingFiat: number | null;\n}\nexport enum WalletType {\n  LegacyWallet,\n  ViewOnlyWallet,\n  ObserverWallet,\n  LedgerWallet,\n  HdWallet\n}\nexport interface Baker {\n  baker_name: string;\n  image: string;\n  rolls: number;\n  identity: string;\n  vote: string;\n  vote2: string;\n  // vote: []\n}\nexport interface Vote {\n  voting_period: string;\n  period_kind: PeriodKind;\n  proposal_hash: string[];\n  proposal_alias: string[];\n  votes: number[];\n  operation: string[];\n}\nexport interface Period {\n  amendment: string;\n  period: number;\n  period_kind: string;\n  proposal_hash: string[];\n  proposal_alias: string[];\n  start_level: number;\n  end_level: number;\n  level: number;\n  progress: number;\n  remaining: number;\n}\nexport interface ParticipationPerPeriod {\n  proposal?: [\n    {\n      hash: string;\n      alias: string;\n      count: number;\n      votes: number;\n    }\n  ];\n  unused_count: number;\n  total_count: number;\n  unused_votes: number;\n  total_votes: number;\n}\nexport interface Ballot {\n  proposal: string;\n  nb_yay: number;\n  nb_nay: number;\n  nb_pass: number;\n  vote_yay: number;\n  vote_nay: number;\n  vote_pass: number;\n}\nexport enum PeriodKind {\n  Proposal,\n  Exploration,\n  Testing,\n  Promotion\n}\nexport interface DefaultTransactionParams {\n  gas: number;\n  storage: number;\n  fee: number;\n  burn: number;\n  reveal?: boolean;\n  customLimits?: {\n    gasLimit: number;\n    storageLimit: number;\n  }[];\n}\n\nexport enum DisplayLinkOption {\n  All,\n  DirectAuth,\n  None\n}\n\nexport interface OpLimits {\n  gas?: number;\n  storage?: number;\n}\n\nexport interface ExternalRequest {\n  operationRequest: any;\n  selectedAccount: WalletAccount;\n}\nexport interface Constants {\n  NAME: string;\n  TEZOS_DOMAIN: {\n    CONTRACT: string;\n    TOP_DOMAINS: string[];\n  };\n  NETWORK: string;\n  MAINNET: boolean;\n  NODE_URL: string;\n  BLOCK_EXPLORER_URL: string;\n  HARD_LIMITS: {\n    hard_gas_limit_per_operation: number;\n    hard_gas_limit_per_block: number;\n    hard_storage_limit_per_operation: number;\n  };\n  ASSETS: Record<string, ContractType>;\n  CONTRACT_OVERRIDES: Record<string, OpLimits>;\n  CONTRACT_ALIASES: Record<\n    string,\n    {\n      name?: string;\n      address: string[];\n      thumbnailUrl: Asset;\n      discoverUrl?: string;\n      zoomDiscoverImg?: boolean;\n      link: string;\n      shouldDisplayLink: DisplayLinkOption;\n      category?: string[];\n      backgroundColor?: string;\n      description?: string;\n    }\n  >;\n  NFT_CONTRACT_OVERRIDES: string[];\n  FEATURE_CONTRACTS: {};\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/*\n    Informs users on most common errors\n    RPC errors doc: http://tezos.gitlab.io/mainnet/api/errors.html\n*/\n\n@Pipe({\n  name: 'errorHandling'\n})\nexport class ErrorHandlingPipe implements PipeTransform {\n  ERROR_LIST = [\n    {\n      msg: 'A fatal assertion failed',\n      id: 'proto.alpha.assertion'\n    },\n    {\n      msg: \"The block's proof-of-work stamp is insufficient\",\n      id: 'proto.alpha.baking.insufficient_proof_of_work'\n    },\n    {\n      msg: 'A block was not signed with the expected private key.',\n      id: 'proto.alpha.baking.invalid_block_signature'\n    },\n    {\n      msg: 'The gap of fitness is out of bounds',\n      id: 'proto.alpha.baking.invalid_fitness_gap'\n    },\n    {\n      msg: \"The block's signature is invalid\",\n      id: 'proto.alpha.baking.invalid_signature'\n    },\n    {\n      msg: 'The block timestamp is before the first slot for this baker at this level',\n      id: 'proto.alpha.baking.timestamp_too_early'\n    },\n    {\n      msg: 'The operation is signed by a delegate without endorsement rights.',\n      id: 'proto.alpha.baking.unexpected_endorsement'\n    },\n    {\n      msg: 'A double-baking evidence is inconsistent (two distinct delegates)',\n      id: 'proto.alpha.block.inconsistent_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is inconsistent (two distinct delegates)',\n      id: 'proto.alpha.block.inconsistent_double_endorsement_evidence'\n    },\n    {\n      msg: 'The block header has invalid commitment.',\n      id: 'proto.alpha.block.invalid_commitment'\n    },\n    {\n      msg: 'A double-baking evidence is inconsistent (two distinct level)',\n      id: 'proto.alpha.block.invalid_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is malformed',\n      id: 'proto.alpha.block.invalid_double_endorsement_evidence'\n    },\n    {\n      msg: 'A manager operation should not contain more than one revelation',\n      id: 'proto.alpha.block.multiple_revelation'\n    },\n    {\n      msg: 'A double-baking evidence is outdated.',\n      id: 'proto.alpha.block.outdated_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is outdated.',\n      id: 'proto.alpha.block.outdated_double_endorsement_evidence'\n    },\n    {\n      msg: 'A double-baking evidence is in the future',\n      id: 'proto.alpha.block.too_early_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is in the future',\n      id: 'proto.alpha.block.too_early_double_endorsement_evidence'\n    },\n    {\n      msg: 'A double-baking evidence is unrequired',\n      id: 'proto.alpha.block.unrequired_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is unrequired',\n      id: 'proto.alpha.block.unrequired_double_endorsement_evidence'\n    },\n    {\n      msg: 'Unexpected JSON object.',\n      id: 'proto.alpha.context.failed_to_decode_parameter'\n    },\n    {\n      msg: 'The protocol parameters are not valid JSON.',\n      id: 'proto.alpha.context.failed_to_parse_parameter'\n    },\n    {\n      msg: 'An error that should never happen unless something has been deleted or corrupted in the database.',\n      id: 'proto.alpha.context.storage_error'\n    },\n    {\n      msg: 'An operation tried to spend more tokens than the contract has',\n      id: 'proto.alpha.contract.balance_too_low'\n    },\n    {\n      msg: 'The storage fee is higher than the contract balance',\n      id: 'proto.alpha.contract.cannot_pay_storage_fee'\n    },\n    {\n      msg: 'An operation assumed a contract counter in the future',\n      id: 'proto.alpha.contract.counter_in_the_future'\n    },\n    {\n      msg: 'An operation assumed a contract counter in the past',\n      id: 'proto.alpha.contract.counter_in_the_past'\n    },\n    {\n      msg: 'Forbidden to credit 0ꜩ to a contract without code.',\n      id: 'proto.alpha.contract.empty_transaction'\n    },\n    {\n      msg: 'Unexpected contract storage error',\n      id: 'proto.alpha.contract.failure'\n    },\n    {\n      msg: 'A malformed contract notation was given to an RPC or in a script.',\n      id: 'proto.alpha.contract.invalid_contract_notation'\n    },\n    {\n      msg: 'Change is not enough to consume a roll.',\n      id: 'proto.alpha.contract.manager.consume_roll_change'\n    },\n    {\n      msg: 'A revealed manager public key is inconsistent with the announced hash',\n      id: 'proto.alpha.contract.manager.inconsistent_hash'\n    },\n    {\n      msg: 'A provided manager public key is different with the public key stored in the contract',\n      id: 'proto.alpha.contract.manager.inconsistent_public_key'\n    },\n    {\n      msg: 'Delegate has no roll.',\n      id: 'proto.alpha.contract.manager.no_roll_for_delegate'\n    },\n    {\n      msg: 'A snapshot of the rolls distribution does not exist for this cycle.',\n      id: 'proto.alpha.contract.manager.no_roll_snapshot_for_cycle'\n    },\n    {\n      msg: 'A contract cannot be delegated to an unregistered delegate',\n      id: 'proto.alpha.contract.manager.unregistered_delegate'\n    },\n    {\n      msg: 'A contract handle is not present in the context (either it never was or it has been destroyed)',\n      id: 'proto.alpha.contract.non_existing_contract'\n    },\n    {\n      msg: 'One tried to revealed twice a manager public key',\n      id: 'proto.alpha.contract.previously_revealed_key'\n    },\n    {\n      msg: 'One tried to apply a manager operation without revealing the manager public key',\n      id: 'proto.alpha.contract.unrevealed_key'\n    },\n    {\n      msg: 'An operation tried to spend tokens from an unspendable contract',\n      id: 'proto.alpha.contract.unspendable_contract'\n    },\n    {\n      msg: 'Useless delegate reactivation',\n      id: 'proto.alpha.delegate.already_active'\n    },\n    {\n      msg: 'Cannot freeze deposit when the balance is too low',\n      id: 'proto.alpha.delegate.balance_too_low_for_deposit'\n    },\n    {\n      msg: 'Cannot register a delegate when its implicit account is empty',\n      id: 'proto.alpha.delegate.empty_delegate_account'\n    },\n    {\n      msg: 'Tried to unregister a delegate',\n      id: 'proto.alpha.delegate.no_deletion'\n    },\n    {\n      msg: 'Contract already delegated to the given delegate',\n      id: 'proto.alpha.delegate.unchanged'\n    },\n    {\n      msg: 'Proposal lists cannot be empty.',\n      id: 'proto.alpha.empty_proposal'\n    },\n    {\n      msg: 'The sum of gas consumed by all the operations in the block exceeds the hard gas limit per block',\n      id: 'proto.alpha.gas_exhausted.block'\n    },\n    {\n      msg: 'Gas limit was not high enough to deserialize the transaction parameters or origination script code or initial storage, making the operation impossible to parse within the provided gas bounds.',\n      id: 'proto.alpha.gas_exhausted.init_deserialize'\n    },\n    {\n      msg: 'An operation tried to exceed the gas limit',\n      id: 'proto.alpha.gas_exhausted.operation'\n    },\n    {\n      msg: 'A transaction tried to exceed the hard limit on gas',\n      id: 'proto.alpha.gas_limit_too_high'\n    },\n    {\n      msg: 'No manager operations are allowed on an empty account. Make sure you have enough balance.',\n      id: 'proto.alpha.implicit.empty_implicit_contract'\n    },\n    {\n      msg: 'Emptying an implicit delegated account is not allowed.',\n      id: 'proto.alpha.implicit.empty_implicit_delegated_contract'\n    },\n    {\n      msg: 'The number of endorsements must be non-negative and at most the endosers_per_block constant.',\n      id: 'proto.alpha.incorrect_number_of_endorsements'\n    },\n    {\n      msg: 'Block priority must be non-negative.',\n      id: 'proto.alpha.incorrect_priority'\n    },\n    {\n      msg: 'An internal operation was emitted twice by a script',\n      id: 'proto.alpha.internal_operation_replay'\n    },\n    {\n      msg: 'A compile-time constant was invalid for its expected form.',\n      id: 'proto.alpha.invalidSyntacticConstantError'\n    },\n    {\n      msg: 'Negative multiple of periods are not allowed.',\n      id: 'proto.alpha.invalid_arg'\n    },\n    {\n      msg: 'Could not deserialize some piece of data from its binary representation',\n      id: 'proto.alpha.invalid_binary_format'\n    },\n    {\n      msg: 'Fitness representation should be exactly 8 bytes long.',\n      id: 'proto.alpha.invalid_fitness'\n    },\n    {\n      msg: 'Ballot provided for a proposal that is not the current one.',\n      id: 'proto.alpha.invalid_proposal'\n    },\n    {\n      msg: 'Period is negative.',\n      id: 'proto.alpha.malformed_period'\n    },\n    {\n      msg: 'Either no parameter was supplied to a contract with a non-unit parameter type, a non-unit parameter was passed to an account, or a parameter was supplied of the wrong type',\n      id: 'proto.alpha.michelson_v1.bad_contract_parameter'\n    },\n    {\n      msg: 'Unexpected stack at the end of a lambda or script.',\n      id: 'proto.alpha.michelson_v1.bad_return'\n    },\n    {\n      msg: 'The stack has an unexpected length or contents.',\n      id: 'proto.alpha.michelson_v1.bad_stack'\n    },\n    {\n      msg: 'The type of a stack item is unexpected (this error is always accompanied by a more precise one).',\n      id: 'proto.alpha.michelson_v1.bad_stack_item'\n    },\n    {\n      msg: 'The error was too big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_error'\n    },\n    {\n      msg: 'Argument of FAILWITH was too big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_failure'\n    },\n    {\n      msg: 'Execution trace with stacks was to big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_log'\n    },\n    {\n      msg: 'The returned storage was too big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_storage'\n    },\n    {\n      msg: 'A non comparable type was used in a place where only comparable types are accepted.',\n      id: 'proto.alpha.michelson_v1.comparable_type_expected'\n    },\n    {\n      msg: 'A deprecated instruction usage is disallowed in newly created contracts',\n      id: 'proto.alpha.michelson_v1.deprecated_instruction'\n    },\n    {\n      msg: 'Two entrypoints have the same name.',\n      id: 'proto.alpha.michelson_v1.duplicate_entrypoint'\n    },\n    {\n      msg: 'Map literals cannot contain duplicated keys',\n      id: 'proto.alpha.michelson_v1.duplicate_map_keys'\n    },\n    {\n      msg: 'When parsing script, a field was found more than once',\n      id: 'proto.alpha.michelson_v1.duplicate_script_field'\n    },\n    {\n      msg: 'Set literals cannot contain duplicate elements, but a duplicae was found while parsing.',\n      id: 'proto.alpha.michelson_v1.duplicate_set_values_in_literal'\n    },\n    {\n      msg: 'An entrypoint name exceeds the maximum length of 31 characters.',\n      id: 'proto.alpha.michelson_v1.entrypoint_name_too_long'\n    },\n    {\n      msg: 'There is non trivial garbage code after a FAIL instruction.',\n      id: 'proto.alpha.michelson_v1.fail_not_in_tail_position'\n    },\n    {\n      msg: 'The toplevel error thrown when trying to parse a type expression (always followed by more precise errors).',\n      id: 'proto.alpha.michelson_v1.ill_formed_type'\n    },\n    {\n      msg: 'The toplevel error thrown when trying to typecheck a contract code against given input, output and storage types (always followed by more precise errors).',\n      id: 'proto.alpha.michelson_v1.ill_typed_contract'\n    },\n    {\n      msg: 'The toplevel error thrown when trying to typecheck a data expression against a given type (always followed by more precise errors).',\n      id: 'proto.alpha.michelson_v1.ill_typed_data'\n    },\n    {\n      msg: 'The annotations on two types could not be merged',\n      id: 'proto.alpha.michelson_v1.inconsistent_annotations'\n    },\n    {\n      msg: 'The specified field does not match the field annotation in the type',\n      id: 'proto.alpha.michelson_v1.inconsistent_field_annotations'\n    },\n    {\n      msg: 'A stack was of an unexpected length (this error is always in the context of a located error).',\n      id: 'proto.alpha.michelson_v1.inconsistent_stack_lengths'\n    },\n    {\n      msg: 'The two types contain annotations that do not match',\n      id: 'proto.alpha.michelson_v1.inconsistent_type_annotations'\n    },\n    {\n      msg: 'This is the basic type clash error, that appears in several places where the equality of two types have to be proven, it is always accompanied with another error that provides more context.',\n      id: 'proto.alpha.michelson_v1.inconsistent_types'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was applied to an unsupported number of arguments.',\n      id: 'proto.alpha.michelson_v1.invalid_arity'\n    },\n    {\n      msg: 'A script or data expression references a big_map that does not exist or assumes a wrong type for an existing big_map.',\n      id: 'proto.alpha.michelson_v1.invalid_big_map'\n    },\n    {\n      msg: 'A data expression was invalid for its expected type.',\n      id: 'proto.alpha.michelson_v1.invalid_constant'\n    },\n    {\n      msg: 'A script or data expression references a contract that does not exist or assumes a wrong type for an existing contract.',\n      id: 'proto.alpha.michelson_v1.invalid_contract'\n    },\n    {\n      msg: 'In a script or data expression, an expression was of the wrong kind (for instance a string where only a primitive applications can appear).',\n      id: 'proto.alpha.michelson_v1.invalid_expression_kind'\n    },\n    {\n      msg: 'The body of an ITER instruction must result in the same stack type as before the ITER.',\n      id: 'proto.alpha.michelson_v1.invalid_iter_body'\n    },\n    {\n      msg: 'FAIL cannot be the only instruction in the body. The propper type of the return list cannot be inferred.',\n      id: 'proto.alpha.michelson_v1.invalid_map_block_fail'\n    },\n    {\n      msg: 'The body of a map block did not match the expected type',\n      id: 'proto.alpha.michelson_v1.invalid_map_body'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was unknown.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive'\n    },\n    {\n      msg: 'In a script or data expression, a primitive name is unknown or has a wrong case.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive_name'\n    },\n    {\n      msg: 'In a script or data expression, a primitive name is neither uppercase, lowercase or capitalized.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive_name_case'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was of the wrong namespace.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive_namespace'\n    },\n    {\n      msg: 'When parsing script, a field was expected, but not provided',\n      id: 'proto.alpha.michelson_v1.missing_script_field'\n    },\n    {\n      msg: 'An entrypoint was not found when calling a contract.',\n      id: 'proto.alpha.michelson_v1.no_such_entrypoint'\n    },\n    {\n      msg: 'Toplevel error for all runtime script errors',\n      id: 'proto.alpha.michelson_v1.runtime_error'\n    },\n    {\n      msg: 'A FAIL instruction was reached due to the detection of an overflow',\n      id: 'proto.alpha.michelson_v1.script_overflow'\n    },\n    {\n      msg: 'A FAILWITH instruction was reached',\n      id: 'proto.alpha.michelson_v1.script_rejected'\n    },\n    {\n      msg: 'A SELF instruction was encountered in a lambda expression.',\n      id: 'proto.alpha.michelson_v1.self_in_lambda'\n    },\n    {\n      msg: 'An instruction generated a type larger than the limit.',\n      id: 'proto.alpha.michelson_v1.type_too_large'\n    },\n    {\n      msg: 'A binary operation is called on operands of types over which it is not defined.',\n      id: 'proto.alpha.michelson_v1.undefined_binop'\n    },\n    {\n      msg: 'A unary operation is called on an operand of type over which it is not defined.',\n      id: 'proto.alpha.michelson_v1.undefined_unop'\n    },\n    {\n      msg: 'A node in the syntax tree was impropperly annotated',\n      id: 'proto.alpha.michelson_v1.unexpected_annotation'\n    },\n    {\n      msg: 'When parsing script, a big_map type was found in a position where it could end up stored inside a big_map, which is forbidden for now.',\n      id: 'proto.alpha.michelson_v1.unexpected_bigmap'\n    },\n    {\n      msg: 'When parsing script, a contract type was found in the storage or parameter field.',\n      id: 'proto.alpha.michelson_v1.unexpected_contract'\n    },\n    {\n      msg: 'When parsing script, an operation type was found in the storage or parameter field.',\n      id: 'proto.alpha.michelson_v1.unexpected_operation'\n    },\n    {\n      msg: 'Annotations of the same kind must be grouped',\n      id: 'proto.alpha.michelson_v1.ungrouped_annotations'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was unknown.',\n      id: 'proto.alpha.michelson_v1.unknown_primitive_name'\n    },\n    {\n      msg: 'At the join point at the end of two code branches the stacks have inconsistent lengths or contents.',\n      id: 'proto.alpha.michelson_v1.unmatched_branches'\n    },\n    {\n      msg: 'Map keys must be in strictly increasing order',\n      id: 'proto.alpha.michelson_v1.unordered_map_literal'\n    },\n    {\n      msg: 'Set values must be in strictly increasing order',\n      id: 'proto.alpha.michelson_v1.unordered_set_literal'\n    },\n    {\n      msg: 'An entrypoint in the contract is not reachable.',\n      id: 'proto.alpha.michelson_v1.unreachable_entrypoint'\n    },\n    {\n      msg: 'Duplicated revelation for a nonce.',\n      id: 'proto.alpha.nonce.previously_revealed'\n    },\n    {\n      msg: 'Nonce revelation happens before cycle end',\n      id: 'proto.alpha.nonce.too_early_revelation'\n    },\n    {\n      msg: 'Nonce revelation happens too late',\n      id: 'proto.alpha.nonce.too_late_revelation'\n    },\n    {\n      msg: 'The provided nonce is inconsistent with the committed nonce hash.',\n      id: 'proto.alpha.nonce.unexpected'\n    },\n    {\n      msg: 'The operation is ill-formed or for another protocol version',\n      id: 'proto.alpha.operation.cannot_parse'\n    },\n    {\n      msg: 'Two endorsements received from same delegate',\n      id: 'proto.alpha.operation.duplicate_endorsement'\n    },\n    {\n      msg: 'The given key and secret do not correspond to any existing preallocated contract',\n      id: 'proto.alpha.operation.invalid_activation'\n    },\n    {\n      msg: 'The level of an endorsement is inconsistent with the provided block hash.',\n      id: 'proto.alpha.operation.invalid_endorsement_level'\n    },\n    {\n      msg: 'The operation signature is ill-formed or has been made with the wrong public key',\n      id: 'proto.alpha.operation.invalid_signature'\n    },\n    {\n      msg: 'The operation is of a kind that must be signed, but the signature is missing',\n      id: 'proto.alpha.operation.missing_signature'\n    },\n    {\n      msg: 'The block being validated does not include the required minimum number of endorsements for this priority.',\n      id: 'proto.alpha.operation.not_enought_endorsements_for_priority'\n    },\n    {\n      msg: 'Trying to include an endorsement in a block that is not the successor of the endorsed one',\n      id: 'proto.alpha.operation.wrong_endorsement_predecessor'\n    },\n    {\n      msg: 'Trying to onclude a proposal or ballot meant for another voting period',\n      id: 'proto.alpha.operation.wrong_voting_period'\n    },\n    {\n      msg: 'The requested seed is not available',\n      id: 'proto.alpha.seed.unknown_seed'\n    },\n    {\n      msg: 'A script or one of its callee wrote more bytes than the operation said it would',\n      id: 'proto.alpha.storage_exhausted.operation'\n    },\n    {\n      msg: 'A transaction tried to exceed the hard limit on storage',\n      id: 'proto.alpha.storage_limit_too_high'\n    },\n    {\n      msg: 'An addition of two tez amounts overflowed',\n      id: 'proto.alpha.tez.addition_overflow'\n    },\n    {\n      msg: 'Multiplication of a tez amount by a non positive integer',\n      id: 'proto.alpha.tez.invalid_divisor'\n    },\n    {\n      msg: 'A multiplication of a tez amount by an integer overflowed',\n      id: 'proto.alpha.tez.multiplication_overflow'\n    },\n    {\n      msg: 'Multiplication of a tez amount by a negative integer',\n      id: 'proto.alpha.tez.negative_multiplicator'\n    },\n    {\n      msg: 'An subtraction of two tez amounts underflowed',\n      id: 'proto.alpha.tez.subtraction_underflow'\n    },\n    {\n      msg: 'Overflow when adding timestamps.',\n      id: 'proto.alpha.timestamp_add'\n    },\n    {\n      msg: 'Substracting timestamps resulted in negative period.',\n      id: 'proto.alpha.timestamp_sub'\n    },\n    {\n      msg: 'A transaction exceeded the hard limit of internal operations it can emit',\n      id: 'proto.alpha.too_many_internal_operations'\n    },\n    {\n      msg: 'The delegate reached the maximum number of allowed proposals.',\n      id: 'proto.alpha.too_many_proposals'\n    },\n    {\n      msg: 'The delegate provided for the ballot is not in the voting listings.',\n      id: 'proto.alpha.unauthorized_ballot'\n    },\n    {\n      msg: 'The delegate provided for the proposal is not in the voting listings.',\n      id: 'proto.alpha.unauthorized_proposal'\n    },\n    {\n      msg: 'An origination was attemped out of the scope of a manager operation',\n      id: 'proto.alpha.undefined_operation_nonce'\n    },\n    {\n      msg: 'Ballot recorded outside of a voting period.',\n      id: 'proto.alpha.unexpected_ballot'\n    },\n    {\n      msg: 'Level must be non-negative.',\n      id: 'proto.alpha.unexpected_level'\n    },\n    {\n      msg: 'Nonce length is incorrect.',\n      id: 'proto.alpha.unexpected_nonce_length'\n    },\n    {\n      msg: 'Proposal recorded outside of a proposal period.',\n      id: 'proto.alpha.unexpected_proposal'\n    },\n    {\n      msg: 'Block locator is invalid.',\n      id: 'node.bootstrap_pipeline.invalid_locator'\n    },\n    {\n      msg: 'Block locator is too short.',\n      id: 'node.bootstrap_pipeline.too_short_locator'\n    },\n    {\n      msg: 'IO error: connection with a peer is closed.',\n      id: 'node.p2p_io_scheduler.connection_closed'\n    },\n    {\n      msg: 'Fail to connect with a peer: a connection is already established.',\n      id: 'node.p2p_pool.connected'\n    },\n    {\n      msg: 'Connection was refused.',\n      id: 'node.p2p_pool.connection_refused'\n    },\n    {\n      msg: 'The peer identity you tried to connect is banned.',\n      id: 'node.p2p_pool.peer_banned'\n    },\n    {\n      msg: 'Fail to connect with a peer: a connection is already pending.',\n      id: 'node.p2p_pool.pending_connection'\n    },\n    {\n      msg: 'The address you tried to connect is banned.',\n      id: 'node.p2p_pool.point_banned'\n    },\n    {\n      msg: 'Node is in private mode.',\n      id: 'node.p2p_pool.private_mode'\n    },\n    {\n      msg: 'Connection to peer was rejected by us.',\n      id: 'node.p2p_pool.rejected'\n    },\n    {\n      msg: 'Too many connections.',\n      id: 'node.p2p_pool.too_many_connections'\n    },\n    {\n      msg: 'An error occurred while deciphering.',\n      id: 'node.p2p_socket.decipher_error'\n    },\n    {\n      msg: 'An error occurred while decoding.',\n      id: 'node.p2p_socket.decoding_error'\n    },\n    {\n      msg: 'An error occurred while encoding.',\n      id: 'node.p2p_socket.encoding_error'\n    },\n    {\n      msg: 'Rejected peer connection: invalid authentication.',\n      id: 'node.p2p_socket.invalid_auth'\n    },\n    {\n      msg: 'Size of chunks is not valid.',\n      id: 'node.p2p_socket.invalid_chunks_size'\n    },\n    {\n      msg: 'The size of the message to be written is invalid.',\n      id: 'node.p2p_socket.invalid_message_size'\n    },\n    {\n      msg: 'Remote peer is actually yourself.',\n      id: 'node.p2p_socket.myself'\n    },\n    {\n      msg: 'Remote peer cannot be authenticated: not enough proof of work.',\n      id: 'node.p2p_socket.not_enough_proof_of_work'\n    },\n    {\n      msg: 'Rejected peer connection: The peer rejected the socket connection by Nack with a list of alternative peers.',\n      id: 'node.p2p_socket.rejected_by_nack'\n    },\n    {\n      msg: 'Rejected peer connection: rejected socket connection as we have no common network protocol with the peer.',\n      id: 'node.p2p_socket.rejected_no_common_protocol'\n    },\n    {\n      msg: 'Rejected peer connection: rejected socket connection.',\n      id: 'node.p2p_socket.rejected_socket_connection'\n    },\n    {\n      msg: 'Rejecting peer connection with motive.',\n      id: 'node.p2p_socket.rejecting_incoming'\n    },\n    {\n      msg: \"Known invalid block found in the peer's chain\",\n      id: 'node.peer_validator.known_invalid'\n    },\n    {\n      msg: \"Unknown ancestor block found in the peer's chain\",\n      id: 'node.peer_validator.unknown_ancestor'\n    },\n    {\n      msg: 'The block was annotated with a time too far in the future.',\n      id: 'node.prevalidation.future_block_header'\n    },\n    {\n      msg: 'The operation size is bigger than allowed.',\n      id: 'node.prevalidation.oversized_operation'\n    },\n    {\n      msg: 'Raised when an operation has not been parsed correctly during prevalidation.',\n      id: 'node.prevalidation.parse_error'\n    },\n    {\n      msg: 'The prevalidation context is full.',\n      id: 'node.prevalidation.too_many_operations'\n    },\n    {\n      msg: 'Invalid protocol.',\n      id: 'node.protocol_validator.invalid_protocol'\n    },\n    {\n      msg: 'The data directory could not be read. This could be because it was generated with an old version of the tezos-node program. Deleting and regenerating this directory may fix the problem.',\n      id: 'node.state.bad_data_dir'\n    },\n    {\n      msg: 'When commiting the context of a block, the announced context hash was not the one computed at commit time.',\n      id: 'node.state.block.inconsistent_context_hash'\n    },\n    {\n      msg: 'The invalid block to be unmarked was not actually invalid.',\n      id: 'node.state.block_not_invalid'\n    },\n    {\n      msg: 'The chain identifier could not be found in the chain identifiers table.',\n      id: 'node.state.unknown_chain'\n    },\n    {\n      msg: 'The block belongs to a branch that is not compatible with the current checkpoint.',\n      id: 'node.validator.checkpoint_error'\n    },\n    {\n      msg: 'Attempted validation of a block from an inactive chain.',\n      id: 'node.validator.inactive_chain'\n    },\n    {\n      msg: 'Incorrect history mode switch.',\n      id: 'node_config_file.incorrect_history_mode_switch'\n    },\n    {\n      msg: 'Missing key in store',\n      id: 'raw_store.unknown'\n    },\n    {\n      msg: 'The provided list of operations is inconsistent with the block header.',\n      id: 'validator.inconsistent_operations_hash'\n    },\n    {\n      msg: 'Invalid block.',\n      id: 'validator.invalid_block'\n    },\n    {\n      msg: 'Missing test protocol when forking the test chain',\n      id: 'validator.missing_test_protocol'\n    },\n    {\n      msg: 'The protocol required for validating a block is missing.',\n      id: 'validator.unavailable_protocol'\n    },\n    {\n      msg: 'Failed to validate block using exteranl validation process.',\n      id: 'validator.validation_process_failed'\n    },\n    {\n      msg: 'An operation on a worker could not complete before it was shut down.',\n      id: 'worker.closed'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an annotation exceeded the maximum length (255).',\n      id: 'micheline.parse_error.annotation_exceeds_max_length'\n    },\n    {\n      msg: 'Tried to interpret an empty piece or Micheline source as a single expression.',\n      id: 'micheline.parse_error.empty_expression'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an extra semi colon or parenthesis was encountered.',\n      id: 'micheline.parse_error.extra_token'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a sequence of bytes that is not valid UTF-8 was encountered.',\n      id: 'micheline.parse_error.invalid_utf8_sequence'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an expression was not aligned with its siblings of the same mother application or sequence.',\n      id: 'micheline.parse_error.misaligned_node'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a number was not visually separated from its follower token, leading to misreadability.',\n      id: 'micheline.parse_error.missing_break_after_number'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, the length of a byte sequence (0x...) was not a multiple of two, leaving a trailing half byte.',\n      id: 'micheline.parse_error.odd_lengthed_bytes'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a parenthesis or a brace was unclosed.',\n      id: 'micheline.parse_error.unclosed_token'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an unexpected escape sequence was encountered in a string.',\n      id: 'micheline.parse_error.undefined_escape_sequence'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an unexpected character was encountered.',\n      id: 'micheline.parse_error.unexpected_character'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an unexpected token was encountered.',\n      id: 'micheline.parse_error.unexpected_token'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a commentX was not terminated.',\n      id: 'micheline.parse_error.unterminated_comment'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an integer was not terminated.',\n      id: 'micheline.parse_error.unterminated_integer'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a string was not terminated.',\n      id: 'micheline.parse_error.unterminated_string'\n    },\n    {\n      msg: 'Wrong hash given',\n      id: 'Bad_hash'\n    },\n    {\n      msg: 'The context checkout failed using a given hash',\n      id: 'Block_validator_process.failed_to_checkout_context'\n    },\n    {\n      msg: 'Cannot reconstruct',\n      id: 'CannotReconstruct'\n    },\n    {\n      msg: 'Cannot find context corresponding to hash',\n      id: 'Context_not_found'\n    },\n    {\n      msg: 'The imported block is not the expected one.',\n      id: 'InconsistentImportedBlock'\n    },\n    {\n      msg: 'The operations given do not match their hashes.',\n      id: 'InconsistentOperationHashes'\n    },\n    {\n      msg: 'The data provided by the snapshot is inconsistent',\n      id: 'Inconsistent_snapshot_data'\n    },\n    {\n      msg: 'Error while opening snapshot file',\n      id: 'Inconsistent_snapshot_file'\n    },\n    {\n      msg: 'Invalid specification of block to import',\n      id: 'InvalidBlockSpecification'\n    },\n    {\n      msg: 'The version of the snapshot to import is not valid',\n      id: 'Invalid_snapshot_version'\n    },\n    {\n      msg: 'Mandatory data missing while reaching end of snapshot file.',\n      id: 'Missing_snapshot_data'\n    },\n    {\n      msg: 'RPC lookup failed. Block has been pruned and requested data deleted.',\n      id: 'RPC_context.Gone'\n    },\n    {\n      msg: 'RPC lookup failed. No RPC exists at the URL or the RPC tried to access non-existent data.',\n      id: 'RPC_context.Not_found'\n    },\n    {\n      msg: 'Internal error while restoring the context',\n      id: 'Restore_context_failure'\n    },\n    {\n      msg: 'The imported snapshot is malformed.',\n      id: 'SnapshotImportFailure'\n    },\n    {\n      msg: 'Failed to read file',\n      id: 'System_read_error'\n    },\n    {\n      msg: 'The validator failed because of a system error',\n      id: 'Validator_process.system_error_while_validating'\n    },\n    {\n      msg: 'Cannot write in file for context dump',\n      id: 'Writing_error'\n    },\n    {\n      msg: 'The block to export in the snapshot is not valid.',\n      id: 'WrongBlockExport'\n    },\n    {\n      msg: 'Wrong protocol hash',\n      id: 'WrongProtocolHash'\n    },\n    {\n      msg: 'Snapshot exports is not compatible with the current configuration.',\n      id: 'WrongSnapshotExport'\n    },\n    {\n      msg: 'A fatal assertion failed',\n      id: 'assertion'\n    },\n    {\n      msg: 'A promise was unexpectedly canceled',\n      id: 'canceled'\n    },\n    {\n      msg: 'A key has been provided with an invalid uri.',\n      id: 'cli.key.invalid_uri'\n    },\n    {\n      msg: 'The signer produced an invalid signature',\n      id: 'cli.signature_mismatch'\n    },\n    {\n      msg: 'A key has been provided with an unregistered scheme (no corresponding plugin)',\n      id: 'cli.unregistered_key_scheme'\n    },\n    {\n      msg: 'The byte sequence references a multisig counter that does not match the one currently stored in the given multisig contract',\n      id: 'client.alpha.Bad deserialized counter'\n    },\n    {\n      msg: 'When trying to deserialise an action from a sequence of bytes, we got an expression that does not correspond to a known multisig action',\n      id: 'client.alpha.actionDeserialisation'\n    },\n    {\n      msg: 'When trying to deserialise an action from a sequence of bytes, we got an action for another multisig contract',\n      id: 'client.alpha.badDeserializedContract'\n    },\n    {\n      msg: 'invalid duration in -endorsement-delay',\n      id: 'client.alpha.badEndorsementDelayArg'\n    },\n    {\n      msg: 'invalid priority in -max-priority',\n      id: 'client.alpha.badMaxPriorityArg'\n    },\n    {\n      msg: 'invalid duration in -max-waiting-time',\n      id: 'client.alpha.badMaxWaitingTimeArg'\n    },\n    {\n      msg: 'invalid fee threshold in -fee-threshold',\n      id: 'client.alpha.badMinimalFeesArg'\n    },\n    {\n      msg: 'invalid number of levels in -preserved-levels',\n      id: 'client.alpha.badPreservedLevelsArg'\n    },\n    {\n      msg: 'Invalid ꜩ notation in parameter.',\n      id: 'client.alpha.badTezArg'\n    },\n    {\n      msg: 'When trying to deserialise an action from a sequence of bytes, we got an error',\n      id: 'client.alpha.bytesDeserialisation'\n    },\n    {\n      msg: 'A multisig command has referenced a scriptless smart contract instead of a multisig smart contract.',\n      id: 'client.alpha.contractHasNoScript'\n    },\n    {\n      msg: 'A multisig command has referenced a smart contract without storage instead of a multisig smart contract.',\n      id: 'client.alpha.contractHasNoStorage'\n    },\n    {\n      msg: 'A multisig command has referenced a smart contract whose storage is of a different shape than the expected one.',\n      id: 'client.alpha.contractHasUnexpectedStorage'\n    },\n    {\n      msg: 'Attempt to get the code of a contract failed because it has nocode. No scriptless contract should remain.',\n      id: 'client.alpha.contractWithoutCode'\n    },\n    {\n      msg: 'A signature was given for a multisig contract that matched none of the public keys of the contract signers',\n      id: 'client.alpha.invalidSignature'\n    },\n    {\n      msg: 'A wrong number of arguments was provided to a macro',\n      id: 'client.alpha.michelson.macros.bas_arity'\n    },\n    {\n      msg: 'An macro expects a sequence, but a sequence was not provided',\n      id: 'client.alpha.michelson.macros.sequence_expected'\n    },\n    {\n      msg: 'A macro had an annotation, but no annotation was permitted on this macro.',\n      id: 'client.alpha.michelson.macros.unexpected_annotation'\n    },\n    {\n      msg: 'A multisig threshold should be a positive number',\n      id: 'client.alpha.nonPositiveThreshold'\n    },\n    {\n      msg: 'A multisig command has referenced a smart contract whose script is not one of the known multisig contract scripts.',\n      id: 'client.alpha.notASupportedMultisigContract'\n    },\n    {\n      msg: 'To run an action on a multisig contract, you should provide at least as many signatures as indicated by the threshold stored in the multisig contract.',\n      id: 'client.alpha.notEnoughSignatures'\n    },\n    {\n      msg: 'The given threshold is higher than the number of keys, this would lead to a frozen multisig contract',\n      id: 'client.alpha.thresholdTooHigh'\n    },\n    {\n      msg: 'Cannot recover from a corrupted context.',\n      id: 'context.non_recoverable_context'\n    },\n    {\n      msg: '<gf>context_dump.read.cannot_open'\n    },\n    {\n      msg: '<gf>context_dump.read.suspicious'\n    },\n    {\n      msg: '<gf>context_dump.write.cannot_open'\n    },\n    {\n      msg: 'Exception safely wrapped in an error',\n      id: 'failure'\n    },\n    {\n      msg: 'Activation of an Internal Event SINK with an URI failed',\n      id: 'internal-event-activation-error'\n    },\n    {\n      msg: 'The raw context extraction depth argument must be positive.',\n      id: 'raw_context.invalid_depth'\n    },\n    {\n      msg: 'No protocol was registered with the requested hash.',\n      id: 'registered_protocol.unregistered_protocol'\n    },\n    {\n      msg: 'The fetch of a Operation_hash has been canceled',\n      id: 'requester.Operation_hash.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a Operation_hash has timed out',\n      id: 'requester.Operation_hash.fetch_timeout'\n    },\n    {\n      msg: 'Some Operation_hash is missing from the requester',\n      id: 'requester.Operation_hash.missing'\n    },\n    {\n      msg: 'The fetch of a Protocol_hash has been canceled',\n      id: 'requester.Protocol_hash.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a Protocol_hash has timed out',\n      id: 'requester.Protocol_hash.fetch_timeout'\n    },\n    {\n      msg: 'Some Protocol_hash is missing from the requester',\n      id: 'requester.Protocol_hash.missing'\n    },\n    {\n      msg: 'The fetch of a block_hash has been canceled',\n      id: 'requester.block_hash.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a block_hash has timed out',\n      id: 'requester.block_hash.fetch_timeout'\n    },\n    {\n      msg: 'Some block_hash is missing from the requester',\n      id: 'requester.block_hash.missing'\n    },\n    {\n      msg: 'The fetch of a operation_hashes has been canceled',\n      id: 'requester.operation_hashes.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a operation_hashes has timed out',\n      id: 'requester.operation_hashes.fetch_timeout'\n    },\n    {\n      msg: 'Some operation_hashes is missing from the requester',\n      id: 'requester.operation_hashes.missing'\n    },\n    {\n      msg: 'The fetch of a operations has been canceled',\n      id: 'requester.operations.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a operations has timed out',\n      id: 'requester.operations.fetch_timeout'\n    },\n    {\n      msg: 'Some operations is missing from the requester',\n      id: 'requester.operations.missing'\n    },\n    {\n      msg: 'Error while decoding a remote signer message',\n      id: 'signer.decoding_error'\n    },\n    {\n      msg: 'Error while encoding a remote signer message',\n      id: 'signer.encoding_error'\n    },\n    {\n      msg: 'Block not found',\n      id: 'state.block.contents_not_found'\n    },\n    {\n      msg: 'Block not found',\n      id: 'state.block.not_found'\n    },\n    {\n      msg: 'Unix System_info failure',\n      id: 'unix.system_info'\n    },\n    {\n      msg: 'An unhandled unix exception',\n      id: 'unix_error'\n    },\n    {\n      msg: 'Canceled',\n      id: 'utils.Canceled'\n    },\n    {\n      msg: 'Timeout',\n      id: 'utils.Timeout'\n    },\n    {\n      msg: 'Fee exceeded hard cap!',\n      id: 'TooHighFee'\n    },\n    {\n      msg: 'Node error: Timeout has occurred! Please try again later.',\n      id: 'Timeout has occurred'\n    }\n  ];\n  transform(errorId: string, withObj?: any, location?: number): any {\n    const protocol = errorId.match(/[0-9]{3}-P\\w{7}/g);\n    if (protocol && protocol[0]) {\n      errorId = errorId.replace(protocol[0], 'alpha');\n    }\n    let errorMessage = '';\n    const index = this.ERROR_LIST.findIndex((s) => s.id === errorId);\n    console.log('errorId', errorId);\n    if (errorId === 'proto.alpha.michelson_v1.script_rejected' && withObj) {\n      if (withObj.string) {\n        errorMessage = `${this.ERROR_LIST[index].msg} | ${withObj.string}`;\n      } else if (withObj?.int === '4' && location === 206) {\n        errorMessage = 'Tokens deposited is greater than maximum tokens deposited. Please retry in a while.';\n      } else {\n        let jsonWith = JSON.stringify(withObj);\n        if (jsonWith.length > 200) {\n          jsonWith = '[...]';\n          console.error('FAILWITH', withObj);\n        }\n        errorMessage = `${this.ERROR_LIST[index].msg} ${jsonWith}`;\n      }\n      console.log(withObj);\n    } else if (index !== -1) {\n      errorMessage = this.ERROR_LIST[index].msg;\n    } else {\n      if (errorId.indexOf('branch refused (Error:') !== -1 && errorId.indexOf('already used for contract') !== -1) {\n        errorMessage =\n          'Counter error: Another operation in mempool is blocking your operation. Wait for it to be included in a block or pruned from mempool (up to 60 minutes).';\n      } else {\n        errorMessage = 'Unrecognized error: ' + errorId;\n      }\n    }\n    return errorMessage;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'removeComma'\n})\nexport class RemoveCommaPipe implements PipeTransform {\n  transform(value: string): string {\n    if (value !== undefined && value !== null) {\n      return value.replace(/,/g, '');\n    } else {\n      return '';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core'; // Multiple instances created ?\nimport * as timediff from 'timediff';\n\n@Pipe({\n  name: 'timeAgo',\n  pure: true // if false pipe will be called at each changes - necessary for translation - is there a better way?\n})\nexport class TimeAgoPipe implements PipeTransform {\n  constructor(private translate: TranslateService) {}\n  transform(timestamp: number): string {\n    const now = this.translate.instant('TIMEAGOPIPE.JUSTNOW');\n    const sec = this.translate.instant('TIMEAGOPIPE.SEC');\n    const secs = sec;\n    const mn = this.translate.instant('TIMEAGOPIPE.MINUTE');\n    const mns = mn;\n    const hr = this.translate.instant('TIMEAGOPIPE.HOUR');\n    const hrs = this.translate.instant('TIMEAGOPIPE.HOURS');\n    const day = this.translate.instant('TIMEAGOPIPE.DAY');\n    const days = this.translate.instant('TIMEAGOPIPE.DAYS');\n    const month = this.translate.instant('TIMEAGOPIPE.MONTH');\n    const months = this.translate.instant('TIMEAGOPIPE.MONTHS');\n    const year = this.translate.instant('TIMEAGOPIPE.YEAR');\n    const years = this.translate.instant('TIMEAGOPIPE.YEARS');\n\n    const timeNow = new Date().getTime();\n    const diff = timediff(timestamp, timeNow, 'YMDHmS');\n\n    const keys = Object.keys(diff);\n    let count = 0;\n    let output = '';\n\n    for (const key of keys) {\n      if (diff[key] || count) {\n        if (count) {\n          output = output + ' ';\n        }\n        switch (key) {\n          case 'years':\n            output = `${diff[key]}${diff[key] === 1 ? year : years}`;\n            break;\n          case 'months':\n            output = output + `${diff[key]}${diff[key] === 1 ? month : months}`;\n            break;\n          case 'days':\n            output = output + `${diff[key]}${diff[key] === 1 ? day : days}`;\n            break;\n          case 'hours':\n            output = output + `${diff[key]}${diff[key] === 1 ? hr : hrs}`;\n            break;\n          case 'minutes':\n            output = output + `${diff[key]}${diff[key] === 1 ? mn : mns}`;\n            break;\n          case 'seconds':\n            if (!diff.minutes && diff.seconds < 60) {\n              output = now;\n            } else if (diff.minutes < 2) {\n              output = output + `${diff[key]}${diff[key] === 1 ? sec : secs}`;\n            }\n            break;\n        }\n        if (count++) {\n          break;\n        }\n      }\n    }\n    return output;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet/wallet.service';\nimport { of, Observable, from as fromPromise } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\nimport { delay, takeUntil } from 'rxjs/operators';\nimport { Activity, Account, OpStatus } from '../wallet/wallet';\nimport { MessageService } from '../message/message.service';\nimport { LookupService } from '../lookup/lookup.service';\nimport { IndexerService } from '../indexer/indexer.service';\nimport { TokenService } from '../token/token.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { SubjectService } from '../subject/subject.service';\n\n@Injectable()\nexport class ActivityService {\n  readonly maxTransactions = 10;\n  public tokenBalanceUpdated = new BehaviorSubject(null);\n  constructor(\n    private walletService: WalletService,\n    private messageService: MessageService,\n    private lookupService: LookupService,\n    private indexerService: IndexerService,\n    private tokenService: TokenService,\n    private subjectService: SubjectService\n  ) {}\n  updateTransactions(pkh): Observable<any> {\n    try {\n      const account = this.walletService.wallet.getAccount(pkh);\n      return this.getTransactonsCounter(account).pipe(\n        flatMap((ans: any) => {\n          return of(ans);\n        })\n      );\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  getTransactonsCounter(account: Account): Observable<any> {\n    const knownTokenIds: string[] = this.tokenService.knownTokenIds();\n    return fromPromise(this.indexerService.accountInfo(account.address, knownTokenIds)).pipe(\n      flatMap((data) => {\n        const counter = data.counter;\n        const unknownTokenIds = data.unknownTokenIds ? data.unknownTokenIds : [];\n        this.tokenService.searchAllMetadata(unknownTokenIds);\n        this.tokenService.recheckMetadata(data?.tokens);\n        if (account.state !== counter) {\n          if (data.tokens) {\n            this.updateTokenBalances(account, data.tokens);\n          } else {\n            this.updateTokenBalances(account, []);\n          }\n          return this.getAllTransactions(account, counter);\n        } else {\n          if (!account.state) {\n            if (!account.activities || !account.tokens) {\n              if (!account.activities) {\n                account.activities = [];\n              }\n              if (!account.tokens) {\n                account.tokens = [];\n              }\n              this.updateTokenBalances(account, []);\n              this.walletService.storeWallet();\n            }\n          }\n          return of({\n            upToDate: true,\n            balance: data?.balance ? data.balance : 0\n          });\n        }\n      })\n    );\n  }\n  async updateTokenBalances(account, tokens) {\n    if (Array.isArray(tokens)) {\n      const idsWithBalance: string[] = [];\n      if (!tokens.length) {\n        account.updateTokenBalance('', '');\n      } else {\n        for (const token of tokens) {\n          idsWithBalance.push(token.tokenId);\n          account.updateTokenBalance(token.tokenId, token.balance.toString());\n        }\n        const currentTokenIds = account.getTokenBalances().map((token) => {\n          return token.tokenId;\n        });\n        for (const tokenId of currentTokenIds) {\n          if (!idsWithBalance.includes(tokenId)) {\n            account.updateTokenBalance(tokenId, '0');\n          }\n        }\n      }\n      this.tokenBalanceUpdated.next(true);\n      this.walletService.storeWallet();\n    }\n  }\n  getAllTransactions(account: Account, counter: string): Observable<any> {\n    const knownTokenIds: string[] = this.tokenService.knownTokenIds();\n    return fromPromise(this.indexerService.getOperations(account.address, knownTokenIds, this.walletService.wallet)).pipe(\n      flatMap((resp) => {\n        const operations = resp.operations;\n        this.tokenService.searchAllMetadata(resp.unknownTokenIds);\n        if (Array.isArray(operations)) {\n          const oldActivities = account.activities;\n          const unconfirmedOps = [];\n          if (oldActivities && oldActivities.length) {\n            for (let op of oldActivities) {\n              if (op.status === OpStatus.UNCONFIRMED || op.status === OpStatus.HALF_CONFIRMED) {\n                let save = true;\n                for (const opNew of operations) {\n                  if (opNew.hash === op.hash) {\n                    save = false;\n                    break;\n                  }\n                }\n                if (save) {\n                  unconfirmedOps.push(op);\n                }\n              }\n            }\n          }\n          account.activities = unconfirmedOps.concat(operations);\n          const oldState = account.state;\n          account.state = counter;\n          this.walletService.storeWallet();\n          if (oldState !== '') {\n            // Exclude inital loading\n            this.promptNewActivities(account, oldActivities, operations);\n          }\n          for (const activity of operations) {\n            const counterParty = this.getCounterparty(activity, account, false);\n            this.lookupService.check(counterParty);\n          }\n        }\n        return of({\n          upToDate: false\n        });\n      })\n    );\n  }\n  promptNewActivities(account: Account, oldActivities: Activity[], newActivities: Activity[]) {\n    for (const activity of newActivities) {\n      const index = oldActivities.findIndex((a) => a.hash === activity.hash && a.status === OpStatus.CONFIRMED);\n      if (index === -1) {\n        const now = new Date().getTime();\n        const timeDiff = now - (activity?.timestamp ? activity.timestamp : now);\n        if (timeDiff < 1800000) {\n          // 1/2 hour\n          if (activity.hash) {\n            setTimeout(() => {\n              this.subjectService.confirmedOp.next(activity.hash);\n            }, 0);\n          }\n          if (activity.type === 'transaction') {\n            if (account.address === activity.source.address) {\n              this.messageService.addSuccess(account.shortAddress() + ': Sent ' + this.tokenService.formatAmount(activity.tokenId, activity.amount.toString()));\n            }\n            if (account.address === activity.destination.address) {\n              const ref = activity.tokenId ? Date.now().toString() + activity.tokenId : '';\n              this.messageService.addSuccess(\n                (account.shortAddress() + ': Received ' + this.tokenService.formatAmount(activity.tokenId, activity.amount.toString())).replace(\n                  '[Unknown token]',\n                  'Token'\n                ),\n                undefined,\n                ref\n              );\n              if (activity.tokenId && this.tokenService.getAsset(activity.tokenId) === null) {\n                // unknown token\n                this.subjectService.metadataUpdated.pipe(takeUntil(of(true).pipe(delay(8000)))).subscribe((token: any) => {\n                  // unsub after 8s\n                  if (token?.contractAddress && token.id !== undefined) {\n                    const tokenId = token.contractAddress + ':' + token.id.toString();\n                    if (activity.tokenId === tokenId) {\n                      this.messageService.modify(\n                        account.shortAddress() + ': Received ' + this.tokenService.formatAmount(activity.tokenId, activity.amount.toString()),\n                        ref\n                      );\n                    }\n                  }\n                });\n              }\n            }\n          } else if (activity.type === 'delegation') {\n            this.messageService.addSuccess(account.shortAddress() + ': Delegate updated');\n          } else if (activity.type === 'origination') {\n            this.messageService.addSuccess(account.shortAddress() + ': Contract originated');\n          } else if (activity.type === 'activation') {\n            this.messageService.addSuccess(account.shortAddress() + ': Account activated');\n          }\n          const counter = this.getCounterparty(activity, account, false);\n          if (counter?.address) {\n            this.lookupService.check(counter.address, true);\n          }\n        }\n      }\n    }\n  }\n  getCounterparty(transaction: Activity, account: Account, withLookup = true): any {\n    let counterParty = { address: '' };\n    if (transaction.type === 'delegation') {\n      if (transaction.destination) {\n        counterParty = transaction.destination;\n      } else {\n        counterParty = { address: '' }; // User has undelegated\n      }\n    } else if (transaction.type === 'transaction') {\n      if (account.address === transaction.source.address) {\n        counterParty = transaction.destination; // to\n      } else {\n        counterParty = transaction.source; // from\n      }\n    } else if (transaction.type === 'origination') {\n      if (account.address === transaction.source.address) {\n        counterParty = transaction.destination ? transaction.destination : { address: '' };\n      } else {\n        counterParty = transaction.source;\n      }\n    } else {\n      counterParty = { address: '' };\n    }\n    if (withLookup) {\n      return this.lookupService.resolve(counterParty);\n    } else {\n      return counterParty;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet/wallet.service';\nimport { TzrateService } from '../tzrate/tzrate.service';\nimport { OperationService } from '../operation/operation.service';\nimport { Account } from '../wallet/wallet';\n\n@Injectable()\nexport class BalanceService {\n  constructor(private walletService: WalletService, private tzrateService: TzrateService, private operationService: OperationService) {}\n\n  getBalanceAll() {\n    for (const account of this.walletService.wallet.getAccounts()) {\n      this.getAccountBalance(account);\n    }\n  }\n  getAccountBalance(account: Account) {\n    console.log('for ' + account.address);\n    this.operationService.getBalance(account.address).subscribe((ans: any) => {\n      if (ans.success) {\n        this.updateAccountBalance(account, Number(ans.payload.balance));\n      } else {\n        console.log('Balance Error: ' + JSON.stringify(ans.payload.msg));\n      }\n    });\n  }\n  updateAccountBalance(account: Account, newBalance: number) {\n    if (account && (account.balanceXTZ === null || account.balanceXTZ === undefined || newBalance !== account.balanceXTZ)) {\n      account.balanceXTZ = newBalance;\n      this.updateTotalBalance();\n      this.tzrateService.updateFiatBalances();\n      this.walletService.storeWallet();\n    }\n  }\n  updateTotalBalance() {\n    let balance = 0;\n    let change = false;\n    for (const account of this.walletService.wallet.getAccounts()) {\n      if (!(account.balanceXTZ === null || account.balanceXTZ === undefined)) {\n        balance = balance + Number(account.balanceXTZ);\n        change = true;\n      }\n    }\n    if (change) {\n      this.walletService.wallet.totalBalanceXTZ = balance;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MessageService } from '../../services/message/message.service';\nimport {\n  WalletClient,\n  BeaconMessageType,\n  PermissionResponseInput,\n  SignPayloadResponseInput,\n  P2PPairingRequest,\n  BeaconErrorType,\n  BEACON_VERSION,\n  ErrorResponse,\n  getSenderId,\n  ExtendedP2PPairingResponse\n} from '@airgap/beacon-sdk';\nimport { Asset } from '../token/token.service';\nimport { TzktService } from '../indexer/tzkt/tzkt.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BeaconService {\n  client: WalletClient = null;\n  peers = [];\n  permissions = [];\n  constructor(private messageService: MessageService, private tzktService: TzktService) {}\n  preNotifyPairing(pairInfoJson: string) {\n    const pairInfo: P2PPairingRequest = JSON.parse(pairInfoJson);\n    if (this.isNewPairingRequest(pairInfo)) {\n      this.messageService.addBeaconWait(`Pairing with ${pairInfo.name}. Please wait!`);\n    }\n  }\n  isNewPairingRequest(pairInfo: P2PPairingRequest): boolean {\n    const peersJson = localStorage.getItem('beacon:communication-peers-wallet');\n    let newPublicKey = true;\n    if (peersJson) {\n      const peers = JSON.parse(peersJson);\n      if (peers && peers.length > 0 && pairInfo.publicKey) {\n        for (const peer of peers) {\n          if (peer.publicKey && peer.publicKey === pairInfo.publicKey) {\n            newPublicKey = false;\n            console.log('Existing public key found!');\n            break;\n          }\n        }\n      }\n    }\n    return newPublicKey;\n  }\n  async addPeer(pairInfoJson: string, force = true) {\n    const pairInfo = JSON.parse(pairInfoJson);\n    console.log('PairInfo', pairInfo);\n    await this.client.addPeer(pairInfo, force);\n    this.syncBeaconState();\n    this.messageService.removeBeaconMsg();\n    if (pairInfo.icon && pairInfo.icon.startsWith('https://')) {\n      this.cacheIcon(pairInfo);\n    }\n  }\n  async cacheIcon(pairInfo: any) {\n    const key = 'beacon:communication-peers-wallet';\n    const asset: Asset = pairInfo.icon;\n    const json = localStorage.getItem(key);\n    if (!json || !asset) {\n      return;\n    }\n    const peers = JSON.parse(json);\n    if (peers) {\n      for (const peer of peers) {\n        if (peer.icon === pairInfo.icon) {\n          peer.cachedIcon = asset;\n          break;\n        }\n      }\n      localStorage.setItem(key, JSON.stringify(peers));\n      this.syncBeaconState();\n    }\n  }\n  async syncBeaconState() {\n    this.peers = await this.getPeers();\n    this.permissions = await this.getPermissions();\n  }\n  async removePeers() {\n    while (this.peers.length > 0) {\n      await this.removePeer(0);\n    }\n  }\n  async removePeer(index: number) {\n    const pairInfo: P2PPairingRequest = this.peers[index];\n    const senderId = await getSenderId(pairInfo.publicKey);\n    const peerResponse: ExtendedP2PPairingResponse = {\n      ...pairInfo,\n      type: 'p2p-pairing-response',\n      senderId\n    };\n    await this.client.removePeer(peerResponse);\n    await this.client.removeAppMetadata(senderId);\n    this.syncBeaconState();\n  }\n  async removePermissions() {\n    await this.client.removeAllPermissions();\n    this.syncBeaconState();\n  }\n  async removePermission(index: number) {\n    await this.client.removePermission(this.permissions[index].accountIdentifier);\n    this.syncBeaconState();\n  }\n  async getPeers(): Promise<any> {\n    return await this.client.getPeers();\n  }\n  async getPermissions(): Promise<any> {\n    return await this.client.getPermissions();\n  }\n  async getAppMetadataList(): Promise<any> {\n    return await this.client.getAppMetadataList();\n  }\n  async rejectOnPermission(message: any) {\n    await this.respondWithError(BeaconErrorType.NOT_GRANTED_ERROR, message);\n  }\n  async rejectOnNetwork(message: any) {\n    await this.respondWithError(BeaconErrorType.NETWORK_NOT_SUPPORTED, message);\n  }\n  async rejectOnUserAbort(message: any) {\n    await this.respondWithError(BeaconErrorType.ABORTED_ERROR, message);\n  }\n  async rejectOnSourceAddress(message: any) {\n    await this.respondWithError(BeaconErrorType.NO_PRIVATE_KEY_FOUND_ERROR, message);\n  }\n  async rejectOnTooManyOps(message: any) {\n    await this.respondWithError(BeaconErrorType.TOO_MANY_OPERATIONS, message);\n  }\n  async rejectOnUnknown(message: any) {\n    await this.respondWithError(BeaconErrorType.UNKNOWN_ERROR, message);\n  }\n  async rejectOnParameters(message: any) {\n    await this.respondWithError(BeaconErrorType.PARAMETERS_INVALID_ERROR, message);\n  }\n  async rejectOnBroadcastError(message: any) {\n    await this.respondWithError(BeaconErrorType.BROADCAST_ERROR, message);\n  }\n  async respondWithError(errorType: BeaconErrorType, requestMessage: any) {\n    if (requestMessage) {\n      const response: ErrorResponse = {\n        type: BeaconMessageType.Error,\n        errorType,\n        version: BEACON_VERSION,\n        id: requestMessage.id,\n        senderId: await this.client.beaconId\n      };\n      await this.client.respond(response);\n    }\n  }\n  async approvePermissionRequest(message: any, publicKey: string) {\n    const response: PermissionResponseInput = {\n      type: BeaconMessageType.PermissionResponse,\n      network: message.network,\n      scopes: message.scopes,\n      id: message.id,\n      publicKey: publicKey\n    };\n    await this.client.respond(response);\n  }\n  async approveSignPayloadRequest(message: any, signature: string) {\n    const response: SignPayloadResponseInput = {\n      type: BeaconMessageType.SignPayloadResponse,\n      id: message.id,\n      signingType: message.signingType,\n      signature\n    };\n    await this.client.respond(response);\n  }\n  async responseSync() {\n    localStorage.setItem('beacon:request-response', 'true');\n    localStorage.removeItem('beacon:request-response');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ChartSeries } from '../../../app/components/ui/chart/chart.component';\nimport { SwapLiquidityService } from '../swap-liquidity/swap-liquidity.service';\n\nexport enum ChartTitle {\n  XTZtzBTC = 'XTZ/tzBTC',\n  tzBTCXTZ = 'tzBTC/XTZ',\n  totalValueLocked = 'Total Value Locked'\n}\n\nlet width, height, gradient;\nfunction getGradientBackground(ctx, chartArea) {\n  const style = getComputedStyle(document.body);\n  const theme = style.getPropertyValue('--theme').replace(/[ \\\"]/g, '');\n  const chartWidth = chartArea.right - chartArea.left;\n  const chartHeight = chartArea.bottom - chartArea.top;\n  if (gradient === null || width !== chartWidth || height !== chartHeight) {\n    width = chartWidth;\n    height = chartHeight;\n    gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n    if (theme === 'dark') {\n      gradient.addColorStop(1, '#383d7d');\n      gradient.addColorStop(0.5, '#2e304f');\n      gradient.addColorStop(0, '#2a2c3f');\n    } else {\n      gradient.addColorStop(1, '#c2c5fc');\n      gradient.addColorStop(0.5, '#e0e1fb');\n      gradient.addColorStop(0, '#e8eafb');\n    }\n  }\n\n  return gradient;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ChartService {\n  ChartTitle = ChartTitle;\n  stats = null;\n  constructor(private swapLiquidityService: SwapLiquidityService) {}\n\n  async fetchLBGraphData(series: ChartSeries = ChartSeries.day): Promise<{ labels: any[]; datasets: any[] }> {\n    let tzbtc = await this.fetchHistoricalQuotesByContract(this.swapLiquidityService.tzBTCContract + '_0', series);\n    let stats = (this.stats = !this.stats ? await this.fetchHistoricalStatsByContract(this.swapLiquidityService.lqdContract, series) : this.stats);\n    let interval = 1000 * 60 * 60 * 24;\n    const a = [];\n    const b = [];\n    const d = [];\n    const labels = [];\n    let now = new Date().getTime();\n    if (series === ChartSeries.month) {\n      interval = 1000 * 60 * 60 * 24;\n      tzbtc = tzbtc.slice(0, 32);\n      stats = stats.slice(0, 32);\n    } else if (series === ChartSeries.day) {\n      interval = 1000 * 60 * 60;\n      tzbtc = tzbtc.slice(0, 25);\n      stats = stats.slice(0, 25);\n    } else if (series === ChartSeries.week) {\n      interval = 1000 * 60 * 60 * 4;\n      tzbtc = tzbtc.slice(0, 7 * 24).filter((e, i) => i % 4 === 0);\n      stats = stats.slice(0, 7 * 24).filter((e, i) => i % 4 === 0);\n    } else if (series === ChartSeries.year) {\n      interval = 1000 * 60 * 60 * 24 * 31;\n      tzbtc = tzbtc.slice(0, 365).filter((e, i) => i % 31 === 0);\n      stats = stats.slice(0, 365).filter((e, i) => i % 31 === 0);\n    }\n    tzbtc = tzbtc.reverse();\n    stats = stats.reverse();\n    for (let i = 0; i < tzbtc.length; ++i) {\n      a.push(1 / parseFloat(tzbtc[i].close));\n      b.push(parseFloat(tzbtc[i].close));\n      if (stats[i]?.tvlUsd) {\n        d.push(parseFloat(stats[i].tvlUsd));\n      }\n      const c = new Date((now -= interval));\n      if (series === ChartSeries.month) {\n        labels.push(c.toLocaleString('en-US', { month: 'short' }) + ' ' + c.getDate());\n      } else if (series === ChartSeries.day) {\n        labels.push('' + c.getHours() + ':00');\n      } else if (series === ChartSeries.week) {\n        labels.push(c.toLocaleString('en-US', { month: 'short' }) + ' ' + c.getDate() + ' ' + (c.getHours() + 1) + ':00');\n      } else if (series === ChartSeries.year) {\n        labels.push(c.toLocaleString('en-US', { month: 'short' }) + ' ' + c.getDate());\n      }\n    }\n    const defaultDatasetValues = {\n      hidden: true,\n      backgroundColor: function (context) {\n        const chart = context.chart;\n        const { ctx, chartArea } = chart;\n\n        if (!chartArea) {\n          return null;\n        }\n        return getGradientBackground(ctx, chartArea);\n      },\n      borderColor: '#5963ff88',\n      borderRadius: 1,\n      borderWidth: 3,\n      pointBorderWidth: 0,\n      pointBackgroundColor: '#5963ff88',\n      pointBorderColor: '#5963ff88',\n      pointRadius: 0,\n      pointHoverBorderWidth: 6,\n      pointHoverColor: '#5963ff88',\n      pointHitRadius: 6,\n      fill: true\n    };\n    const datasets = [\n      {\n        label: ChartTitle.XTZtzBTC,\n        data: a,\n        ...defaultDatasetValues\n      },\n      {\n        label: ChartTitle.tzBTCXTZ,\n        data: b,\n        ...defaultDatasetValues\n      },\n      {\n        label: ChartTitle.totalValueLocked,\n        data: d,\n        ...defaultDatasetValues\n      }\n    ];\n    return { datasets, labels: labels.reverse() };\n  }\n\n  async fetchHistoricalQuotesByContract(\n    contract: string = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5',\n    series: ChartSeries = ChartSeries.day,\n    offset: number = 0\n  ): Promise<any> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    let req;\n    if (series === ChartSeries.month || series === ChartSeries.year) {\n      req = {\n        query: `{quotes1d(offset: ${offset} limit: 100 where: {exchangeId:{_eq: \"${this.swapLiquidityService.lqdContract}\"} tokenId: {_eq: \"${contract}\"}, close: {_is_null: false}}) { close }}`\n      };\n    } else if (series === ChartSeries.day || series === ChartSeries.week) {\n      req = {\n        query: `{quotes1h(offset: ${offset} limit: 100 where: {exchangeId:{_eq: \"${this.swapLiquidityService.lqdContract}\"} tokenId: {_eq: \"${contract}\"}, close: {_is_null: false}}) { close }}`\n      };\n    }\n    try {\n      let result = await (\n        await fetch(baseUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json();\n      if (series === ChartSeries.week) {\n        if (result.data?.quotes1h.length === 100) {\n          result = result?.data?.quotes1h;\n          offset += 100;\n          return result.concat(await this.fetchHistoricalQuotesByContract(this.swapLiquidityService.tzBTCContract + '_0', series, offset));\n        } else {\n          return result?.data?.quotes1h;\n        }\n      }\n      if (series === ChartSeries.month) {\n        return result?.data?.quotes1d;\n      } else if (series === ChartSeries.day) {\n        return result?.data?.quotes1h;\n      } else if (series === ChartSeries.year) {\n        if (result.data?.quotes1d.length === 100) {\n          result = result?.data?.quotes1d;\n          offset += 100;\n          return result.concat(await this.fetchHistoricalQuotesByContract(this.swapLiquidityService.tzBTCContract + '_0', series, offset));\n        } else {\n          return result?.data?.quotes1d;\n        }\n      }\n    } catch (e) {\n      return [];\n    }\n  }\n\n  async fetchHistoricalStatsByContract(\n    contract: string = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5',\n    series: string = 'day',\n    offset: number = 0\n  ): Promise<Array<any>> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    let req;\n    if (series === 'day') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    } else if (series === 'week') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    } else if (series === 'month') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    } else if (series === 'year') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    }\n    try {\n      let result = await (\n        await fetch(baseUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json();\n      if (series === ChartSeries.week) {\n        if (result.data?.stats1d.length === 100) {\n          result = result?.data?.stats1d;\n          offset += 100;\n          return result.concat(await this.fetchHistoricalStatsByContract(this.swapLiquidityService.tzBTCContract + '_0', series, offset));\n        } else {\n          return result?.data?.stats1d;\n        }\n      }\n      if (series === ChartSeries.month) {\n        return result?.data?.stats1d;\n      } else if (series === ChartSeries.day) {\n        return result?.data?.stats1d;\n      } else if (series === ChartSeries.year) {\n        return result?.data?.stats1d;\n      }\n    } catch {\n      return [];\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { WalletService } from '../../wallet/wallet.service';\nimport { Account, OpStatus } from '../../wallet/wallet';\nimport { ActivityService } from '../../activity/activity.service';\nimport { OperationService } from '../../operation/operation.service';\nimport { BalanceService } from '../../balance/balance.service';\nimport { DelegateService } from '../../delegate/delegate.service';\nimport { timeout } from 'rxjs/operators';\nimport { of } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalService {\n  connection: any = null;\n  constructor(\n    private walletService: WalletService,\n    private activityService: ActivityService,\n    private operationService: OperationService,\n    private balanceService: BalanceService,\n    private delegateService: DelegateService\n  ) {\n    this.init();\n  }\n  async init() {\n    this.connection = new HubConnectionBuilder().withUrl(`https://api.${CONSTANTS.NETWORK}.tzkt.io/v1/events`).build();\n    this.connection.on('operations', (msg) => {\n      for (const op of msg.data) {\n        if (op?.status === 'applied') {\n          console.log('%csignalR msg', 'color: green;', op);\n          const sender: string = op?.sender?.address ?? '';\n          const target: string = op?.target?.address ?? '';\n          const opHash: string = op?.hash ?? '';\n          const invoke: boolean = !!op?.parameter;\n          this.confirmStatus(opHash, sender, op.timestamp, invoke);\n          this.confirmStatus(opHash, target, op.timestamp, invoke);\n        }\n      }\n    });\n    this.connection.onclose(async () => {\n      await this.start();\n    });\n    this.start();\n  }\n  confirmStatus(opHash: string, address: string, timestamp: string, invoke: boolean) {\n    if (opHash && address && this.walletService.wallet) {\n      if (this.walletService.wallet) {\n        const account: Account = this.walletService.wallet.getAccount(address);\n        if (account) {\n          for (let i in account.activities) {\n            if (account.activities[i].hash === opHash && account.activities[i].status === OpStatus.UNCONFIRMED) {\n              account.activities[i].timestamp = new Date(timestamp).getTime();\n              if (invoke) {\n                account.activities[i].status = OpStatus.HALF_CONFIRMED;\n              } else {\n                account.activities[i].status = OpStatus.CONFIRMED;\n                this.activityService.promptNewActivities(account, [], [account.activities[i]]);\n                this.updateAccountData(address);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  updateAccountData(pkh: string) {\n    this.operationService.getAccount(pkh).subscribe((ans: any) => {\n      if (ans.success) {\n        this.balanceService.updateAccountBalance(this.walletService.wallet?.getAccount(pkh), Number(ans.payload.balance));\n        const acc = this.walletService.wallet?.getAccount(pkh);\n        this.delegateService.handleDelegateResponse(acc, ans.payload.delegate);\n      } else {\n      }\n    });\n  }\n\n  async start() {\n    try {\n      if (!!this.connection?.start) {\n        await this.connection?.start();\n        console.log('%cSignalR Connected!', 'color:green;');\n      } else {\n        setTimeout(() => {\n          this.start();\n        }, 5000);\n      }\n    } catch (err) {\n      console.log(err);\n      setTimeout(() => {\n        this.start();\n      }, 5000);\n    }\n  }\n\n  async subscribeToAccount(address: string) {\n    console.log('Listen to: ' + address);\n    await this.connection.invoke('SubscribeToOperations', {\n      address,\n      types: 'transaction,delegation,origination'\n    });\n  }\n  ngOnDestroy(): void {\n    try {\n      this.connection.stop();\n      console.log('%cSignalR Disconnected!', 'color:red;');\n    } catch (e) {}\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivityService } from '../activity/activity.service';\nimport { TzrateService } from '../tzrate/tzrate.service';\nimport { BalanceService } from '../balance/balance.service';\nimport { WalletService } from '../wallet/wallet.service';\nimport { DelegateService } from '../delegate/delegate.service';\nimport { OperationService } from '../operation/operation.service';\nimport { Account, OpStatus } from '../wallet/wallet';\nimport Big from 'big.js';\nimport { TokenService } from '../token/token.service';\nimport { LookupService } from '../lookup/lookup.service';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { SubjectService } from '../subject/subject.service';\nimport { TeztoolsService } from '../indexer/teztools/teztools.service';\nimport { interval } from 'rxjs';\nimport { SignalService } from '../indexer/signal/signal.service';\nimport { UnlockableService } from '../unlockable/unlockable.service';\n\nexport interface ScheduleData {\n  pkh: string;\n  state: State;\n  interval: any;\n  stateCounter: number;\n}\nenum State {\n  UpToDate,\n  Wait,\n  Updating\n}\n\n@Injectable()\nexport class CoordinatorService {\n  scheduler: Map<string, any> = new Map<string, any>(); // pkh + delay\n  defaultDelayActivity = CONSTANTS.MAINNET ? 60000 : 30000; // 60/30s\n  shortDelayActivity = 5000; // 5s\n  longDelayActivity = 120000; // 2m\n  defaultDelayPrice = 300000; // 5m\n  tzrateInterval: any;\n  accounts: Account[];\n  constructor(\n    private activityService: ActivityService,\n    private tzrateService: TzrateService,\n    private walletService: WalletService,\n    private balanceService: BalanceService,\n    private delegateService: DelegateService,\n    private operationService: OperationService,\n    private tokenService: TokenService,\n    private teztoolsService: TeztoolsService,\n    private lookupService: LookupService,\n    private subjectService: SubjectService,\n    private signalService: SignalService,\n    private unlockableService: UnlockableService\n  ) {\n    this.subjectService.logout.subscribe((o) => {\n      if (!!o) {\n        this.stopAll();\n      }\n    });\n    this.subjectService.activeAccount.subscribe((activeAccount) => {\n      if (this.walletService.wallet) {\n        this.accounts = this.walletService.wallet.getAccounts();\n        this.accounts.forEach(({ address }) => {\n          if (address === activeAccount?.address) {\n            this.start(activeAccount.address, this.defaultDelayActivity);\n          } else {\n            this.start(address, this.longDelayActivity);\n          }\n        });\n        this.startXTZ();\n      }\n    });\n  }\n  startXTZ() {\n    if (!this.tzrateInterval) {\n      console.log('Start scheduler XTZ');\n      const update = () => {\n        this.tzrateService.getTzrate();\n        this.teztoolsService.getMarkets();\n        this.lookupService.recheckWalletAddresses(true);\n      };\n      this.tzrateInterval = interval(this.defaultDelayPrice).subscribe(() => update());\n      update();\n    }\n  }\n  async start(pkh: string, delay: number) {\n    this.unlockableService.restoreFeatures();\n    if (pkh && !this.scheduler.get(pkh)) {\n      this.accounts = this.walletService.wallet.getAccounts();\n      console.log('Start scheduler ' + this.scheduler.size + ' ' + pkh);\n      const scheduleData: ScheduleData = {\n        pkh: pkh,\n        state: State.UpToDate,\n        interval: interval(this.defaultDelayActivity).subscribe(() => this.update(pkh)),\n        stateCounter: 0\n      };\n      this.scheduler.set(pkh, scheduleData);\n      this.update(pkh);\n      this.updateAccountData(pkh);\n    } else if (pkh && this.scheduler.get(pkh)) {\n      this.setDelay(pkh, delay);\n    }\n  }\n  async boost(pkh: string, metadata: any = null) {\n    // Expect action\n    console.log('boost ' + pkh);\n    if (this.walletService.addressExists(pkh)) {\n      if (metadata) {\n        this.addUnconfirmedOperations(pkh, metadata);\n      }\n      if (!this.scheduler.get(pkh)) {\n        await this.start(pkh, this.defaultDelayActivity);\n      }\n      this.signalService.subscribeToAccount(pkh);\n      if (this.scheduler.get(pkh).state !== State.Wait) {\n        this.changeState(pkh, State.Wait);\n        this.update(pkh);\n        const counter = this.scheduler.get(pkh).stateCounter;\n        setTimeout(() => {\n          // Failsafe\n          if (this.scheduler?.size && this.scheduler.get(pkh).stateCounter === counter) {\n            console.log('Timeout from wait state');\n            this.changeState(pkh, State.UpToDate);\n          }\n        }, 150000);\n      }\n    }\n  }\n  async update(pkh) {\n    this.setDelay(pkh, this.defaultDelayActivity);\n    this.activityService.updateTransactions(pkh).subscribe(\n      (ans: any) => {\n        switch (this.scheduler.get(pkh) ? this.scheduler.get(pkh).state : -1) {\n          case State.UpToDate: {\n            if (!ans.upToDate) {\n              this.changeState(pkh, State.Updating);\n            } else if (ans?.balance) {\n              const balance = this.walletService.wallet?.getAccount(pkh).balanceXTZ;\n              if (balance !== ans.balance) {\n                console.log('recheck balance');\n                this.updateAccountData(pkh);\n              }\n            }\n            break;\n          }\n          case State.Wait: {\n            if (!ans.upToDate) {\n              this.changeState(pkh, State.Updating);\n            } else {\n              this.setDelay(pkh, this.shortDelayActivity);\n            }\n            break;\n          }\n          case State.Updating: {\n            if (ans.upToDate) {\n              this.changeState(pkh, State.UpToDate);\n            } else {\n              this.setDelay(pkh, this.shortDelayActivity);\n            }\n            break;\n          }\n          default: {\n            console.log('No state found!');\n            break;\n          }\n        }\n        const acc = this.walletService.wallet?.getAccount(pkh);\n        if (acc?.activities?.length) {\n          const latestActivity = acc.activities[0];\n          if (latestActivity.status === OpStatus.UNCONFIRMED) {\n            const age = new Date().getTime() - new Date(latestActivity.timestamp).getTime();\n            if (age > 1800000) {\n              // 30m\n              acc.activities.shift();\n              this.walletService.storeWallet();\n            }\n          }\n        }\n      },\n      (err) => {\n        console.log('Error in update()');\n        console.error(err);\n      },\n      () => {\n        console.log(\n          `account[${this.accounts.findIndex((a) => a.address === pkh)}][${\n            typeof this.scheduler.get(pkh)?.state !== 'undefined' ? this.scheduler.get(pkh).state : '*'\n          }]: <<`\n        );\n      }\n    );\n  }\n  changeState(pkh: string, newState: State) {\n    const scheduleData: ScheduleData = this.scheduler.get(pkh);\n    scheduleData.state = newState;\n    if (newState === State.UpToDate || newState === State.Updating) {\n      this.updateAccountData(pkh);\n    }\n    if (newState === State.Wait || newState === State.Updating) {\n      scheduleData.interval.unsubscribe();\n      scheduleData.interval = interval(this.shortDelayActivity).subscribe(() => this.update(pkh));\n    }\n    scheduleData.stateCounter++;\n    this.scheduler.set(pkh, scheduleData);\n  }\n  setDelay(pkh: string, time: number) {\n    const scheduleData: ScheduleData = this.scheduler.get(pkh);\n    if (scheduleData.interval) {\n      scheduleData.interval.unsubscribe();\n    }\n    scheduleData.interval = interval(time).subscribe(() => this.update(pkh));\n    this.scheduler.set(pkh, scheduleData);\n  }\n  stopAll() {\n    if (this.walletService.wallet) {\n      if (this.accounts?.length) {\n        console.log('Stop all schedulers');\n        for (const account of this.accounts) {\n          this.stop(account.address);\n        }\n      }\n      if (this.tzrateInterval) {\n        this.tzrateInterval.unsubscribe();\n        this.tzrateInterval = null;\n      }\n    }\n  }\n  async stop(pkh) {\n    console.log('Stop scheduler ' + this.accounts.findIndex((a) => a.address === pkh));\n    if (this.scheduler.get(pkh)) {\n      this.scheduler.get(pkh).interval.unsubscribe();\n      this.scheduler.get(pkh).interval = null;\n      this.scheduler.delete(pkh);\n    }\n  }\n  updateAccountData(pkh: string) {\n    // Maybe also check for originations to account?\n    console.log('update account data for ' + pkh);\n    this.operationService.getAccount(pkh).subscribe((ans: any) => {\n      if (ans.success) {\n        this.balanceService.updateAccountBalance(this.walletService.wallet?.getAccount(pkh), Number(ans.payload.balance));\n        const acc = this.walletService.wallet?.getAccount(pkh);\n        this.delegateService.handleDelegateResponse(acc, ans.payload.delegate);\n      } else {\n        console.log('updateAccountData -> getAccount failed ', ans.payload.msg);\n      }\n    });\n  }\n  addUnconfirmedOperations(from: string, metadata: any) {\n    if (metadata.transactions) {\n      console.log('Unconfirmed transactions:');\n      console.log(metadata.transactions);\n      const decimals =\n        metadata.tokenTransfer && this.tokenService.getAsset(metadata.tokenTransfer) ? this.tokenService.getAsset(metadata.tokenTransfer).decimals : 6;\n      for (const op of metadata.transactions) {\n        const transaction = {\n          type: 'transaction',\n          status: OpStatus.UNCONFIRMED,\n          amount: Big(op.amount)\n            .times(10 ** decimals)\n            .toString(),\n          fee: null,\n          source: { address: from },\n          destination: { address: op.destination },\n          hash: metadata.opHash,\n          block: null,\n          timestamp: new Date().getTime(),\n          tokenId: metadata.tokenTransfer ? metadata.tokenTransfer : undefined,\n          entrypoint: op.parameters?.entrypoint ? op.parameters.entrypoint : ''\n        };\n        let account = this.walletService.wallet?.getAccount(from);\n        account.activities.unshift(transaction);\n        account = this.walletService.wallet?.getAccount(op.destination);\n        if (account) {\n          account.activities.unshift({ ...transaction });\n        }\n      }\n    } else if (metadata.delegate !== undefined) {\n      const delegation = {\n        type: 'delegation',\n        status: OpStatus.UNCONFIRMED,\n        amount: null,\n        fee: null,\n        source: { address: from },\n        destination: { address: metadata.delegate },\n        hash: metadata.opHash,\n        block: null,\n        timestamp: new Date().getTime()\n      };\n      const account = this.walletService.wallet?.getAccount(from);\n      account?.activities.unshift(delegation);\n    } else if (metadata.origination !== undefined) {\n      const origination = {\n        type: 'origination',\n        status: OpStatus.UNCONFIRMED,\n        amount: metadata.origination.balance,\n        fee: null,\n        source: { address: from },\n        destination: { address: metadata.kt1 },\n        hash: metadata.opHash,\n        block: null,\n        timestamp: new Date().getTime()\n      };\n      const account = this.walletService.wallet?.getAccount(from);\n      account?.activities.unshift(origination);\n    } else {\n      console.log('Unknown metadata', metadata);\n    }\n    this.walletService.storeWallet();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { OperationService } from '../operation/operation.service';\nimport { WalletService } from '../../services/wallet/wallet.service';\nimport { MessageService } from '../../services/message/message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeeplinkService {\n  private pairingJson = '';\n  constructor(private operationService: OperationService, private walletService: WalletService, private messageService: MessageService) {}\n  set(params: Params) {\n    console.log(params);\n    this.pairingJson = this.extractPairingJson(params);\n    if (this.pairingJson && !this.walletService.wallet) {\n      this.messageService.addWarning('Access your wallet to complete the pairing');\n    }\n    console.log(this.pairingJson);\n  }\n  extractPairingJson(params: Params): string {\n    if (params.type === 'tzip10' && params.data) {\n      try {\n        return this.operationService.b58cdecode(params.data, '').toString();\n      } catch (e) {\n        return '';\n      }\n    }\n    return '';\n  }\n  popPairingJson(): string {\n    const pairingJson = this.pairingJson;\n    this.pairingJson = '';\n    return pairingJson;\n  }\n  QRtoPairingJson(qrPayload: string): string {\n    if (qrPayload.length > 26 && qrPayload.slice(0, 26) === 'tezos://?type=tzip10&data=') {\n      qrPayload = qrPayload.slice(26);\n    }\n    try {\n      return this.operationService.b58cdecode(qrPayload, '').toString();\n    } catch {}\n    return '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet/wallet.service';\nimport { OperationService } from '../operation/operation.service';\nimport { Account } from '../wallet/wallet';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class DelegateService {\n  private readonly network = CONSTANTS.NETWORK.replace('edonet', 'edo2net');\n  public readonly bcd = 'https://api.baking-bad.org/v2';\n  public readonly tzkt = `https://staging.api.${this.network}.tzkt.io/v1`;\n  public delegates = new BehaviorSubject<any>([]);\n\n  constructor(private walletService: WalletService, private operationService: OperationService) {\n    this.getDelegates();\n  }\n  getDelegate(account: Account) {\n    this.operationService.getDelegate(account.address).subscribe(\n      (data: any) => {\n        if (data.success) {\n          this.handleDelegateResponse(account, data.payload.delegate);\n        }\n      },\n      (err) => console.log(JSON.stringify(err))\n    );\n  }\n  handleDelegateResponse(account: Account, data: any) {\n    if (data) {\n      if (account.delegate !== data) {\n        account.delegate = data;\n        this.walletService.storeWallet();\n      } else {\n        console.log('delegate for ' + account.address + ' up to date');\n      }\n    } else {\n      if (account.delegate !== '') {\n        account.delegate = '';\n        this.walletService.storeWallet();\n      }\n    }\n  }\n  getDelegates(): void {\n    fetch(`${this.bcd}/bakers`)\n      .then((response) => response.json())\n      .then((d) => this.delegates.next(d));\n  }\n\n  resolveDelegateByAddress(address: string): Promise<any> {\n    return new Promise((resolve) => {\n      this.delegates.pipe(take(1)).subscribe((d) => resolve(d?.find((d) => d?.address === address)));\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as pbkdf2 from 'pbkdf2';\nimport * as AES from 'aes-js';\nimport * as scrypt from 'scryptsy';\nimport * as cryptob from 'crypto-browserify';\nimport * as forge from 'node-forge';\ndeclare const Buffer;\n@Injectable()\nexport class EncryptionService {\n  constructor() {}\n  async encrypt(plaintext: any, password: string, version: number, salt: string = null): Promise<any> {\n    if (version === 1) {\n      throw new Error('Encryption version no longer supported');\n    } else if (version === 2) {\n      return this.encrypt_v2(plaintext, password);\n    } else if (version === 3) {\n      return this.encrypt_v2(plaintext, password, salt);\n    } else {\n      throw new Error('Unrecognized encryption format');\n    }\n  }\n  async decrypt(chiphertext: string, password: string, salt: string, version: number): Promise<any> {\n    if (version === 1) {\n      return this.decrypt_v1(chiphertext, password, salt);\n    } else if (version === 2 || version === 3) {\n      return this.decrypt_v2(chiphertext, password, salt);\n    } else {\n      throw new Error('Unrecognized encryption format');\n    }\n  }\n  // Version 1\n  async encrypt_v1(plaintext: any, password: string, salt: string): Promise<string> {\n    return new Promise((resolve) => {\n      try {\n        if (!password || !salt) {\n          throw new Error('Missing password or salt');\n        }\n        pbkdf2.pbkdf2(password, salt, 10000, 32, 'sha512', (err, key) => {\n          if (err) {\n            throw err;\n          }\n          const aesCtr = new AES.ModeOfOperation.ctr(key);\n          let chiphertext = aesCtr.encrypt(plaintext);\n          chiphertext = AES.utils.hex.fromBytes(chiphertext);\n          resolve(chiphertext);\n        });\n      } catch (e) {\n        console.warn(e);\n        resolve('');\n      }\n    });\n  }\n  async decrypt_v1(chiphertext: string, password: string, salt: string): Promise<any> {\n    return new Promise((resolve) => {\n      try {\n        if (!password || !salt) {\n          throw new Error('Missing password or salt');\n        }\n        pbkdf2.pbkdf2(password, salt, 10000, 32, 'sha512', (err, key) => {\n          if (err) {\n            throw err;\n          }\n          chiphertext = AES.utils.hex.toBytes(chiphertext);\n          const aesCtr = new AES.ModeOfOperation.ctr(key);\n          const plaintext = aesCtr.decrypt(chiphertext);\n          resolve(plaintext);\n        });\n      } catch (e) {\n        resolve('');\n      }\n    });\n  }\n  // Version 2\n  async encrypt_v2(plaintext: any, password: string, salt?: string): Promise<any> {\n    if (!password) {\n      throw new Error('Missing password');\n    }\n    let salty;\n    if (salt) {\n      salty = new Buffer(salt, 'hex');\n    } else {\n      salty = cryptob.randomBytes(16);\n    }\n    const key = await scrypt.async(password, salty, 65536, 8, 1, 32);\n    const cipher: any = forge.cipher.createCipher('AES-GCM', key.toString('binary'));\n    cipher.start({\n      iv: salty\n    });\n    const byteStringBuffer = forge.util.createBuffer(plaintext.toString('binary'), 'utf-8');\n    cipher.update(byteStringBuffer);\n    cipher.finish();\n    const chiphertext = cipher.output.toHex() + '==' + cipher.mode.tag.toHex();\n    return { chiphertext: chiphertext, iv: salty.toString('hex') };\n  }\n  async decrypt_v2(chipher: string, password: string, salt: string): Promise<string> {\n    try {\n      if (!password || !salt) {\n        throw new Error('Missing password or salt');\n      }\n      const parts = chipher.split('==');\n      const chiphertext = parts[0];\n      const tag = parts[1];\n      const key = await scrypt.async(password, new Buffer(salt, 'hex'), 65536, 8, 1, 32);\n      const decipher: any = forge.cipher.createDecipher('AES-GCM', key.toString('binary'));\n      decipher.start({\n        iv: new Buffer(salt, 'hex'),\n        tag: forge.util.createBuffer(new Buffer(tag, 'hex').toString('binary'), 'utf-8') // authentication tag from encryption\n      });\n      decipher.update(forge.util.createBuffer(new Buffer(chiphertext, 'hex').toString('binary'), 'utf-8'));\n      const pass = decipher.finish();\n      if (pass) {\n        return new Buffer(decipher.output.toHex(), 'hex');\n      } else {\n        return null;\n      }\n    } catch (err) {\n      return null;\n    }\n  }\n  shiftIV(salt: string, offset: number) {\n    if (!Number.isInteger(offset) || offset > 255 || offset < 1) {\n      throw new Error('Invalid offset for IV');\n    }\n    const buf = new Buffer(salt, 'hex');\n    buf[13] = (buf[13] + offset) % 256;\n    return buf.toString('hex');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { OperationService } from '../operation/operation.service';\nimport { flatMap, catchError } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { DefaultTransactionParams, OpLimits } from '../../interfaces';\nimport Big from 'big.js';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { InputValidationService } from '../input-validation/input-validation.service';\n\nconst httpOptions = { headers: { 'Content-Type': 'application/json' } };\n@Injectable()\nexport class EstimateService {\n  readonly costPerByte = '250';\n  readonly revealGasLimit = 1000;\n  readonly contractsOverride: Record<string, OpLimits>;\n  queue = [];\n  nodeURL = CONSTANTS.NODE_URL;\n  pkh: string;\n  pk: string;\n  hash: string;\n  chainId: string;\n  manager: string;\n  counter: number;\n  constructor(private http: HttpClient, private operationService: OperationService, private imputValidationService: InputValidationService) {\n    this.contractsOverride = CONSTANTS.CONTRACT_OVERRIDES;\n  }\n  init(hash: string, chainId: string, counter: number, manager: string, pk: string, pkh: string) {\n    this.hash = hash;\n    this.chainId = chainId;\n    this.counter = counter;\n    this.manager = manager;\n    this.pk = pk;\n    this.pkh = pkh;\n  }\n  async preLoadData(pkh: string, pk: string) {\n    this.pkh = pkh;\n    this.pk = pk;\n    const [head, counter, manager] = await Promise.all([this.operationService.getHeader().toPromise(), this.getCounter(pkh), this.getManager(pkh)]);\n    if (head && counter && (manager || manager === null)) {\n      this.init(head.hash, head.chain_id, counter, manager, pk, pkh);\n    }\n  }\n  public async estimateTransactions(transactions: any, from: string, tokenTransfer: string = '', callback) {\n    this.estimate(transactions, from, tokenTransfer, callback, false);\n  }\n  public async estimateOrigination(origination: any, from: string, callback) {\n    this.estimate([origination], from, '', callback, true);\n  }\n  private async estimate(transactions: any, from: string, tokenTransfer: string = '', callback, isOrigination: boolean) {\n    this.queue.push({ transactions, from, callback });\n    if (this.queue.length === 1) {\n      while (this.queue.length > 0) {\n        while (this.queue.length > 1) {\n          this.queue[0].callback(null);\n          this.queue.shift();\n        }\n        let retry = false;\n        for (let i = 0; i < 1 || (retry && i < 2); i++) {\n          await this._estimate(this.queue[0].transactions, this.queue[0].from, tokenTransfer, isOrigination)\n            .then((res) => {\n              this.queue[0].callback(res);\n            })\n            .catch(async (error) => {\n              if (error.message && error.message === 'An operation assumed a contract counter in the past' && !retry) {\n                console.log('Update counter');\n                await this.preLoadData(this.pkh, this.pk);\n                retry = true;\n              } else {\n                this.queue[0].callback({ error });\n              }\n            });\n        }\n        this.queue.shift();\n      }\n    }\n  }\n  private async _estimate(operations: any, from: string, tokenTransfer: string, isOrigination: boolean = false): Promise<any> {\n    if (!this.hash) {\n      return null;\n    }\n    const simulation = {\n      fee: 0,\n      gasLimit: Math.min(\n        CONSTANTS.HARD_LIMITS.hard_gas_limit_per_operation,\n        Math.floor(CONSTANTS.HARD_LIMITS.hard_gas_limit_per_block / (operations.length + 1))\n      ),\n      storageLimit: CONSTANTS.HARD_LIMITS.hard_storage_limit_per_operation\n    };\n    for (const tx of operations) {\n      console.log(tx);\n      if (!isOrigination) {\n        if (!tx.amount) {\n          tx.amount = 0;\n        }\n        if (tx.destination.slice(0, 3) !== 'KT1' && !tokenTransfer) {\n          tx.amount = 0.000001;\n        }\n      }\n      tx.gasLimit = simulation.gasLimit;\n      tx.storageLimit = simulation.storageLimit;\n    }\n    if (this.hash && this.counter && (this.manager || this.manager === null)) {\n      const op = isOrigination\n        ? this.operationService.createOriginationObject(this.hash, this.counter, this.manager, operations[0], simulation.fee, this.pk, this.pkh)\n        : this.operationService.createTransactionObject(\n            this.hash,\n            this.counter,\n            this.manager,\n            operations,\n            this.pkh,\n            this.pk,\n            from,\n            simulation.fee,\n            tokenTransfer\n          );\n      const result = await this.simulate(op)\n        .toPromise()\n        .catch((e) => {\n          console.warn(e);\n          return null;\n        });\n      if (result && result.contents) {\n        let reveal = false;\n        const limits = [];\n        for (const i in result.contents) {\n          if (result.contents[i].kind === 'reveal') {\n            reveal = true;\n          } else if (['transaction', 'origination'].includes(result.contents[i].kind) && result.contents[i].metadata.operation_result.status === 'applied') {\n            const index: number = Number(i) + (result.contents[0]?.kind === 'reveal' ? -1 : 0);\n            const opObj = index > -1 ? operations[index] : null;\n            const { gas, storage } = this.getOpUsage(result.contents[i], opObj);\n            limits.push({ gasLimit: gas, storageLimit: storage });\n          } else {\n            return null;\n          }\n        }\n        return await this.operationService\n          .localForge(op)\n          .pipe(\n            flatMap((fop) => {\n              const bytes = fop.length / 2 + 64;\n              const gas = this.totalGasLimit(limits);\n              const storage = this.totalStorageLimit(limits);\n              const dtp: DefaultTransactionParams = {\n                customLimits: limits,\n                fee: this.recommendFee(limits, reveal, bytes),\n                burn: this.burnFee(limits),\n                gas,\n                storage,\n                reveal\n              };\n              console.log(JSON.stringify(dtp));\n              return of(dtp);\n            })\n          )\n          .toPromise();\n      } else if (typeof result?.success === 'boolean' && result.success === false) {\n        console.log(result);\n        throw new Error(result.payload.msg);\n      }\n    }\n    return null;\n  }\n  getOpUsage(content: any, op: any): OpLimits {\n    let gasUsage = 0;\n    let burn = Big(0);\n    if (content.source && content.source === this.pkh) {\n      burn = burn.minus(content.amount ? content.amount : '0');\n      burn = burn.minus(content.fee ? content.fee : '0');\n      burn = burn.minus(content.balance ? content.balance : '0');\n    }\n    if (content.destination && content.destination === this.pkh) {\n      burn = burn.plus(content.amount ? content.amount : '0');\n    }\n    if (content.metadata.operation_result.balance_updates) {\n      for (const balanceUpdate of content.metadata.operation_result.balance_updates) {\n        if (balanceUpdate.contract === this.pkh) {\n          burn = burn.minus(balanceUpdate.change);\n        }\n      }\n    }\n    if (content.metadata.balance_updates) {\n      for (const balanceUpdate of content.metadata.balance_updates) {\n        if (balanceUpdate.contract === this.pkh) {\n          burn = burn.minus(balanceUpdate.change);\n        }\n      }\n    }\n    gasUsage += content.metadata.operation_result.consumed_gas ? Number(content.metadata.operation_result.consumed_gas) : 0;\n    if (content.metadata.internal_operation_results) {\n      for (const internalResult of content.metadata.internal_operation_results) {\n        if (internalResult.result) {\n          if (internalResult.result.consumed_gas) {\n            gasUsage += internalResult.result && internalResult.result.consumed_gas ? Number(internalResult.result.consumed_gas) : 0;\n          }\n          if (internalResult.result.balance_updates) {\n            for (const balanceUpdate of internalResult.result.balance_updates) {\n              if (balanceUpdate.contract === this.pkh && balanceUpdate.change.slice(0, 1) === '-') {\n                burn = burn.minus(balanceUpdate.change);\n              }\n            }\n          }\n        }\n      }\n    }\n    const storageUsage = Math.round(burn / Number(this.costPerByte));\n    if (\n      gasUsage < 0 ||\n      gasUsage > CONSTANTS.HARD_LIMITS.hard_gas_limit_per_operation ||\n      storageUsage < 0 ||\n      storageUsage > CONSTANTS.HARD_LIMITS.hard_storage_limit_per_operation\n    ) {\n      throw new Error('InvalidUsageCalculation');\n    }\n    return this.getOpLimits(content, op, gasUsage, storageUsage);\n  }\n  /*\n    Need to be updated when fee market appear or default behavior for bakers changes\n  */\n  recommendFee(limits: any, reveal: boolean, bytes: number): number {\n    const minimalFee = 100;\n    const feePerByte = 1;\n    const feePerGasUnit = 0.1;\n    let gasUnits = 0;\n    let numberOfOperations = 0;\n    if (reveal) {\n      gasUnits += this.revealGasLimit;\n      numberOfOperations++;\n    }\n    for (const data of limits) {\n      gasUnits += data.gasLimit;\n      numberOfOperations++;\n    }\n    bytes += 10 * numberOfOperations; // add 10 extra bytes for variation in amount & fee\n    return Number(\n      Big(Math.ceil(minimalFee + feePerByte * bytes + feePerGasUnit * gasUnits))\n        .div(1000000)\n        .toString()\n    );\n  }\n  totalGasLimit(limits: any): number {\n    let totalGasLimit = 0;\n    for (const data of limits) {\n      totalGasLimit += data.gasLimit;\n    }\n    return totalGasLimit;\n  }\n  totalStorageLimit(limits: any): number {\n    let totalStorageLimit = 0;\n    for (const data of limits) {\n      totalStorageLimit += data.storageLimit;\n    }\n    return totalStorageLimit;\n  }\n  burnFee(limits: any): number {\n    let totalStorageLimit = Big(0);\n    for (const data of limits) {\n      totalStorageLimit = totalStorageLimit.plus(data.storageLimit);\n    }\n    return Number(Big(totalStorageLimit).times(this.costPerByte).div('1000000').toString());\n  }\n  simulate(op: any): Observable<any> {\n    op.signature = 'edsigtXomBKi5CTRf5cjATJWSyaRvhfYNHqSUGrn4SdbYRcGwQrUGjzEfQDTuqHhuA8b2d8NarZjz8TRf65WkpQmo423BtomS8Q';\n    return this.operationService\n      .postRpc('chains/main/blocks/head/helpers/scripts/run_operation', {\n        operation: op,\n        chain_id: this.chainId\n      })\n      .pipe(\n        flatMap((res) => {\n          this.operationService.checkApplied([res]);\n          return of(res);\n        })\n      )\n      .pipe(\n        catchError((err) => {\n          return this.operationService.errHandler(err);\n        })\n      );\n  }\n  private getOpLimits(content: any, op: any, gasUsage: number, storageUsage: number): OpLimits {\n    // check for hardcoded override\n    let limit: OpLimits = {};\n    const entrypoint = content?.parameters?.entrypoint;\n    const destination = content?.destination;\n    if (entrypoint && destination) {\n      const contractOverride: OpLimits = this.contractsOverride[`${destination}:${entrypoint}`];\n      if (contractOverride) {\n        limit = contractOverride;\n      }\n    }\n    // gas\n    if (!limit.gas) {\n      let gasRecommendation: number = 0;\n      if (op?.gasRecommendation) {\n        if (this.imputValidationService.gas(op.gasRecommendation)) {\n          gasRecommendation = Number(op.gasRecommendation);\n        } else if (this.imputValidationService.relativeLimit(op.gasRecommendation)) {\n          let percentage: number = Number(op.gasRecommendation.slice(1, -1));\n          percentage = Math.min(Math.max(percentage, 2), 900);\n          gasRecommendation = Math.round(gasUsage * (1 + percentage / 100));\n        }\n      }\n      const gasEstimation = Math.max(Math.ceil(gasUsage * 1.02), Math.round(gasUsage + 80));\n      limit.gas = Math.max(gasRecommendation, gasEstimation); // make sure dapps don't underestimate (ithaca side effect)\n    }\n    // storage\n    if (!limit.storage) {\n      let storageRecommendation: number = 0;\n      if (op?.storageRecommendation) {\n        if (this.imputValidationService.storage(op.storageRecommendation)) {\n          storageRecommendation = Number(op.storageRecommendation);\n        } else if (this.imputValidationService.relativeLimit(op.storageRecommendation)) {\n          const percentage: number = Number(op.storageRecommendation.slice(1, -1));\n          storageRecommendation = Math.round(storageUsage * (1 + percentage / 100));\n        }\n      }\n      const storageEstimation = Math.round(storageUsage);\n      limit.storage = Math.max(storageRecommendation, storageEstimation);\n    }\n    return limit;\n  }\n  private async getCounter(pkh: string): Promise<number> {\n    return this.operationService.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/counter`).toPromise();\n  }\n  private async getManager(pkh: string): Promise<string> {\n    return this.operationService.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/manager_key`).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TzktService } from './tzkt/tzkt.service';\nimport { WalletObject } from '../wallet/wallet';\nimport { Asset } from '../token/token.service';\n\nexport interface Indexer {\n  getContractAddresses(pkh: string): Promise<any>;\n  accountInfo(address: string, knownTokenIds: string[], init: boolean): Promise<any>;\n  getOperations(address: string, knownTokenIds: string[], wallet: WalletObject): Promise<any>;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndexerService {\n  constructor(public tzktService: TzktService) {}\n  async isUsedAccount(address: string): Promise<boolean> {\n    return this.tzktService.isUsedAccount(address);\n  }\n  async getContractAddresses(address: string): Promise<any> {\n    return this.tzktService.getContractAddresses(address);\n  }\n  async accountInfo(address: string, knownTokenIds: string[] = []): Promise<any> {\n    return this.tzktService.accountInfo(address, knownTokenIds);\n  }\n  async getOperations(address: string, knownTokenIds: string[], wallet: WalletObject): Promise<any> {\n    return this.tzktService.getOperations(address, knownTokenIds, wallet);\n  }\n  async getTokenMetadata(contractAddress: string, id: string, skipTzkt = false): Promise<any> {\n    return this.tzktService.getTokenMetadata(contractAddress, id, skipTzkt);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { SubjectService } from '../../subject/subject.service';\nimport { CONSTANTS } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeztoolsService {\n  readonly storeKey = 'teztools';\n  //public markets = new BehaviorSubject<any>([]);\n  public defiTokens = [];\n  constructor(private subjectService: SubjectService) {\n    this.rehydrate();\n  }\n  getMarkets() {\n    if (CONSTANTS.MAINNET) {\n      fetch('https://api.teztools.io/v1/prices')\n        .then((response) => response.json())\n        .then((r) => {\n          const _defiTokens = [];\n          const _markets = [];\n          for (const contract of r.contracts) {\n            const id = contract?.tokenId !== undefined ? contract.tokenId : 0;\n            if (contract?.tokenAddress) {\n              const tokenId: string = `${contract.tokenAddress}:${id}`;\n              _defiTokens.push(tokenId);\n              if (contract.usdValue && contract.tezPool) {\n                const threshold = contract.tezPool % 1 === 0 ? 100000000 : 100;\n                if (contract.tezPool > threshold) {\n                  _markets.push({\n                    tokenId,\n                    usdValue: contract.usdValue\n                  });\n                }\n              }\n            }\n          }\n          this.subjectService.markets.next(_markets);\n          this.defiTokens = _defiTokens;\n          this.store();\n        });\n    }\n  }\n  store() {\n    localStorage.setItem(\n      this.storeKey,\n      JSON.stringify({\n        defiTokens: this.defiTokens,\n        markets: this.subjectService.markets.value\n      })\n    );\n  }\n  rehydrate() {\n    const json = localStorage.getItem(this.storeKey);\n    if (json) {\n      const parsed = JSON.parse(json);\n      if (parsed) {\n        this.defiTokens = parsed.defiTokens;\n        this.subjectService.markets.next(parsed.markets);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CONSTANTS, MODEL_3D_WHITELIST } from '../../../../environments/environment';\nimport { Indexer } from '../indexer.service';\nimport * as cryptob from 'crypto-browserify';\nimport { WalletObject, Activity, OpStatus, Token } from '../../wallet/wallet';\nimport { TezosToolkit } from '@taquito/taquito';\nimport { Tzip12Module, tzip12 } from '@taquito/tzip12';\nimport { TezosStorageHandler } from '@taquito/tzip16';\nimport { Handler, IpfsHttpHandler, MetadataProvider } from '@taquito/tzip16';\nimport { SubjectService } from '../../subject/subject.service';\n\ninterface TokenMetadata {\n  name: string;\n  tokenType: 'FA2' | 'FA1.2';\n  decimals: number;\n  symbol?: string;\n  description?: string;\n  artifactUri?: string;\n  displayUri?: string;\n  thumbnailUri?: string;\n  category?: string;\n  isTransferable?: boolean;\n  shouldPreferSymbol?: boolean;\n  isBooleanAmount?: boolean;\n  series?: string;\n  ttl?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TzktService implements Indexer {\n  tokenBalanceCache = {};\n  readonly network = CONSTANTS.NETWORK.replace('hangzhounet', 'hangzhou2net');\n  public readonly tzkt = `https://api.${this.network}.tzkt.io/v1`;\n  readonly TZKT_TOKEN_QUERY_SIZE: number = 10000;\n  Tezos: TezosToolkit;\n  constructor(private subjectService: SubjectService) {\n    this.Tezos = new TezosToolkit(CONSTANTS.NODE_URL);\n    const customHandlers = new Map<string, Handler>([\n      ['ipfs', new IpfsHttpHandler('cloudflare-ipfs.com')],\n      ['tezos-storage', new TezosStorageHandler()]\n    ]);\n    const customMetadataProvider = new MetadataProvider(customHandlers);\n    this.Tezos.addExtension(new Tzip12Module(customMetadataProvider));\n  }\n  async getContractAddresses(pkh: string): Promise<any> {\n    return fetch(`${this.tzkt}/operations/originations?contractManager=${pkh}`)\n      .then((response) => response.json())\n      .then((data) =>\n        data\n          .map((op: any) => {\n            return op?.status === 'applied' && op?.originatedContract?.kind === 'delegator_contract' ? op.originatedContract.address : '';\n          })\n          .filter((address: string) => address.length)\n      );\n  }\n  async getHashAndBlockById(transactionId: number, ops: any): Promise<any> {\n    try {\n      for (const op of ops) {\n        if (op.type === 'transaction' && op.id === transactionId) {\n          if (op.hash && op.block) {\n            return { hash: op.hash, block: op.block };\n          }\n          break;\n        }\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    return fetch(`${this.tzkt}/operations/transactions?id=${transactionId}`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((o) => {\n        return o?.length && o[0].hash && o[0].block ? { hash: o[0].hash, block: o[0].block } : '';\n      });\n  }\n  async accountInfo(address: string, knownTokenIds: string[]): Promise<any> {\n    const unknownTokenIds = [];\n    const data = await (await fetch(`${this.tzkt}/accounts/${address}`)).json();\n    const tokenBalances = address.startsWith('tz') ? await this.getAllTokenBalances(address) : [];\n    if (data) {\n      if (tokenBalances?.length) {\n        for (const token of tokenBalances) {\n          if (!knownTokenIds.includes(token.tokenId)) {\n            unknownTokenIds.push(token.tokenId);\n          }\n        }\n      }\n      tokenBalances.sort(function (a: any, b: any) {\n        if (a.tokenId < b.tokenId) {\n          return -1;\n        } else {\n          return 1;\n        }\n      });\n      const payload: string = (data.balance ? data.balance : '') + (data.counter ? data.counter : '') + (tokenBalances ? JSON.stringify(tokenBalances) : '');\n      const input = Buffer.from(payload);\n      const hash = cryptob.createHash('sha512').update(input).digest('hex');\n      if (payload && payload !== '[]') {\n        const balance = data?.balance !== undefined ? data.balance : 0;\n        return { counter: hash, unknownTokenIds, tokens: tokenBalances, balance };\n      }\n    }\n    return { counter: '', tokens: tokenBalances };\n  }\n  async isUsedAccount(address: string): Promise<boolean> {\n    const accountInfo = await (await fetch(`${this.tzkt}/accounts/${address}`)).json();\n    if (accountInfo && (accountInfo.balance || accountInfo.tokenBalancesCount)) {\n      return true;\n    } else {\n      const tokenCount = await (await fetch(`${this.tzkt}/accounts/count`)).json();\n      if (tokenCount && Object.keys(tokenCount).length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async getOperations(address: string, knownTokenIds: string[], wallet: WalletObject): Promise<any> {\n    const ops = await fetch(`${this.tzkt}/accounts/${address}/operations?limit=20&type=delegation,origination,transaction`)\n      .then((response) => response.json())\n      .then((data) =>\n        data\n          .map((op) => {\n            if (!op.hasInternals || !wallet.getAccount(op.target.address)) {\n              const status: OpStatus = op.status === 'applied' ? OpStatus.CONFIRMED : OpStatus.FAILED;\n              let destination = { address: '' };\n              let amount = '0';\n              let entrypoint = '';\n              let opId = '';\n              switch (op.type) {\n                case 'transaction':\n                  if (address !== op.target.address && address !== op.sender.address) {\n                    return null;\n                  }\n                  destination = op.target;\n                  amount = op.amount.toString();\n                  entrypoint = this.extractEntrypoint(op);\n                  opId = op?.id ? `t${op.id}` : '';\n                  break;\n                case 'delegation':\n                  if (address !== op.sender.address) {\n                    return null;\n                  }\n                  destination = op.newDelegate ? op.newDelegate : { address: '' };\n                  amount = '0';\n                  opId = op?.id ? `d${op.id}` : '';\n                  break;\n                case 'origination':\n                  destination = op.originatedContract;\n                  if (op.contractBalance) {\n                    amount = op.contractBalance.toString();\n                  }\n                  opId = op?.id ? `o${op.id}` : '';\n                  break;\n                default:\n                  console.log(`Ignoring kind ${op.type}`);\n                  return null;\n              }\n              const activity: Activity = {\n                type: op.type,\n                block: op.block,\n                status,\n                amount,\n                source: op.sender,\n                destination,\n                hash: op.hash,\n                counter: op.counter,\n                timestamp: new Date(op.timestamp).getTime(),\n                entrypoint,\n                opId\n              };\n              return activity;\n            }\n          })\n          .filter((obj) => obj)\n      );\n    const unknownTokenIds: string[] = [];\n    const tokenTxs = await (await fetch(`${this.tzkt}/tokens/transfers?anyof.from.to=${address}&limit=20&offset=0&sort.desc=id`)).json();\n    const tokenArr = [];\n    for (let i = 0; i < tokenTxs.length; ++i) {\n      const tokenId = `${tokenTxs[i].token.contract.address}:${tokenTxs[i].token.tokenId}`;\n      if (tokenTxs[i].token.contract && tokenId) {\n        if (!knownTokenIds.includes(tokenId)) {\n          unknownTokenIds.push(tokenId);\n        }\n        const source: any = { address: tokenTxs[i].from?.address };\n        if (tokenTxs[i].from === '' && tokenTxs[i].token.contract) {\n          source.address = tokenTxs[i].contract.address;\n        }\n        let hash = '';\n        let block = '';\n        if (tokenTxs[i].transactionId) {\n          const o = await this.getHashAndBlockById(tokenTxs[i].transactionId, ops);\n          if (o) {\n            hash = o.hash;\n            block = o.block;\n          }\n        }\n        const activity: Activity = {\n          type: 'transaction',\n          block,\n          hash,\n          status: OpStatus.CONFIRMED,\n          amount: tokenTxs[i].amount,\n          tokenId,\n          source,\n          destination: { address: tokenTxs[i].to?.address ?? '' },\n          timestamp: new Date(tokenTxs[i].timestamp).getTime(),\n          opId: `t${tokenTxs[i].transactionId}`\n        };\n        tokenArr.push(activity);\n      }\n    }\n    let operations = tokenArr\n      .concat(ops)\n      .filter((op) => op?.entrypoint !== 'transfer' && op?.entrypoint !== 'claim')\n      .sort(function (a: any, b: any) {\n        return b.timestamp - a.timestamp;\n      });\n    return { operations, unknownTokenIds };\n  }\n  private extractEntrypoint(op: any): string {\n    return op?.entrypoint ?? op?.parameter?.entrypoint ?? '';\n  }\n  async getTokenMetadata(contractAddress: string, id: string, skipTzkt: boolean): Promise<TokenMetadata> {\n    let meta;\n    let tokenType = 'FA2';\n    const tokenId = `${contractAddress}:${id}`;\n    if (this.tokenBalanceCache[tokenId]) {\n      meta = this.tokenBalanceCache[tokenId].token.metadata;\n      tokenType = this.tokenBalanceCache[tokenId].token.standard && this.tokenBalanceCache[tokenId].token.standard === 'fa1.2' ? 'FA1.2' : 'FA2';\n    }\n    if (meta) {\n      this.normalizeMetadata(meta, contractAddress, id);\n      this.filterMetadata(meta);\n    }\n    if (!(meta && (meta.name || meta.symbol) && !isNaN(meta.decimals) && meta.decimals >= 0) || skipTzkt) {\n      meta = null;\n    }\n    if (!meta) {\n      console.log('fallback on taquito', { contractAddress, id });\n      meta = await this.getTokenMetadataWithTaquito(contractAddress, id);\n      if (meta) {\n        this.normalizeMetadata(meta, contractAddress, id);\n        this.filterMetadata(meta);\n      }\n    }\n    if (!(meta && (meta.name || meta.symbol) && !isNaN(meta.decimals) && meta.decimals >= 0)) {\n      meta = null;\n    }\n    if (!meta) {\n      console.warn(`cannot find token_id ${id} for contract: ${contractAddress}`);\n      return null;\n    }\n    return { ...meta, tokenType };\n  }\n  async getTokenMetadataWithTaquito(contractAddress, id) {\n    const contract = await this.Tezos.contract.at(contractAddress, tzip12);\n    let metadata: any;\n    if (['KT1TnVQhjxeNvLutGvzwZvYtC7vKRpwPWhc6'].includes(contractAddress)) {\n      // nl hotfix\n      const contract = await this.Tezos.contract.at(contractAddress);\n      const storage: any = await contract.storage();\n      const parsed_uri = storage.token_metadata_uri.replace('{tokenId}', id);\n      const response = await (await fetch(parsed_uri)).json();\n      if (response) {\n        response.tokenId = id;\n        metadata = response;\n      }\n    } else {\n      metadata = await contract.tzip12().getTokenMetadata(Number(id));\n    }\n    return metadata;\n  }\n  async getAllTokenBalances(address: string): Promise<Array<Token>> {\n    const fetchToken = async (offset: number): Promise<Array<any>> => {\n      let res = await (await fetch(`${this.tzkt}/tokens/balances?account=${address}&offset=${offset}&limit=${this.TZKT_TOKEN_QUERY_SIZE}&balance.ne=0`)).json();\n      if (res?.length) {\n        if (res.length === this.TZKT_TOKEN_QUERY_SIZE) {\n          // get more if limit reached\n          return [...res, ...(await fetchToken(offset + this.TZKT_TOKEN_QUERY_SIZE))];\n        } else {\n          return res;\n        }\n      } else {\n        return [];\n      }\n    };\n    let tzktTokensResponse = await fetchToken(0);\n    const tokenBalances: Token[] = [];\n    for (let i = 0; i < tzktTokensResponse.length; ++i) {\n      if (tzktTokensResponse[i]?.balance && tzktTokensResponse[i].token?.contract?.address && tzktTokensResponse[i].token?.tokenId !== undefined) {\n        const tokenId: string = `${tzktTokensResponse[i].token.contract.address}:${tzktTokensResponse[i].token.tokenId}`;\n        tokenBalances.push({ tokenId, balance: tzktTokensResponse[i].balance });\n        this.tokenBalanceCache[tokenId] = tzktTokensResponse[i];\n      }\n    }\n    return tokenBalances;\n  }\n  private filterMetadata(meta: any) {\n    const keys = [\n      { key: 'name', type: 'string' },\n      { key: 'balance', type: 'string' },\n      { key: 'symbol', type: 'string' },\n      { key: 'contractAddress', type: 'string' },\n      { key: 'id', type: 'string' },\n      { key: 'decimals', type: 'string' },\n      { key: 'description', type: 'string' },\n      { key: 'artifactUri', type: 'string', toAsset: true },\n      { key: 'displayUri', type: 'string', toAsset: true },\n      { key: 'thumbnailUri', type: 'string', toAsset: true },\n      { key: 'isTransferable', type: 'boolean' },\n      { key: 'shouldPreferSymbol', type: 'boolean' },\n      { key: 'isBooleanAmount', type: 'boolean' },\n      { key: 'series', type: 'string' },\n      { key: 'ttl', type: 'string' }\n    ];\n    let metadata: any = {};\n    for (const a of keys) {\n      if (typeof meta[a.key] === a.type) {\n        if (a.toAsset) {\n          // extract mime type\n          if (meta?.formats?.length) {\n            const index = meta.formats.findIndex((b) => b.uri === meta[a.key]);\n            if (index !== -1 && meta.formats[index].uri && meta.formats[index].mimeType) {\n              meta[a.key] = { uri: meta[a.key], mimeType: meta.formats[index].mimeType };\n            }\n          }\n          if (typeof meta[a.key] === 'string') {\n            meta[a.key] = { uri: meta[a.key], mimeType: 'unknown' };\n          }\n        }\n        metadata[a.key] = meta[a.key];\n      }\n    }\n    return metadata;\n  }\n  private normalizeMetadata(meta: any, contractAddress: string, id: string) {\n    mutableConvertObjectPropertiesSnakeToCamel(meta);\n    for (let key of Object.keys(meta)) {\n      if (typeof meta[key] === 'number') {\n        meta[key] = `${meta[key]}`;\n      }\n    }\n    this.handleMetadataExceptions(meta, contractAddress, id);\n    if (meta?.isTransferable && typeof meta?.isTransferable === 'string') {\n      meta.isTransferable = meta.isTransferable?.toLowerCase() === 'false' ? false : meta.isTransferable?.toLowerCase() === 'true' ? true : undefined;\n    }\n    if (meta?.shouldPreferSymbol && typeof meta?.shouldPreferSymbol === 'string') {\n      meta.shouldPreferSymbol =\n        meta.shouldPreferSymbol?.toLowerCase() === 'false' ? false : meta.shouldPreferSymbol?.toLowerCase() === 'true' ? true : undefined;\n    }\n    if (meta?.isBooleanAmount && typeof meta?.isBooleanAmount === 'string') {\n      meta.isBooleanAmount = meta.isBooleanAmount?.toLowerCase() === 'false' ? false : meta.isBooleanAmount?.toLowerCase() === 'true' ? true : undefined;\n    }\n  }\n  handleMetadataExceptions(meta: any, contractAddress: string, id: string) {\n    // hen\n    if (meta?.symbol === 'OBJKT') {\n      if (!meta.displayUri && meta.formats?.length) {\n        meta.displayUri = meta.formats[0].uri;\n      }\n      if (meta.displayUri && meta.thumbnailUri) {\n        delete meta.thumbnailUri;\n      }\n    }\n    if (contractAddress === 'KT1NVvPsNDChrLRH5K2cy6Sc9r1uuUwdiZQd' /* Dogami */ && meta?.formats) {\n      if (typeof meta.formats[0] === 'string') {\n        meta.formats = JSON.parse(meta.formats);\n      }\n    }\n    // fxHash\n    if (contractAddress === 'KT1U6EHmNxJTkvaWJ4ThczG4FSDaHC21ssvi' && meta?.artifactUri) {\n      delete meta.artifactUri;\n    }\n    // Plenty + HEH\n    if (!meta.displayUri && !meta.thumbnailUri && meta?.icon) {\n      meta.thumbnailUri = { uri: meta.icon, mimeType: 'unknown' };\n    }\n    if (\n      (contractAddress === 'KT1AWoUQAuUudqpc75cGukWufbfim3GRn8h6' /* Flex */ ||\n        contractAddress === 'KT1Lz7Jd6Sh1zUE66nDGS7hGnjwcyTBCiYbF' /* BV */ ||\n        contractAddress === 'KT1D1XtWFoQDPtuYzbkeRJhcDgH6CDem2FkZ' /* BV */ ||\n        contractAddress === 'KT1NVvPsNDChrLRH5K2cy6Sc9r1uuUwdiZQd') /* Dogami */ &&\n      meta?.formats?.length\n    ) {\n      meta.displayUri = meta.artifactUri = meta.formats?.find((f) => f?.mimeType?.startsWith('model/')) ?? meta.displayUri;\n    }\n    if (contractAddress === 'KT1NVvPsNDChrLRH5K2cy6Sc9r1uuUwdiZQd') {\n      // override wrong mimeType\n      meta.thumbnailUri = { uri: meta.thumbnailUri, mimeType: 'video/mp4' };\n    }\n    // Rarible\n    if (contractAddress === 'KT18pVpRXKPY2c4U2yFEGSH3ZnhB2kL8kwXS') {\n      meta.thumbnailUri = meta.displayUri = meta.formats[0].uri;\n    }\n  }\n}\nexport function mutableConvertObjectPropertiesSnakeToCamel(data: Object) {\n  for (const key in data) {\n    if (key.charAt(0).toLowerCase() !== key.charAt(0)) {\n      data[key.charAt(0).toLowerCase() + key.slice(1)] = data[key];\n    }\n    if (key.indexOf('_') !== -1) {\n      const aryCamelKey = [];\n      for (let i = 0; i < key.length; i++) {\n        const char = key.charAt(i);\n        if (char === '_') {\n          aryCamelKey.push(key.charAt(i + 1).toUpperCase());\n          i++;\n        } else {\n          aryCamelKey.push(char);\n        }\n      }\n      const camelKey = aryCamelKey.join('');\n      if (!data.hasOwnProperty(camelKey)) {\n        data[camelKey] = data[key];\n        delete data[key];\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OperationService } from '../operation/operation.service';\nimport * as zxcvbn from 'zxcvbn';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { TranslateService } from '@ngx-translate/core';\nimport { valueDecoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { Uint8ArrayConsumer } from '@taquito/local-forging/dist/lib/uint8array-consumer';\n\n@Injectable()\nexport class InputValidationService {\n  constructor(private operationService: OperationService, private translate: TranslateService) {}\n  /*\n    Input validations\n  */\n  mnemonics(mnemonics: string): boolean {\n    return this.operationService.validMnemonic(mnemonics);\n  }\n  password(password: string): boolean {\n    return zxcvbn(password).score === 4;\n  }\n  passwordStrengthDisplay(password: string): string {\n    if (!password) {\n      return '';\n    }\n    switch (zxcvbn(password).score) {\n      case 0: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.CATASTROPHIC'); // 'Catastrophic!'\n      }\n      case 1: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.VERYWEAK'); // 'Very weak!'\n      }\n      case 2: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.WEAK'); // 'Weak!'\n      }\n      case 3: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.WEAK'); // 'Weak!'\n      }\n      case 4: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.STRONG'); // 'Strong!'\n      }\n      default: {\n        return '';\n      }\n    }\n  }\n  address(address: string): Boolean {\n    return this.operationService.validAddress(address);\n  }\n  torusAccount(verifierId: string, loginType: string): Boolean {\n    switch (loginType) {\n      case 'google':\n        return this.email(verifierId);\n      case 'reddit':\n        return this.redditAccount(verifierId);\n      case 'twitter':\n        return this.twitterAccount(verifierId);\n      case 'domain':\n        return this.tezosDomain(verifierId);\n      default:\n        return false;\n    }\n  }\n  redditAccount(username: string) {\n    // Letters, numbers, dashes, and underscores only\n    // Username must be between 3 and 20 characters\n    const re = /^[0-9a-zA-Z\\-\\_]{3,20}$/;\n    return re.test(username);\n  }\n  email(email: string): Boolean {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n  tezosDomain(domain: string) {\n    const a = domain.split('.');\n    // basic validation that is in the correct format\n    for (const sub of a) {\n      if (!sub.length) {\n        return false;\n      }\n    }\n    return a.length >= 2 && CONSTANTS.TEZOS_DOMAIN.TOP_DOMAINS.includes(a[a.length - 1]);\n  }\n  twitterAccount(username: string) {\n    // The only characters you can use are uppercase and lowercase letters, numbers, and the underscore character ( _ ).\n    const re = /^\\@{1}[0-9a-zA-Z\\_]{1,15}$/;\n    return re.test(username);\n  }\n  twitterId(id: string) {\n    const re = /^[0-9]+$/;\n    return re.test(id);\n  }\n  passphrase(passphrase: string): Boolean {\n    return true;\n  }\n  amount(amount: string, decimals: number = 6): Boolean {\n    const decimalsPart = decimals ? `(\\.[0-9]{1,${decimals}}){0,1}` : '';\n    const expr = new RegExp(`^(0|[1-9][0-9]*)${decimalsPart}$`, 'g');\n    if (amount === '' || amount === '0') {\n      // default value / zero\n      return true;\n    } else if (Number(amount) && amount.match(expr)) {\n      // Positive number\n      return true;\n    }\n    return false;\n  }\n  fee(fee: string): Boolean {\n    return this.amount(fee); // same as amount\n  }\n  gas(amount: string): Boolean {\n    if (amount === '' || amount === '0') {\n      // default value / zero\n      return true;\n    } else if (Number(amount) && 0 < Number(amount) && Number(amount) % 1 === 0) {\n      // Positive integer\n      return true;\n    } else {\n      return false;\n    }\n  }\n  storage(amount: string) {\n    return this.gas(amount);\n  }\n  relativeLimit(limit: string) {\n    if (limit?.length > 2 && limit.startsWith('+') && limit.endsWith('%')) {\n      return this.gas(limit.slice(1, -1));\n    }\n    return false;\n  }\n  code(code: string): Boolean {\n    if (code && code.length === 40 && code.match(/^[0-9a-f]*$/g)) {\n      // 40 hex chars\n      return true;\n    } else {\n      return false;\n    }\n  }\n  derivationPath(path: string): Boolean {\n    const m = path.match(/^44\\'\\/1729(\\'\\/[0-9]+)+\\'$/g);\n    if (m || path === \"44'/1729'\") {\n      return true;\n    }\n    return false;\n  }\n  hexString(hex: string): Boolean {\n    if (hex && hex.match(/^[a-f0-9]*$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  isMessageSigning(payload: string): boolean {\n    if (payload.match(/^0501[a-f0-9]{8}54657a6f73205369676e6564204d6573736167653a20[a-f0-9]*$/)) {\n      return true;\n    }\n    return false;\n  }\n  isMichelineExpr(hex: string) {\n    try {\n      if (!this.hexString(hex)) {\n        throw new Error('Not a hex string');\n      }\n      if (hex.slice(0, 2) !== '05') {\n        throw new Error('invalid prefix');\n      }\n      const parsedPayload = valueDecoder(Uint8ArrayConsumer.fromHexString(hex.slice(2)));\n      console.log('Parsed sign payload', parsedPayload);\n    } catch (e) {\n      console.warn(e.message ? 'Decoding: ' + e.message : e);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OperationService } from '../../services/operation/operation.service';\nimport { TorusService } from '../../services/torus/torus.service';\nimport { WalletService } from '../../services/wallet/wallet.service';\nimport { InputValidationService } from '../../services/input-validation/input-validation.service';\nimport { TezosDomainsService } from '../../services/tezos-domains/tezos-domains.service';\n\nexport enum LookupType { // ordered in priority\n  AddressBook,\n  TezosDomains,\n  Google,\n  Reddit,\n  Twitter,\n  Alias\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LookupService {\n  public records: {\n    address: string;\n    data: { name: string; lookupType: LookupType }[];\n  }[] = [];\n  private pendingLookups: Record<string, number> = {};\n  constructor(\n    private operationService: OperationService,\n    private torusService: TorusService,\n    private walletService: WalletService,\n    private inputValidationService: InputValidationService,\n    private tezosDomainsService: TezosDomainsService\n  ) {\n    this.initCheck();\n  }\n  initCheck() {\n    if (!this.records.length && this.walletService.wallet && this.walletService.wallet.lookups.length) {\n      console.log('### Loading lookups from memory');\n      this.records = this.walletService.wallet.lookups;\n    }\n  }\n  add(address: string, name: string, lookupType: LookupType) {\n    console.log('#name ' + name, lookupType);\n    const { x, y } = this.index(address, lookupType);\n    if (x !== -1) {\n      if (y === -1) {\n        this.records[x].data.push({ name, lookupType });\n      } else if (lookupType === LookupType.TezosDomains) {\n        this.records[x].data[y] = { name, lookupType };\n      }\n    } else {\n      this.records.push({ address, data: [{ name, lookupType }] });\n    }\n    this.walletService.wallet.lookups = this.records;\n    this.walletService.storeWallet();\n  }\n  clear() {\n    this.records = [];\n    this.pendingLookups = {};\n  }\n  mark(address: string) {\n    const { x, y } = this.indexTop(address);\n    if (x === -1) {\n      this.records.push({ address, data: [] });\n    }\n    this.walletService.storeWallet();\n  }\n  async recheckWalletAddresses(force: boolean) {\n    console.log('lookup wallet addresses');\n    for (const address of this.walletService.wallet.getImplicitAccounts()) {\n      this.check(address, force);\n    }\n  }\n  async check(address: any, force: boolean = false) {\n    if (address?.address !== undefined) {\n      address = address.address;\n    }\n    if (typeof address !== 'string') {\n      return;\n    }\n    this.initCheck();\n    if (force) {\n      console.log('Forced recheck for: ' + address);\n    }\n    if (address && !this.pendingLookups[address]) {\n      const { x } = this.index(address, 0);\n      if (x === -1 || force) {\n        // DirectAuth - disabled\n        // if (address && address.slice(0, 3) === 'tz2') {\n        //   if (x === -1) {\n        //     this.pendingLookups[address]++;\n        //     this.torusLookup(address);\n        //   }\n        // }\n        // Tezos Domains\n        this.pendingLookups[address]++;\n        let domain = '';\n        try {\n          domain = await this.tezosDomainsService.getDomainFromAddress(address);\n        } catch (e) {\n          console.log(address, e);\n          this.pendingLookups[address]--;\n          return;\n        }\n        this.pendingLookups[address]--;\n        if (domain || domain === '') {\n          this.add(address, domain, LookupType.TezosDomains);\n        } else {\n          this.mark(address);\n        }\n      }\n    }\n  }\n  torusLookup(address: string) {\n    this.operationService.torusKeyLookup(address).subscribe(async (ans: any) => {\n      if (ans) {\n        if (ans.result && ans.result.Verifiers) {\n          const keys = Object.keys(ans.result.Verifiers);\n          const verifierMap = this.torusService.verifierMap;\n          for (const key of keys) {\n            if (key === verifierMap['google'].verifier) {\n              this.add(address, ans.result.Verifiers[verifierMap['google'].verifier][0], LookupType.Google);\n            } else if (key === verifierMap['reddit'].verifier) {\n              this.add(address, ans.result.Verifiers[verifierMap['reddit'].verifier][0], LookupType.Reddit);\n            } else if (key === verifierMap['twitter'].verifier) {\n              const verifierId = ans.result.Verifiers[verifierMap['twitter'].verifier][0];\n              const verifierArray = verifierId.split('|');\n              if (verifierArray[0] === 'twitter' && this.inputValidationService.twitterId(verifierArray[1])) {\n                const twitterId = verifierArray[1];\n                const { username } = await this.torusService.twitterLookup(undefined, twitterId);\n                if (username) {\n                  this.add(address, '@' + username, LookupType.Twitter);\n                }\n              }\n            } else {\n              console.log('Unhandled verifier result', ans);\n            }\n          }\n          this.pendingLookups[address]--;\n        } else if (!ans.noReveal) {\n          this.mark(address);\n        }\n      }\n    });\n  }\n  torusEntryExist(address: string): boolean {\n    const record = this.records[address];\n    if (record) {\n      for (const entry of record) {\n        if (entry.lookupType > 1) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  index(address: string, lookupType: LookupType) {\n    let [x, y] = Array(2).fill(-1);\n    for (let i = 0; i < this.records.length; i++) {\n      if (this.records[i].address === address) {\n        x = i;\n        for (let j = 0; j < this.records[i].data.length; j++) {\n          if (this.records[i].data[j].lookupType === lookupType) {\n            y = j;\n          }\n        }\n      }\n    }\n    return { x, y };\n  }\n  indexTop(address: string) {\n    let [x, y] = Array(2).fill(-1);\n    for (let i = 0; i < this.records.length; i++) {\n      if (this.records[i].address === address) {\n        x = i;\n        for (let j = 0; j < this.records[i].data.length; j++) {\n          if (this.records[i].data[j].lookupType < y || y === -1) {\n            if (this.records[i].data[j].lookupType !== LookupType.TezosDomains || this.records[i].data[j].name) {\n              // skip empty domain records\n              y = j;\n            }\n          }\n        }\n      }\n    }\n    return { x, y };\n  }\n  resolve(party: any): any {\n    this.initCheck();\n    const { x, y } = this.indexTop(party?.address);\n    if (x !== -1 && y !== -1) {\n      return {\n        name: this.records[x].data[y].name,\n        lookupType: this.records[x].data[y].lookupType,\n        address: party.address\n      };\n    } else if (party?.alias) {\n      this.add(party.address, party.alias, LookupType.Alias);\n      return this.resolve(party);\n    }\n    return { address: party?.address };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\n\n@Injectable()\nexport class MessageService {\n  spinnerOn = false;\n  spinnerText = '';\n  messages: any[] = [];\n  defaultTime = 10;\n  checked: Observable<boolean>;\n  beaconResponse = new Subject<boolean>();\n  readonly pairingCompleteMsg = 'Pairing complete! Waiting for permission request...';\n  add(message: string, seconds: number = this.defaultTime) {\n    const type = 'info';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000\n    });\n  }\n  addError(message: string, seconds: number = this.defaultTime) {\n    const type = 'danger';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000\n    });\n  }\n  addWarning(message: string, seconds: number = this.defaultTime) {\n    const type = 'warning';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000\n    });\n  }\n  addSuccess(message: string, seconds: number = this.defaultTime, ref: string = '') {\n    if (ref) {\n      console.log('ref set', ref);\n    }\n    const type = 'success';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000,\n      ref\n    });\n  }\n  modify(newMessage: string, ref: string) {\n    if (ref) {\n      for (const message of this.messages) {\n        if (message.ref === ref) {\n          message.msg = newMessage;\n        }\n      }\n    }\n  }\n  emailNotify(email: string, amount: string) {\n    console.log(email);\n    const type = 'success';\n    this.messages.push({\n      type: type,\n      timeout: 0,\n      msg: 'email',\n      email,\n      amount\n    });\n  }\n  redditNotify(username: string, amount: string) {\n    console.log(username);\n    const type = 'success';\n    this.messages.push({\n      type: type,\n      timeout: 0,\n      msg: 'Reddit',\n      username,\n      amount\n    });\n  }\n  twitterNotify(twitterId: string, handler: string, amount: string) {\n    console.log(twitterId);\n    const type = 'success';\n    this.messages.push({\n      type: type,\n      timeout: 0,\n      msg: 'Twitter',\n      twitterId,\n      handler,\n      amount\n    });\n  }\n  addBeaconWait(message: string) {\n    const type = 'info';\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: 30 * 1000,\n      loader: true\n    });\n  }\n  async removeBeaconMsg(delay = false) {\n    setTimeout(\n      () => {\n        for (let i = 0; i < this.messages.length; i++) {\n          if (this.messages[i].loader) {\n            this.messages.splice(i, 1);\n            this.addSuccess(this.pairingCompleteMsg, 10);\n            break;\n          } else if (this.messages[i].msg === this.pairingCompleteMsg) {\n            this.messages.splice(i, 1);\n            break;\n          }\n        }\n      },\n      delay ? 500 : 0\n    );\n  }\n  clear() {\n    this.messages = [];\n  }\n  async startSpinner(text: string = '') {\n    this.spinnerText = text;\n    this.spinnerOn = true;\n  }\n  async stopSpinner(): Promise<void> {\n    this.spinnerText = '';\n    this.spinnerOn = false;\n    return;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of, Observable, MonoTypeOperatorFunction, from as fromPromise, iif, throwError } from 'rxjs';\nimport { catchError, retryWhen, flatMap, timeout, delay as delayOperator, debounceTime, concatMap } from 'rxjs/operators';\nimport { Buffer } from 'buffer';\nimport { blake2b } from 'blakejs';\nimport { sign as naclSign } from 'tweetnacl';\nimport * as Bs58check from 'bs58check';\nimport * as bip39 from 'bip39';\nimport Big from 'big.js';\nimport { localForger } from '@taquito/local-forging';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { ErrorHandlingPipe } from '../../pipes/error-handling.pipe';\nimport * as elliptic from 'elliptic';\nimport { instantiateSecp256k1, hexToBin, binToHex } from '@bitauth/libauth';\nimport { TokenService } from '../token/token.service';\nimport { isEqual } from 'lodash';\n\nconst httpOptions = { headers: { 'Content-Type': 'application/json' } };\n\nexport interface KeyPair {\n  sk: string | null;\n  pk: string | null;\n  pkh: string;\n}\n@Injectable()\nexport class OperationService {\n  nodeURL = CONSTANTS.NODE_URL;\n  prefix = {\n    tz1: new Uint8Array([6, 161, 159]),\n    tz2: new Uint8Array([6, 161, 161]),\n    tz3: new Uint8Array([6, 161, 164]),\n    edpk: new Uint8Array([13, 15, 37, 217]),\n    sppk: new Uint8Array([3, 254, 226, 86]),\n    edsk: new Uint8Array([43, 246, 78, 7]),\n    spsk: new Uint8Array([17, 162, 224, 201]),\n    edsig: new Uint8Array([9, 245, 205, 134, 18]),\n    spsig: new Uint8Array([13, 115, 101, 19, 63]),\n    sig: new Uint8Array([4, 130, 43]),\n    o: new Uint8Array([5, 116]),\n    B: new Uint8Array([1, 52]),\n    TZ: new Uint8Array([3, 99, 29]),\n    KT: new Uint8Array([2, 90, 121])\n  };\n  microTez = new Big(1000000);\n  feeHardCap = 100; //tez\n  constructor(private http: HttpClient, private errorHandlingPipe: ErrorHandlingPipe, private tokenService: TokenService) {}\n  /*\n    Returns an observable for the activation of an ICO identity\n  */\n  activate(pkh: string, secret: string): Observable<any> {\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          const fop: any = {\n            branch: header.hash,\n            contents: [\n              {\n                kind: 'activate_account',\n                pkh: pkh,\n                secret: secret\n              }\n            ]\n          };\n          return this.postRpc('chains/main/blocks/head/helpers/forge/operations', fop).pipe(\n            flatMap((opbytes: any) => {\n              const sopbytes: string = opbytes + Array(129).join('0');\n              fop.protocol = header.protocol;\n              fop.signature = 'edsigtXomBKi5CTRf5cjATJWSyaRvhfYNHqSUGrn4SdbYRcGwQrUGjzEfQDTuqHhuA8b2d8NarZjz8TRf65WkpQmo423BtomS8Q';\n              return this.postRpc('chains/main/blocks/head/helpers/preapply/operations', [fop]).pipe(\n                flatMap((preApplyResult: any) => {\n                  console.log(JSON.stringify(preApplyResult));\n                  return this.postRpc('injection/operation', JSON.stringify(sopbytes)).pipe(\n                    flatMap((final: any) => {\n                      return this.opCheck(final);\n                    })\n                  );\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  opCheck(final: any, newPkh: string = null): Observable<any> {\n    if (typeof final === 'string' && final.length === 51) {\n      return of({\n        success: true,\n        payload: {\n          opHash: final,\n          newPkh: newPkh\n        }\n      });\n    } else {\n      return of({\n        success: false,\n        payload: {\n          opHash: null,\n          msg: final\n        }\n      });\n    }\n  }\n  /*\n    Returns an observable for the origination of new accounts.\n  */\n  originate(origination: any, fee: number = 0, keys: KeyPair): Observable<any> {\n    console.log(fee, origination);\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/counter`).pipe(\n            flatMap((actions: number) => {\n              return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/manager_key`).pipe(\n                flatMap((manager: any) => {\n                  if (fee > this.feeHardCap) {\n                    throw new Error('TooHighFee');\n                  }\n                  const counter: number = Number(actions);\n                  const fop = this.createOriginationObject(header.hash, counter, manager, origination, fee, keys.pk, keys.pkh);\n                  return this.operation(fop, header, keys, true);\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  createOriginationObject(hash: string, counter: number, manager: string, origination: any, fee: number, pk: string, pkh: string): any {\n    const fop: any = {\n      branch: hash,\n      contents: []\n    };\n    const gas_limit = origination.gasLimit.toString();\n    const storage_limit = origination.storageLimit.toString();\n    if (manager === null) {\n      // Reveal\n      fop.contents.push({\n        kind: 'reveal',\n        source: pkh,\n        fee: '0',\n        counter: (++counter).toString(),\n        gas_limit: '1000',\n        storage_limit: '0',\n        public_key: pk\n      });\n    }\n    fop.contents.push({\n      kind: 'origination',\n      source: pkh,\n      fee: this.microTez.times(fee).toString(),\n      counter: (++counter).toString(),\n      gas_limit,\n      storage_limit,\n      balance: this.microTez.times(origination.balance).toString(),\n      script: origination.script\n    });\n    return fop;\n  }\n  /*\n    Returns an observable for the transaction of tez.\n  */\n  transfer(from: string, transactions: any, fee: number, keys: KeyPair, tokenTransfer: string = ''): Observable<any> {\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/counter`).pipe(\n            flatMap((actions: any) => {\n              return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/manager_key`).pipe(\n                flatMap((manager: any) => {\n                  if (fee > this.feeHardCap) {\n                    throw new Error('TooHighFee');\n                  }\n                  const counter: number = Number(actions);\n                  const fop = this.createTransactionObject(header.hash, counter, manager, transactions, keys.pkh, keys.pk, from, fee, tokenTransfer);\n                  return this.operation(fop, header, keys);\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  createTransactionObject(\n    hash: string,\n    counter: number,\n    manager: string,\n    transactions: any,\n    pkh: string,\n    pk: string,\n    from: string,\n    fee: number,\n    tokenTransfer: string\n  ): any {\n    const fop: any = {\n      branch: hash,\n      contents: []\n    };\n    if (manager === null) {\n      // Reveal\n      fop.contents.push({\n        kind: 'reveal',\n        source: pkh,\n        fee: '0',\n        counter: (++counter).toString(),\n        gas_limit: '1000',\n        storage_limit: '0',\n        public_key: pk\n      });\n    }\n    for (let i = 0; i < transactions.length; i++) {\n      const currentFee = i === transactions.length - 1 ? this.microTez.times(fee).toString() : '0';\n      const gasLimit = transactions[i].gasLimit.toString();\n      const storageLimit = transactions[i].storageLimit.toString();\n      if (tokenTransfer) {\n        console.log('Invoke contract: ' + tokenTransfer);\n        let invocation: any;\n        const { kind, decimals, contractAddress, id } = this.tokenService.getAsset(tokenTransfer);\n        const txAmount = Big(10 ** decimals).times(transactions[i].amount);\n        if (!txAmount.mod(1).eq(0)) {\n          throw new Error(`the amount ${transactions[i].amount} is not within ${decimals} decimals`);\n        }\n        if (kind === 'FA1.2') {\n          invocation = this.getFA12Transaction(pkh, transactions[i].destination, txAmount.toFixed(0));\n        } else if (kind === 'FA2') {\n          invocation = this.getFA2Transaction(pkh, transactions[i].destination, txAmount.toFixed(0), id);\n        } else {\n          throw new Error('Unrecognized token kind');\n        }\n        fop.contents.push({\n          kind: 'transaction',\n          source: pkh,\n          fee: currentFee,\n          counter: (++counter).toString(),\n          gas_limit: gasLimit,\n          storage_limit: storageLimit,\n          amount: '0',\n          destination: contractAddress,\n          parameters: invocation\n        });\n      } else if (from.slice(0, 2) === 'tz') {\n        const transactionOp: any = {\n          kind: 'transaction',\n          source: from,\n          fee: currentFee,\n          counter: (++counter).toString(),\n          gas_limit: gasLimit,\n          storage_limit: storageLimit,\n          amount: this.microTez.times(transactions[i].amount).toString(),\n          destination: transactions[i].destination\n        };\n        if (transactions[i].parameters) {\n          transactionOp.parameters = transactions[i].parameters;\n        }\n        fop.contents.push(transactionOp);\n      } else if (from.slice(0, 2) === 'KT') {\n        if (transactions[i].destination.slice(0, 2) === 'tz') {\n          const managerTransaction = this.getContractPkhTransaction(transactions[i].destination, this.microTez.times(transactions[i].amount).toString());\n          fop.contents.push({\n            kind: 'transaction',\n            source: pkh,\n            fee: currentFee,\n            counter: (++counter).toString(),\n            gas_limit: gasLimit,\n            storage_limit: storageLimit,\n            amount: '0',\n            destination: from,\n            parameters: managerTransaction\n          });\n        } else if (transactions[i].destination.slice(0, 2) === 'KT') {\n          const managerTransaction = this.getContractKtTransaction(transactions[i].destination, this.microTez.times(transactions[i].amount).toString());\n          fop.contents.push({\n            kind: 'transaction',\n            source: pkh,\n            fee: currentFee,\n            counter: (++counter).toString(),\n            gas_limit: gasLimit,\n            storage_limit: storageLimit,\n            amount: '0',\n            destination: from,\n            parameters: managerTransaction\n          });\n        }\n      }\n    }\n    return fop;\n  }\n  /*\n    Returns an observable for the delegation of baking rights.\n  */\n  delegate(from: string, to: string, fee: number = 0, keys: KeyPair): Observable<any> {\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/counter`).pipe(\n            flatMap((actions: any) => {\n              return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/manager_key`).pipe(\n                flatMap((manager: any) => {\n                  if (fee > this.feeHardCap) {\n                    throw new Error('TooHighFee');\n                  }\n                  let counter: number = Number(actions);\n                  let delegationOp: any;\n                  if (from.slice(0, 2) === 'tz') {\n                    delegationOp = {\n                      kind: 'delegation',\n                      source: from,\n                      fee: this.microTez.times(fee).toString(),\n                      counter: (++counter).toString(),\n                      gas_limit: '1000',\n                      storage_limit: '0'\n                    };\n                    if (to !== '') {\n                      delegationOp.delegate = to;\n                    }\n                  } else if (from.slice(0, 2) === 'KT') {\n                    delegationOp = {\n                      kind: 'transaction',\n                      source: keys.pkh,\n                      fee: this.microTez.times(fee).toString(),\n                      counter: (++counter).toString(),\n                      gas_limit: '4380',\n                      storage_limit: '0',\n                      amount: '0',\n                      destination: from,\n                      parameters: to !== '' ? this.getContractDelegation(to) : this.getContractUnDelegation()\n                    };\n                  }\n                  const fop: any = {\n                    branch: header.hash,\n                    contents: [delegationOp]\n                  };\n                  if (manager === null) {\n                    fop.contents[1] = fop.contents[0];\n                    fop.contents[0] = {\n                      kind: 'reveal',\n                      source: keys.pkh,\n                      fee: '0',\n                      counter: counter.toString(),\n                      gas_limit: '1000',\n                      storage_limit: '0',\n                      public_key: keys.pk\n                    };\n                    fop.contents[1].counter = (Number(fop.contents[1].counter) + 1).toString();\n                  }\n                  return this.operation(fop, header, keys);\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  /*\n  Help function for operations\n  */\n  operation(fop: any, header: any, keys: KeyPair, origination: boolean = false): Observable<any> {\n    console.log('fop to send: ' + JSON.stringify(fop));\n    return this.postRpc('chains/main/blocks/head/helpers/forge/operations', fop).pipe(\n      flatMap((opbytes: any) => {\n        return this.localForge(fop).pipe(\n          flatMap((localOpbytes: string) => {\n            if (opbytes !== localOpbytes) {\n              throw new Error('ValidationError');\n            }\n            if (!keys.sk) {\n              fop.signature = 'edsigtXomBKi5CTRf5cjATJWSyaRvhfYNHqSUGrn4SdbYRcGwQrUGjzEfQDTuqHhuA8b2d8NarZjz8TRf65WkpQmo423BtomS8Q';\n              return this.postRpc('chains/main/blocks/head/helpers/scripts/run_operation', { operation: fop, chain_id: header.chain_id }).pipe(\n                flatMap((applied: any) => {\n                  console.log('applied: ' + JSON.stringify(applied));\n                  this.checkApplied([applied]);\n                  return of({\n                    success: true,\n                    payload: {\n                      unsignedOperation: opbytes\n                    }\n                  });\n                })\n              );\n            } else {\n              fop.protocol = header.protocol;\n              const signed = this.sign('03' + opbytes, keys.sk);\n              const sopbytes = signed.sbytes;\n              fop.signature = signed.edsig;\n              return this.postRpc('chains/main/blocks/head/helpers/preapply/operations', [fop]).pipe(\n                flatMap((applied: any) => {\n                  console.log('applied: ' + JSON.stringify(applied));\n                  this.checkApplied(applied);\n                  console.log('sop: ' + sopbytes);\n                  return this.postRpc('injection/operation', JSON.stringify(sopbytes))\n                    .pipe(timeout(30000))\n                    .pipe(\n                      flatMap((final: any) => {\n                        let newPkh = null;\n                        if (origination) {\n                          newPkh = applied[0].contents[fop.contents.length - 1].metadata.operation_result.originated_contracts[0];\n                        }\n                        return this.opCheck(final, newPkh);\n                      })\n                    );\n                })\n              );\n            }\n          })\n        );\n      })\n    );\n  }\n  /*\n    Broadcast a signed operation to the network\n  */\n  broadcast(sopbytes: string): Observable<any> {\n    console.log('Broadcast...');\n    const opbytes = sopbytes.slice(0, sopbytes.length - 128);\n    const edsig = this.sig2edsig(sopbytes.slice(sopbytes.length - 128));\n    return fromPromise(localForger.parse(opbytes))\n      .pipe(\n        flatMap((fop: any) => {\n          fop.signature = edsig;\n          return this.getHeader().pipe(\n            flatMap((header: any) => {\n              fop.protocol = header.protocol;\n              return this.postRpc('chains/main/blocks/head/helpers/preapply/operations', [fop]).pipe(\n                flatMap((parsed: any) => {\n                  let newPkh = null;\n                  for (let i = 0; i < parsed[0].contents.length; i++) {\n                    if (parsed[0].contents[i].kind === 'origination') {\n                      newPkh = parsed[0].contents[i].metadata.operation_result.originated_contracts[0];\n                    }\n                  }\n                  return this.postRpc('injection/operation', JSON.stringify(sopbytes)).pipe(\n                    flatMap((final: any) => {\n                      return this.opCheck(final, newPkh);\n                    })\n                  );\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  torusKeyLookup(tz2address: string): Observable<any> {\n    // Make it into Promise\n    // Zero padding\n    if (tz2address.length !== 36 || tz2address.slice(0, 3) !== 'tz2') {\n      throw new Error('InvalidTorusAddress');\n    }\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${tz2address}/manager_key`).pipe(\n      flatMap((manager: any) => {\n        if (manager === null) {\n          return of({ noReveal: true });\n        } else {\n          return fromPromise(this.decompress(manager)).pipe(\n            flatMap((pk: any) => {\n              const torusReq = {\n                jsonrpc: '2.0',\n                method: 'KeyLookupRequest',\n                id: 10,\n                params: {\n                  pub_key_X: pk.X,\n                  pub_key_Y: pk.Y\n                }\n              };\n              const url = CONSTANTS.NETWORK === 'mainnet' ? 'https://torus-19.torusnode.com/jrpc' : 'https://teal-15-1.torusnode.com/jrpc';\n              return this.http.post(url, JSON.stringify(torusReq), httpOptions).pipe(\n                flatMap((ans: any) => {\n                  try {\n                    if (ans.result.PublicKey.X === pk.X && ans.result.PublicKey.Y === pk.Y) {\n                      return of(ans);\n                    } else {\n                      return of(null);\n                    }\n                  } catch {\n                    return of(null);\n                  }\n                })\n              );\n            })\n          );\n        }\n      })\n    );\n  }\n  checkApplied(applied: any) {\n    let failed = false;\n    for (let i = 0; i < applied[0].contents.length; i++) {\n      if (applied[0].contents[i].metadata.operation_result.status !== 'applied') {\n        failed = true;\n        if (applied[0].contents[i].metadata.operation_result.errors) {\n          console.log('Error in operation_result');\n          throw applied[0].contents[i].metadata.operation_result.errors[applied[0].contents[i].metadata.operation_result.errors.length - 1];\n        } else if (applied[0].contents[i].metadata.internal_operation_results && applied[0].contents[i].metadata.internal_operation_results[0].result.errors) {\n          console.log('Error in internal_operation_results');\n          throw applied[0].contents[i].metadata.internal_operation_results[0].result.errors[\n            applied[0].contents[i].metadata.internal_operation_results[0].result.errors.length - 1\n          ];\n        }\n      }\n    }\n    if (failed) {\n      throw new Error('Uncaught error in preapply');\n    }\n  }\n  errHandler(error: any): Observable<any> {\n    console.log(error);\n    if (error.error && typeof error.error === 'string') {\n      // parsing errors\n      error = error.error;\n      const lines = error.split('\\n').map((line: string) => {\n        return line.trim();\n      });\n      if (lines?.length) {\n        for (const i in lines) {\n          if (lines[i].startsWith('At /') && !lines[i].startsWith('At /kind')) {\n            const n = Number(i) + 1;\n            if (lines[n]) {\n              error = `${lines[i]} ${lines[n]}`;\n            }\n          }\n        }\n      }\n    }\n    if (error.error && error.error[0]) {\n      error = error.error[0];\n    }\n    if (error.message) {\n      error = this.errorHandlingPipe.transform(error.message);\n    } else if (error.id) {\n      if (error.with) {\n        error = this.errorHandlingPipe.transform(error.id, error.with, error?.location);\n      } else if (error.id === 'failure' && error.msg) {\n        error = this.errorHandlingPipe.transform(error.msg);\n      } else {\n        error = this.errorHandlingPipe.transform(error.id);\n      }\n    } else if (error.statusText) {\n      error = error.statusText;\n    } else if (typeof error === 'string') {\n      error = this.errorHandlingPipe.transform(error);\n    } else {\n      console.warn('Error not categorized', error);\n      error = 'Unrecogized error';\n    }\n    return of({\n      success: false,\n      payload: {\n        msg: error\n      }\n    });\n  }\n  // Local forge with Taquito\n  localForge(operation: any): Observable<string> {\n    return fromPromise(localForger.forge(operation)).pipe(\n      flatMap((localForgedBytes: string) => {\n        return of(localForgedBytes);\n      })\n    );\n  }\n  getHeader(): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head~3/header`);\n  }\n  getBalance(pkh: string): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/balance`)\n      .pipe(\n        flatMap((balance: any) => {\n          return of({\n            success: true,\n            payload: {\n              balance: balance\n            }\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  getDelegate(pkh: string): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}`)\n      .pipe(\n        flatMap((contract: any) => {\n          let delegate = '';\n          if (contract.delegate) {\n            delegate = contract.delegate;\n          }\n          return of({\n            success: true,\n            payload: {\n              delegate: delegate\n            }\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  getVotingRights(): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/votes/listings`)\n      .pipe(\n        flatMap((listings: any) => {\n          return of({\n            success: true,\n            payload: listings\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  isRevealed(pkh: string): Observable<boolean> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/manager_key`)\n      .pipe(\n        flatMap((manager: any) => {\n          if (manager === null) {\n            return of(false);\n          } else {\n            return of(true);\n          }\n        })\n      )\n      .pipe(\n        catchError((err) => {\n          return of(true);\n        })\n      ); // conservative action\n  }\n  getManager(pkh: string): Observable<string> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/manager_key`).pipe(\n      flatMap((pk: string) => {\n        return of(pk ?? '');\n      })\n    );\n  }\n  getAccount(pkh: string): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}`)\n      .pipe(\n        flatMap((contract: any) => {\n          let delegate = '';\n          if (contract.delegate) {\n            delegate = contract.delegate;\n          }\n          return of({\n            success: true,\n            payload: {\n              balance: contract.balance,\n              manager: contract.manager,\n              delegate: delegate,\n              counter: contract.counter\n            }\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  getVerifiedOpBytes(operationLevel, operationHash, pkh, pk): Observable<string> {\n    return this.getRpc(`chains/main/blocks/${operationLevel}/operation_hashes`).pipe(\n      flatMap((opHashes: any) => {\n        const opIndex = opHashes[3].findIndex((a) => a === operationHash);\n        return this.getRpc(`chains/main/blocks/${operationLevel}/operations`).pipe(\n          flatMap((op: any) => {\n            let ans = '';\n            op = op[3][opIndex];\n            const sig = op.signature;\n            delete op.chain_id;\n            delete op.signature;\n            delete op.hash;\n            delete op.protocol;\n            for (let i = 0; i < op.contents.length; i++) {\n              delete op.contents[i].metadata;\n              if (op.contents[i].managerPubkey) {\n                // Fix for mainnet\n                op.contents[i].manager_pubkey = op.contents[i].managerPubkey;\n                delete op.contents[i].managerPubkey;\n              }\n            }\n            return this.postRpc('chains/main/blocks/head/helpers/forge/operations', op).pipe(\n              flatMap((opBytes: any) => {\n                if (this.pk2pkh(pk) === pkh) {\n                  if (this.verify(opBytes, sig, pk)) {\n                    ans = opBytes + this.buf2hex(this.b58cdecode(sig, this.prefix.sig));\n                  } else {\n                    throw new Error('InvalidSignature');\n                  }\n                } else {\n                  throw new Error('InvalidPublicKey');\n                }\n                return of(ans);\n              })\n            );\n          })\n        );\n      })\n    );\n  }\n  getConstants(): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/constants`);\n  }\n  seed2keyPair(seed: Buffer): KeyPair {\n    if (!seed) {\n      throw new Error('NullSeed');\n    }\n    const keyPair = naclSign.keyPair.fromSeed(seed);\n    return {\n      sk: this.b58cencode(keyPair.secretKey, this.prefix.edsk),\n      pk: this.b58cencode(keyPair.publicKey, this.prefix.edpk),\n      pkh: this.b58cencode(blake2b(keyPair.publicKey, null, 20), this.prefix.tz1)\n    };\n  }\n  mnemonic2seed(mnemonic: string, passphrase: string = '') {\n    if (!this.validMnemonic(mnemonic)) {\n      throw new Error('InvalidMnemonic');\n    }\n    return bip39.mnemonicToSeedSync(mnemonic, passphrase).slice(0, 32);\n  }\n  mnemonic2entropy(mnemonic: string, passphrase: string = '') {\n    if (!this.validMnemonic(mnemonic)) {\n      throw new Error('InvalidMnemonic');\n    }\n    return bip39.mnemonicToEntropy(mnemonic);\n  }\n  validMnemonic(mnemonic: string) {\n    return bip39.validateMnemonic(mnemonic);\n  }\n  validAddress(address: string) {\n    try {\n      this.b58cdecode(address, this.prefix.tz1);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  pk2pkh(pk: string): string {\n    if (pk.length === 54 && pk.slice(0, 4) === 'edpk') {\n      const pkDecoded = this.b58cdecode(pk, this.prefix.edpk);\n      return this.b58cencode(blake2b(pkDecoded, null, 20), this.prefix.tz1);\n    } else if (pk.length === 55 && pk.slice(0, 4) === 'sppk') {\n      const pkDecoded = this.b58cdecode(pk, this.prefix.edpk);\n      return this.b58cencode(blake2b(pkDecoded, null, 20), this.prefix.tz2);\n    }\n    throw new Error('Invalid public key');\n  }\n  spPrivKeyToKeyPair(secretKey: string) {\n    let sk;\n    if (secretKey.match(/^[0-9a-f]{64}$/g)) {\n      sk = this.b58cencode(this.hex2buf(secretKey), this.prefix.spsk);\n    } else if (secretKey.match(/^spsk[1-9a-km-zA-HJ-NP-Z]{50}$/g)) {\n      sk = secretKey;\n    } else {\n      throw new Error('Invalid private key');\n    }\n    const keyPair = new elliptic.ec('secp256k1').keyFromPrivate(new Uint8Array(this.b58cdecode(sk, this.prefix.spsk)));\n    const yArray = keyPair.getPublic().getY().toArray();\n    const prefixVal = yArray[yArray.length - 1] % 2 ? 3 : 2; // Y odd / even\n    const pad = new Array(32).fill(0); // Zero-padding\n    const publicKey = new Uint8Array([prefixVal].concat(pad.concat(keyPair.getPublic().getX().toArray()).slice(-32)));\n    const pk = this.b58cencode(publicKey, this.prefix.sppk);\n    if (yArray.length < 32 && prefixVal === 3 && this.isInvertedPk(pk)) {\n      return this.spPrivKeyToKeyPair(this.invertSpsk(sk));\n    }\n    const pkh = this.pk2pkh(pk);\n    return { sk, pk, pkh };\n  }\n  isInvertedPk(pk: string): boolean {\n    /*\n      Detect keys with flipped sign and correct them.\n    */\n    const invertedPks = [\n      'sppk7cqh7BbgUMFh4yh95mUwEeg5aBPG1MBK1YHN7b9geyygrUMZByr', // test variable\n      'sppk7bMTva1MwF7cXjrcfoj6XVfcYgjrVaR9JKP3JxvPB121Ji5ftHT',\n      'sppk7bLtXf9CAVZh5jjDACezPnuwHf9CgVoAneNXQFgHknNtCyE5k8A'\n    ];\n    return invertedPks.includes(pk);\n  }\n  invertSpsk(sk: string) {\n    const x = new Uint8Array([...new Uint8Array(32).fill(0), ...this.b58cdecode(sk, this.prefix.spsk)]).slice(-32);\n    const p = this.hex2buf('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141'.toLowerCase());\n    let inv = []; // p - x\n    let remainder = 0;\n    for (let i = 31; i >= 0; i--) {\n      let sub = p[i] - x[i] - remainder;\n      if (sub < 0) {\n        sub += 256;\n        remainder = 1;\n      } else {\n        remainder = 0;\n      }\n      inv.push(sub);\n    }\n    if (remainder) {\n      throw new Error('Invalid X');\n    }\n    inv = inv.reverse();\n    return this.buf2hex(inv);\n  }\n  spPointsToPkh(pubX: string, pubY: string): string {\n    const key = new elliptic.ec('secp256k1').keyFromPublic({\n      x: pubX,\n      y: pubY\n    });\n    const yArray = key.getPublic().getY().toArray();\n    const prefixVal = yArray[yArray.length - 1] % 2 ? 3 : 2;\n    const pad = new Array(32).fill(0);\n    let publicKey = new Uint8Array([prefixVal].concat(pad.concat(key.getPublic().getX().toArray()).slice(-32)));\n    let pk = this.b58cencode(publicKey, this.prefix.sppk);\n    if (yArray.length < 32 && prefixVal === 3 && this.isInvertedPk(pk)) {\n      publicKey = new Uint8Array([2].concat(pad.concat(key.getPublic().getX().toArray()).slice(-32)));\n      pk = this.b58cencode(publicKey, this.prefix.sppk);\n    }\n    const pkh = this.pk2pkh(pk);\n    return pkh;\n  }\n  async decompress(pk: string): Promise<any> {\n    const decodedPk = this.b58cdecode(pk, this.prefix.sppk);\n    const hexPk = this.buf2hex(decodedPk);\n    const secp256k1 = await instantiateSecp256k1();\n    const compressed = hexToBin(hexPk);\n    const uncompressed = secp256k1.uncompressPublicKey(compressed);\n    const xy = binToHex(uncompressed).slice(2);\n    return { X: xy.slice(0, 64), Y: xy.slice(64, 128) };\n  }\n  hex2pk(hex: string): string {\n    return this.b58cencode(this.hex2buf(hex.slice(2, 66)), this.prefix.edpk);\n  }\n  hex2buf(hex) {\n    return new Uint8Array(\n      hex.match(/[\\da-f]{2}/gi).map(function (h) {\n        return parseInt(h, 16);\n      })\n    );\n  }\n  buf2hex(buffer) {\n    const byteArray = new Uint8Array(buffer),\n      hexParts = [];\n    for (let i = 0; i < byteArray.length; i++) {\n      const hex = byteArray[i].toString(16);\n      const paddedHex = ('00' + hex).slice(-2);\n      hexParts.push(paddedHex);\n    }\n    return hexParts.join('');\n  }\n  b58cencode(payload: any, prefixx?: Uint8Array) {\n    const n = new Uint8Array(prefixx.length + payload.length);\n    n.set(prefixx);\n    n.set(payload, prefixx.length);\n    return Bs58check.encode(Buffer.from(this.buf2hex(n), 'hex'));\n  }\n  b58cdecode(enc, prefixx) {\n    let n = Bs58check.decode(enc);\n    n = n.slice(prefixx.length);\n    return n;\n  }\n  ledgerPreHash(opbytes: string): string {\n    return this.buf2hex(blake2b(this.hex2buf(opbytes), null, 32));\n  }\n  sign(bytes: string, sk: string): any {\n    if (!['03', '05'].includes(bytes.slice(0, 2))) {\n      throw new Error('Invalid prefix');\n    }\n    if (sk.slice(0, 4) === 'spsk') {\n      const hash = blake2b(this.hex2buf(bytes), null, 32);\n      bytes = bytes.slice(2);\n      const key = new elliptic.ec('secp256k1').keyFromPrivate(new Uint8Array(this.b58cdecode(sk, this.prefix.spsk)));\n      let sig = key.sign(hash, { canonical: true });\n      const pad = new Array(32).fill(0);\n      const r = pad.concat(sig.r.toArray()).slice(-32);\n      const s = pad.concat(sig.s.toArray()).slice(-32);\n      sig = new Uint8Array(r.concat(s));\n      const spsig = this.b58cencode(sig, this.prefix.spsig);\n      const sbytes = bytes + this.buf2hex(sig);\n      return {\n        bytes: bytes,\n        sig: sig,\n        edsig: spsig,\n        sbytes: sbytes\n      };\n    } else {\n      const hash = blake2b(this.hex2buf(bytes), null, 32);\n      bytes = bytes.slice(2);\n      const sig = naclSign.detached(hash, this.b58cdecode(sk, this.prefix.edsk));\n      const edsig = this.b58cencode(sig, this.prefix.edsig);\n      const sbytes = bytes + this.buf2hex(sig);\n      return {\n        bytes: bytes,\n        sig: sig,\n        edsig: edsig,\n        sbytes: sbytes\n      };\n    }\n  }\n  hexsigToEdsig(hex: string): string {\n    return this.b58cencode(this.hex2buf(hex), this.prefix.edsig);\n  }\n  verify(bytes: string, sig: string, pk: string): Boolean {\n    console.log('bytes', bytes);\n    const hash = blake2b(this.hex2buf(bytes), null, 32);\n    const signature = this.b58cdecode(sig, this.prefix.edsig);\n    const publicKey = this.b58cdecode(pk, this.prefix.edpk);\n    return naclSign.detached.verify(signature, hash, publicKey);\n  }\n  sig2edsig(sig: string): any {\n    return this.b58cencode(this.hex2buf(sig), this.prefix.edsig);\n  }\n  decodeString(bytes: string): string {\n    return Buffer.from(this.hex2buf(bytes)).toString('utf-8');\n  }\n  zarithDecode(hex: string): any {\n    let count = 0;\n    let value = 0;\n    while (1) {\n      const byte = Number('0x' + hex.slice(0 + count * 2, 2 + count * 2));\n      value += (byte & 127) * 128 ** count;\n      count++;\n      if ((byte & 128) !== 128) {\n        break;\n      }\n    }\n    return {\n      value: value,\n      count: count\n    };\n  }\n  zarithDecodeInt(hex: string): any {\n    let count = 0;\n    let value = Big(0);\n    while (1) {\n      const byte = Number('0x' + hex.slice(0 + count * 2, 2 + count * 2));\n      if (count === 0) {\n        value = Big((byte & 63) * 128 ** count).add(value);\n      } else {\n        value = Big(((byte & 127) * 2) >> 1)\n          .times(64 * 128 ** (count - 1))\n          .add(value);\n      }\n      count++;\n      if ((byte & 128) !== 128) {\n        break;\n      }\n    }\n    return {\n      value: value,\n      count: count\n    };\n  }\n  getContractDelegation(pkh: string) {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        {\n          prim: 'NIL',\n          args: [{ prim: 'operation' }]\n        },\n        {\n          prim: 'PUSH',\n          args: [\n            { prim: 'key_hash' },\n            {\n              string: pkh\n            }\n          ]\n        },\n        { prim: 'SOME' },\n        { prim: 'SET_DELEGATE' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getContractUnDelegation() {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        {\n          prim: 'NIL',\n          args: [{ prim: 'operation' }]\n        },\n        {\n          prim: 'NONE',\n          args: [{ prim: 'key_hash' }]\n        },\n        { prim: 'SET_DELEGATE' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getContractPkhTransaction(to: string, amount: string) {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\n        {\n          prim: 'PUSH',\n          args: [\n            { prim: 'key_hash' },\n            {\n              string: to\n            }\n          ]\n        },\n        { prim: 'IMPLICIT_ACCOUNT' },\n        {\n          prim: 'PUSH',\n          args: [{ prim: 'mutez' }, { int: amount }]\n        },\n        { prim: 'UNIT' },\n        { prim: 'TRANSFER_TOKENS' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getContractKtTransaction(to: string, amount: string) {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\n        {\n          prim: 'PUSH',\n          args: [{ prim: 'address' }, { string: to }]\n        },\n        { prim: 'CONTRACT', args: [{ prim: 'unit' }] },\n        [\n          {\n            prim: 'IF_NONE',\n            args: [[[{ prim: 'UNIT' }, { prim: 'FAILWITH' }]], []]\n          }\n        ],\n        {\n          prim: 'PUSH',\n          args: [{ prim: 'mutez' }, { int: amount }]\n        },\n        { prim: 'UNIT' },\n        { prim: 'TRANSFER_TOKENS' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getManagerScript(pkh: string) {\n    let pkHex: string;\n    if (pkh.slice(0, 2) === 'tz') {\n      pkHex = '00' + this.buf2hex(this.b58cdecode(pkh, this.prefix.tz1));\n    } else {\n      pkHex = pkh;\n    }\n    return {\n      code: [\n        {\n          prim: 'parameter',\n          args: [\n            {\n              prim: 'or',\n              args: [\n                {\n                  prim: 'lambda',\n                  args: [\n                    {\n                      prim: 'unit'\n                    },\n                    {\n                      prim: 'list',\n                      args: [\n                        {\n                          prim: 'operation'\n                        }\n                      ]\n                    }\n                  ],\n                  annots: ['%do']\n                },\n                {\n                  prim: 'unit',\n                  annots: ['%default']\n                }\n              ]\n            }\n          ]\n        },\n        {\n          prim: 'storage',\n          args: [\n            {\n              prim: 'key_hash'\n            }\n          ]\n        },\n        {\n          prim: 'code',\n          args: [\n            [\n              [\n                [\n                  {\n                    prim: 'DUP'\n                  },\n                  {\n                    prim: 'CAR'\n                  },\n                  {\n                    prim: 'DIP',\n                    args: [\n                      [\n                        {\n                          prim: 'CDR'\n                        }\n                      ]\n                    ]\n                  }\n                ]\n              ],\n              {\n                prim: 'IF_LEFT',\n                args: [\n                  [\n                    {\n                      prim: 'PUSH',\n                      args: [\n                        {\n                          prim: 'mutez'\n                        },\n                        {\n                          int: '0'\n                        }\n                      ]\n                    },\n                    {\n                      prim: 'AMOUNT'\n                    },\n                    [\n                      [\n                        {\n                          prim: 'COMPARE'\n                        },\n                        {\n                          prim: 'EQ'\n                        }\n                      ],\n                      {\n                        prim: 'IF',\n                        args: [\n                          [],\n                          [\n                            [\n                              {\n                                prim: 'UNIT'\n                              },\n                              {\n                                prim: 'FAILWITH'\n                              }\n                            ]\n                          ]\n                        ]\n                      }\n                    ],\n                    [\n                      {\n                        prim: 'DIP',\n                        args: [\n                          [\n                            {\n                              prim: 'DUP'\n                            }\n                          ]\n                        ]\n                      },\n                      {\n                        prim: 'SWAP'\n                      }\n                    ],\n                    {\n                      prim: 'IMPLICIT_ACCOUNT'\n                    },\n                    {\n                      prim: 'ADDRESS'\n                    },\n                    {\n                      prim: 'SENDER'\n                    },\n                    [\n                      [\n                        {\n                          prim: 'COMPARE'\n                        },\n                        {\n                          prim: 'EQ'\n                        }\n                      ],\n                      {\n                        prim: 'IF',\n                        args: [\n                          [],\n                          [\n                            [\n                              {\n                                prim: 'UNIT'\n                              },\n                              {\n                                prim: 'FAILWITH'\n                              }\n                            ]\n                          ]\n                        ]\n                      }\n                    ],\n                    {\n                      prim: 'UNIT'\n                    },\n                    {\n                      prim: 'EXEC'\n                    },\n                    {\n                      prim: 'PAIR'\n                    }\n                  ],\n                  [\n                    {\n                      prim: 'DROP'\n                    },\n                    {\n                      prim: 'NIL',\n                      args: [\n                        {\n                          prim: 'operation'\n                        }\n                      ]\n                    },\n                    {\n                      prim: 'PAIR'\n                    }\n                  ]\n                ]\n              }\n            ]\n          ]\n        }\n      ],\n      storage: { bytes: pkHex }\n    };\n  }\n  getFA12Transaction(from: string, to: string, amount: string) {\n    return {\n      entrypoint: 'transfer',\n      value: {\n        args: [\n          {\n            string: from\n          },\n          {\n            args: [\n              {\n                string: to\n              },\n              {\n                int: amount\n              }\n            ],\n            prim: 'Pair'\n          }\n        ],\n        prim: 'Pair'\n      }\n    };\n  }\n  getFA2Transaction(from: string, to: string, amount: string, id: string) {\n    return {\n      entrypoint: 'transfer',\n      value: [\n        {\n          prim: 'Pair',\n          args: [\n            {\n              string: from\n            },\n            [\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    string: to\n                  },\n                  {\n                    prim: 'Pair',\n                    args: [\n                      {\n                        int: id.toString()\n                      },\n                      {\n                        int: amount\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          ]\n        }\n      ]\n    };\n  }\n  getApproveAmountParameters(from: string, amount: string) {\n    return {\n      entrypoint: 'approve',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            int: amount\n          }\n        ]\n      }\n    };\n  }\n  getRevokeAmountParameters(from: string) {\n    return {\n      entrypoint: 'approve',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            int: '0'\n          }\n        ]\n      }\n    };\n  }\n  getXTZToTokenParameters(from: string, minimum: string, expirationTime: string) {\n    return {\n      entrypoint: 'xtzToToken',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimum\n              },\n              {\n                string: expirationTime\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n  getTokenToXTZParameters(from: string, minimumToken: string, minimumXTZ: string, expirationTime: string) {\n    return {\n      entrypoint: 'tokenToXtz',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimumToken\n              },\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    int: minimumXTZ\n                  },\n                  {\n                    string: expirationTime\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n\n  getAddLiquidityParameters(from: string, minimumLqt: string, minimumToken: string, expirationTime: string) {\n    return {\n      entrypoint: 'addLiquidity',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimumLqt\n              },\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    int: minimumToken\n                  },\n                  {\n                    string: expirationTime\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n\n  getRemoveLiquidityParameters(from: string, lqtBurn: string, minXtzWithdrawn: string, minTokensWithdrawn: string, expirationTime: string) {\n    return {\n      entrypoint: 'removeLiquidity',\n\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: lqtBurn\n              },\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    int: minXtzWithdrawn\n                  },\n                  {\n                    prim: 'Pair',\n                    args: [\n                      {\n                        int: minTokensWithdrawn\n                      },\n                      {\n                        string: expirationTime\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n\n  getTezToTokenPaymentParameters(from: string, minimumToken: string) {\n    return {\n      entrypoint: 'tezToTokenPayment',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            int: minimumToken\n          },\n          {\n            string: from\n          }\n        ]\n      }\n    };\n  }\n\n  getTokenToTezPaymentParameters(from: string, minimumXtz: string, minimumToken: string) {\n    return {\n      entrypoint: 'tokenToTezPayment',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimumToken\n              },\n              {\n                int: minimumXtz\n              }\n            ]\n          },\n          {\n            string: from\n          }\n        ]\n      }\n    };\n  }\n\n  parseTokenTransfer(op: any): { tokenId: string; to: string; amount: string } {\n    const opJson = JSON.stringify(op.parameters);\n    const addresses = opJson.match(/\\{\\\"string\\\":\\\"[^\\\"]*/g)?.map((s) => {\n      return s.slice(11);\n    });\n    const amounts = opJson.match(/\\{\\\"int\\\":\\\"[^\\\"]*/g)?.map((i) => {\n      return i.slice(8);\n    });\n    if (!addresses || !amounts) {\n      return null;\n    }\n    if (addresses.length === 2) {\n      if (amounts.length === 1) {\n        const fa12ref = this.getFA12Transaction(addresses[0], addresses[1], amounts[0]);\n        if (isEqual(fa12ref, op.parameters)) {\n          return {\n            tokenId: `${op.destination}:0`,\n            to: addresses[1],\n            amount: amounts[0]\n          };\n        }\n      } else if (amounts.length === 2) {\n        const fa2ref = this.getFA2Transaction(addresses[0], addresses[1], amounts[1], String(amounts[0]));\n        if (isEqual(fa2ref, op.parameters)) {\n          return {\n            tokenId: `${op.destination}:${amounts[0]}`,\n            to: addresses[1],\n            amount: amounts[1]\n          };\n        }\n      }\n    }\n    return null;\n  }\n  postRpc(path: string, payload: any): Observable<any> {\n    return this.http.post(`${this.nodeURL}/${path}`, payload, httpOptions).pipe(this.retryPipeline(path));\n  }\n  getRpc(path: string): Observable<any> {\n    return this.http.get(`${this.nodeURL}/${path}`).pipe(this.retryPipeline(path));\n  }\n  private retryPipeline(path: string, retries: number = 3): MonoTypeOperatorFunction<unknown> {\n    const retryWithWarning = (i, e) => {\n      if (i < retries) {\n        console.warn(`Retry ${i + 1}: ${path}`, e);\n      }\n      return of(e).pipe(delayOperator(250));\n    };\n    return retryWhen((errors) =>\n      errors.pipe(concatMap((e, i) => iif(() => i >= retries || !(e?.name === 'HttpErrorResponse'), throwError(e), retryWithWarning(i, e))))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { TokenData } from '../token/token.service';\nimport { Account } from '../wallet/wallet';\n\ninterface PrepareTokenTransfer {\n  account: Account;\n  tokenTransfer: string;\n  symbol: string;\n}\ninterface MetadataUpdated {\n  contractAddress: string;\n  id: string;\n  token: TokenData;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n  public activeAccount = new BehaviorSubject(null);\n  public walletUpdated = new BehaviorSubject(null);\n  public metadataUpdated: BehaviorSubject<MetadataUpdated>;\n  public markets: BehaviorSubject<any>;\n  public confirmedOp: Subject<string>;\n  public prepareTokenTransfer: Subject<PrepareTokenTransfer>;\n  public nftsUpdated: BehaviorSubject<any>;\n  public origin: BehaviorSubject<string>;\n  public beaconResponse: Subject<boolean>;\n  public logout: Subject<boolean>;\n  public moonpay: Subject<boolean>;\n  constructor() {\n    this.init();\n    this.logout.subscribe((o) => {\n      if (o) {\n        this.reset();\n      }\n    });\n  }\n  init() {\n    this.metadataUpdated = new BehaviorSubject<MetadataUpdated>(null);\n    this.markets = new BehaviorSubject<any>([]);\n    this.confirmedOp = new Subject<string>();\n    this.prepareTokenTransfer = new Subject<PrepareTokenTransfer>();\n    this.nftsUpdated = new BehaviorSubject<any>(undefined);\n    this.origin = new BehaviorSubject<string>(null);\n    this.beaconResponse = new Subject<boolean>();\n    this.logout = new Subject<boolean>();\n    this.moonpay = new Subject<boolean>();\n  }\n  reset() {\n    this.metadataUpdated.next(null);\n    this.markets.next([]);\n    this.nftsUpdated.next(undefined);\n  }\n}\n","import Big from 'big.js';\n\nexport class Amount {\n  decimalPlaces: number = 6;\n  internalBigInt: Big = Big(0);\n  internalNormalised: number = 0;\n\n  constructor(c: any) {\n    if (c?.rpcAmount === undefined && c?.normalisedAmount === undefined) {\n      return;\n    }\n    this.decimalPlaces = c.decimalPlaces;\n    if (!!c?.rpcAmount) {\n      let multiplierIntValue = Math.round(Math.pow(10, this.decimalPlaces));\n      this.internalNormalised = parseFloat(Big(c.rpcAmount).div(multiplierIntValue).toString() || 0);\n      this.internalBigInt = Big(c.rpcAmount);\n    } else if (!!c?.normalisedAmount) {\n      let multiplierIntValue = Math.round(Math.pow(10, this.decimalPlaces));\n      this.internalNormalised = parseFloat(Big(c.normalisedAmount).toString() || 0);\n      this.internalBigInt = Big(c.normalisedAmount).times(multiplierIntValue);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport dexterCalculations from 'dexCalcs/dist/index-mobile.min';\nimport { Amount } from './classes/Amount';\nimport Big from 'big.js';\nimport { ChartSeries } from '../../../app/components/ui/chart/chart.component';\n@Injectable({ providedIn: 'root' })\nexport class SwapLiquidityService {\n  readonly lqdTokenContract = 'KT1AafHA1C1vk959wvHWBispY9Y2f3fxBUUo';\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  public storage = {};\n  public dipdupContracts = [];\n\n  constructor() {}\n\n  async fetchContracts(offset = 0): Promise<void> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    const req = {\n      query: `{dipdupContract(where: {}, offset: ${offset}) {address, name, typename, updatedAt, createdAt}}`\n    };\n    try {\n      const response = await (\n        await fetch(baseUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json();\n      if (response?.data?.dipdupContract?.length > 0) {\n        this.dipdupContracts.concat(response.data.dipdupContract);\n        await this.fetchContracts(offset + 100);\n      } else if (offset === 0) {\n        throw new Error();\n      }\n      return;\n    } catch (e) {\n      throw new Error();\n    }\n  }\n\n  async fetchStorage(contract): Promise<void> {\n    try {\n      return await fetch(`https://api.tzkt.io/v1/contracts/${contract}/storage`)\n        .then((r) => r.json())\n        .then((r) => {\n          this.storage[contract] = {};\n          this.storage[contract].total_pool = r['lqtTotal'];\n          this.storage[contract].tez_pool = r['xtzPool'];\n          this.storage[contract].token_pool = r['tokenPool'];\n        });\n    } catch (e) {\n      throw new Error();\n    }\n  }\n\n  settings(dex: string): {\n    fee: string;\n    burn: string;\n    includeSubsidy: boolean;\n  } {\n    switch (dex) {\n      case 'liquidityBaking':\n        return { fee: '0.1', burn: '0.1', includeSubsidy: false };\n      case 'quipuswap':\n        return { fee: '0.3', burn: '0', includeSubsidy: false };\n      default:\n        return { fee: '0.3', burn: '0', includeSubsidy: false };\n    }\n  }\n\n  createPoolAmounts(): { xtzPool: Amount; tokenPool: Amount } {\n    const xtzPool = new Amount({\n      rpcAmount: parseFloat(this.storage[this.lqdContract]?.tez_pool),\n      decimalPlaces: 6\n    });\n    const tokenPool = new Amount({\n      rpcAmount: parseFloat(this.storage[this.lqdContract]?.token_pool),\n      decimalPlaces: 8\n    });\n    return { xtzPool, tokenPool };\n  }\n\n  calculateXtzToToken(xtzToSell, xtzPool, tokenPool, maxSlippage, dex): { expected; minimum; rate; impactDouble } {\n    const expected = this.xtzToTokenExpectedReturn(xtzToSell, xtzPool, tokenPool, dex);\n    const minimum = this.xtzToTokenMinimumReturn(expected, maxSlippage);\n    const rate = this.xtzToTokenExchangeRateDisplay(xtzToSell, xtzPool, tokenPool, dex);\n    const priceImpact = this.xtzToTokenPriceImpact(xtzToSell, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { expected, minimum, rate, impactDouble };\n  }\n\n  calculateXtzToTokenFromToken(tokenToSell, xtzPool, tokenPool, maxSlippage, dex): { xtz; token } {\n    const result = this.calculateTokenToXTZ(tokenToSell, xtzPool, tokenPool, maxSlippage, dex);\n    const expected = this.xtzToTokenExpectedReturn(result.expected, xtzPool, tokenPool, dex);\n    const minimum = this.xtzToTokenMinimumReturn(expected, maxSlippage);\n    const rate = this.xtzToTokenExchangeRateDisplay(result.expected, xtzPool, tokenPool, dex);\n    const priceImpact = this.xtzToTokenPriceImpact(result.expected, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { xtz: result, token: { expected, minimum, rate, impactDouble } };\n  }\n\n  calculateTokenToXTZ(tokenToSell, xtzPool, tokenPool, maxSlippage, dex): { expected; minimum; rate; impactDouble } {\n    const expected = this.tokenToXtzExpectedReturn(tokenToSell, xtzPool, tokenPool, dex);\n    const minimum = this.tokenToXtzMinimumReturn(expected, maxSlippage);\n    const rate = this.tokenToXtzExchangeRateDisplay(tokenToSell, xtzPool, tokenPool, dex);\n    const priceImpact = this.tokenToXtzPriceImpact(tokenToSell, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { expected, minimum, rate, impactDouble };\n  }\n\n  calculateTokenToXTZFromXTZ(xtzToSell, xtzPool, tokenPool, maxSlippage, dex): { xtz; token } {\n    const result = this.calculateXtzToToken(xtzToSell, xtzPool, tokenPool, maxSlippage, dex);\n    const expected = this.tokenToXtzExpectedReturn(result.expected, xtzPool, tokenPool, dex);\n    const minimum = this.tokenToXtzMinimumReturn(expected, maxSlippage);\n    const rate = this.tokenToXtzExchangeRateDisplay(result.expected, xtzPool, tokenPool, dex);\n    const priceImpact = this.tokenToXtzPriceImpact(result.expected, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { xtz: { expected, minimum, rate, impactDouble }, token: result };\n  }\n\n  calculateAddLiquidityXTZ(xtz, xtzPool, tokenPool, totalLiquidity, maxSlippage, dex): { liquidityExpected; liquidityMinimum; tokenRequired; exchangeRate } {\n    const tokenRequired = this.addLiquidityTokenRequired(xtz, xtzPool, tokenPool, dex);\n    const liquidityReturned = this.addLiquidityReturn(xtz, xtzPool, totalLiquidity, maxSlippage, dex);\n    const exchangeRate = this.xtzToTokenExchangeRateDisplay(xtz, xtzPool, tokenPool, dex);\n    return {\n      liquidityExpected: liquidityReturned?.expected,\n      liquidityMinimum: liquidityReturned?.minimum,\n      tokenRequired,\n      exchangeRate\n    };\n  }\n\n  calculateAddLiquidityToken(token, xtzPool, tokenPool, totalLiquidity, maxSlippage, dex): { liquidityExpected; liquidityMinimum; xtzRequired; exchangeRate } {\n    const xtzRequired = this.addLiquidityXtzRequired(token, xtzPool, tokenPool, dex);\n    const liquidityReturned = this.addLiquidityReturn(xtzRequired, xtzPool, totalLiquidity, maxSlippage, dex);\n    const exchangeRate = this.xtzToTokenExchangeRateDisplay(xtzRequired, xtzPool, tokenPool, dex);\n    return {\n      liquidityExpected: liquidityReturned?.expected,\n      liquidityMinimum: liquidityReturned?.minimum,\n      xtzRequired,\n      exchangeRate\n    };\n  }\n\n  calculateRemoveLiquidity(\n    liquidityBurned,\n    xtzPool,\n    tokenPool,\n    totalLiquidity,\n    maxSlippage,\n    dex\n  ): { xtzExpected; xtzMinimum; tokenExpected; tokenMinimum; exchangeRate } {\n    const xtzOut = this.removeLiquidityXtzReceived(liquidityBurned, totalLiquidity, xtzPool, maxSlippage, dex);\n    const tokenOut = this.removeLiquidityTokenReceived(liquidityBurned, totalLiquidity, tokenPool, maxSlippage);\n    const exchangeRate = this.xtzToTokenExchangeRateDisplay(xtzOut.expected, xtzPool, tokenPool, dex);\n\n    return {\n      xtzExpected: xtzOut?.expected,\n      xtzMinimum: xtzOut?.minimum,\n      tokenExpected: tokenOut?.expected,\n      tokenMinimum: tokenOut?.minimum,\n      exchangeRate\n    };\n  }\n\n  xtzToTokenExpectedReturn(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const xtz = xtzToSell.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n    const result = dexterCalculations.xtzToTokenTokenOutput(\n      xtz.toString(),\n      xPool.toString(),\n      tPool.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({\n      rpcAmount: result?.toString() || '0',\n      decimalPlaces: tokenPool.decimalPlaces\n    });\n  }\n\n  xtzToTokenMinimumReturn(tokenAmount: Amount, slippage: number): Amount {\n    const token = tokenAmount.internalBigInt;\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'xtzToTokenMinimumReturn' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n    const result = dexterCalculations.xtzToTokenMinimumTokenOutput(token.toString(), slippage);\n    return new Amount({\n      rpcAmount: result?.value?.toString() || '0',\n      decimalPlaces: tokenAmount.decimalPlaces\n    });\n  }\n\n  xtzToTokenRequiredXtzFor(tokenAmount: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const tokenRequired = tokenAmount.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.xtzToTokenXtzInput(\n      tokenRequired,\n      xtzPoolRpc,\n      tokenPoolRpc,\n      tokenAmount.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({ rpcAmount: result.toString() });\n  }\n\n  xtzToTokenExchangeRate(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const xtz = xtzToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.xtzToTokenExchangeRate(xtz, xtzPoolRpc, tokenPoolRpc, dex.fee.toString(), dex.burn.toString(), dex.includeSibsidy);\n    return parseFloat(result.toString());\n  }\n\n  xtzToTokenExchangeRateDisplay(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): string {\n    const xtz = xtzToSell.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n    const result = dexterCalculations.xtzToTokenExchangeRateForDisplay(\n      xtz.toString(),\n      xPool.toString(),\n      tPool.toString(),\n      tokenPool.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return result?.toString() ?? '0';\n  }\n\n  xtzToTokenPriceImpact(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const xtz = xtzToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.xtzToTokenPriceImpact(\n      xtz.toString(),\n      xtzPoolRpc.toString(),\n      tokenPoolRpc.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return parseFloat(result?.toString() ?? 0);\n  }\n\n  tokenToXtzExpectedReturn(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const token = tokenToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n    const result = dexterCalculations.tokenToXtzXtzOutput(\n      token.toString(),\n      xtzPoolRpc.toString(),\n      tokenPoolRpc.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({\n      rpcAmount: result?.toString() || '0',\n      decimalPlaces: 6\n    });\n  }\n\n  tokenToXtzMinimumReturn(xtzAmount: Amount, slippage: number): Amount {\n    const xtz = xtzAmount.internalBigInt;\n\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'tokenToXtzMinimumReturn' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const result = dexterCalculations.tokenToXtzMinimumXtzOutput(xtz.toString(), slippage);\n    return new Amount({\n      rpcAmount: result?.toString() || '0',\n      decimalPlaces: 6\n    });\n  }\n\n  tokenToXtzRequiredTokenFor(xtzAmount: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const xtzRequired = xtzAmount.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzTokenInput(\n      xtzRequired,\n      xPool,\n      tPool,\n      tokenPool.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({\n      rpcAmount: result.toString(),\n      decimalPlaces: tokenPool.decimalPlaces\n    });\n  }\n\n  tokenToXtzExchangeRate(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const token = tokenToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzExchangeRate(\n      token.toString(),\n      xtzPoolRpc,\n      tokenPoolRpc,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return parseFloat(result.toString());\n  }\n\n  tokenToXtzExchangeRateDisplay(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): string {\n    const token = tokenToSell.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzExchangeRateForDisplay(\n      token.toString(),\n      xPool.toString(),\n      tPool.toString(),\n      tokenPool.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return result?.toString() ?? '0';\n  }\n\n  tokenToXtzMarketRate(xtzPool: Amount, tokenPool: Amount): number {\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzMarketRate(xPool, tPool, tokenPool.decimalPlaces);\n    return parseFloat(parseFloat(result.toString()).toFixed(tokenPool.decimalPlaces));\n  }\n\n  tokenToXtzPriceImpact(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const token = tokenToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzPriceImpact(\n      token.toString(),\n      xtzPoolRpc.toString(),\n      tokenPoolRpc.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return parseFloat(result?.toString() ?? 0);\n  }\n\n  addLiquidityReturn(xtzToDeposit: Amount, xtzPool: Amount, totalLiquidity: Amount, slippage: number, dex): { expected: Amount; minimum: Amount } {\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'addLiquidityReturn' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const xtzIn = xtzToDeposit.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const totalLqt = totalLiquidity;\n\n    const result = dexterCalculations.addLiquidityLiquidityCreated(xtzIn.toString(), xPool.toString(), totalLqt.toString(), dex.includeSubsidy);\n    const expected = new Amount({\n      rpcAmount: result?.value ?? 0,\n      decimalPlaces: 0\n    });\n    const minimum = expected.internalNormalised - expected.internalNormalised * slippage;\n    const minAmount = new Amount({\n      normalisedAmount: minimum ?? 0,\n      decimalPlaces: 0\n    });\n    return { expected, minimum: minAmount };\n  }\n\n  addLiquidityTokenRequired(xtzToDeposit: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const xtzIn = xtzToDeposit.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.addLiquidityTokenIn(xtzIn.toString(), xPool.toString(), tPool.toString(), dex.includeSubsidy);\n    return new Amount({\n      rpcAmount: result?.toString() ?? '0',\n      decimalPlaces: tokenPool.decimalPlaces\n    });\n  }\n\n  addLiquidityXtzRequired(tokenToDeposit: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const tokenIn = tokenToDeposit.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.addLiquidityXtzIn(tokenIn.toString(), xPool.toString(), tPool.toString(), dex.includeSubsidy);\n    return new Amount({ rpcAmount: result?.toString() ?? '0', decimalPlaces: xtzPool.decimalPlaces });\n  }\n\n  removeLiquidityTokenReceived(liquidityBurned: Amount, totalLiquidity: Amount, tokenPool: Amount, slippage: number): { expected: Amount; minimum: Amount } {\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'removeLiquidityTokenReceived' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const lqtBurned = liquidityBurned.internalBigInt;\n    const tLqt = totalLiquidity;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.removeLiquidityTokenOut(lqtBurned.toString(), tLqt.toString(), tPool.toString());\n\n    if (!!Big(result?.value).toString()) {\n      const expected = new Amount({\n        rpcAmount: result?.value ?? 0,\n        decimalPlaces: 8\n      });\n      const minimum = expected.internalNormalised - expected.internalNormalised * slippage;\n      const minAmount = new Amount({\n        normalisedAmount: minimum,\n        decimalPlaces: 8\n      });\n      return { expected, minimum: minAmount };\n    } else {\n      return undefined;\n    }\n  }\n\n  removeLiquidityXtzReceived(liquidityBurned: Amount, totalLiquidity: Amount, xtzPool: Amount, slippage: number, dex): { expected: Amount; minimum: Amount } {\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'removeLiquidityXtzReceived' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const lqtBurned = liquidityBurned.internalBigInt;\n    const tLqt = totalLiquidity;\n    const xPool = xtzPool.internalBigInt;\n\n    const result = dexterCalculations.removeLiquidityXtzOut(lqtBurned.toString(), tLqt.toString(), xPool.toString(), dex.includeSubsidy);\n\n    if (!!Big(result?.value).toString()) {\n      const expected = new Amount({\n        rpcAmount: result?.value,\n        decimalPlaces: 6\n      });\n      const minimum = expected.internalNormalised - expected.internalNormalised * slippage;\n      const minAmount = new Amount({\n        normalisedAmount: minimum,\n        decimalPlaces: 6\n      });\n      return { expected, minimum: minAmount };\n    } else {\n      return undefined;\n    }\n  }\n  estimateLiquidityBakingAPY() {\n    return 'APY: ' + dexterCalculations.estimateLiquidityBakingAPY(this.storage[this.lqdContract]?.tez_pool).toFixed(2) + '%';\n  }\n}\n","// https://gitlab.com/tezos-domains/client\nimport { TezosToolkit } from '@taquito/taquito';\nimport { TaquitoTezosDomainsClient } from '@tezos-domains/taquito-client';\nimport { Tzip16Module } from '@taquito/tzip16';\nimport { Injectable } from '@angular/core';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { SupportedNetworkType } from '@tezos-domains/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TezosDomainsService {\n  private client: TaquitoTezosDomainsClient;\n  private queue = [];\n  pending = false;\n  constructor() {\n    const tezosToolkit = new TezosToolkit(CONSTANTS.NODE_URL);\n    tezosToolkit.addExtension(new Tzip16Module());\n    const options = { caching: { enabled: false } };\n    this.client = new TaquitoTezosDomainsClient({\n      tezos: tezosToolkit,\n      network: <SupportedNetworkType>CONSTANTS.NETWORK.replace('ghostnet', 'ithacanet'),\n      ...options\n    });\n  }\n  async getAddressFromDomain(domain: string) {\n    const address = await this.client.resolver.resolveNameToAddress(domain);\n    if (!address) {\n      return { pkh: '' };\n    }\n    return { pkh: address };\n  }\n  async getDomainFromAddress(address: string): Promise<string> {\n    if (!this.pending) {\n      this.pending = true;\n      this.collect();\n    }\n    return new Promise((resolve, reject) => {\n      this.queue.push({ address, resolve, reject });\n    });\n  }\n  async collect() {\n    setTimeout(async () => {\n      this.pending = false;\n      const queue = this.queue;\n      this.queue = [];\n      const addresses = queue.map((q) => {\n        return q.address;\n      });\n      const items = await this.getDomainFromAddresses(addresses).catch((e) => {\n        for (const q of queue) {\n          q.reject(e);\n          throw e;\n        }\n      });\n      while (queue.length) {\n        const promise = queue.shift();\n        if (items[promise.address]) {\n          promise.resolve(items[promise.address]);\n        } else {\n          promise.resolve('');\n        }\n      }\n    }, 100);\n  }\n  async getDomainFromAddresses(addresses: any) {\n    const baseUrl = CONSTANTS.MAINNET ? 'https://api.tezos.domains/graphql' : `https://${CONSTANTS.NETWORK}-api.tezos.domains/graphql`;\n    const req = {\n      query: `{reverseRecords(where: {address: {in: ${JSON.stringify(addresses)}}}) {items {address domain: domain {id, name}}}}`\n    };\n    const response = await (\n      await fetch(baseUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(req)\n      })\n    ).json();\n    const r = {};\n    if (response.data) {\n      for (const item of response.data.reverseRecords.items) {\n        if (item?.address && item?.domain?.name) {\n          r[item.address] = item.domain.name;\n        }\n      }\n    }\n    return r;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TokenResponseType, TokenService } from '../token/token.service';\nimport { ActivityService } from '../activity/activity.service';\nimport { WalletService } from '../wallet/wallet.service';\nimport { Account, OriginatedAccount } from '../wallet/wallet';\nimport Big from 'big.js';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { decode } from 'blurhash';\nimport { combineLatest } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubjectService } from '../subject/subject.service';\nimport { TeztoolsService } from '../indexer/teztools/teztools.service';\n\ninterface TokenWithBalance extends TokenResponseType {\n  balance: string;\n  price: string;\n}\ninterface ContractWithImg {\n  name: string;\n  thumbnailUrl: string;\n  visitUrl: string;\n  tokens: TokenWithBalance[];\n  hidden?: boolean;\n}\ntype ContractsWithBalance = Record<string, ContractWithImg>;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenBalancesService {\n  xtzUsdRate: number;\n  balances: TokenWithBalance[] = [];\n  nfts: ContractsWithBalance = null;\n  activeAccount: Account = null;\n  _thumbnailsToCreate = [];\n  constructor(\n    private tokenService: TokenService,\n    private activityService: ActivityService,\n    private walletService: WalletService,\n    private subjectService: SubjectService,\n    private teztoolsService: TeztoolsService\n  ) {\n    this.subjectService.markets.subscribe((markets) => {\n      if (markets) {\n        this.mergeMarket();\n      }\n    });\n    combineLatest([this.subjectService.activeAccount, this.subjectService.metadataUpdated, this.activityService.tokenBalanceUpdated])\n      .pipe(debounceTime(3))\n      .subscribe(([a, b, c]) => {\n        if (this.activeAccount !== a) {\n          this.activeAccount = a;\n        }\n        this.reload();\n      });\n    this.reload();\n    this.subjectService.logout.subscribe((o) => {\n      if (!!o) {\n        this.destroy();\n      }\n    });\n  }\n  destroy() {\n    this.balances = [];\n    this.nfts = null;\n  }\n  resolveAsset(token, balances, nfts) {\n    const asset: TokenResponseType = this.tokenService.getAsset(token.tokenId);\n    if (asset) {\n      if (this.isNFT(asset)) {\n        // token balance or NFT?\n        const contractAlias = this.getContractAlias(asset.contractAddress) ?? asset.contractAddress;\n        if (nfts[contractAlias] === undefined) {\n          const CONTRACT_ALIASES = CONSTANTS.CONTRACT_ALIASES[contractAlias as string];\n          if (!CONTRACT_ALIASES?.thumbnailUrl) {\n            if (this._thumbnailsToCreate.filter((obj) => obj.contractAlias === contractAlias).length === 0) {\n              this._thumbnailsToCreate.push({\n                contractAlias,\n                address: asset.contractAddress\n              });\n            }\n          }\n          const name = CONTRACT_ALIASES?.name ? CONTRACT_ALIASES.name : this.tokenService.getContractName(asset.contractAddress) ?? contractAlias;\n          nfts[contractAlias] = {\n            name,\n            thumbnailUrl: CONTRACT_ALIASES?.thumbnailUrl ?? this.tokenService.getContractLogo(asset.contractAddress),\n            tokens: []\n          };\n          if (CONTRACT_ALIASES?.link) {\n            nfts[contractAlias].visitUrl = CONTRACT_ALIASES.link;\n          }\n        }\n        nfts[contractAlias].tokens.push({ ...asset, balance: token.balance });\n      } else if (!isNaN(asset.decimals)) {\n        const balance = Big(token.balance)\n          .div(10 ** asset.decimals)\n          .toFixed();\n        balances.push({ ...asset, balance });\n      }\n    } else {\n      if (nfts['unknown'] === undefined) {\n        const hidden = this.nfts !== null && this.nfts['unknown'] === undefined;\n        nfts['unknown'] = {\n          name: 'Unknown tokens',\n          thumbnailUrl: '../../../assets/img/unknown-token-grayscale.svg',\n          tokens: [],\n          hidden\n        };\n        if (hidden) {\n          setTimeout(() => {\n            if (this.nfts['unknown'] !== undefined) {\n              this.nfts['unknown'].hidden = false;\n            }\n          }, 10000);\n        }\n      }\n      const placeholder = this.tokenService.getPlaceholderToken(token.tokenId);\n      placeholder.name = `${placeholder.contractAddress.slice(0, 8)}... (${placeholder.id.toString()})`;\n      delete placeholder.decimals;\n      nfts['unknown'].tokens.push(placeholder);\n    }\n  }\n  reload() {\n    if (!this.activeAccount?.tokens) {\n      return;\n    }\n    const balances: TokenWithBalance[] = [];\n    const nfts: ContractsWithBalance = {};\n    for (let token of this.walletService.wallet.getAccount(this.activeAccount.address).tokens) {\n      if (token?.balance && token?.balance != '0') {\n        this.resolveAsset(token, balances, nfts);\n      }\n    }\n    this.balances = balances;\n    this.nfts = this.orderedNfts(nfts);\n    this.mergeMarket();\n\n    if (this._thumbnailsToCreate.length) {\n      this._thumbnailsToCreate.forEach(({ contractAlias, address }) => {\n        if (!this.nfts[contractAlias].thumbnailUrl) {\n          this.nfts[contractAlias].thumbnailUrl = this.getThumbnailUrl(address);\n        }\n      });\n      this._thumbnailsToCreate = [];\n    }\n    this.subjectService.nftsUpdated.next({ nfts: this.nfts, balances: this.balances });\n  }\n  orderedNfts(nfts: ContractsWithBalance): ContractsWithBalance {\n    const _nfts: ContractsWithBalance = {};\n    const aliases = Object.keys(CONSTANTS.CONTRACT_ALIASES);\n    for (let alias of aliases) {\n      if (nfts[alias]) {\n        _nfts[alias] = nfts[alias];\n        delete nfts[alias];\n      }\n    }\n    const keys = Object.keys(nfts);\n    for (let key of keys) {\n      if (key !== 'unknown') {\n        _nfts[key] = nfts[key];\n        delete nfts[key];\n      }\n    }\n    if (nfts['unknown']) {\n      // property last\n      _nfts['unknown'] = nfts['unknown'];\n      delete nfts['unknown'];\n    }\n    return _nfts;\n  }\n  getContractAlias(address: string) {\n    const keys = Object.keys(CONSTANTS.CONTRACT_ALIASES);\n    for (const key of keys) {\n      if (CONSTANTS.CONTRACT_ALIASES[key].address.includes(address)) {\n        return key;\n      }\n    }\n    return undefined;\n  }\n  getThumbnailUrl(address: string): string {\n    const pixels = decode(address.slice(0, 22), 5, 5);\n    const canvas = document.createElement('canvas');\n    canvas.width = canvas.height = 5;\n    const ctx = canvas.getContext('2d');\n    const imageData = ctx.createImageData(5, 5);\n    imageData.data.set(pixels);\n    ctx.putImageData(imageData, 0, 0);\n    return canvas.toDataURL();\n  }\n\n  isNFT(asset: TokenResponseType): boolean {\n    if (!asset) {\n      return false;\n    }\n    if (CONSTANTS.MAINNET) {\n      return !(\n        CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(`${asset.contractAddress}:${asset.id}`) ||\n        this.teztoolsService.defiTokens.includes(`${asset.contractAddress}:${asset.id}`)\n      );\n    } else {\n      return (asset?.isBooleanAmount || asset?.decimals == 0) && !CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(`${asset.contractAddress}`) ? true : false;\n    }\n  }\n  mergeMarket() {\n    Object.keys(this.balances).forEach((key) => {\n      let token = undefined;\n      const tokenId: string = `${this.balances[key]?.contractAddress}:${this.balances[key]?.id}`;\n      if ((token = this.subjectService.markets.value.find((t) => t?.tokenId === tokenId))) {\n        this.balances[key].price = token?.usdValue * parseFloat(this.balances[key].balance);\n        !!token?.logo_url ? (this.balances[key].displayUrl = this.balances[key].thumbnailUrl = token?.thumbnailUri) : null;\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObjktService {\n  private queue = [];\n  pending = false;\n  constructor() {}\n\n  async resolveToken(contractAddress, id) {\n    const req = {\n      query: `{\n        token(where: {fa_contract: {_eq: \"${contractAddress}\"}, token_id: {_eq: \"${id}\"}}) {\n          highest_offer\n          lowest_ask\n          metadata\n          name\n          attributes {\n            attribute {\n              name\n              type\n              value\n            }\n          }\n        }\n      }`\n    };\n    try {\n      return (\n        await (\n          await fetch('https://data.objkt.com/v2/graphql', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(req)\n          })\n        ).json()\n      )?.data?.token[0];\n    } catch {\n      return undefined;\n    }\n  }\n  async resolveCollection(address): Promise<any> {\n    while (this.queue.length >= 500) {\n      // max 500 results per call\n      await this.sleep(3000);\n    }\n    if (!this.pending) {\n      this.pending = true;\n      this.collect();\n    }\n    return new Promise((resolve, reject) => {\n      this.queue.push({ address, resolve, reject });\n    });\n  }\n\n  async collect() {\n    setTimeout(async () => {\n      this.pending = false;\n      const queue = this.queue;\n      this.queue = [];\n      const addresses = queue.map((q) => {\n        return q.address;\n      });\n      const items = await this.resolveCollections(addresses).catch((e) => {\n        for (const q of queue) {\n          q.reject(e);\n          throw e;\n        }\n      });\n      while (queue.length) {\n        const promise = queue.shift();\n        if (items[promise.address]?.name) {\n          promise.resolve(items[promise.address]);\n        } else {\n          promise.resolve(null);\n        }\n      }\n    }, 3000);\n  }\n\n  async resolveCollections(contractAddresses: string[]) {\n    const req = {\n      query: `{\n        fa(where: {contract: {_in: ${JSON.stringify(contractAddresses)}}}) {\n          contract\n          name\n          logo\n        }\n      }`\n    };\n    const _objkts = (\n      await (\n        await fetch('https://data.objkt.com/v2/graphql', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json()\n    )?.data?.fa;\n    const objkts: any = {};\n    if (_objkts) {\n      for (const objkt of _objkts) {\n        objkts[objkt.contract] = { name: objkt.name, logo: objkt.logo };\n      }\n    }\n    console.log('resolveCollections', objkts);\n    return objkts;\n  }\n  private async sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CONSTANTS, TRUSTED_TOKEN_CONTRACTS, BLACKLISTED_TOKEN_CONTRACTS } from '../../../environments/environment';\nimport { IndexerService } from '../indexer/indexer.service';\nimport Big from 'big.js';\nimport { SubjectService } from '../subject/subject.service';\nimport { TeztoolsService } from '../indexer/teztools/teztools.service';\nimport { filter } from 'rxjs/operators';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { ObjktService } from '../indexer/objkt/objkt.service';\n\nexport interface TokenResponseType {\n  contractAddress: string;\n  id: string;\n  decimals: number;\n  artifactAsset?: Asset;\n  displayAsset: Asset;\n  thumbnailAsset: Asset;\n  name: string;\n  symbol: string;\n  description: string;\n  category: string;\n  kind: string;\n  isTransferable?: boolean;\n  isBooleanAmount?: boolean;\n  shouldPreferSymbol?: boolean;\n  series?: string;\n  ttl?: number;\n  status: Status;\n  isUnknownToken?: boolean;\n}\nexport type Asset = string | CachedAsset;\nexport interface CachedAsset {\n  uri: string;\n  mimeType: string;\n}\n\nexport type ContractsType = Record<string, ContractType>;\nexport type ContractType = FA12 | FA2;\nexport interface TokensInterface {\n  category: string;\n  objkt?: {\n    name?: string;\n    logo?: string;\n    updated: number;\n  };\n}\nenum Status {\n  Rejected = -1,\n  Pending = 0,\n  Approved = 1\n}\nexport interface TokenData {\n  name: string;\n  symbol: string;\n  decimals: number;\n  description: string;\n  artifactAsset?: Asset;\n  displayAsset: Asset;\n  thumbnailAsset: Asset;\n  isTransferable?: boolean;\n  isBooleanAmount?: boolean;\n  shouldPreferSymbol?: boolean;\n  series?: string;\n  ttl?: number;\n  status: Status;\n}\nexport interface FA12 extends TokensInterface {\n  kind: 'FA1.2';\n  tokens: {\n    0: TokenData;\n  };\n}\nexport interface FA2 extends TokensInterface {\n  kind: 'FA2';\n  tokens: Record<number | string, TokenData>;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  readonly AUTO_DISCOVER: boolean = true;\n  readonly version: string = '1.0.13';\n  private contracts: ContractsType = {};\n  private exploredIds: Record<string, { firstCheck: number; lastCheck: number; counter: number }> = {};\n  private pendingSave = null;\n  readonly storeKey = 'tokenMetadata';\n  readonly unlockablesKey = 'unlockables';\n  queue = [];\n  workers = 0;\n  constructor(\n    public indexerService: IndexerService,\n    private subjectService: SubjectService,\n    private teztoolsService: TeztoolsService,\n    private router: Router,\n    private objktService: ObjktService\n  ) {\n    this.contracts = JSON.parse(JSON.stringify(CONSTANTS.ASSETS));\n    this.loadMetadata();\n    this.saveMetadata();\n    this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n      if (r.url.indexOf('/account') === -1) {\n        document.documentElement.className = '';\n      }\n    });\n  }\n  getAsset(tokenId: string): TokenResponseType {\n    if (!tokenId || !tokenId.includes(':')) {\n      return null;\n    }\n    const tokenIdArray = tokenId.split(':');\n    const contractAddress: string = tokenIdArray[0];\n    const id: string = tokenIdArray[1] ? String(tokenIdArray[1]) : null;\n    const contract: ContractType = this.contracts[contractAddress];\n    if (id != null) {\n      if (contract) {\n        let token: TokenResponseType = contract.tokens[id];\n        if (!token) {\n          // check ranges\n          const ids = Object.keys(contract.tokens);\n          for (const idx of ids) {\n            if (idx.includes('-')) {\n              const span = idx.split('-');\n              if (span.length === 2 && !isNaN(Number(span[0])) && !isNaN(Number(span[1]))) {\n                const first = Big(span[0]);\n                const last = Big(span[1]);\n                if (first.gte(id) && last.lte(id)) {\n                  token = JSON.parse(JSON.stringify(contract.tokens[idx]));\n                  token.name = `${JSON.parse(JSON.stringify(contract.tokens[idx].name))} #${Big(id).minus(first).plus(1)}`;\n                  break;\n                }\n              }\n            }\n          }\n        }\n        if (token) {\n          if (token.status < 0) {\n            return {\n              kind: contract.kind,\n              category: contract.category,\n              id,\n              contractAddress,\n              ...token,\n              thumbnailAsset: '',\n              displayAsset: ''\n            };\n          }\n          return {\n            kind: contract.kind,\n            category: contract.category,\n            id,\n            contractAddress,\n            ...token\n          };\n        }\n      }\n    }\n    return null;\n  }\n  getContractName(contractAddress: string) {\n    return this.contracts[contractAddress]?.objkt?.name ?? null;\n  }\n  getContractLogo(contractAddress: string) {\n    return this.contracts[contractAddress]?.objkt?.logo ?? null;\n  }\n  getContractAddressFromAsset(uri: string) {\n    const contractAddresses = Object.keys(this.contracts);\n    for (const contractAddress of contractAddresses) {\n      const tokens = this.contracts[contractAddress].tokens;\n      for (const id in tokens) {\n        if (tokens[id]?.thumbnailAsset?.uri === uri || tokens[id]?.displayAsset?.uri === uri || tokens[id]?.artifactAsset?.uri === uri) {\n          return contractAddress;\n        }\n      }\n    }\n    return '';\n  }\n  isKnownTokenId(tokenId: string): boolean {\n    return this.getAsset(tokenId) !== null;\n  }\n  knownTokenIds(): string[] {\n    const tokenIds: string[] = [];\n    const contractKeys = Object.keys(this.contracts);\n    if (contractKeys) {\n      for (const contractKey of contractKeys) {\n        const tokenKeys = Object.keys(this.contracts[contractKey].tokens);\n        if (tokenKeys) {\n          for (const tokenKey of tokenKeys) {\n            tokenIds.push(`${contractKey}:${tokenKey}`);\n          }\n        }\n      }\n    }\n    return tokenIds;\n  }\n  isCategoryType(address, regex: RegExp): boolean {\n    return regex.test(this.contracts[address]?.category);\n  }\n  isKnownTokenContract(address: string): boolean {\n    return this.contracts[address] !== undefined;\n  }\n  addAsset(contractAddress: string, contract: ContractType) {\n    if (!this.contracts[contractAddress]) {\n      this.contracts[contractAddress] = contract;\n      this.checkObjktData(contractAddress, contract);\n    } else {\n      const currentKeys = Object.keys(this.contracts[contractAddress].tokens);\n      const newKeys = Object.keys(contract.tokens);\n      for (const key of newKeys) {\n        if (!currentKeys.includes(key)) {\n          this.contracts[contractAddress].tokens[key] = contract.tokens[key];\n        } else if (JSON.stringify(contract.tokens[key]) !== JSON.stringify(this.contracts[contractAddress].tokens[key])) {\n          this.contracts[contractAddress].tokens[key] = contract.tokens[key];\n        }\n      }\n    }\n  }\n  async checkObjktData(contractAddress: string, contract: ContractType) {\n    let check = false;\n    if (!contract.objkt) {\n      check = true;\n    } else if (contract?.objkt?.updated) {\n      const diff = Date.now() - contract.objkt.updated;\n      if (!contract?.objkt?.name) {\n        if (diff > 1000 * 60 * 60 * 24) {\n          check = true;\n        }\n      }\n    }\n    if (check) {\n      const _objkt = await this.objktService.resolveCollection(contractAddress);\n      const objkt: any = { updated: Date.now() };\n      if (_objkt?.name) {\n        objkt.name = _objkt.name;\n        if (_objkt.logo) {\n          objkt.logo = _objkt.logo;\n        }\n      }\n      this.contracts[contractAddress].objkt = objkt;\n      this._saveMetadata();\n    }\n  }\n  async searchAllMetadata(unknownTokenIds: any) {\n    if (unknownTokenIds.length) {\n      for (const tokenId of unknownTokenIds) {\n        this.searchMetadata(tokenId);\n      }\n    }\n  }\n  async recheckMetadata(tokens) {\n    if (tokens?.length) {\n      for (let token of tokens) {\n        const tokenObject = this.getAsset(token.tokenId);\n        if (tokenObject?.ttl) {\n          const exp = this.exploredIds[token.tokenId];\n          const now = new Date().getTime();\n          if (now - exp.lastCheck > tokenObject.ttl * 1000) {\n            console.log('recheck metadata for', token.tokenId);\n            this.exploredIds[token.tokenId].lastCheck = now;\n            this.exploredIds[token.tokenId].counter = ++exp.counter || 0;\n            this.saveMetadata();\n            if (!this.queue.includes(token.tokenId)) {\n              this.searchMetadata(token.tokenId, true);\n            }\n          }\n        }\n      }\n    }\n  }\n  private async searchMetadata(tokenId: string, force = false) {\n    if ((!this.isKnownTokenId(tokenId) && !this.queue.includes(tokenId) && this.explore(tokenId)) || force) {\n      this.queue.push(tokenId);\n      if (this.workers < 64) {\n        this.startWorker();\n      }\n    }\n  }\n  async startWorker() {\n    this.workers++;\n    while (this.queue.length) {\n      const tokenId = this.queue.shift();\n      try {\n        const a = tokenId.split(':');\n        const contractAddress = a[0];\n        const id = String(a[1]);\n        const recentDay = this.exploredIds[tokenId]?.lastCheck - this.exploredIds[tokenId]?.firstCheck < 1000 * 3600 * 24;\n        const skipTzkt = this.isKnownTokenId(tokenId) && this.exploredIds[tokenId]?.counter % 5 === 2 && recentDay;\n        const metadata = await this.indexerService.getTokenMetadata(contractAddress, id, skipTzkt);\n        this.handleMetadata(metadata, contractAddress, id);\n      } catch (e) {}\n    }\n    this.workers--;\n  }\n  handleMetadata(metadata: any, contractAddress: string, id: string) {\n    const tokenId = `${contractAddress}:${id}`;\n    if (metadata && (metadata.name || metadata.symbol) && !isNaN(metadata.decimals) && metadata.decimals >= 0) {\n      const contract: ContractType = {\n        kind: metadata.tokenType ? metadata.tokenType : 'FA2',\n        category: metadata.tokenCategory ? metadata.tokenCategory : '',\n        tokens: {}\n      };\n      const token: TokenData = {\n        name: metadata.name ? metadata.name : '',\n        symbol: metadata.symbol ? metadata.symbol : '',\n        decimals: Number(metadata.decimals),\n        description: metadata.description ? metadata.description : '',\n        artifactAsset: metadata.artifactUri ?? '',\n        displayAsset: metadata.displayUri ?? '',\n        thumbnailAsset: metadata.thumbnailUri ?? '',\n        isTransferable: metadata?.isTransferable === false ? metadata.isTransferable : true,\n        isBooleanAmount: metadata?.isBooleanAmount ? metadata.isBooleanAmount : false,\n        status:\n          TRUSTED_TOKEN_CONTRACTS.includes(contractAddress) ||\n          CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(tokenId) ||\n          this.teztoolsService.defiTokens.includes(tokenId)\n            ? 1\n            : 0\n      };\n      if (metadata?.ttl) {\n        token.ttl = Math.max(Number(metadata.ttl), 30);\n      }\n      if (metadata?.series) {\n        token.series = metadata.series;\n      }\n      if (CONSTANTS.ASSETS[contractAddress]?.tokens[id]) {\n        contract.tokens[id] = { ...token, ...CONSTANTS.ASSETS[contractAddress].tokens[id] };\n      } else {\n        contract.tokens[id] = token;\n      }\n      this.addAsset(contractAddress, contract);\n      this.saveMetadata();\n      this.subjectService.metadataUpdated.next({\n        contractAddress,\n        id,\n        token\n      });\n    }\n  }\n  explore(tokenId: string): boolean {\n    const now = new Date().getTime();\n    if (!this.exploredIds[tokenId]) {\n      this.exploredIds[tokenId] = {\n        firstCheck: now,\n        lastCheck: now,\n        counter: 0\n      };\n      this.saveMetadata();\n      return true;\n    } else {\n      const token = this.exploredIds[tokenId];\n      let t1 = 2 ** token.counter * 250;\n      t1 = t1 < 20000 ? 20000 : t1;\n      const t2 = now - token.lastCheck;\n      if (t1 > t2) {\n        return false;\n      }\n      this.exploredIds[tokenId].lastCheck = now;\n      this.exploredIds[tokenId].counter = ++token.counter;\n      this.saveMetadata();\n      return true;\n    }\n  }\n  private getCounter(tokenId: string) {\n    return this.exploredIds[tokenId].counter;\n  }\n  resetCounters() {\n    const ids = Object.keys(this.exploredIds);\n    if (ids) {\n      for (const id of ids) {\n        this.exploredIds[id].counter = 0;\n      }\n      this.saveMetadata(true);\n    }\n  }\n  resetAllMetadata() {\n    this.exploredIds = {};\n    this.contracts = JSON.parse(JSON.stringify(CONSTANTS.ASSETS));\n    this.saveMetadata(true);\n    this.loadMetadata();\n    this.subjectService.metadataUpdated.next(null);\n  }\n  searchTimeMs(tokenId: string) {\n    if (this.exploredIds[tokenId]) {\n      const token = this.exploredIds[tokenId];\n      return token.lastCheck - token.firstCheck;\n    }\n    return 0;\n  }\n  getPlaceholderToken(tokenId: string): TokenResponseType {\n    const tokenIdArray = tokenId.split(':');\n    const contractAddress: string = tokenIdArray[0];\n    const id: string = tokenIdArray[1] ? String(tokenIdArray[1]) : '';\n    return {\n      contractAddress,\n      id,\n      decimals: 0,\n      displayAsset: '',\n      thumbnailAsset: '',\n      name: '[Unknown token]',\n      symbol: '',\n      description: '',\n      category: '',\n      kind: 'FA2',\n      status: 0,\n      isUnknownToken: true\n    };\n  }\n  saveMetadata(force = false) {\n    if (force) {\n      this._saveMetadata();\n      return;\n    }\n    if (!this.pendingSave) {\n      this.pendingSave = setTimeout(() => {\n        this.pendingSave = null;\n        this._saveMetadata();\n      }, 1000);\n    }\n  }\n  private _saveMetadata() {\n    localStorage.setItem(\n      this.storeKey,\n      JSON.stringify({\n        contracts: this.contracts,\n        exploredIds: this.exploredIds,\n        version: this.version\n      })\n    );\n  }\n  loadMetadata(): any {\n    const metadataJson = localStorage.getItem(this.storeKey);\n    if (metadataJson) {\n      const metadata = JSON.parse(metadataJson);\n      if (metadata?.version === this.version) {\n        if (metadata?.contracts) {\n          const contractAddresses = Object.keys(metadata.contracts);\n          for (const address of contractAddresses) {\n            for (const id of Object.keys(metadata.contracts[address].tokens)) {\n              if (metadata.contracts[address].tokens[id]?.status === 0) {\n                if (\n                  TRUSTED_TOKEN_CONTRACTS.includes(address) ||\n                  CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(`${address}:${id}`) ||\n                  this.teztoolsService.defiTokens.includes(`${address}:${id}`)\n                ) {\n                  metadata.contracts[address].tokens[id].status = 1; // flip status if it have been marked as trusted\n                }\n                if (BLACKLISTED_TOKEN_CONTRACTS.includes(address)) {\n                  metadata.contracts[address].tokens[id].status = -1;\n                }\n              }\n            }\n            this.addAsset(address, metadata.contracts[address]);\n          }\n        }\n        if (metadata?.exploredIds) {\n          this.exploredIds = metadata.exploredIds;\n        }\n      } else {\n        // clear all metadata\n      }\n    }\n  }\n  formatAmount(tokenKey: string, amount: string, baseUnit = true): string {\n    if (!tokenKey) {\n      return `${Big(amount)\n        .div(10 ** (baseUnit ? 6 : 0))\n        .toFixed()} tez`;\n    } else {\n      const token = this.getAsset(tokenKey);\n      if (token) {\n        if ((!token.shouldPreferSymbol && token.name) || !token.symbol) {\n          if (token.isBooleanAmount) {\n            if (parseInt(amount) > 1) {\n              return `${amount} ${token.name}`;\n            }\n            return `${token.name}`;\n          } else {\n            return `${Big(amount)\n              .div(10 ** (baseUnit ? token.decimals : 0))\n              .toFixed()} ${token.name}`;\n          }\n        } else {\n          return `${Big(amount)\n            .div(10 ** (baseUnit ? token.decimals : 0))\n            .toFixed()} ${token.symbol}`;\n        }\n      } else {\n        return '[Unknown token]';\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport DirectWebSdk from 'customauth';\nimport FetchNodeDetails from '@toruslabs/fetch-node-details';\nimport TorusUtils from '@toruslabs/torus.js';\nimport { OperationService } from '../../services/operation/operation.service';\nimport { InputValidationService } from '../../services/input-validation/input-validation.service';\nimport { CONSTANTS } from '../../../environments/environment';\n\nconst GOOGLE = 'google';\nconst REDDIT = 'reddit';\nconst TWITTER = 'twitter';\nconst FACEBOOK = 'facebook';\nconst AUTH_DOMAIN = 'https://dev-0li4gssz.eu.auth0.com';\nconst AUTH_DOMAIN_MAINNET = 'https://kukai.eu.auth0.com';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TorusService {\n  torus: any = null;\n  nodeDetails: { torusNodeEndpoints: string[]; torusNodePub: any[] } = null;\n  public readonly verifierMap: any;\n  private readonly proxy: any;\n  verifierMaps = {\n    testnet: {\n      [GOOGLE]: {\n        name: 'Google',\n        typeOfLogin: 'google',\n        clientId: '952872982551-od475jfe3ach7dghacin634rbkcqhpll.apps.googleusercontent.com',\n        verifier: 'kukai-google',\n        subVerifier: 'web-kukai',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [REDDIT]: {\n        name: 'Reddit',\n        typeOfLogin: 'jwt',\n        clientId: '7xLcBa3xd4VTmlGbClU3qXeBZGta3OvM',\n        verifier: 'tezos-reddit-testnet',\n        subVerifier: 'web-kukai',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [TWITTER]: {\n        name: 'Twitter',\n        typeOfLogin: 'twitter',\n        clientId: 'vKFgnaYZzKLUnhxnX5xqTqeMcumdVTz1',\n        verifier: 'tezos-twitter-test',\n        caseSensitiveVerifierID: false,\n        lookups: true\n      },\n      [FACEBOOK]: {\n        name: 'Facebook',\n        typeOfLogin: 'facebook',\n        clientId: '213778980232619',\n        verifier: 'tezos-facebook-testnet',\n        caseSensitiveVerifierID: false\n      }\n    },\n    mainnet: {\n      [GOOGLE]: {\n        name: 'Google',\n        typeOfLogin: 'google',\n        clientId: '952872982551-49mfvktoios59oj2kmiknlltfq9pvi6c.apps.googleusercontent.com',\n        verifier: 'tezos-google',\n        subVerifier: 'kukai-web',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [REDDIT]: {\n        name: 'Reddit',\n        typeOfLogin: 'jwt',\n        clientId: 'zyQ9tnKfdg3VNyj6MGhZq4dHbBzbmEvl',\n        verifier: 'tezos-reddit',\n        subVerifier: 'web-kukai',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [TWITTER]: {\n        name: 'Twitter',\n        typeOfLogin: 'twitter',\n        clientId: 'UJl5d4iHVgbrAaSlucXNf2F2uKlC0m25',\n        verifier: 'tezos-twitter',\n        caseSensitiveVerifierID: false,\n        lookups: true\n      },\n      [FACEBOOK]: {\n        name: 'Facebook',\n        typeOfLogin: 'facebook',\n        clientId: '523634882377310',\n        verifier: 'tezos-facebook',\n        caseSensitiveVerifierID: false\n      }\n    }\n  };\n  verifierMapKeys: any;\n  constructor(private operationService: OperationService, private inputValidationService: InputValidationService) {\n    if (CONSTANTS.MAINNET) {\n      this.verifierMap = this.verifierMaps.mainnet;\n      this.proxy = {\n        address: '0x638646503746d5456209e33a2ff5e3226d698bea',\n        network: 'mainnet'\n      };\n    } else {\n      this.verifierMap = this.verifierMaps.testnet;\n      this.proxy = {\n        address: '0x4023d2a0D330bF11426B12C6144Cfb96B7fa6183',\n        network: 'ropsten'\n      };\n    }\n    this.verifierMapKeys = Object.keys(this.verifierMap);\n  }\n  async initTorus() {\n    if (!this.torus) {\n      try {\n        const torusdirectsdk = new DirectWebSdk({\n          baseUrl: `${location.origin}/serviceworker`,\n          redirectToOpener: true,\n          enableLogging: !(this.proxy.network === 'mainnet'),\n          proxyContractAddress: this.proxy.address,\n          network: this.proxy.network === 'mainnet' ? this.proxy.network : 'testnet'\n        });\n        await torusdirectsdk.init({ skipSw: false });\n        this.torus = torusdirectsdk;\n      } catch (error) {\n        console.error(error, 'oninit caught');\n      }\n    }\n  }\n  async lookupPkh(selectedVerifier: string, verifierId: string): Promise<any> {\n    const fetchNodeDetails = new FetchNodeDetails({\n      network: this.proxy.network,\n      proxyAddress: this.proxy.address\n    });\n    const torus = new TorusUtils();\n    const verifier = this.verifierMap[selectedVerifier].verifier;\n    if (!this.nodeDetails) {\n      const { torusNodeEndpoints, torusNodePub, torusIndexes } = await fetchNodeDetails.getNodeDetails();\n      this.nodeDetails = { torusNodeEndpoints, torusNodePub }; // Cache node details\n    }\n    let sanitizedVerifierId = verifierId;\n    if (!this.verifierMap[selectedVerifier].caseSensitiveVerifierID && selectedVerifier !== 'twitter') {\n      sanitizedVerifierId = sanitizedVerifierId.toLocaleLowerCase();\n    }\n    let twitterId = '';\n    if (selectedVerifier === 'twitter') {\n      const username = sanitizedVerifierId.replace('@', '');\n      const { id } = await this.twitterLookup(username);\n      if (this.inputValidationService.twitterId(id)) {\n        sanitizedVerifierId = `twitter|${id}`;\n        twitterId = id;\n      } else {\n        throw new Error('Twitter handle not found');\n      }\n    }\n    const pk: any = await torus.getPublicAddress(\n      this.nodeDetails.torusNodeEndpoints,\n      this.nodeDetails.torusNodePub,\n      { verifier, verifierId: sanitizedVerifierId },\n      true\n    );\n    const pkh = this.operationService.spPointsToPkh(pk.X, pk.Y);\n    return { pkh, twitterId };\n  }\n  async twitterLookup(username?: string, id?: string) {\n    let req = {};\n    if ((id && username) || (!id && !username)) {\n      console.log({ username, id });\n      throw new Error('Invalid input');\n    } else if (id) {\n      req = { id };\n    } else {\n      req = { username: username.replace('@', '') };\n    }\n    return await fetch(`https://backend.kukai.network/twitter-lookup`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify(req)\n    }).then((ans) => {\n      return ans.json();\n    });\n  }\n  async loginTorus(selectedVerifier: string, verifierId = '', skipTorusKey = false): Promise<any> {\n    if (!CONSTANTS.MAINNET && document?.location?.host === 'localhost:4200' && selectedVerifier !== 'google' && selectedVerifier !== 'twitter') {\n      return this.mockLogin(selectedVerifier); // mock locally\n    }\n    try {\n      const jwtParams: any = this._loginToConnectionMap()[selectedVerifier] || {};\n      if (verifierId && selectedVerifier === GOOGLE) {\n        jwtParams.login_hint = verifierId;\n        console.log('login_hint: ' + verifierId);\n      }\n      const { typeOfLogin, clientId, verifier, aggregated } = this.verifierMap[selectedVerifier];\n      const loginDetails = aggregated\n        ? await this.torus.triggerAggregateLogin({\n            aggregateVerifierType: 'single_id_verifier',\n            verifierIdentifier: verifier,\n            subVerifierDetailsArray: [\n              {\n                clientId,\n                typeOfLogin: typeOfLogin,\n                verifier: this.verifierMap[selectedVerifier].subVerifier,\n                jwtParams\n              }\n            ],\n            skipTorusKey\n          })\n        : await this.torus.triggerLogin({\n            verifier,\n            typeOfLogin,\n            clientId,\n            jwtParams,\n            skipTorusKey\n          });\n      if (aggregated) {\n        loginDetails.userInfo = loginDetails.userInfo[0];\n      }\n      if (selectedVerifier === FACEBOOK) {\n        console.log('Invalidating access token...');\n        fetch(`https://graph.facebook.com/me/permissions?access_token=${loginDetails.userInfo.accessToken}`, { method: 'DELETE', mode: 'cors' });\n      }\n      const keyPair = skipTorusKey && !loginDetails?.privateKey ? { pk: '', pkh: '' } : this.operationService.spPrivKeyToKeyPair(loginDetails.privateKey);\n      console.log('DirectAuth KeyPair', keyPair);\n      if (loginDetails?.userInfo?.typeOfLogin === 'jwt') {\n        loginDetails.userInfo.typeOfLogin = selectedVerifier;\n      }\n      console.log('DirectAuth UserInfo', loginDetails.userInfo);\n      return { keyPair, userInfo: loginDetails.userInfo };\n    } catch (e) {\n      console.error(e, 'login caught');\n      return { keyPair: null, userInfo: null };\n    }\n  }\n  async getTorusKeyPair(selectedVerifier: string, verifierId: string): Promise<any> {\n    const { keyPair } = await this.loginTorus(selectedVerifier, verifierId);\n    return keyPair;\n  }\n  _loginToConnectionMap = () => {\n    return {\n      [TWITTER]: {\n        domain: AUTH_DOMAIN\n      },\n      [FACEBOOK]: {\n        scope: 'public_profile'\n      },\n      [REDDIT]: {\n        domain: CONSTANTS.MAINNET ? AUTH_DOMAIN_MAINNET : AUTH_DOMAIN,\n        connection: 'Reddit',\n        verifierIdField: 'name',\n        isVerifierIdCaseSensitive: false\n      }\n    };\n  };\n  private async mockLogin(typeOfLogin: string): Promise<any> {\n    const keyPair = {\n      sk: 'spsk1VfCfhixtzGvUSKDre6jwyGbXFm6aoeLGnxeVLCouueZmkgtJF',\n      pk: 'sppk7cZsZeBApsFgYEdWuSwj92YCWkJxMmBfkN3FeKRmEB7Lk5pmDrT',\n      pkh: 'tz2WKg52VqnYXH52TZbSVjT4hcc8YGVKi7Pd'\n    };\n    const userInfo = {\n      typeOfLogin,\n      verifierId: typeOfLogin !== 'google' ? 'MockUser' : 'mock@user.com',\n      name: typeOfLogin !== 'twitter' ? 'Mock User' : '@MockUser'\n    };\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({ keyPair, userInfo });\n      }, 1000);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { WalletService } from '../wallet/wallet.service';\nimport { CONSTANTS } from '../../../environments/environment';\n\n@Injectable()\nexport class TzrateService {\n  public apiUrl = 'https://api.coingecko.com/api/v3/simple/price?ids=tezos&vs_currencies=usd';\n  constructor(private http: HttpClient, private walletService: WalletService) {}\n\n  getTzrate() {\n    if (CONSTANTS.MAINNET) {\n      this.http.get(this.apiUrl).subscribe(\n        (price: any) => {\n          this.walletService.wallet.XTZrate = price.tezos.usd;\n          this.updateFiatBalances();\n        },\n        (err) => console.log('Failed to get xtz price: ' + JSON.stringify(err))\n      );\n    } else {\n      this.walletService.wallet.XTZrate = 0;\n      this.updateFiatBalances();\n    }\n  }\n  updateFiatBalances() {\n    const accounts = this.walletService.wallet.getAccounts();\n    let tot = 0;\n    let change = false;\n    for (const account of accounts) {\n      if (account.balanceXTZ !== null) {\n        account.balanceUSD = Number((account.balanceXTZ / 1000000) * this.walletService.wallet.XTZrate);\n        tot += account.balanceUSD;\n        change = true;\n      }\n    }\n    if (change) {\n      this.walletService.wallet.totalBalanceUSD = Number(tot);\n      this.walletService.storeWallet();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IndexerService } from '../indexer/indexer.service';\nimport { filter } from 'rxjs/operators';\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnlockableService {\n  readonly settingsKey = 'settings';\n  unlockables: any;\n  queue = [];\n  workers = 0;\n  constructor(public indexerService: IndexerService, private router: Router) {\n    this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n      if (r.url.indexOf('/account') === -1) {\n        document.documentElement.className = '';\n      }\n    });\n  }\n\n  toggleFeature(type, feat): boolean {\n    this.unlockables = localStorage.getItem(this.settingsKey);\n    if (this.unlockables) {\n      try {\n        this.unlockables = JSON.parse(this.unlockables);\n        this.unlockables[type] = this.unlockables[type] === feat ? '' : feat;\n        localStorage.setItem(this.settingsKey, JSON.stringify(this.unlockables));\n        if (this.unlockables[type]) {\n          document.documentElement.classList.add(feat);\n        } else {\n          document.documentElement.classList.remove(feat);\n        }\n        return this.unlockables[type];\n      } catch (e) {\n        return false;\n      }\n    } else {\n      this.unlockables = {};\n      this.unlockables[type] = feat;\n      localStorage.setItem(this.settingsKey, JSON.stringify(this.unlockables));\n      document.documentElement.classList.add(feat);\n      return true;\n    }\n  }\n  restoreFeatures() {\n    this.unlockables = localStorage.getItem(this.settingsKey);\n    if (this.unlockables) {\n      try {\n        this.unlockables = JSON.parse(this.unlockables);\n        for (let feat of Object.keys(this.unlockables)) {\n          if (!!this.unlockables[feat]) {\n            document.documentElement.classList.add(this.unlockables[feat]);\n          }\n        }\n      } catch (e) {}\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { KeyPair, WalletType, Activity } from './../../interfaces';\nimport {\n  WalletObject,\n  HdWallet,\n  FullWallet,\n  LegacyWalletV1,\n  LegacyWalletV2,\n  LegacyWalletV3,\n  ImplicitAccount,\n  LedgerWallet,\n  TorusWallet,\n  EmbeddedTorusWallet,\n  OriginatedAccount,\n  WatchWallet\n} from './wallet';\nimport { EncryptionService } from '../encryption/encryption.service';\nimport { OperationService } from '../operation/operation.service';\nimport { TorusService } from '../torus/torus.service';\nimport { utils, hd } from '@tezos-core-tools/crypto-utils';\nimport { BehaviorSubject } from 'rxjs';\nimport { SubjectService } from '../subject/subject.service';\n\n@Injectable()\nexport class WalletService {\n  storeKey = 'kukai-wallet';\n  storageId = 0;\n  wallet: WalletObject;\n\n  constructor(\n    private encryptionService: EncryptionService,\n    private operationService: OperationService,\n    private torusService: TorusService,\n    private subjectService: SubjectService\n  ) {}\n  /*\n    Wallet creation\n  */\n  createNewWallet(): string {\n    return utils.generateMnemonic(24);\n  }\n  async createEncryptedWallet(mnemonic: string, password: string, passphrase: string = '', hdSeed: boolean): Promise<any> {\n    const seed = utils.mnemonicToSeed(mnemonic, passphrase, hdSeed);\n    const entropy: Buffer = Buffer.from(utils.mnemonicToEntropy(mnemonic));\n    let keyPair: KeyPair;\n    if (!hdSeed) {\n      keyPair = this.operationService.seed2keyPair(seed);\n    } else {\n      keyPair = hd.keyPairFromAccountIndex(seed, 0);\n    }\n    const encrypted = await this.encryptionService.encrypt(seed, password, 3);\n    const encryptedSeed: string = encrypted.chiphertext;\n    const iv: string = encrypted.iv;\n    /*\n      Warning: Make sure to never reuse IV for AES-GCM\n    */\n    const iv2: string = this.encryptionService.shiftIV(iv, 1);\n    const encryptedEntropy: string = (await this.encryptionService.encrypt(entropy, password, 3, iv2)).chiphertext;\n    return {\n      data: this.exportKeyStoreInit(hdSeed ? WalletType.HdWallet : WalletType.LegacyWallet, encryptedSeed, encryptedEntropy, iv),\n      pkh: keyPair.pkh,\n      pk: keyPair.pk,\n      seed: seed\n    };\n  }\n  async getKeys(pwd: string, pkh?: string): Promise<KeyPair> {\n    let seed;\n    if (this.wallet instanceof LegacyWalletV1) {\n      seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, pwd, this.wallet.salt, 1);\n    } else if (this.wallet instanceof LegacyWalletV2) {\n      seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, pwd, this.wallet.IV, 2);\n    } else if (this.wallet instanceof LegacyWalletV3 || this.wallet instanceof HdWallet) {\n      seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, pwd, this.wallet.IV, 3);\n    } else if (this.wallet instanceof LedgerWallet) {\n      const keyPair: KeyPair = {\n        sk: null,\n        pk: this.wallet.implicitAccounts[0].pk,\n        pkh: this.wallet.implicitAccounts[0].pkh\n      };\n      return keyPair;\n    } else if (this.wallet instanceof EmbeddedTorusWallet && this.wallet?.sk) {\n      return this.operationService.spPrivKeyToKeyPair(this.wallet.sk);\n    } else if (this.wallet instanceof TorusWallet || (this.wallet instanceof EmbeddedTorusWallet && !this.wallet?.sk)) {\n      const keyPair = await this.torusService.getTorusKeyPair(this.wallet.verifier, this.wallet.id);\n      if (this.wallet.getImplicitAccount(keyPair.pkh)) {\n        return keyPair;\n      } else {\n        throw new Error('Signed with wrong account');\n      }\n      return null;\n    } else {\n      return null;\n    }\n    if (!seed) {\n      return null;\n    }\n    if (this.wallet instanceof HdWallet) {\n      if (!pkh) {\n        throw new Error('No pkh provided');\n      }\n      const account = this.wallet.getImplicitAccount(pkh);\n      if (!account.derivationPath) {\n        throw new Error('No derivationPath found');\n      }\n      return hd.seedToKeyPair(seed, account.derivationPath);\n    } else if (this.wallet instanceof LegacyWalletV1) {\n      const keyPair = this.operationService.seed2keyPair(seed);\n      if (!keyPair.pkh || !pkh || keyPair.pkh !== pkh) {\n        return null;\n      } else {\n        return keyPair;\n      }\n    } else {\n      return this.operationService.seed2keyPair(seed);\n    }\n  }\n  async revealMnemonicPhrase(pwd: string): Promise<string> {\n    if (this.wallet && (this.wallet instanceof HdWallet || this.wallet instanceof LegacyWalletV3)) {\n      const iv = this.encryptionService.shiftIV(this.wallet.IV, 1);\n      const entropy = await this.encryptionService.decrypt(this.wallet.encryptedEntropy, pwd, iv, 3);\n      if (entropy) {\n        return utils.entropyToMnemonic(entropy);\n      } else {\n        console.log('Invalid password');\n      }\n    }\n    return '';\n  }\n  addImplicitAccount(pk: string, derivationPath?: string | number) {\n    let pkh;\n    console.log(pk);\n    if (pk && pk.slice(0, 4) === 'sppk') {\n      pkh = this.operationService.pk2pkh(pk);\n    } else {\n      pkh = utils.pkToPkh(pk);\n    }\n    if (pkh) {\n      this.wallet.implicitAccounts.push(new ImplicitAccount(pkh, pk, typeof derivationPath === 'number' ? `44'/1729'/${derivationPath}'/0'` : derivationPath));\n      console.log('Adding new implicit account...');\n      console.log(this.wallet.implicitAccounts[this.wallet.implicitAccounts.length - 1]);\n      this.storeWallet();\n    }\n  }\n  addOriginatedAccount(kt: string, manager: string) {\n    const implicitAccount = this.wallet.getImplicitAccount(manager);\n    if (implicitAccount) {\n      const origAcc = new OriginatedAccount(kt, implicitAccount.pkh, implicitAccount.pk);\n      implicitAccount.originatedAccounts.push(origAcc);\n      this.storeWallet();\n    } else {\n      console.warn(`Manager address $(manager) not found`);\n    }\n  }\n  /*addUnusedAccount(account: any) {\n    if (this.wallet instanceof HdWallet) {\n      this.wallet.unusedAccounts.push(account);\n    }\n  }*/\n  addressExists(address: string): boolean {\n    return this.wallet?.getAccounts().findIndex((a) => a.address === address) !== -1;\n  }\n  async incrementAccountIndex(password: string): Promise<string> {\n    if (this.wallet instanceof HdWallet) {\n      const seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, password, this.wallet.IV, 3);\n      if (seed) {\n        const keyPair: KeyPair = hd.seedToKeyPair(seed, `44'/1729'/${this.wallet.index}'/0'`);\n        this.addImplicitAccount(keyPair.pk, this.wallet.index);\n        this.wallet.index++;\n        this.storeWallet();\n        return keyPair.pkh;\n      } else {\n        return ''; // Wrong pwd\n      }\n    }\n  }\n  /*\n    Clear wallet data from browser\n  */\n  clearWallet(instanceId: string = '') {\n    this.wallet = null;\n    this.storageId = 0;\n    if (instanceId) {\n      sessionStorage.removeItem(instanceId);\n    } else {\n      localStorage.removeItem(this.storeKey);\n    }\n  }\n  /*\n  Used to decide wallet type\n  */\n  isFullWallet(): boolean {\n    return this.wallet instanceof FullWallet;\n  }\n  isViewOnlyWallet(): boolean {\n    return false;\n  }\n  isObserverWallet(): boolean {\n    return false;\n  }\n  isLedgerWallet(): boolean {\n    return this.wallet instanceof LedgerWallet;\n  }\n  isHdWallet(): boolean {\n    return this.wallet instanceof HdWallet;\n  }\n  isTorusWallet(): boolean {\n    return this.wallet instanceof TorusWallet;\n  }\n  isEmbeddedTorusWallet(): boolean {\n    return this.wallet instanceof EmbeddedTorusWallet;\n  }\n  isWatchWallet(): boolean {\n    return this.wallet instanceof WatchWallet;\n  }\n  isPwdWallet(): boolean {\n    return !this.isTorusWallet() && !this.isLedgerWallet() && !this.isWatchWallet();\n  }\n  exportKeyStoreInit(walletType: WalletType, encryptedSeed: string, encryptedEntropy: string, iv: string) {\n    const data: any = {\n      provider: 'Kukai',\n      version: 3.0,\n      walletType,\n      encryptedSeed,\n      encryptedEntropy,\n      iv\n    };\n    return data;\n  }\n  /*\n    Read and write to localStorage\n  */\n  initStorage(instanceId: string = '') {\n    this.storageId = Date.now();\n    if (instanceId) {\n      sessionStorage.setItem(instanceId, JSON.stringify({ localStorageId: this.storageId }));\n    } else {\n      localStorage.setItem(this.storeKey, JSON.stringify({ localStorageId: this.storageId }));\n    }\n  }\n  storeWallet() {\n    const localStorageId = this.getLocalStorageId();\n    if (this.storageId && localStorageId && this.storageId === localStorageId) {\n      let type = 'unknown';\n      if (this.wallet instanceof HdWallet) {\n        type = 'HdWallet';\n      } else if (this.wallet instanceof LegacyWalletV1) {\n        type = 'LegacyWalletV1';\n      } else if (this.wallet instanceof LegacyWalletV2) {\n        type = 'LegacyWalletV2';\n      } else if (this.wallet instanceof LegacyWalletV3) {\n        type = 'LegacyWalletV3';\n      } else if (this.wallet instanceof LedgerWallet) {\n        type = 'LedgerWallet';\n      } else if (this.wallet instanceof EmbeddedTorusWallet) {\n        type = 'EmbeddedTorusWallet';\n      } else if (this.wallet instanceof TorusWallet) {\n        type = 'TorusWallet';\n      } else if (this.wallet instanceof WatchWallet) {\n        type = 'WatchWallet';\n      }\n      this.getStorage().setItem(\n        this.wallet instanceof EmbeddedTorusWallet ? this.wallet.instanceId : this.storeKey,\n        JSON.stringify({\n          type,\n          localStorageId: this.storageId,\n          data: this.wallet\n        })\n      );\n    } else {\n      console.log('Outdated storage id');\n    }\n    this.subjectService.walletUpdated.next(null);\n  }\n  getLocalStorageId() {\n    const walletData = this.wallet instanceof EmbeddedTorusWallet ? sessionStorage.getItem(this.wallet.instanceId) : localStorage.getItem(this.storeKey);\n    if (walletData) {\n      const parsed = JSON.parse(walletData);\n      if (parsed && parsed.localStorageId) {\n        return parsed.localStorageId;\n      }\n    }\n    return 0;\n  }\n\n  loadStoredWallet(instanceId = '') {\n    const walletData = instanceId ? sessionStorage.getItem(instanceId) : localStorage.getItem(this.storeKey);\n    if (walletData && walletData !== 'undefined') {\n      const parsedWalletData = JSON.parse(walletData);\n      console.log(parsedWalletData);\n      if (parsedWalletData.type && parsedWalletData.data && parsedWalletData.localStorageId) {\n        this.storageId = parsedWalletData.localStorageId;\n        const wd = parsedWalletData.data;\n        this.deserializeStoredWallet(wd, parsedWalletData.type);\n      } else {\n        console.log('couldnt load a wallet');\n        this.clearWallet(instanceId);\n      }\n    } else {\n      console.log('couldnt load a wallet');\n      this.clearWallet(instanceId);\n    }\n  }\n  deserializeStoredWallet(wd: any, type: string) {\n    switch (type) {\n      case 'HdWallet':\n        this.wallet = new HdWallet(wd.IV, wd.encryptedSeed, wd.encryptedEntropy);\n        if (this.wallet instanceof HdWallet) {\n          this.wallet.index = wd.index;\n        }\n        break;\n      case 'LegacyWalletV1':\n        this.wallet = new LegacyWalletV1(wd.salt, wd.encryptedSeed);\n        break;\n      case 'LegacyWalletV2':\n        this.wallet = new LegacyWalletV2(wd.IV, wd.encryptedSeed);\n        break;\n      case 'LegacyWalletV3':\n        this.wallet = new LegacyWalletV3(wd.IV, wd.encryptedSeed, wd.encryptedEntropy);\n        break;\n      case 'LedgerWallet':\n        this.wallet = new LedgerWallet();\n        break;\n      case 'TorusWallet':\n        this.wallet = new TorusWallet(wd.verifier, wd.id, wd.name);\n        this.torusService.initTorus();\n        break;\n      case 'EmbeddedTorusWallet':\n        this.wallet = new EmbeddedTorusWallet(wd.verifier, wd.id, wd.name, wd.origin, wd.sk, wd.instanceId);\n        this.torusService.initTorus();\n        break;\n      case 'WatchWallet':\n        this.wallet = new WatchWallet();\n      default:\n    }\n    this.wallet.XTZrate = wd.XTZrate;\n    this.wallet.totalBalanceUSD = wd.totalBalanceUSD;\n    this.wallet.totalBalanceXTZ = wd.totalBalanceXTZ;\n    if (wd.lookups) {\n      this.wallet.lookups = wd.lookups;\n    }\n    for (const implicit of wd.implicitAccounts) {\n      const impAcc: ImplicitAccount = new ImplicitAccount(implicit.pkh, implicit.pk, implicit.derivationPath ? implicit.derivationPath : null);\n      impAcc.balanceUSD = implicit.balanceUSD;\n      impAcc.balanceXTZ = implicit.balanceXTZ;\n      impAcc.delegate = implicit.delegate;\n      impAcc.state = implicit.state;\n      impAcc.activities = implicit.activities;\n      if (implicit.tokens) {\n        impAcc.tokens = implicit.tokens;\n      }\n      for (const originated of implicit.originatedAccounts) {\n        const origAcc = new OriginatedAccount(originated.address, impAcc.pkh, impAcc.pk);\n        origAcc.balanceUSD = originated.balanceUSD;\n        origAcc.balanceXTZ = originated.balanceXTZ;\n        origAcc.delegate = originated.delegate;\n        origAcc.state = originated.state;\n        origAcc.activities = originated.activities;\n        impAcc.originatedAccounts.push(origAcc);\n      }\n      this.wallet.implicitAccounts.push(impAcc);\n    }\n  }\n  private getStorage() {\n    return this.isEmbeddedTorusWallet() ? sessionStorage : localStorage;\n  }\n}\n","export type WalletObject = LegacyWalletV1 | LegacyWalletV2 | LegacyWalletV3 | LedgerWallet | HdWallet | TorusWallet | WatchWallet;\n\nexport class Wallet {\n  totalBalanceXTZ: number | null;\n  totalBalanceUSD: number | null;\n  XTZrate: number | null;\n  implicitAccounts: ImplicitAccount[];\n  lookups: any[];\n  constructor() {\n    this.totalBalanceXTZ = null;\n    this.totalBalanceUSD = null;\n    this.XTZrate = null;\n    this.implicitAccounts = [];\n    this.lookups = [];\n  }\n  getAccounts(): Account[] {\n    const accounts: Account[] = [];\n    if (this.implicitAccounts.length) {\n      for (const implicitAccount of this.implicitAccounts) {\n        accounts.push(implicitAccount);\n        if (implicitAccount.originatedAccounts.length) {\n          for (const originatedAccount of implicitAccount.originatedAccounts) {\n            accounts.push(originatedAccount);\n          }\n        }\n      }\n    }\n    return accounts;\n  }\n  getImplicitAccounts(): ImplicitAccount[] {\n    return this.implicitAccounts;\n  }\n  getAccount(address: string): Account {\n    if (this.implicitAccounts.length) {\n      for (const implicitAccount of this.implicitAccounts) {\n        if (implicitAccount.address === address) {\n          return implicitAccount;\n        }\n        if (implicitAccount.originatedAccounts.length) {\n          for (const originatedAccount of implicitAccount.originatedAccounts) {\n            if (originatedAccount.address === address) {\n              return originatedAccount;\n            }\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getImplicitAccount(pkh: string): ImplicitAccount {\n    if (this.implicitAccounts.length) {\n      for (const implicitAccount of this.implicitAccounts) {\n        if (implicitAccount.pkh === pkh) {\n          return implicitAccount;\n        }\n      }\n    }\n    return null;\n  }\n}\n\nexport class FullWallet extends Wallet {\n  encryptedSeed: string;\n  constructor(encryptedSeed: string) {\n    super();\n    this.encryptedSeed = encryptedSeed;\n  }\n}\n\nexport class LegacyWalletV1 extends FullWallet {\n  salt: string;\n  constructor(salt: string, encrypedSeed: string) {\n    super(encrypedSeed);\n    this.salt = salt;\n  }\n}\n\nexport class LegacyWalletV2 extends FullWallet {\n  IV: string;\n  constructor(IV: string, encryptedSeed: string) {\n    super(encryptedSeed);\n    this.IV = IV;\n  }\n}\n\nexport class LegacyWalletV3 extends FullWallet {\n  encryptedEntropy: string;\n  IV: string;\n  constructor(IV: string, encryptedSeed: string, encryptedEntropy: string) {\n    super(encryptedSeed);\n    this.IV = IV;\n    this.encryptedEntropy = encryptedEntropy;\n  }\n}\n\nexport class HdWallet extends FullWallet {\n  encryptedEntropy: string;\n  IV: string;\n  index: number;\n  constructor(IV: string, encryptedSeed: string, encryptedEntropy: string) {\n    super(encryptedSeed);\n    this.encryptedEntropy = encryptedEntropy;\n    this.IV = IV;\n    this.index = 0;\n  }\n}\n\nexport class TorusWallet extends Wallet {\n  verifier: string;\n  id: string;\n  name: string;\n  constructor(verifier: string, id: string, name: string) {\n    super();\n    this.verifier = verifier;\n    this.id = id;\n    this.name = name;\n  }\n  displayName() {\n    if (['twitter', 'facebook'].includes(this.verifier)) {\n      return this.name;\n    }\n    return this.id;\n  }\n}\nexport class EmbeddedTorusWallet extends TorusWallet {\n  origin: string;\n  sk: string;\n  instanceId: string;\n  constructor(verifier: string, id: string, name: string, origin: string, sk: string, instanceId: string) {\n    super(verifier, id, name);\n    this.origin = origin;\n    this.sk = sk;\n    this.instanceId = instanceId;\n  }\n}\nexport class LedgerWallet extends Wallet {\n  constructor() {\n    super();\n  }\n}\n\nexport class WatchWallet extends Wallet {\n  constructor() {\n    super();\n  }\n}\n\n// Accounts\n\nexport abstract class Account {\n  balanceXTZ: number | null;\n  balanceUSD: number | null;\n  delegate: string;\n  state: string;\n  activities: Activity[] | null;\n  tokens: Token[] | null;\n  pkh: string;\n  pk: string;\n  address: string;\n  constructor(pkh: string, pk: string, address: string) {\n    this.balanceXTZ = null;\n    this.balanceUSD = null;\n    this.activities = null;\n    this.tokens = null;\n    this.delegate = '';\n    this.state = '';\n    this.pkh = pkh;\n    this.pk = pk;\n    this.address = address;\n  }\n  public abstract isImplicit(): boolean;\n  shortAddress(): string {\n    return this.address.slice(0, 7) + '...' + this.address.slice(-4);\n  }\n  getTokenBalance(tokenId: string): string {\n    if (this.tokens?.length) {\n      for (const token of this.tokens) {\n        if (tokenId === token.tokenId) {\n          return token.balance;\n        }\n      }\n    }\n    return '';\n  }\n  getTokenBalances(): Token[] {\n    return this.tokens ?? [];\n  }\n  updateTokenBalance(tokenId: string, balance: string) {\n    if (!this.tokens || !tokenId) {\n      this.tokens = [];\n    }\n    if (tokenId && this.tokens.length) {\n      for (let i = 0; i < this.tokens.length; i++) {\n        if (tokenId === this.tokens[i].tokenId) {\n          if (this.tokens[i].balance !== balance) {\n            if (balance === '0' || (balance && balance.slice(0, 1) === '-')) {\n              this.tokens.splice(i, 1);\n            } else {\n              this.tokens[i].balance = balance;\n            }\n          }\n          return;\n        }\n      }\n    }\n    if (tokenId.length > 37 && balance && balance !== '0' && balance.slice(0, 1) !== '-') {\n      this.tokens.unshift({ tokenId, balance });\n    }\n  }\n}\n\nexport class ImplicitAccount extends Account {\n  originatedAccounts: OriginatedAccount[];\n  derivationPath?: string;\n  constructor(pkh: string, pk: string, derivationPath?: string) {\n    super(pkh, pk, pkh);\n    this.originatedAccounts = [];\n    if (derivationPath) {\n      this.derivationPath = derivationPath;\n    }\n  }\n  isImplicit(): boolean {\n    return true;\n  }\n}\n\nexport class OriginatedAccount extends Account {\n  constructor(ktAddress: string, managerPkh: string, managerPk: string) {\n    super(managerPkh, managerPk, ktAddress);\n  }\n  isImplicit(): boolean {\n    return false;\n  }\n}\n\nexport enum OpStatus {\n  FAILED = -1,\n  UNCONFIRMED = 0,\n  HALF_CONFIRMED = 0.5, // confirmed but not indexed fully yet\n  CONFIRMED = 1\n}\nexport class Activity {\n  type: string;\n  block: string;\n  status: OpStatus;\n  amount: string;\n  source: {\n    address: string;\n    alias?: string;\n  };\n  destination: {\n    address: string;\n    alias?: string;\n  };\n  fee?: string;\n  hash: string;\n  counter?: number;\n  timestamp: number | null;\n  tokenId?: string;\n  entrypoint?: string;\n  opId?: string;\n}\nexport class Token {\n  tokenId: string;\n  balance: string;\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\nimport { Constants, DisplayLinkOption } from '../app/interfaces';\n\nexport const environment = {\n  production: false\n};\nconst _CONSTANTS: Constants = {\n  NETWORK: 'ghostnet',\n  NAME: 'Testnet / Ghostnet',\n  TEZOS_DOMAIN: {\n    CONTRACT: 'KT1WffvKqRGaPtVWYR1ZkG2GQY42B7a8x3kk',\n    TOP_DOMAINS: ['ith']\n  },\n  MAINNET: false,\n  NODE_URL: 'https://ghostnet.ecadinfra.com',\n  BLOCK_EXPLORER_URL: 'https://ghostnet.tzkt.io',\n  HARD_LIMITS: {\n    hard_gas_limit_per_operation: 1040000,\n    hard_gas_limit_per_block: 5200000,\n    hard_storage_limit_per_operation: 60000\n  },\n  CONTRACT_ALIASES: {},\n  ASSETS: {},\n  NFT_CONTRACT_OVERRIDES: [],\n  CONTRACT_OVERRIDES: {},\n  FEATURE_CONTRACTS: {}\n};\nconst _TRUSTED_TOKEN_CONTRACTS = [];\nconst _BLACKLISTED_TOKEN_CONTRACTS = [];\nconst _MODEL_3D_WHITELIST = [];\n\nexport const CONSTANTS = JSON.parse(JSON.stringify(_CONSTANTS));\nexport const TRUSTED_TOKEN_CONTRACTS = JSON.parse(JSON.stringify(_TRUSTED_TOKEN_CONTRACTS));\nexport const BLACKLISTED_TOKEN_CONTRACTS = JSON.parse(JSON.stringify(_BLACKLISTED_TOKEN_CONTRACTS));\nexport const MODEL_3D_WHITELIST = JSON.parse(JSON.stringify(_MODEL_3D_WHITELIST));\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\nimport { Constants } from './../app/interfaces';\nimport {\n  CONSTANTS as _CONSTANTS,\n  TRUSTED_TOKEN_CONTRACTS as _TTC,\n  BLACKLISTED_TOKEN_CONTRACTS as _BLTC,\n  MODEL_3D_WHITELIST as _M3DW\n} from './environment.ghostnet';\n\nexport const environment = {\n  production: false\n};\nexport const CONSTANTS: Constants = _CONSTANTS;\nexport const TRUSTED_TOKEN_CONTRACTS = _TTC;\nexport const BLACKLISTED_TOKEN_CONTRACTS = _BLTC;\nexport const MODEL_3D_WHITELIST = _M3DW;\n","import { Injectable } from '@angular/core';\nimport { KeyPair, WalletType } from './../../interfaces';\nimport { WalletService } from '../wallet/wallet.service';\nimport { CoordinatorService } from '../coordinator/coordinator.service';\nimport { LegacyWalletV1, LegacyWalletV2, LegacyWalletV3, HdWallet, LedgerWallet, TorusWallet, EmbeddedTorusWallet, WatchWallet } from '../wallet/wallet';\nimport { hd, utils } from '@tezos-core-tools/crypto-utils';\nimport { EncryptionService } from '../encryption/encryption.service';\nimport { TorusService } from '../torus/torus.service';\nimport { IndexerService } from '../indexer/indexer.service';\nimport { OperationService } from '../operation/operation.service';\n\n@Injectable()\nexport class ImportService {\n  constructor(\n    private walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private indexerService: IndexerService,\n    private encryptionService: EncryptionService,\n    private torusService: TorusService,\n    private operationService: OperationService\n  ) {}\n  pwdRequired(json: string) {\n    const walletData = JSON.parse(json);\n    if (walletData.provider !== 'Kukai') {\n      throw new Error(`Unsupported wallet format`);\n    }\n    if (walletData.walletType === WalletType.LegacyWallet || walletData.walletType === WalletType.HdWallet) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  async importWalletFromJson(json: any, pwd: string): Promise<boolean> {\n    // From file\n    let seed;\n    let walletData;\n    try {\n      walletData = JSON.parse(json);\n      if (walletData.walletType === WalletType.HdWallet && walletData.version === 3) {\n        //hd\n        seed = await this.encryptionService.decrypt(walletData.encryptedSeed, pwd, walletData.iv, 3);\n      } else if (walletData.walletType === WalletType.LegacyWallet) {\n        if (walletData.version === 1) {\n          console.log('v1');\n          seed = await this.encryptionService.decrypt(walletData.encryptedSeed, pwd, walletData.pkh.slice(3, 19), 1);\n          if (utils.seedToKeyPair(seed).pkh !== walletData.pkh) {\n            seed = '';\n          }\n        } else if (walletData.version === 2 || walletData.version === 3) {\n          seed = await this.encryptionService.decrypt(walletData.encryptedSeed, pwd, walletData.iv, walletData.version);\n        }\n      }\n    } catch (e) {\n      console.error(e);\n      throw new Error('Failed to decrypt keystore file');\n    }\n    if (seed) {\n      return this.importWalletFromObject(walletData, seed).then(\n        (ans) => {\n          return ans;\n        },\n        (e) => {\n          console.error(e);\n          throw new Error('Failed to fetch account(s). Please check your connection.');\n        }\n      );\n    } else {\n      throw new Error('Wrong password');\n    }\n  }\n  async importWalletFromObject(data: any, seed: any): Promise<boolean> {\n    this.coordinatorService.stopAll();\n    if (data.walletType === WalletType.HdWallet && data.version === 3) {\n      // HD\n      this.walletService.wallet = new HdWallet(data.iv, data.encryptedSeed, data.encryptedEntropy);\n    } else if (data.walletType === WalletType.LegacyWallet) {\n      if (data.version === 3) {\n        this.walletService.wallet = new LegacyWalletV3(data.iv, data.encryptedSeed, data.encryptedEntropy);\n      } else if (data.version === 2) {\n        this.walletService.wallet = new LegacyWalletV2(data.iv, data.encryptedSeed);\n      } else if (data.version === 1) {\n        this.walletService.wallet = new LegacyWalletV1(data.pkh.slice(3, 19), data.encryptedSeed);\n      } else {\n        throw new Error('Unsupported wallet file');\n      }\n    } else {\n      throw new Error('Unsupported wallet file');\n    }\n    let keys: KeyPair;\n    if (seed.length === 32) {\n      keys = utils.seedToKeyPair(seed);\n    } else if (seed.length === 64) {\n      keys = hd.keyPairFromAccountIndex(seed, 0);\n    } else {\n      throw new Error('Invalid seed length');\n    }\n    this.walletService.initStorage();\n    if (this.walletService.wallet instanceof HdWallet) {\n      let index = 0;\n      let isUsedAccount: boolean = true;\n      while (isUsedAccount) {\n        keys = hd.keyPairFromAccountIndex(seed, index);\n        isUsedAccount = await this.indexerService.isUsedAccount(keys.pkh);\n        if (isUsedAccount || index === 0) {\n          this.walletService.addImplicitAccount(keys.pk, index++);\n          await this.findContracts(keys.pkh);\n        }\n      }\n      this.walletService.wallet.index = index;\n    } else {\n      this.walletService.addImplicitAccount(keys.pk);\n      await this.findContracts(keys.pkh);\n    }\n    return true;\n  }\n\n  async importWalletFromPk(pk: string, derivationPath: string, verifierDetails: any = null, sk: string = '', instanceId: string = ''): Promise<boolean> {\n    this.coordinatorService.stopAll();\n    if (derivationPath) {\n      return this.ledgerImport(pk, derivationPath);\n    } else if (verifierDetails) {\n      return this.torusImport(pk, verifierDetails, sk, instanceId);\n    }\n  }\n  async watch(pkh: string) {\n    if (this.operationService.validAddress(pkh)) {\n      const pk = await this.operationService.getManager(pkh).toPromise();\n      if (pk) {\n        this.walletService.initStorage();\n        this.walletService.wallet = new WatchWallet();\n        this.walletService.addImplicitAccount(pk);\n        this.findContracts(this.walletService.wallet.implicitAccounts[0].pkh);\n      } else {\n        console.error('Public key not found');\n      }\n    }\n  }\n  async ledgerImport(pk: string, derivationPath: string) {\n    try {\n      this.walletService.initStorage();\n      this.walletService.wallet = new LedgerWallet();\n      this.walletService.addImplicitAccount(pk, derivationPath);\n      await this.findContracts(this.walletService.wallet.implicitAccounts[0].pkh);\n      return true;\n    } catch (err) {\n      console.warn(err);\n      this.walletService.clearWallet();\n      return false;\n    }\n  }\n  async torusImport(pk: string, verifierDetails: any, sk: string = '', instanceId: string = '') {\n    try {\n      if (verifierDetails.embedded) {\n        this.walletService.initStorage(instanceId);\n        this.walletService.wallet = new EmbeddedTorusWallet(\n          verifierDetails.verifier,\n          verifierDetails.id,\n          verifierDetails.name,\n          verifierDetails.origin,\n          sk,\n          instanceId\n        );\n      } else {\n        this.walletService.initStorage();\n        this.walletService.wallet = new TorusWallet(verifierDetails.verifier, verifierDetails.id, verifierDetails.name);\n      }\n      if (verifierDetails.verifier === 'twitter') {\n        this.updateTwitterName(verifierDetails.id);\n      }\n      if (pk || !verifierDetails?.embedded) {\n        this.walletService.addImplicitAccount(pk);\n      } else {\n        this.walletService.storeWallet();\n      }\n      return true;\n    } catch (err) {\n      console.warn(err);\n      this.walletService.clearWallet(instanceId);\n      return false;\n    }\n  }\n  async updateTwitterName(verifierId: string) {\n    const twitterId = verifierId.split('|')[1];\n    const { username } = await this.torusService.twitterLookup(undefined, twitterId);\n    if (username && this.walletService.wallet instanceof TorusWallet) {\n      this.walletService.wallet.name = '@' + username;\n    }\n  }\n  async findContracts(pkh: string) {\n    const addresses = await this.indexerService.getContractAddresses(pkh);\n    for (const KT of addresses) {\n      console.log('Found KT: ' + KT);\n      this.walletService.addOriginatedAccount(KT, pkh);\n    }\n    this.walletService.storeWallet();\n  }\n}\n","<div class=\"flex-row\" id=\"wrapper\">\n  <div class=\"flex-column left\">\n    <div class=\"flex-column top\">\n      <h1><ng-container *ngIf=\"isMobile\">&nbsp;</ng-container>A Secure Home&nbsp;<br />for your Digital Assets</h1>\n      <h3>Manage your digital assets and seamlessly&nbsp;<br *ngIf=\"!isMobile\" />connect with experiences and apps on Tezos.</h3>\n    </div>\n    <div class=\"flex-column login\">\n      <span>Sign in with social:</span>\n      <div class=\"flex-row social\">\n        <button class=\"flex-row google\" (click)=\"torusLogin('google')\"><img\n            src=\"../../../assets/img/google-logo.svg\">&nbsp;<span>CONTINUE WITH\n            GOOGLE</span></button>\n        <div class=\"flex-row torus\">\n          <img class=\"facebook\" src=\"../../../assets/img/facebook-logo.svg\" (click)=\"torusLogin('facebook')\">\n          <img class=\"twitter\" src=\"../../../assets//img/twitter-logo.svg\" (click)=\"torusLogin('twitter')\">\n          <img class=\"reddit\" src=\"../../../assets/img/reddit-logo.svg\" (click)=\"torusLogin('reddit')\">\n        </div>\n      </div>\n      <!-- <span>OR CONTINUE WITH EMAIL:</span>\n      <div class=\"flex-row email\">\n        <input type=email placeholder=\"Your email\">\n        <button class=\"signin\">SIGN IN</button>\n      </div> -->\n    </div>\n    <div class=\"flex-column bottom\">\n      <img src=\"../../../assets/img/landing-hero.png\" id=\"bg-mobile\">\n      <div id=\"ribbon-mobile\"></div>\n    </div>\n  </div>\n  <div class=\"flex-column right\">\n    <img src=\"../../../assets/img/landing-hero.png\" id=\"bg\">\n    <div id=\"ribbon\"></div>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { ActivatedRoute } from '@angular/router';\nimport 'rxjs/add/operator/filter';\nimport { TorusService } from '../../../services/torus/torus.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ImportService } from '../../../services/import/import.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['../../../../scss/components/views/start/start.component.scss']\n})\nexport class StartComponent implements OnInit, OnDestroy {\n  isMobile = false;\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private walletService: WalletService,\n    public translate: TranslateService,\n    public torusService: TorusService,\n    private importService: ImportService,\n    private messageService: MessageService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this.subscriptions.add(\n      this.route.queryParams.subscribe(async (params) => {\n        if (params?.devtool === 'watch') {\n          const address = prompt('Enter watch address');\n          if (address) {\n            try {\n              await this.importService.watch(address);\n              this.messageService.startSpinner();\n              this.router.navigate([`/account/${address}`]);\n            } finally {\n              this.messageService.stopSpinner();\n            }\n          }\n        }\n      })\n    );\n    if (!this.walletService.wallet) {\n      this.torusService.initTorus();\n    }\n\n    const e = () => {\n      this.isMobile = !!parseInt(getComputedStyle(document.documentElement).getPropertyValue('--is-mobile'));\n    };\n    window.addEventListener('resize', e);\n    e();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  async torusLogin(verifier: string): Promise<void> {\n    await this.messageService.startSpinner('Loading wallet...');\n    // const { keyPair, userInfo } = await this.mockLogin();\n    const { keyPair, userInfo } = await this.torusService.loginTorus(verifier).catch(async (e) => await this.messageService.stopSpinner());\n    console.log('login done');\n    if (keyPair) {\n      await this.importService\n        .importWalletFromPk(keyPair.pk, '', {\n          verifier: userInfo.typeOfLogin,\n          id: userInfo.verifierId,\n          name: userInfo.name\n        })\n        .then((success: boolean) => {\n          if (success) {\n            console.log('success');\n            this.router.navigate([`/account/`]);\n            this.messageService.stopSpinner();\n          } else {\n            this.messageService.addError('Torus import failed');\n            this.messageService.stopSpinner();\n          }\n        });\n    } else {\n      await this.messageService.stopSpinner();\n    }\n  }\n\n  private async mockLogin(): Promise<any> {\n    const keyPair = {\n      sk: 'spsk1VfCfhixtzGvUSKDre6jwyGbXFm6aoeLGnxeVLCouueZmkgtJF',\n      pk: 'sppk7cZsZeBApsFgYEdWuSwj92YCWkJxMmBfkN3FeKRmEB7Lk5pmDrT',\n      pkh: 'tz2WKg52VqnYXH52TZbSVjT4hcc8YGVKi7Pd'\n    };\n    const userInfo = {\n      typeOfLogin: 'google',\n      verifierId: 'mock.user@gmail.com',\n      name: 'Mock User'\n    };\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({ keyPair, userInfo });\n      }, 2000);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { saveAs } from 'file-saver';\n\n@Injectable()\nexport class ExportService {\n  constructor() {}\n  downloadWallet(data: any) {\n    const blob = new Blob([JSON.stringify(data, null, 4)], {\n      type: 'application/json'\n    });\n    let filename = 'wallet.tez';\n    if (data.walletType === 1) {\n      filename = 'view-only_wallet.tez';\n    } else if (data.walletType === 2) {\n      filename = 'observer_wallet.tez';\n    } else if (data.walletType === 3) {\n      filename = 'ledger_wallet.tez';\n    } else if (data.walletType === 4) {\n      filename = 'hd-wallet.tez';\n    }\n    saveAs(blob, filename);\n  }\n\n  downloadOperationData(hex: string, signed: boolean) {\n    const data = {\n      hex: hex,\n      signed: signed\n    };\n    let filename;\n    if (signed) {\n      filename = 'signed.tzop';\n    } else {\n      filename = 'unsigned.tzop';\n    }\n    const blob = new Blob([JSON.stringify(data, null, 4)], {\n      type: 'application/json'\n    });\n    saveAs(blob, filename);\n  }\n}\n","<form autocomplete=\"off\">\n  <div class=\"flex-column card\">\n    <a routerLink=\"/\"><button class=\"flex-row back\"><img\n          src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n    <div *ngIf=\"activePanel==1\" class=\"flex-column body\">\n      <h1>Back up your seed</h1>\n      <p class=\"description\">When you create a new wallet, new Tezos Recovery (Seed) Words are generated.<br />Your seed\n        words are\n        the\n        master key of your wallet accounts and any value they hold.</p>\n      <div class=\"whitebox\" (mouseout)=\"mouseOut($event)\" (touchstart)=\"$event.stopPropagation(); this.hideBlur = true;\"\n        (touchend)=\"checkSelection($event)\" (click)=\"$event.stopPropagation()\" (mouseup)=\"checkSelection($event)\">\n        {{ MNEMONIC.string }}<div *ngIf=\"!hideBlur\" class=\"flex-row seed-blur\"\n          (click)=\"$event.stopPropagation(); this.hideBlur = true;\">\n          <span>CLICK HERE TO REVEAL YOUR SEED WORDS</span>\n        </div>\n      </div>\n      <p class=\"description red\">\n        <span *ngIf=\"isSelectedMnemonic\" style=\"margin-top: -4rem\" class=\"warning red\">\n          WARNING: Copying the seed words to your clipboard can result in sensitive leakage. The clipboard is a shared\n          resource that can be monitored by other web pages or browser extensions.<br />\n        </span> Be sure sure to back it up (seed words), write it down, and keep it incredibly safe.\n      </p>\n      <button class=\"button next\" (click)=\"verifyView()\">Next</button>\n    </div>\n    <div *ngIf=\"activePanel==2\" class=\"flex-column body\">\n      <h1>Verify your seed</h1>\n      <p class=\"description\">{{ MNEMONIC.verify.length ? 'Fill in the ' + formatVerifyDescription(MNEMONIC.verify[0] +\n        1)\n        + ' to verify\n        your seed backup' : 'Recovery Words (seed) have been verified' }}</p>\n      <progress max=\"{{ MNEMONIC.wordsToVerify }}\"\n        value=\"{{ MNEMONIC.wordsToVerify - MNEMONIC.verify.length }}\"></progress>\n      <div *ngIf=\"MNEMONIC.verify.length\" class=\"flex-row word-verify\">\n        <div class=\"flex-column word-hint\">\n          <span class=\"word-index\">{{ indexFormat(MNEMONIC.verify[0] - 1) }}</span>\n          <span class=\"word-value\"><b>{{ valueFormat(MNEMONIC.verify[0] - 1) }}</b></span>\n        </div>\n        <div class=\"flex-column word-input\">\n          <span class=\"word-index\">\n            <ng-container *ngIf=\"MNEMONIC.verify.length\">Word {{ MNEMONIC.verify[0] + 1 }}</ng-container>\n          </span>\n          <input id=\"wordInput\" class=\"text\" name=\"none\" type=\"text\" (input)=\"checkWord()\" (change)=\"checkWord()\"\n            [(ngModel)]=\"wordInput\" [disabled]=\"!MNEMONIC.verify.length\" autofocus>\n        </div>\n        <div class=\"flex-column word-hint\">\n          <span class=\"word-index\">{{ indexFormat(MNEMONIC.verify[0] + 1) }}</span>\n          <span class=\"word-value\"><b>{{ valueFormat(MNEMONIC.verify[0] + 1) }}</b></span>\n        </div>\n      </div>\n      <button *ngIf=\"!MNEMONIC.verify.length\" class=\"button next\" (click)=\"pwdView()\">Next</button>\n    </div>\n    <div *ngIf=\"activePanel==3\" class=\"flex-column body\">\n      <h1>Set a password</h1>\n      <p class=\"description bold blue\">This password will be used to create an encrypted keystore file.</p>\n      <p class=\"description\">When performing operations that need to be signed with your\n        secret key, this password will be required</p>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.PASSWORD' | translate }}\" class=\"text\"\n        autocomplete=\"new-password\" [(ngModel)]=\"pwd1\" (keyup)=\"calcStrength()\">\n      <small class=\"strength\"> {{ 'NEWWALLETCOMPONENT.PASSWORDSTRENGTH' | translate }} — <b\n          [style.color]=\"pwdStrength === 'Catastrophic!' ? 'darkred' : pwdStrength === 'Very weak!' ? 'red' : pwdStrength === 'Weak!' ? 'orange' : pwdStrength === 'Strong!' ? 'green' : 'red'\">{{\n          pwdStrength }}</b></small>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.CONFIRMPASSWORD' | translate }}\" class=\"text\"\n        autocomplete=\"new-password\" [(ngModel)]=\"pwd2\">\n      <button class=\"button next\" [style.visibility]=\"!pwd1 ? 'hidden' : ''\" (click)=\"encryptWallet()\">Next</button>\n    </div>\n    <div *ngIf=\"activePanel==4\" class=\"flex-column body\">\n      <h1>Wallet created!</h1>\n      <p class=\"description bold\">Your wallet is now set up and ready to be used.</p>\n      <p class=\"description\">Download your encrypted keystore file and import it when you want to access your wallet.\n      </p>\n      <div class=\"whitebox final\">\n        <p class=\"description bold pkh\">Your public account address:<br />{{ getPkh() }}</p>\n      </div>\n      <button class=\"button next\" (click)=\"download()\">Download</button>\n      <button class=\"button next\" [style.visibility]=\"!ekfDownloaded ? 'hidden' : ''\" (click)=\"done()\">Open\n        Wallet</button>\n    </div>\n    <span class=\"flex-row step-counter\">\n      <ng-container *ngFor=\"let _ of [1, 2, 3, 4]\">\n        <div class=\"dot\" [class]=\"_ === activePanel ? 'selected' : ''\"></div>\n      </ng-container>\n    </span>\n  </div>\n</form>","import { Component, OnInit, Input, HostBinding } from '@angular/core';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { ExportService } from '../../../../../services/export/export.service';\nimport { ImportService } from '../../../../../services/import/import.service';\nimport { InputValidationService } from '../../../../../services/input-validation/input-validation.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-wallet',\n  templateUrl: './new-wallet.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/login.component.scss']\n})\nexport class NewWalletComponent implements OnInit {\n  wordInput: string;\n  @HostBinding('class.tacos') showTacos = false;\n  @Input() pwd1 = '';\n  @Input() pwd2 = '';\n  @Input() userMnemonic = '';\n  hideBlur = false;\n  isSelectedMnemonic = false;\n  pwdStrength = '';\n  ekfDownloaded = false;\n  activePanel = 0;\n  data: any;\n  seed: any;\n  pkh: string;\n  pk: string;\n  MNEMONIC: {\n    string: string;\n    array: string[];\n    verify: number[];\n    wordsToVerify: number;\n  };\n  longClickTs = 0;\n  constructor(\n    private translate: TranslateService,\n    private walletService: WalletService,\n    private messageService: MessageService,\n    private exportService: ExportService,\n    private importService: ImportService,\n    private inputValidationService: InputValidationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.generateSeed();\n  }\n  generateSeed(): void {\n    const mnemonic = this.walletService.createNewWallet();\n    this.MNEMONIC = {\n      string: mnemonic,\n      array: mnemonic.split(' '),\n      verify: [],\n      wordsToVerify: 5\n    };\n    // shuffle\n    const mnemonicLength = this.MNEMONIC.array.length;\n    while (this.MNEMONIC.verify.length < this.MNEMONIC.wordsToVerify) {\n      const index = Math.floor(Math.random() * Math.floor(mnemonicLength));\n      if (!this.MNEMONIC.verify.includes(index)) {\n        this.MNEMONIC.verify.push(index);\n      }\n    }\n    this.MNEMONIC.verify.sort((a, b) => a - b);\n    this.activePanel++;\n  }\n  checkWord(): void {\n    this.wordInput = this.wordInput.toLowerCase().trim();\n    if (this.wordInput === this.MNEMONIC.array[this.MNEMONIC.verify[0]]) {\n      this.MNEMONIC.verify.shift();\n      this.wordInput = '';\n    }\n    if (!this.MNEMONIC.verify) {\n      // Remove focus from input box\n      document.getElementById('wordInput').blur();\n    }\n  }\n  formatVerifyDescription(index: number): string {\n    if (this.MNEMONIC.verify.length === 0) {\n      return 'Seed backup has been verified!';\n    }\n    switch (index) {\n      case 1:\n      case 21:\n        return `${index}st word`;\n      case 2:\n      case 22:\n        return `${index}nd word`;\n      case 3:\n      case 23:\n        return `${index}rd word`;\n      default:\n        return `${index}th word`;\n    }\n  }\n  indexFormat(index: number): string {\n    if (this.MNEMONIC.verify.length === 0) {\n      return '';\n    } else if (index < 0 || index >= this.MNEMONIC.array.length) {\n      return '';\n    } else {\n      return 'Word ' + (index + 1);\n    }\n  }\n  valueFormat(index: number): string {\n    if (this.MNEMONIC.verify.length === 0) {\n      return '';\n    } else if (index < 0 || index > this.MNEMONIC.array.length) {\n      return '';\n    } else {\n      return this.MNEMONIC.array[index];\n    }\n  }\n  verifyView(): void {\n    if (this.MNEMONIC.verify.length) {\n      this.activePanel++;\n    } else {\n      throw new Error('Unexpected verify array');\n    }\n  }\n  pwdView(): void {\n    this.activePanel++;\n    this.userMnemonic = '';\n  }\n\n  mnemonicMatch(): boolean {\n    return this.MNEMONIC.string === this.userMnemonic;\n  }\n  async encryptWallet(): Promise<void> {\n    if (this.validPwd()) {\n      this.messageService.startSpinner('Encrypting wallet...');\n      const pwd = this.pwd1;\n      this.pwd1 = '';\n      this.pwd2 = '';\n      const ans = await this.walletService.createEncryptedWallet(this.MNEMONIC.string, pwd, '', true);\n      this.seed = ans.seed;\n      this.data = ans.data;\n      this.pkh = ans.pkh;\n      this.pk = ans.pk;\n      this.MNEMONIC.string = '';\n      this.MNEMONIC.array = [];\n      this.MNEMONIC.verify = [];\n      this.activePanel++;\n      this.messageService.stopSpinner();\n      if (document.body.offsetWidth >= 480) {\n        this.showTacos = true;\n      }\n    }\n  }\n  validPwd(): boolean {\n    if (!this.inputValidationService.password(this.pwd1)) {\n      this.messageService.addWarning(this.translate.instant('MNEMONICIMPORTCOMPONENT.PASSWORDWEAK'), 5);\n      return false;\n    } else if (this.pwd1 !== this.pwd2) {\n      this.messageService.addWarning(this.translate.instant('MNEMONICIMPORTCOMPONENT.NOMATCHPASSWORDS'), 5);\n      return false;\n    } else {\n      return true;\n    }\n  }\n  calcStrength(): void {\n    this.pwdStrength = this.inputValidationService.passwordStrengthDisplay(this.pwd1);\n  }\n  async done(): Promise<void> {\n    const seed = this.seed;\n    this.seed = null;\n    await this.importService.importWalletFromObject(this.data, seed);\n    this.walletService.storeWallet();\n    this.data = null;\n    this.messageService.addSuccess('Your new wallet is now set up and ready to use!');\n    this.router.navigate([`/account/`]);\n  }\n  export(): string {\n    return JSON.stringify(this.data);\n  }\n  getPkh(): string {\n    return this.pkh;\n  }\n  download(): void {\n    this.exportService.downloadWallet(this.data);\n    this.ekfDownloaded = true;\n  }\n  mouseOut(e): void {\n    e.stopPropagation();\n    this.hideBlur = false;\n    window.getSelection()?.removeAllRanges();\n  }\n  checkSelection(ev): void {\n    ev.stopPropagation();\n    if (this.isTextSelected()) {\n      this.isSelectedMnemonic = true;\n    }\n  }\n  private isTextSelected(): boolean {\n    let selection: Selection;\n    if (window.getSelection) {\n      selection = window.getSelection();\n    } else if (document.getSelection) {\n      selection = document.getSelection();\n    } else return false;\n    return !selection?.isCollapsed;\n  }\n}\n","<div class=\"flex-column card\">\n  <a routerLink=\"/\"><button class=\"flex-row back\"><img src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n  <div *ngIf=\"activePanel === 0\" class=\"flex-column body\">\n    <h1>Import wallet</h1>\n    <div class=\"flex-row import-options\">\n      <span [class.selected]=\"importOption===0\" (click)=\"reset(); importOption = 0\">Keystore File</span>\n      <span [class.selected]=\"importOption===1\" (click)=\"reset(); importOption = 1\">Seed Words</span>\n      <span [class.selected]=\"importOption===2\" (click)=\"reset(); importOption = 2\">Fundraiser</span>\n    </div>\n    <ng-container *ngIf=\"importOption === 0\">\n      <form autocomplete=\"off\">\n        <p class=\"description\">\n          Import your wallet from an encrypted keystore file (<span style=\"text-transform: lowercase;\">.tez</span>)\n        </p>\n        <input #keyStore name=\"none\" type=\"file\" (change)=\"handleFileInput($event.target.files)\"\n          accept=\".tez{{ firefox ? ', application/json' : '' }}\" id=\"file\" name=\"file\">\n        <div class=\"flex-row button input-file-wrapper\">\n          <label for=\"file\" class=\"flex-row button input-file\" [class.loaded]=\"walletJson\"\n            (click)=\"keyStore?.nativeElement?.click();\">\n            <ng-container *ngIf=\"!walletJson\"><span class=\"b\">Browse</span><img\n                src=\"../../../../../assets/img/import-plus.png\" /></ng-container>\n            <ng-container *ngIf=\"walletJson\">\n              <div class=\"flex-row body\"><img src=\"../../../../../assets/img/lock.png\" />&nbsp;&nbsp;<span\n                  class=\"flex-row filename\">{{\n                  fileName\n                  }}</span>\n              </div>\n              <span class=\"b\">Browse</span>\n            </ng-container>\n          </label>\n        </div>\n        <input *ngIf=\"walletJson\" name=\"none\" type=\"password\" class=\"text\" autocomplete=\"current-password\"\n          (keydown.enter)='!messageService.spinnerOn ? checkImportPwd() : null' id=\"pwd\" [(ngModel)]=\"pwd\" placeholder=\"Password\">\n        <button class=\"button next\" [style.visibility]=\"!walletJson ? 'hidden' : ''\"\n          (click)='!messageService.spinnerOn ? checkImportPwd() : null'>Import</button>\n      </form>\n    </ng-container>\n    <ng-container *ngIf=\"importOption > 0\">\n      <form autocomplete=\"off\">\n        <p class=\"description faucet\" *ngIf=\"importOption === 2\"><span>Please make sure to first <a\n              routerLink=\"/activate\">activate</a> your fundraiser wallet.</span></p>\n        <span class=\"description label\">RECOVERY (SEED) WORDS <span style=\"color: #98a0ab\">12-24 WORDS</span></span>\n        <textarea name=\"none\" class=\"text seed-word\" [(ngModel)]=\"mnemonic\" autocomplete=\"off\"\n          [placeholder]=\"'Seed Words (required)'\"></textarea>\n      </form>\n      <ng-container *ngIf=\"importOption === 1\">\n        <app-ui-toggle-advanced style=\"width: 13rem;\" [default]=\"false\" (stateChange)=\"advancedForm = $event\">\n        </app-ui-toggle-advanced>\n        <br /><br />\n        <form autocomplete=\"off\" *ngIf=\"advancedForm\" class=\"flex-row-wrap import-option-1\">\n          <div class=\"flex-column\">\n            <span class=\"label\"><b>If your seed words are protected by a passphrase, it needs to be entered\n                here</b></span>\n            <input name=\"none\" class=\"text\" type=\"password\" name=\"passphrase\" autocomplete=\"one-time-code\"\n              [(ngModel)]=\"passphrase\" [placeholder]=\"'Passphrase (optional)'\" readonly=\"true\"\n              (click)=\"clickPassword($event)\" (blur)=\"blurPassword($event)\">\n          </div>\n          <div class=\"flex-column\">\n            <span class=\"label\"><b>Provide the public key hash<br /> to verify your passphrase is correct</b></span>\n            <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"pkh\" [placeholder]=\"'tz1... (recommended)'\">\n          </div>\n          <div class=\"flex-row radios\" *ngIf=\"importOption === 1\">\n            <div class=\"flex-row\">\n              <input name=\"none\" (change)=\"hdImport = !hdImport\" type=\"radio\" name=\"walletType\" value=\"hd\" checked>\n              <span>HD wallet</span>\n            </div>\n            <div class=\"flex-row\">\n              <input name=\"none\" (change)=\"hdImport = !hdImport\" type=\"radio\" name=\"walletType\" value=\"legacy\">\n              <span>Legacy wallet</span>\n            </div>\n          </div>\n        </form>\n      </ng-container>\n      <ng-container *ngIf=\"importOption === 2\">\n        <form autocomplete=\"off\">\n          <span class=\"label\">The email used during the fundraiser</span>\n          <input name=\"none\" class=\"text\" type=\"text\" [(ngModel)]=\"email\" [placeholder]=\"'Email (required)'\">\n          <span class=\"label\">The password you chose during the fundraiser</span>\n          <input name=\"none\" class=\"text\" type=\"password\" name=\"tge-password\" autocomplete=\"one-time-code\"\n            [(ngModel)]=\"password\" [placeholder]=\"'Password (required)'\" readonly=\"true\" (click)=\"clickPassword($event)\"\n            (blur)=\"blurPassword($event)\">\n          <span class=\"label\">Provide the public key hash to verify your email and password are correct</span>\n          <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"pkh\" [placeholder]=\"'tz1... (recomended)'\">\n        </form>\n      </ng-container>\n      <button class=\"button next\" (click)=\"retrieve()\">Import</button>\n    </ng-container>\n  </div>\n  <div *ngIf=\"activePanel==1\" class=\"flex-column body\">\n    <form autocomplete=\"off\">\n      <h1>Set a password</h1>\n      <p class=\"description bold blue\">This password will be used to create an encrypted keystore file.</p>\n      <p class=\"description\">When performing operations that need to be signed with your\n        secret key, this password will be required</p>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.PASSWORD' | translate }}\" class=\"text\"\n        autocomplete=\"new-password\" [(ngModel)]=\"pwd1\" (keyup)=\"calcStrength()\">\n      <small class=\"strength\"> {{ 'NEWWALLETCOMPONENT.PASSWORDSTRENGTH' | translate }} — <b\n          [style.color]=\"pwdStrength === 'Catastrophic!' ? 'darkred' : pwdStrength === 'Very weak!' ? 'red' : pwdStrength === 'Weak!' ? 'orange' : pwdStrength === 'Strong!' ? 'green' : 'red'\">{{\n          pwdStrength }}</b></small>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.CONFIRMPASSWORD' | translate }}\"\n        class=\"text\" autocomplete=\"new-password\" [(ngModel)]=\"pwd2\">\n      <button class=\"button next\" [style.visibility]=\"!pwd1 ? 'hidden' : ''\" (click)=\"setPwd()\">Next</button>\n    </form>\n  </div>\n  <div *ngIf=\"activePanel==2\" class=\"flex-column body\">\n    <h1>Wallet created!</h1>\n    <p class=\"description bold\">Your wallet is now set up and ready to be used.</p>\n    <p class=\"description\">Download your encrypted keystore file and import it when you want to access your wallet.\n    </p>\n    <div class=\"whitebox final\">\n      <p class=\"description bold pkh\">Your public account address:<br />{{ showPkh() }}</p>\n    </div>\n    <button class=\"button next\" (click)=\"download()\">Download</button>\n    <button class=\"button next\" [style.visibility]=\"!Downloaded ? 'hidden' : ''\" (click)=\"done()\">Open Wallet</button>\n  </div>\n</div>","import { Component, OnInit, HostBinding, Input, OnDestroy, AfterViewInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core'; // Multiple instances created ?\nimport { ImportService } from '../../../../../services/import/import.service';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { ExportService } from '../../../../../services/export/export.service';\nimport { InputValidationService } from '../../../../../services/input-validation/input-validation.service';\nimport { utils, hd } from '@tezos-core-tools/crypto-utils';\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-mnemonic-import-wallet',\n  templateUrl: './mnemonic-import.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/login.component.scss']\n})\nexport class MnemonicImportComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.tacos') showTacos = false;\n  @Input('keyStore') keyStore;\n  MIN_PWD_LENGTH = 9;\n  mnemonic: string;\n  email: string;\n  password: string;\n  passphrase: string;\n  pkh: string;\n  importOption = 0;\n  activePanel = 0;\n  hdImport = true;\n  wallet: any;\n  walletJson: string;\n  pwd = '';\n  pwd1: string;\n  pwd2: string;\n  pwdStrength = '';\n  Downloaded = false;\n  fileName = '';\n  showWrongFileUploadMsg: false;\n  browser = 'unknown';\n  advancedForm = false;\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private translate: TranslateService,\n    private importService: ImportService,\n    private router: Router,\n    private messageService: MessageService,\n    private walletService: WalletService,\n    private exportService: ExportService,\n    private inputValidationService: InputValidationService\n  ) {\n    this.subscriptions.add(\n      this.router.events.pipe(filter((e) => e instanceof NavigationEnd && e.url.startsWith('/import'))).subscribe(() => {\n        const navigation = this.router.getCurrentNavigation();\n        this.importOption = navigation.extras?.state?.option ? navigation.extras.state.option : 0;\n      })\n    );\n  }\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    document.documentElement.addEventListener('dragover', this.allowDrop.bind(this));\n    document.documentElement.addEventListener('drop', this.handleFileDragAndDrop.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  clickPassword(e): void {\n    e.target.removeAttribute('readonly');\n    e.target.focus();\n  }\n\n  blurPassword(e): void {\n    e.target.setAttribute('readonly', true);\n  }\n\n  retrieve(): void {\n    if (this.mnemonic) {\n      this.mnemonic = this.mnemonic\n        .toLowerCase()\n        .replace(/(\\r\\n|\\n|\\r)/gm, ' ')\n        .trim();\n    }\n    if (this.importOption === 2) {\n      this.passphrase = this.email + this.password;\n    }\n    if (!this.inputValidationService.mnemonics(this.mnemonic)) {\n      this.subscriptions.add(this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDMNEMONIC').subscribe((res: string) => this.messageService.addWarning(res, 10)));\n    } else if (this.importOption === 2 && !this.inputValidationService.email(this.email)) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDEMAIL').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Invalid email!'\n        )\n      );\n    } else if (this.importOption === 2 && !this.password) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDPASSWORD').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Invalid password!'\n        )\n      );\n    } else if (!this.inputValidationService.passphrase(this.passphrase)) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDPASSPHRASE').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Invalid passphrase!'\n        )\n      );\n    } else if (this.pkh && !this.inputValidationService.address(this.pkh)) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDPKH').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Invalid public key hash!'\n        )\n      );\n    } else {\n      let pkh = '';\n      if (this.pkh) {\n        if (this.importOption === 1 && this.hdImport) {\n          pkh = hd.keyPairFromAccountIndex(utils.mnemonicToSeed(this.mnemonic, this.passphrase, true), 0).pkh;\n        } else {\n          pkh = utils.seedToKeyPair(utils.mnemonicToSeed(this.mnemonic, this.passphrase, false)).pkh;\n        }\n      }\n      if (this.pkh && pkh !== this.pkh) {\n        if (this.importOption === 2) {\n          this.subscriptions.add(\n            this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDEMAILPASSWORD').subscribe((res: string) => this.messageService.addWarning(res, 5))\n          );\n        } else {\n          this.subscriptions.add(\n            this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDPASSPHRASE').subscribe((res: string) => this.messageService.addWarning(res, 5))\n          );\n        }\n      } else {\n        this.activePanel++;\n      }\n    }\n  }\n  async setPwd(): Promise<void> {\n    if (this.validPwd()) {\n      const password = this.pwd1;\n      this.pwd1 = '';\n      this.pwd2 = '';\n      await this.messageService.startSpinner('Encrypting wallet...');\n      try {\n        this.wallet = await this.walletService.createEncryptedWallet(this.mnemonic, password, this.passphrase, this.importOption === 1 && this.hdImport);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n      this.mnemonic = '';\n      this.passphrase = '';\n      this.email = '';\n      this.password = '';\n      this.activePanel++;\n    }\n  }\n\n  validPwd(): boolean {\n    if (!this.inputValidationService.password(this.pwd1)) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.PASSWORDWEAK').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Password is too weak!'\n        )\n      );\n      return false;\n    } else if (this.pwd1 !== this.pwd2) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.NOMATCHPASSWORDS').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // Passwords don't match!\n        )\n      );\n      return false;\n    } else {\n      return true;\n    }\n  }\n  calcStrength(): void {\n    this.pwdStrength = this.inputValidationService.passwordStrengthDisplay(this.pwd1);\n  }\n  export(): string {\n    return JSON.stringify(this.wallet.data);\n  }\n  showPkh(): string {\n    return this.wallet.pkh;\n  }\n  download(): void {\n    this.exportService.downloadWallet(this.wallet.data);\n    this.Downloaded = true;\n  }\n  async done(): Promise<void> {\n    await this.messageService.startSpinner('Loading wallet...');\n    try {\n      await this.importService.importWalletFromObject(this.wallet.data, this.wallet.seed);\n    } finally {\n      this.messageService.stopSpinner();\n    }\n    this.wallet = null;\n    this.router.navigate([`/account/`]);\n    this.subscriptions.add(this.translate.get('MNEMONICIMPORTCOMPONENT.WALLETREADY').subscribe((res: string) => this.messageService.addSuccess(res)));\n  }\n  /* Keystore handling */\n  importPreCheck(keyFile: string): void {\n    this.typeCheckFile(keyFile);\n    if (this.importService.pwdRequired(keyFile)) {\n      this.walletJson = keyFile;\n    } else {\n      throw new Error('Unsupported wallet file');\n    }\n  }\n  typeCheckFile(keyFile: string): void {\n    const obj = JSON.parse(keyFile);\n    // Required\n    try {\n      if (typeof obj.provider !== 'string') {\n        throw new Error('provider not a string!');\n      }\n      if (typeof obj.version !== 'number') {\n        throw new Error('version not a number!');\n      }\n      if (typeof obj.walletType !== 'number') {\n        throw new Error('walletType not a number!');\n      }\n      // Optional\n      if (obj.encryptedSeed && typeof obj.encryptedSeed !== 'string') {\n        throw new Error('encryptedSeed not a string!');\n      }\n      if (obj.pkh && typeof obj.pkh !== 'string') {\n        throw new Error('pkh not a string!');\n      }\n      if (obj.iv && typeof obj.iv !== 'string') {\n        throw new Error('iv not a string!');\n      }\n      if (obj.pk && typeof obj.pk !== 'string') {\n        throw new Error('pk not a string!');\n      }\n      if (obj.encryptedEntropy && typeof obj.encryptedEntropy !== 'string') {\n        throw new Error('encryptedEntropy not a string!');\n      }\n    } catch (e) {\n      this.messageService.addError(e);\n      throw e;\n    }\n  }\n  async checkImportPwd(): Promise<void> {\n    if (!this.walletJson) {\n      this.messageService.addWarning('No keystore file imported', 5);\n    } else if (this.pwd) {\n      await this.messageService.startSpinner('Importing wallet...');\n      try {\n        await this.import(this.walletJson, this.pwd);\n        this.pwd = '';\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    } else {\n      this.messageService.addWarning('No password provided', 5);\n    }\n  }\n  async import(keyFile: string, pwd: string): Promise<void> {\n    this.typeCheckFile(keyFile);\n    await this.importService\n      .importWalletFromJson(keyFile, pwd)\n      .then((success: boolean) => {\n        if (success) {\n          this.router.navigate(['/account/']);\n        } else {\n          console.log(success);\n          this.messageService.addError('Something went wrong');\n        }\n      })\n      .catch((e) => {\n        this.messageService.addError(e);\n        this.walletService.clearWallet();\n        this.messageService.stopSpinner();\n      });\n  }\n  allowDrop(e): void {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n  handleFileDragAndDrop(e): void {\n    e.preventDefault();\n    this.handleFileInput(e.dataTransfer.files);\n  }\n  handleFileInput(files: FileList): boolean {\n    let fileToUpload = files.item(0);\n    if (!fileToUpload) {\n      return false;\n    } else if (!this.validateFile(fileToUpload.name)) {\n      let fileNotSupported = '';\n      this.subscriptions.add(this.translate.get('IMPORTCOMPONENT.FILENOTSUPPORTED').subscribe((res: string) => (fileNotSupported = res)));\n      this.messageService.add(fileNotSupported);\n\n      console.log('Selected file format is not supported');\n      fileToUpload = null;\n      this.walletJson = null;\n      return false;\n    } else {\n      const reader = new FileReader();\n      reader.readAsText(fileToUpload);\n      reader.onload = () => {\n        if (typeof reader.result === 'string') {\n          try {\n            this.importPreCheck(reader.result);\n          } catch (e) {\n            this.messageService.addError(e, 5);\n            this.walletJson = null;\n          }\n          if (this.walletJson) {\n            this.fileName = fileToUpload.name;\n          }\n        } else {\n          this.walletJson = null;\n          throw new Error('Not a string import');\n        }\n      };\n    }\n  }\n  validateFile(name: string): boolean {\n    const ext = name.substring(name.lastIndexOf('.') + 1);\n    if (ext.toLowerCase() === 'tez' || ext.toLowerCase() === 'json') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  reset(): void {\n    this.advancedForm = false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport 'babel-polyfill';\nimport TransportU2F from '@ledgerhq/hw-transport-u2f';\nimport TransportWebHID from '@ledgerhq/hw-transport-webhid';\nimport Tezos from '@obsidiansystems/hw-app-xtz';\nimport { OperationService } from '../operation/operation.service';\nimport { MessageService } from '../message/message.service';\n\n@Injectable()\nexport class LedgerService {\n  transport: any;\n  constructor(private operationService: OperationService, private messageService: MessageService) {}\n  async setTransport() {\n    if (!this.transport) {\n      console.log('Trying to use WebHID for transport...');\n      try {\n        this.transport = await TransportWebHID.create();\n        console.log('Transport is now set to use WebHID!');\n      } catch (e) {\n        this.transport = null;\n        console.warn(\"Couldn't set WebHID as transport!\");\n        console.error(e);\n      }\n    }\n    if (!this.transport) {\n      try {\n        this.transport = await TransportU2F.create();\n        console.warn('Transport is now set to use U2F!');\n      } catch (e) {\n        this.transport = null;\n        console.log(\"Couldn't set U2F as transport!\");\n        console.error(e);\n      }\n    }\n  }\n  async transportCheck() {\n    if (!this.transport) {\n      await this.setTransport();\n    }\n    if (!this.transport) {\n      this.messageService.addError('Failed to set transport. Please make sure your browser supports WebHID or U2F');\n      throw new Error('NO_TRANSPORT_FOUND');\n    }\n  }\n  async getPublicAddress(path: string) {\n    await this.transportCheck();\n    const xtz = new Tezos(this.transport);\n    const result = await xtz\n      .getAddress(path, true)\n      .then((res) => {\n        return this.sanitize(res, true);\n      })\n      .catch((e) => {\n        if (e.message) {\n          this.messageService.addError(e.message);\n        } else {\n          this.messageService.addError(e);\n        }\n        throw e;\n      });\n    const pk = this.operationService.hex2pk(result.publicKey);\n    return pk;\n  }\n  async signOperation(op: string, path: string) {\n    if (!['03', '05'].includes(op.slice(0, 2))) {\n      throw new Error('Invalid prefix');\n    }\n    await this.transportCheck();\n    const xtz = new Tezos(this.transport);\n    console.log('op', op);\n    const result = await xtz\n      .signOperation(path, op)\n      .then((res) => {\n        return this.sanitize(res, false);\n      })\n      .catch((e) => {\n        console.warn(e);\n        this.messageService.addError(e, 0);\n        return null;\n      });\n    console.log(JSON.stringify(result));\n    if (result?.signature) {\n      return result.signature;\n    } else {\n      return null;\n    }\n  }\n  async signHash(hash: string, path: string) {\n    if (hash.length !== 64) {\n      throw new Error('Invalid hash!');\n    }\n    await this.transportCheck();\n    const xtz = new Tezos(this.transport);\n    const result = await xtz\n      .signHash(path, hash)\n      .then((res) => {\n        return this.sanitize(res, false);\n      })\n      .catch((e) => {\n        console.warn(e);\n        this.messageService.addError(e, 0);\n        return null;\n      });\n    console.log(JSON.stringify(result));\n    if (result?.signature) {\n      return result.signature;\n    } else {\n      return null;\n    }\n  }\n  private sanitize(res: any, getPk: boolean) {\n    res = JSON.parse(JSON.stringify(res));\n    if (getPk && typeof res?.publicKey !== 'string') {\n      throw Error('Invalid pk');\n    }\n    if (!getPk && typeof res?.signature !== 'string') {\n      throw Error('Invalid signature');\n    }\n    return res;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LedgerService } from '../../../../../services/ledger/ledger.service';\nimport { ImportService } from '../../../../../services/import/import.service';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { InputValidationService } from '../../../../../services/input-validation/input-validation.service';\nimport { utils } from '@tezos-core-tools/crypto-utils';\n\n@Component({\n  selector: 'app-connect-ledger',\n  templateUrl: './connect-ledger.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/login.component.scss']\n})\nexport class ConnectLedgerComponent implements OnInit {\n  activePanel = 0;\n  defaultPath = \"44'/1729'/0'/0'\";\n  defaultText = 'Default derivation path';\n  path: string;\n  pendingLedgerConfirmation = false;\n  isHDDerivationPathCustom = false;\n  browser = 'unknown';\n\n  constructor(\n    private router: Router,\n    private ledgerService: LedgerService,\n    private importService: ImportService,\n    private messageService: MessageService,\n    private inputValidationService: InputValidationService\n  ) {}\n\n  ngOnInit(): void {\n    this.path = this.defaultText;\n    this.checkBrowser();\n  }\n  checkBrowser(): void {\n    try {\n      if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n        this.browser = 'firefox';\n      } else if ((navigator as any)?.userAgentData?.brands?.some((b) => b.brand === 'Google Chrome' || 'Chromium')) {\n        this.browser = 'chromium';\n      } else if ((navigator as any)?.userAgent.toLowerCase().indexOf('safari') > -1 && navigator.platform.indexOf('Mac') === -1) {\n        this.browser = 'safari';\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n  async getPk(): Promise<void> {\n    const path: string = this.path.replace(this.defaultText, this.defaultPath);\n    if (this.inputValidationService.derivationPath(path)) {\n      this.pendingLedgerConfirmation = true;\n      try {\n        this.messageService.startSpinner('Waiting for Ledger confirmation...');\n        const pk = await this.ledgerService.getPublicAddress(path);\n        console.log('getPK => ' + pk);\n        await this.importFromPk(pk, path);\n      } catch (e) {\n        throw e;\n      } finally {\n        this.pendingLedgerConfirmation = false;\n        this.messageService.stopSpinner();\n      }\n    } else {\n      this.messageService.addWarning('Invalid derivation path');\n    }\n  }\n  async importFromPk(pk: string, path: string): Promise<void> {\n    if (utils.validPublicKey(pk)) {\n      if (await this.importService.importWalletFromPk(pk, path)) {\n        this.router.navigate([`/account/`]);\n      } else {\n        this.messageService.addError('Failed to import Ledger wallet');\n      }\n    } else {\n      this.messageService.addError('Not a valid public key');\n    }\n  }\n  setDefaultPath(v): void {\n    if (this.isHDDerivationPathCustom) {\n      this.path = this.defaultText;\n    } else {\n      this.path = this.defaultPath;\n    }\n    this.isHDDerivationPathCustom = v;\n  }\n}\n","<form autocomplete=\"off\">\n  <div class=\"flex-column card\">\n    <a routerLink=\"/\"><button class=\"flex-row back\"><img\n          src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n    <div class=\"flex-column body\">\n      <h1>Connect your Ledger</h1>\n      <p class=\"description\">Keep the private keys safely on your Ledger device and use Kukai to access the Tezos\n        blockchain.</p>\n      <p class=\"description\">You need to open the Tezos Wallet app on your Ledger device and set the derivation path.\n      </p>\n      <input name=\"none\" type=\"text\" class=\"text\" [disabled]=\"!isHDDerivationPathCustom\" [(ngModel)]=\"path\"\n        value=\"'44\\'/1729\\'/0\\'/0\\''\">\n      <app-ui-toggle-advanced style=\"width: 24rem;\" [default]=\"false\" [text]=\"'Use custom HD derivation path:'\"\n        (stateChange)=\"setDefaultPath($event)\"></app-ui-toggle-advanced>\n      <br /><br /><br />\n      <button class=\"button next\" (click)=\"getPk()\" [disabled]=\"browser === 'safari'\">{{ browser !== 'safari' ?\n        'Connect' : 'Ledger support with Safari is currently unavailable' }}</button>\n    </div>\n  </div>\n</form>","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '404.component.html',\n  styleUrls: ['../../../../scss/components/views/error/error.scss']\n})\nexport class P404Component {\n  constructor() {}\n}\n","<div id=\"error\" class=\"flex-column\">\n  <h1>404</h1>\n  <h4>Oops! You're lost.</h4>\n  <p>The page you are looking for was not found.</p>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '500.component.html',\n  styleUrls: ['../../../../scss/components/views/error/error.scss']\n})\nexport class P500Component {\n  constructor() {}\n}\n","<div id=\"error\" class=\"flex-column\">\n  <h1>500</h1>\n  <h4>Houston, we have a problem!</h4>\n  <p>The page you are looking for is temporarily unavailable.</p>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/agreement/terms-of-use/terms-of-use.component.scss']\n})\nexport class PrivacyPolicyComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n  getHostName(): string {\n    return location.hostname;\n  }\n}\n","<div class=\"legal\">\n  <H1>Privacy Policy</H1>\n  <H5>Introduction</H5>\n  <p>Kukai Digital Wallet (“hereinafter Kukai, collectively encompassing {{getHostName()}}) is committed to ensuring the\n    privacy of all our users. We take our duty to process your personal data very seriously. This policy represents our\n    commitment to your right to privacy, giving you a clear explanation about how we use your information and your\n    rights over that information.</p>\n\n  <p>It’s possible to use {{getHostName()}} (“hereinafter website”) without submitting any personal information.</p>\n\n  <H5>Scope of Privacy Policy</H5>\n  <p>This privacy policy applies only to your use of our Tezos digital wallet, Kukai. Our website may contain links to\n    other websites, which are not hosted by Kukai. Please note that we have no control over how your data is collected,\n    stored, or used by other websites and we advise you to check the privacy policies of any such websites before\n    providing any data to them.</p>\n\n  <H5>What types of information do we collect and how?</H5>\n  <p>Kukai does not keep, process, or store any user data, however some services that Kukai relies on may store some\n    user data. Kukai uses Cloudflare services, which collects anonymized website traffic data.</p>\n\n  <p>Data protection laws require us to have a legal justification to process your personal information. Please note,\n    that to use Kukai digital wallet, no personal information is needed to use or access our website or to use our\n    digital wallet. Once again, Kukai does not store user data on any servers.</p>\n\n  <p>Please note, our website and forum may contain links to other websites which are not hosted by Kukai. Please note\n    that we have no control over how your data is collected, stored, or used by other websites and we advise you to\n    check the privacy policies of any such websites before providing any data to them.</p>\n\n  <H5>Legal obligation</H5>\n  <p>As Kukai does not keep, maintain, or process any personal information, Kukai will attempt to fulfill any legal\n    obligations placed upon us, through a lawfully valid legal order by a court of competent jurisdiction.</p>\n\n  <H5>Jurisdiction</H5>\n  <p>Our website is under Swedish jurisdiction and is subject to Swedish laws (which would negate the above retention\n    rules), and similar. Furthermore, our service providers could also be subject to similar orders without our\n    knowledge.</p>\n\n  <p>We take appropriate security measures to ensure that your digital wallet is secured, accurate and up to date.\n    However the transmission of information over the Internet is never completely secure, so while we do our best to\n    protect any information, however, we cannot guarantee the security of information transmitted to our website.</p>\n\n  <H5>Retention Period For Data</H5>\n  <p>We do not hold, store, maintain, or use any personal information as no personal information is needed to use our\n    digital wallet.</p>\n\n  <H5>Access to and your rights over your personal information and removal of User data:</H5>\n  <p>We do not hold, store, use, or maintain any personal user information. For a User to delete any data from the use\n    of our digital wallet please follow the following instructions: </p>\n\n  <p>Log out from the app to remove all user data from the browser cache.</p>\n\n  <p>For more information please see: <a href=\"https://www.tezos.help/kukai-data-removal/index.html\">https://www.tezos.help/kukai-data-removal/index.html</a></p>\n\n  <H5>Complaints</H5>\n  <p>If you wish to lodge a complaint about our handling of your personal data please get in touch with us on the\n    details above with the details of your complaint at contact@kukai.app. We aim to respond to all complaints within 14\n    working days. All legal requests will be reviewed by our legal department and appropriate action will be taken. If\n    you have a legal request, please contact us at: legal@kukai.app.</p>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-terms-of-use',\n  templateUrl: './terms-of-use.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/agreement/terms-of-use/terms-of-use.component.scss']\n})\nexport class TermsOfUseComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"legal\">\n  <H1>TERMS OF USE</H1>\n  <p><i>Last Updated: June 30, 2020</i></p>\n  <p class=\"notice\">IMPORTANT NOTICE: THIS AGREEMENT IS SUBJECT TO BINDING ARBITRATION AND A WAIVER OF CLASS ACTION RIGHTS AS DETAILED\n    IN SECTION 13. PLEASE READ THE AGREEMENT CAREFULLY.</p>\n\n  <H4>1. Acceptance of terms</H4>\n  <p>Kukai Wallet (hereinafter “Kukai,” “we,” “us,” or “our”) provides a platform for managing Tezos accounts, and\n    allowing ordinary websites and applications to interact with the blockchain network, while keeping the user in\n    control over what transactions they approve, through our website located at https://kukai.app/ (the “Site”), which\n    includes text, images, audio, code and other materials (collectively, the “Content”) and all of the features, and\n    services provided. The Site and any other features, tools, materials, or other services offered from time to time by\n    Kukai Wallet are referred to here as the “Services.” Please read these Terms of Use (the “Terms”) carefully before\n    using the Services. By using or otherwise accessing the Services, or clicking to accept or agree to these Terms\n    where that option is made available, you (1) accept and agree to these Terms, (2) consent to the collection, use,\n    disclosure and other handling of information as described in our Privacy Policy and (3) agree to any additional\n    terms, rules and conditions of participation issued by Kukai Wallet from time to time. If you do not agree to any of\n    the Terms, then you may not access or use the Content or Services.</p>\n\n  <H4>2. Modification of Terms of Use</H4>\n  <p>Except for Section 13, providing for arbitration and waiver of class action rights, Kukai Wallet reserves the\n    right, at its sole discretion, to modify or replace the Terms at any time without notice. We will always try to\n    provide advance notice, however, we reserve the right to modify or replace the Terms at our discretion. The most\n    current version of these Terms will be posted on our Site. You shall be responsible for reviewing and becoming\n    familiar with any such modifications. Use of the Services by you after any modification to the Terms constitutes\n    your acceptance of the Terms as modified.</p>\n\n  <H4>3. Eligibility</H4>\n  <p>You hereby represent and warrant that you are fully able and competent to enter into the terms, conditions,\n    obligations, affirmations, representations and warranties set forth in these Terms and to abide by and comply with\n    these Terms.</p>\n\n  <p>Kukai Wallet is a global platform and by accessing the Content or Services, you are representing and warranting\n    that you are of the legal age of majority in your jurisdiction as is required to access such Services and Content\n    and enter into arrangements as provided by the Services. You further represent that you are otherwise legally\n    permitted to use the service in your jurisdiction including owning cryptographic tokens of value, and interacting\n    with the Services or Content in any way. You further represent you are responsible for ensuring compliance with the\n    laws of your jurisdiction and acknowledge that Kukai Wallet is not liable for your compliance with such laws.</p>\n\n  <p>In addition, you represent to us that you and your financial institutions, or any party that owns or controls you\n    or your financial institutions, are (1) not subject to sanctions or otherwise designated on any list of prohibited\n    or restricted parties, including but not limited to the lists maintained by the United Nations Security Council, the\n    U.S. Government (e.g., the Specially Designated Nationals List and Foreign Sanctions Evaders List of the U.S.\n    Department of Treasury and the Entity List of the U.S. Department of Commerce), the European Union or its Member\n    States, or other applicable government authority and (2) not located in any country to which the United States has\n    embargoed goods or has otherwise applied any sanctions.</p>\n\n  <H4>4. Account Password and Security</H4>\n  <p>When setting up an account within Kukai Wallet, you will be responsible for keeping your own account secrets, which\n    may be a word seed phrase, an account file, or other locally stored secret information. Kukai Wallet encrypts this\n    information locally with a password you provide, that we never send to our servers. You agree to (a) never use the\n    same password for Kukai Wallet that you have ever used outside of this service, (b) keep your secret information and\n    password confidential and do not share them with anyone else and (c) immediately notify Kukai Wallet of any\n    unauthorized use of your account or breach of security. Kukai Wallet cannot and will not be liable for any loss or\n    damage arising from your failure to comply with this section.\n\n  <H4>5. DISCLAIMERS- RISKS</H4>\n\n  <H5>5.1. Warranty Disclaimer</H5>\n  <p>You expressly understand and agree that your use of the Services is at your sole risk. The Services (including the\n    Site and the Content) are provided on an “as is” and “as available” basis, without warranties of any kind, either\n    express or implied, including, without limitation, implied warranties of merchantability, fitness for a particular\n    purpose or non-infringement. You acknowledge that Kukai Wallet has no control over, and no duty to take any action\n    regarding: which users gain access to or use the Services; what effects the Content may have on you; how you may\n    interpret or use the Content; or what actions you may take as a result of having been exposed to the Content. You\n    release Kukai Wallet from any and all liability for you having acquired or not acquired Content through the\n    Services. Kukai Wallet makes no representations concerning any Content contained in or accessed through the\n    Services, and Kukai Wallet will not be responsible or liable for the accuracy, copyright compliance, legality or\n    decency of material contained in or accessed through the Services.</p>\n\n  <p>We do not represent or warrant that access to the Services will be continuous, uninterrupted, timely or secure. You\n    acknowledge and accept that the Services (a) may contain bugs, errors and defects, (b) may function improperly or be\n    subject to periods of downtime and unavailability, (c) may result in total or partial loss or corruption of data and\n    (d) may be modified at any time, including through the release of subsequent versions, all with or without notice to\n    you.</p>\n\n  <p>You acknowledge that Kukai Wallet is not responsible for transferring, safeguarding, or maintaining your private\n    keys or any digital currency associated therewith. If you lose, mishandle or have stolen associated digital currency\n    private keys, you acknowledge that you may not be able to recover associated digital currency, and that Kukai Wallet\n    is not responsible for such loss. You acknowledge that Kukai Wallet is not responsible for any loss, damage or\n    liability arising from your failure to comply with the terms hereunder.</p>\n\n  <H5>5.2 Sophistication and Risk of Cryptographic Systems</H5>\n  <p>By utilizing the Services or interacting with the Content or platform in any way, you represent that you understand\n    the inherent risks associated with cryptographic systems; and warrant that you have an understanding of the usage\n    and intricacies of the native cryptographic token Tezos (xtz), smart contract based tokens, and blockchain-based\n    software systems.</p>\n\n  <H5>5.3 Risk of Regulatory Actions in One or More Jurisdictions</H5>\n  <p>Kukai Wallet and any supported cryptographic token and blockchain could be impacted by one or more regulatory\n    inquiries or regulatory action, which could impede or limit the ability of Kukai Wallet to continue to develop, or\n    which could impede or limit your ability to access or use the Services or the underlying blockchain network.</p>\n\n  <H5>5.4 Risk of Weaknesses or Exploits in the Field of Cryptography</H5>\n  <p>You acknowledge and understand that Cryptography is a progressing field. Advances in code cracking or technical\n    advances such as the development of quantum computers may present risks to cryptocurrencies and Services of Content,\n    which could result in the theft or loss of your cryptographic tokens or property. To the extent possible, Kukai\n    Wallet intends to update the protocol underlying Services to account for any advances in cryptography and to\n    incorporate additional security measures, but does not guarantee or otherwise represent full security of the system.\n    By using the Services or accessing Content, you acknowledge these inherent risks.</p>\n\n  <H5>5.5 Volatility of Cryptocurrencies</H5>\n  <p>You understand that Tezos and other blockchain technologies and associated cryptographic tokens are highly volatile\n    due to many factors including but not limited to adoption, speculation, technology and security risks. You also\n    acknowledge that the cost of transacting on such technologies is variable and may increase at any time causing\n    impact to any activities taking place on the blockchain network. You acknowledge these risks and agree that Kukai\n    Wallet cannot be held liable for such fluctuations or increased costs.</p>\n\n  <H5>5.6 Application Security</H5>\n  <p>You further acknowledge that blockchain applications are code subject to flaws and acknowledge that you are solely\n    responsible for evaluating any code provided by the Services or Content and the trustworthiness of any third-party\n    websites, products, smart-contracts, or Content you access or use through the Services. You further expressly\n    acknowledge and represent that blockchain applications can be written maliciously or negligently, that Kukai Wallet\n    cannot be held liable for your interaction with such applications and that such applications may cause the loss of\n    property or even identity. This warning and others later provided by Kukai Wallet in no way evidence or represent an\n    on-going duty to alert you to all of the potential risks of utilizing the Services or Content. The code to Kukai\n    Wallet can be found at: https://github.com/kukai-wallet/kukai.</p>\n\n  <H4>6. Indemnity</H4>\n  <p>You agree to release and to indemnify, defend and hold harmless Kukai Wallet and its principles, subsidiaries,\n    affiliates and agencies, as well as the officers, directors, employees, shareholders and representatives of any of\n    the foregoing entities, from and against any and all losses, liabilities, expenses, damages, costs (including\n    attorneys’ fees and court costs) claims or actions of any kind whatsoever arising or resulting from your use of the\n    Services, your violation of these Terms, and any of your acts or omissions that implicate publicity rights,\n    defamation or invasion of privacy, and privacy laws. Kukai Wallet reserves the right, at its own expense, to assume\n    exclusive defense and control of any matter otherwise subject to indemnification by you and, in such case, you agree\n    to cooperate with Kukai Wallet in the defense of such matter.</p>\n\n  <H4>7. Limitation on Liability</H4>\n  <p>YOU ACKNOWLEDGE AND AGREE THAT YOU ASSUME FULL RESPONSIBILITY FOR YOUR USE OF THE SITE AND THE SERVICES. YOU\n    ACKNOWLEDGE AND AGREE THAT ANY INFORMATION YOU SEND OR RECEIVE DURING YOUR USE OF THE SITE AND THE SERVICES MAY NOT\n    BE SECURE AND MAY BE INTERCEPTED OR LATER ACQUIRED BY UNAUTHORIZED PARTIES. YOU ACKNOWLEDGE AND AGREE THAT YOUR USE\n    OF THE SITE AND THE SERVICES IS AT YOUR OWN RISK. RECOGNIZING SUCH, YOU UNDERSTAND AND AGREE THAT, TO THE FULLEST\n    EXTENT PERMITTED BY APPLICABLE LAW, NEITHER KUKAI WALLET NOR ITS SUPPLIERS OR LICENSORS WILL BE LIABLE TO YOU FOR\n    ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY OR OTHER DAMAGES OF ANY KIND,\n    INCLUDING WITHOUT LIMITATION DAMAGES FOR LOSS OF PROFITS, GOODWILL, USE, DATA OR OTHER TANGIBLE OR INTANGIBLE LOSSES\n    OR ANY OTHER DAMAGES BASED ON CONTRACT, TORT, STRICT LIABILITY OR ANY OTHER THEORY (EVEN IF KUKAI WALLET HAD BEEN\n    ADVISED OF THE POSSIBILITY OF SUCH DAMAGES), RESULTING FROM THE SITE OR SERVICES; THE USE OR THE INABILITY TO USE\n    THE SITE OR THE SERVICES; UNAUTHORIZED ACCESS TO OR ALTERATION OF YOUR TRANSMISSIONS OR DATA; STATEMENTS OR CONDUCT\n    OF ANY THIRD PARTY ON THE SITE OR THE SERVICES; ANY ACTIONS WE TAKE OR FAIL TO TAKE AS A RESULT OF COMMUNICATIONS\n    YOU SEND TO US; HUMAN ERRORS; TECHNICAL MALFUNCTIONS; FAILURES, INCLUDING PUBLIC UTILITY OR TELEPHONE OUTAGES;\n    OMISSIONS, INTERRUPTIONS, LATENCY, DELETIONS OR DEFECTS OF ANY DEVICE OR NETWORK, PROVIDERS, OR SOFTWARE (INCLUDING,\n    BUT NOT LIMITED TO, THOSE THAT DO NOT PERMIT PARTICIPATION IN THE SERVICES); ANY INJURY OR DAMAGE TO COMPUTER\n    EQUIPMENT; INABILITY TO FULLY ACCESS THE SITE OR THE SERVICES OR ANY OTHER WEBSITE; THEFT, TAMPERING, DESTRUCTION,\n    OR UNAUTHORIZED ACCESS TO, IMAGES OR OTHER CONTENT OF ANY KIND; DATA THAT IS PROCESSED LATE OR INCORRECTLY OR IS\n    INCOMPLETE OR LOST; TYPOGRAPHICAL, PRINTING OR OTHER ERRORS, OR ANY COMBINATION THEREOF; OR ANY OTHER MATTER\n    RELATING TO THE SITE OR ANY OTHER ASPECT OF THE SERVICES.</p>\n\n  <p>SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF CERTAIN WARRANTIES OR THE LIMITATION OR EXCLUSION OF LIABILITY FOR\n    INCIDENTAL OR CONSEQUENTIAL DAMAGES. ACCORDINGLY, SOME OF THE ABOVE LIMITATIONS MAY NOT APPLY TO YOU.</p>\n\n  <H4>8. Intellectual Property</H4>\n  <H5>8.1 Our Proprietary Rights</H5>\n  <p>All title, ownership and intellectual property rights in and to the Services are owned by Kukai Wallet or its\n    licensors. You acknowledge and agree that the Services contains proprietary and confidential information that is\n    protected by applicable intellectual property and other laws. Except as expressly authorized by Kukai Wallet, you\n    agree not to copy, modify, rent, lease, loan, sell, distribute, perform, display or create derivative works based on\n    the Site, or the Services, in whole or in part.</p>\n\n  <H5>8.2 Limited License</H5>\n  <p>We grant you limited, non-exclusive, revocable permission to make use of the Site, and the Services (collectively\n    referred to as, “Access”). This Access shall remain in effect until and unless terminated by you or us. You promise\n    and agree that you will not redistribute or transfer the Services.</p>\n\n  <p>The Kukai Wallet software application, including without limitation the Site, and the Services, are not sold or\n    transferred to you, and Kukai Wallet and its licensors retain ownership of all copies of the software applications\n    even after installation on your personal computers, mobile handsets, tablets, wearable devices, speakers and/or\n    other devices (“Devices”).</p>\n\n  <p>All Kukai Wallet trademarks, service marks, trade names, logos, domain names, and any other features of the Kukai\n    Wallet brand (“Kukai Wallet Brand Features”) are the sole property of Kukai Wallet or its licensors. The Terms do\n    not grant you any rights to use any Kukai Wallet Brand Features whether for commercial or non-commercial use.</p>\n\n  <p>You agree to abide by our user guidelines and not to use the Services or any part thereof in any manner not\n    expressly permitted by the Terms. Except for the rights expressly granted to you in the Terms, Kukai Wallet grants\n    no right, title, or interest to you in the Site or the Services.</p>\n\n  <p>Third party software (for example, open source software libraries) included in the Services are made available to\n    you under the relevant third party software library’s license terms.</p>\n\n  <p>Notwithstanding anything herein to the contrary, nothing in the Terms entitles you to copy, modify, fork, merge,\n    combine with another program or create a derivative work of the Services, including without limitation the Site.</p>\n\n  <H4>9. Links</H4>\n  <p>The Services provide, or third parties may provide, links to other World Wide Web or accessible sites, applications\n    or resources. Because Kukai Wallet has no control over such sites, applications and resources, you acknowledge and\n    agree that Kukai Wallet is not responsible for the availability of such external sites, applications or resources,\n    and does not endorse and is not responsible or liable for any content, advertising, products or other materials on\n    or available from such sites or resources. You further acknowledge and agree that Kukai Wallet shall not be\n    responsible or liable, directly or indirectly, for any damage or loss caused or alleged to be caused by or in\n    connection with use of or reliance on any such content, goods or services available on or through any such site or\n    resource.</p>\n\n  <H4>10. Termination and Suspension</H4>\n  <p>Kukai Wallet may terminate or suspend all or part of the Services and your Kukai Wallet access immediately, without\n    prior notice or liability, if you breach any of the terms or conditions of the Terms. Upon termination of your\n    access, your right to use the Services will immediately cease.</p>\n\n  <p>The following provisions of the Terms survive any termination of these Terms: INDEMNITY; WARRANTY DISCLAIMERS;\n    LIMITATION ON LIABILITY; OUR PROPRIETARY RIGHTS; LINKS; TERMINATION; NO THIRD PARTY BENEFICIARIES; BINDING\n    ARBITRATION AND CLASS ACTION WAIVER; GENERAL INFORMATION.</p>\n\n  <H4>11. No Third Party Beneficiaries</H4>\n  <p>You agree that, except as otherwise expressly provided in these Terms, there shall be no third party beneficiaries\n    to the Terms.</p>\n\n  <H4>12. Notice and Procedure For Making Claims of Copyright Infringement</H4>\n  <p>If you believe that your copyright or the copyright of a person on whose behalf you are authorized to act has been\n    infringed, please provide Kukai Wallet’s Copyright Agent a written Notice containing the following information:</p>\n\n  <p>- an electronic or physical signature of the person authorized to act on behalf of the owner of the copyright or\n    other intellectual property interest;\n    <BR>- a description of the copyrighted work or other intellectual property that you claim has been infringed;\n    <BR>- a description of where the material that you claim is infringing is located on the Services;\n    your address, telephone number, and email address;\n    <BR>- a statement by you that you have a good faith belief that the disputed use is not authorized by the copyright\n    owner, its agent, or the law;\n    <BR>- a statement by you, made under penalty of perjury, that the above information in your Notice is accurate and\n    that you are the copyright or intellectual property owner or authorized to act on the copyright or intellectual\n    property owner’s behalf.</p>\n\n  <p>Kukai Wallet’s Copyright Agent can be reached at:</p>\n\n  <p>Email: legal@kukai.app</p>\n\n  <H4>13. Binding Arbitration and Class Action Waiver</H4>\n\n  <p>PLEASE READ THIS SECTION CAREFULLY – IT MAY SIGNIFICANTLY AFFECT YOUR LEGAL RIGHTS, INCLUDING YOUR RIGHT TO FILE A\n    LAWSUIT IN COURT</p>\n\n  <H5>13.1 Initial Dispute Resolution</H5>\n\n  <p>The parties shall use their best efforts to engage directly to settle any dispute, claim, question, or disagreement\n    and engage in good faith negotiations which shall be a condition to either party initiating a lawsuit or\n    arbitration.</p>\n\n  <H5>13.2 Binding Arbitration</H5>\n\n  <p>If the parties do not reach an agreed upon solution within a period of 30 days from the time informal dispute\n    resolution under the Initial Dispute Resolution provision begins, then either party may initiate arbitration as the\n    sole means to resolve all claims, subject to the terms set forth below. Specifically, all claims arising out of or\n    relating to these Terms (including their formation, performance and breach), the parties’ relationship with each\n    other and/or your use of the Services shall be finally settled by binding arbitration administered by the American\n    Arbitration Association in accordance with the provisions of its Commercial Arbitration Rules and the supplementary\n    procedures for consumer related disputes of the American Arbitration Association (the “AAA”), excluding any rules or\n    procedures governing or permitting class actions.</p>\n\n  <p>The arbitrator, and not any federal, state or local court or agency, shall have exclusive authority to resolve all\n    disputes arising out of or relating to the interpretation, applicability, enforceability or formation of these\n    Terms, including, but not limited to any claim that all or any part of these Terms are void or voidable, or whether\n    a claim is subject to arbitration. The arbitrator shall be empowered to grant whatever relief would be available in\n    a court under law or in equity. The arbitrator’s award shall be written, and binding on the parties and may be\n    entered as a judgment in any court of competent jurisdiction.</p>\n\n  <p>The parties understand that, absent this mandatory provision, they would have the right to sue in court and have a\n    jury trial. They further understand that, in some instances, the costs of arbitration could exceed the costs of\n    litigation and the right to discovery may be more limited in arbitration than in court.</p>\n\n  <H5>13.3 Location</H5>\n\n  <p>Binding arbitration shall take place in Louisiana. You agree to submit to the personal jurisdiction of any federal\n    or state court in Orleans Parish, Louisiana, in order to compel arbitration, to stay proceedings pending\n    arbitration, or to confirm, modify, vacate or enter judgment on the award entered by the arbitrator.</p>\n\n  <H5>13.4 Class Action Waiver</H5>\n\n  <p>The parties further agree that any arbitration shall be conducted in their individual capacities only and not as a\n    class action or other representative action, and the parties expressly waive their right to file a class action or\n    seek relief on a class basis. YOU AND KUKAI WALLET AGREE THAT EACH MAY BRING CLAIMS AGAINST THE OTHER ONLY IN YOUR\n    OR ITS INDIVIDUAL CAPACITY, AND NOT AS A PLAINTIFF OR CLASS MEMBER IN ANY PURPORTED CLASS OR REPRESENTATIVE\n    PROCEEDING. If any court or arbitrator determines that the class action waiver set forth in this paragraph is void\n    or unenforceable for any reason or that an arbitration can proceed on a class basis, then the arbitration provision\n    set forth above shall be deemed null and void in its entirety and the parties shall be deemed to have not agreed to\n    arbitrate disputes.</p>\n\n  <H5>13.5 Exception - Litigation of Intellectual Property and Small Claims Court Claims</H5>\n\n  <p>Notwithstanding the parties’ decision to resolve all disputes through arbitration, either party may bring an action\n    in state or federal court to protect its intellectual property rights (“intellectual property rights” means patents,\n    copyrights, moral rights, trademarks, and trade secrets, but not privacy or publicity rights). Either party may also\n    seek relief in a small claims court for disputes or claims within the scope of that court’s jurisdiction.</p>\n\n  <H5>13.6 Choice of Law</H5>\n\n  <p>The Terms and the relationship between you and Kukai Wallet shall be governed by the laws of the State of Louisiana\n    without regard to conflict of law provisions.</p>\n\n  <H4>14. GENERAL INFORMATION</H4>\n\n  <H5>14.1 Entire Agreement</H5>\n\n  <p>These Terms (and any additional terms, rules and conditions of participation that Kukai Wallet may post on the\n    Services) constitute the entire agreement between you and Kukai Wallet with respect to the Services and supersedes\n    any prior agreements, oral or written, between you and Kukai Wallet. In the event of a conflict between these Terms\n    and the additional terms, rules and conditions of participation, the latter will prevail over the Terms to the\n    extent of the conflict.</p>\n\n  <H5>14.2 Waiver and Severability of Terms</H5>\n\n  <p>The failure of Kukai Wallet to exercise or enforce any right or provision of the Terms shall not constitute a\n    waiver of such right or provision. If any provision of the Terms is found by an arbitrator or court of competent\n    jurisdiction to be invalid, the parties nevertheless agree that the arbitrator or court should endeavor to give\n    effect to the parties’ intentions as reflected in the provision, and the other provisions of the Terms remain in\n    full force and effect.</p>\n\n  <H5>14.3 Statute of Limitations</H5>\n\n  <p>You agree that regardless of any statute or law to the contrary, any claim or cause of action arising out of or\n    related to the use of the Services or the Terms must be filed within one (1) year after such claim or cause of\n    action arose or be forever barred.</p>\n\n  <H5>14.4 Section Titles</H5>\n\n  <p>The section titles in the Terms are for convenience only and have no legal or contractual effect.</p>\n\n  <H5>14.5 Communications</H5>\n\n  <p>Users with questions, complaints or claims with respect to the Services may contact us using the relevant contact\n    information set forth above or email us at: contact@kukai.app</p>\n</div>","import { Injectable } from '@angular/core';\nimport { KeyPair } from '../../interfaces';\nimport { WalletService } from '../wallet/wallet.service';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { Parser } from '@taquito/michel-codec';\nimport { valueEncoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { OperationService } from '../operation/operation.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmbeddedAuthService {\n  constructor(private walletService: WalletService, private operationService: OperationService) {}\n  async authenticate(authReq: any, origin: string, keyPair: KeyPair = null): Promise<{ message: string; signature: string }> {\n    if (!origin) {\n      throw new Error('NO_DOMAIN_FOUND');\n    } else if ((!this.walletService?.wallet || !this.walletService.isEmbeddedTorusWallet()) && !keyPair) {\n      throw new Error('NO_WALLET_FOUND');\n    }\n    if (!keyPair) {\n      keyPair = await this.walletService.getKeys('', this.walletService.wallet.implicitAccounts[0].pkh).catch((e) => {\n        throw new Error('NO_KEYS_FOUND');\n      });\n    }\n    const authMessage: string = this.createAuthMessage(authReq?.id, authReq?.nonce, origin, keyPair.pk, keyPair.pkh);\n    const signature = this.signMessage(authMessage, keyPair.sk);\n    return { message: authMessage, signature };\n  }\n  async signExprSilent(hexExpr: string): Promise<string> {\n    const keyPair = await this.walletService.getKeys('', this.walletService.wallet.implicitAccounts[0].pkh).catch((e) => {\n      throw new Error('NO_KEYS_FOUND');\n    });\n    const signature: string = this.operationService.sign(hexExpr, keyPair.sk).edsig;\n    return signature;\n  }\n  private createAuthMessage(requestId: string = '', nonce: string = '', domain: string, publicKey: string, address: string): string {\n    if (typeof requestId !== 'string') {\n      throw new Error('INVALID_REQUEST_ID');\n    } else if (typeof nonce !== 'string') {\n      throw new Error('INVALID_NONCE');\n    }\n    const authPayload: any = {\n      requestId,\n      purpose: 'authentication',\n      currentTime: Math.floor(Date.now() / 1000).toString(), // UNIX timestamp\n      nonce,\n      network: this._network(),\n      publicKey,\n      address,\n      domain\n    };\n    if (!requestId) {\n      delete authPayload.requestId;\n    }\n    if (!nonce) {\n      delete authPayload.nonce;\n    }\n    return `Tezos Signed Message: ${JSON.stringify(authPayload)}`;\n  }\n  _network(): string {\n    return CONSTANTS.NETWORK;\n  }\n  private signMessage(message: string, sk: string): string {\n    const parser = new Parser();\n    const expr = parser.parseMichelineExpression(`\"${message.replace(/\"/g, '\\\\\"')}\"`);\n    const hexMessage = `05${valueEncoder(expr)}`;\n    const signature: string = this.operationService.sign(hexMessage, sk).edsig;\n    return signature;\n  }\n}\n","import { Account } from '../../../services/wallet/wallet';\nimport { Template } from 'kukai-embed';\nexport interface PrepareRequest {\n  account: Account;\n  tokenTransfer: string;\n  symbol: string;\n}\nexport interface TemplateRequest {\n  template: Template;\n  ops?: FullyPreparedTransaction[];\n  partialOps?: PartiallyPreparedTransaction[];\n  fee?: TemplateFee;\n}\nexport interface TemplateFee {\n  network: string;\n  storage: string;\n  total: string;\n}\n\nexport interface ConfirmSwapRequest {\n  account: Account;\n  transactions: FullyPreparedTransaction[];\n  externalReq: boolean;\n}\n\nexport enum LqdEntrypoints {\n  addLiquidity = 'addLiquidity',\n  removeLiquidity = 'removeLiquidity',\n  xtzToToken = 'xtzToToken',\n  tokenToXtz = 'tokenToXtz'\n}\n\nexport interface ConfirmRequest {\n  account: Account;\n  tokenTransfer: string;\n  transactions: FullyPreparedTransaction[];\n  externalReq: boolean;\n}\nexport interface PartiallyPreparedTransaction {\n  kind: 'transaction';\n  amount: string;\n  destination: string;\n  parameters?: any;\n  meta?: {\n    alias: string;\n    verifier: string;\n    twitterId?: string;\n  };\n  gasRecommendation?: string;\n  storageRecommendation?: string;\n}\nexport interface FullyPreparedTransaction extends PartiallyPreparedTransaction {\n  fee: string;\n  gasLimit: string;\n  storageLimit: string;\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"flex-row content\">\n    <div class=\"flex-column liquidity-baking\">\n      <div class=\"flex-row main-container\">\n        <div class=\"flex-column right\" [class.expanded]=\"advancedForm\" [class.loaded]=\"chartInit\" [class.expanded-00]=\"moreInfo && mode === Mode.swap\" [class.expanded-01]=\"advancedForm && mode === Mode.swap\" [class.expanded-10]=\"moreInfo && advancedForm && mode === Mode.swap\" [class.expanded-11]=\"mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-100]=\"moreInfo && mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-101]=\"advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-110]=\"moreInfo && advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-111]=\"mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\" [class.expanded-1000]=\"moreInfo && mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\" [class.expanded-1001]=\"advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\" [class.expanded-1010]=\"moreInfo && advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\">\n          <app-ui-chart #leftChart class=\"popout\" [design]=\"'default'\" [type]=\"'line'\" [units]=\"units\" [datas]=\"chartDatas\"\n            [attributes]=\"attributes\" (drawn)=\"chartInit = true;\"></app-ui-chart>\n            <div class=\"filler\" [style.display]=\"chartInit ? '' : 'none'\"></div>\n        </div>\n        <div class=\"flex-column left\" [class.expanded]=\"advancedForm\">\n          <div class=\"flex-column top\">\n            <div class=\"flex-row container-toggle\">\n              <button [class.active]=\"mode === Mode.swap\" (click)=\"toggleMode(Mode.swap)\">SWAP</button>\n              <button [class.active]=\"mode === Mode.liquidity\" (click)=\"toggleMode(Mode.liquidity)\">LIQUIDITY</button>\n            </div>\n            <div class=\"flex-row button close\" (click)=\"close()\"><img class=\"x\"\n                src=\"../../../../../assets/img/close-btn-x.png\" />\n            </div>\n          </div>\n          <app-ui-chart #miniChart class=\"popout-mini\" [design]=\"'mini'\" [type]=\"'line'\" [units]=\"units\"\n            [data]=\"chartData\" [datas]=\"chartDatas\" [attributes]=\"attributes\">\n          </app-ui-chart>\n          <ng-container *ngIf=\"mode === Mode.liquidity\">\n            <form autocomplete=\"off\">\n              <div class=\"flex-column container-toggle-secondary\">\n                <div class=\"flex-row buttons\">\n                  <button [class.active]=\"entrypoint === LqdEntrypoints.addLiquidity\" (click)=\"toggleDirection(0)\">\n                    ADD\n                  </button>\n                  <button [class.active]=\"entrypoint === LqdEntrypoints.removeLiquidity\" (click)=\"toggleDirection(1)\">\n                    REMOVE\n                  </button>\n                </div>\n              </div>\n              <div class=\"flex-column container-inputs\" [class.liquidity]=\"entrypoint === LqdEntrypoints.addLiquidity\">\n                <div class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRaw\" [placeholder]=\"'0'\" value=\"\"\n                        (paste)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\"\n                        (input)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ entrypoint === LqdEntrypoints.addLiquidity ? 'XTZ' : 'LBT' }}</span>\n                      <img\n                        [src]=\"entrypoint === LqdEntrypoints.addLiquidity ? 'assets/img/tezos-xtz-logo.svg' : 'assets/img/tokens/lbt.png'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">{{ entrypoint === LqdEntrypoints.addLiquidity ? 'Add' : 'Remove' }}</div>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.removeLiquidity\" class=\"hint\" (click)=\"updateMaxAmount('qtyRaw')\">Balance: <span class=\"max\">{{lqdBalance}}</span></span>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.addLiquidity\" class=\"hint\">Balance: {{xtzBalance}}</span>\n                </div>\n                <div *ngIf=\"entrypoint === LqdEntrypoints.addLiquidity\" class=\"seperator files add\">\n                  <span class=\"img-wrap\"><img\n                      [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-plus.svg'\" /></span>\n                </div>\n                <div *ngIf=\"entrypoint === LqdEntrypoints.addLiquidity\" class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRawOut\" placeholder=\"0\" [value]=\"qtyRawOut\"\n                        (input)=\"sanitizeNumberInput($event, 8, 'qtyRawOut')\"\n                        (paste)=\"sanitizeNumberInput($event, 8, 'qtyRawOut')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ 'tzBTC' }}</span>\n                      <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">Add</div>\n                  <span class=\"hint\" (click)=\"updateMaxAmount('qtyRawOut')\">Balance: <span class=\"max\">{{ tzBTCBalance\n                      }}</span></span>\n                </div>\n              </div>\n            </form>\n          </ng-container>\n          <ng-container *ngIf=\"mode === Mode.swap\">\n            <form autocomplete=\"off\">\n              <div class=\"flex-column container-inputs\">\n                <div class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRaw\" [placeholder]=\"'0'\" value=\"\"\n                        (paste)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\"\n                        (input)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ entrypoint === LqdEntrypoints.xtzToToken ? 'XTZ' : 'tzBTC' }}</span>\n                      <img\n                        [src]=\"entrypoint === LqdEntrypoints.xtzToToken ? 'assets/img/tezos-xtz-logo.svg' : 'assets/img/tokens/tzbtc.png'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">From</div>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.xtzToToken\" class=\"hint\">Balance: {{ xtzBalance}}</span>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.tokenToXtz\" class=\"hint\" (click)=\"updateMaxAmount('qtyRaw')\">Balance: <span class=\"max\">{{tzBTCBalance}}</span></span>\n                </div>\n                <div class=\"seperator files add\" (click)=\"toggleDirection()\">\n                  <span class=\"img-wrap\"><img\n                      [src]=\"simSemaphore ? 'assets/img/feeLoader.gif' : 'assets/img/swap.svg'\" /></span>\n                </div>\n                <div class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRawOut\" [placeholder]=\"'0'\"\n                        (paste)=\"sanitizeNumberInput($event, qtyOut.decimalPlaces, 'qtyRawOut')\"\n                        (input)=\"sanitizeNumberInput($event, qtyOut.decimalPlaces, 'qtyRawOut')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ entrypoint === LqdEntrypoints.xtzToToken ? 'tzBTC' : 'XTZ' }}</span>\n                      <img\n                        [src]=\"entrypoint === LqdEntrypoints.xtzToToken ? 'assets/img/tokens/tzbtc.png' : 'assets/img/tezos-xtz-logo.svg'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">Expected</div>\n                      <span *ngIf=\"entrypoint === LqdEntrypoints.tokenToXtz\" class=\"hint\">Balance: {{ xtzBalance }}</span>\n                      <span *ngIf=\"entrypoint === LqdEntrypoints.xtzToToken\" class=\"hint\">Balance: {{ tzBTCBalance }}</span>\n                </div>\n              </div>\n            </form>\n          </ng-container>\n          <div *ngIf=\"expectedRate\" class=\"flex-row item expected-rate\">\n            <span class=\"flex-row key\">Exchange Rate:</span>\n            <span class=\"value\">{{ expectedRate }}</span>\n          </div>\n          <div class=\"flex-column more-info-toggle\" [class.expanded]=\"moreInfo\">\n            <div class=\"flex-row item\" (click)=\"moreInfo = !moreInfo\">\n              <span class=\"value\">{{ 'View Details' }} <span *ngIf=\"impactDouble >= 0.04\" class=\"price-impact\">Price\n                  Impact {{ impactDouble | percent:'1.2-2' }}</span></span>\n              <div class=\"flex-row\"><img src=\"assets/img/chevron-down.svg\"></div>\n            </div>\n          </div>\n          <div *ngIf=\"moreInfo\" class=\"more-info-body\"\n            [class.expanded]=\"moreInfo\">\n            <div class=\"flex-row item\">\n              <span class=\"flex-row key\">Price Impact:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The impact your transaction is expected to make on the exchange rate. The size of your swap relative to the size of the pool determines the impact. Note: This impact is what you are accepting in addition to the slippage.\n                </div>\n              </span>\n              <span class=\"value\" [class.warning]=\"impactDouble > 0.04\">{{impactDouble > 0.005 ? (impactDouble | percent:'1.2-2') : \"<0.5%\"}}</span>\n            </div>\n            <div *ngIf=\"(LqdEntrypoints.xtzToToken === entrypoint)\" class=\"flex-row item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span>\n              <span class=\"value\">{{(minimumToken?.internalNormalised | number:'1.2-8') || 0}} tzBTC</span>\n            </div>\n            <div *ngIf=\"(LqdEntrypoints.tokenToXtz === entrypoint)\" class=\"flex-row item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span>\n              <span class=\"value\">{{(minimumXtz?.internalNormalised | number:'1.6-6') || 0}} XTZ</span>\n            </div>\n            <div\n              *ngIf=\"(LqdEntrypoints.removeLiquidity === entrypoint)\"\n              class=\"item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span><br />\n              <span class=\"value\">{{(minimumXtz?.internalNormalised | number:'1.6-6') || 0}} XTZ + {{\n                (minimumToken?.internalNormalised | number:'1.2-8') || 0}} tzBTC</span>\n            </div>\n            <div *ngIf=\"(LqdEntrypoints.addLiquidity === entrypoint)\" class=\"flex-row item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span>\n              <span class=\"value\">{{(minimumLqd?.internalNormalised | number:'1.0-0') || 0}} LBT</span>\n            </div>\n            <div class=\"flex-column slippage\">\n              <span class=\"flex-row label\">Slippage&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  Your transaction will not complete if the exchange rate changes unfavorably by more than this slippage percentage. The slippage does not include the Price Impact, when swapping you are accepting both the Price Impact % and the Slippage %.\n                </div>\n              </span>\n              <div class=\"flex-row inputs\">\n                <button [class.active]=\"slippage === 0.005\" (click)=\"slippage = 0.005; update()\">\n                  0.5%\n                </button>\n                <button [class.active]=\"slippage === 0.01\" (click)=\"slippage = 0.01; update()\">\n                  1%\n                </button>\n                <button [class.active]=\"slippage === 0.03\" (click)=\"slippage = 0.03; update()\">\n                  3%\n                </button>\n                <form autocomplete=\"off\">\n                  <input inputmode=\"decimal\" [class.active]=\"slippage !== 0.03 && slippage !== 0.01 && slippage !== 0.005\"\n                    (input)=\"customSlippage($event)\" (focus)=\"customSlippageFocus($event)\" (blur)=\"customSlippageBlur($event)\"\n                    [placeholder]=\"slippage * 100\" value=\"\" />\n                  <span class=\"placeholder-secondary\">%</span>\n                </form>\n              </div>\n            </div>\n          </div>\n          <div class=\"flex-column more-info-toggle\" [class.expanded]=\"advancedForm\">\n            <div class=\"flex-row item\" (click)=\"advancedForm = !advancedForm\">\n              <span class=\"value\">{{ 'Advanced' }}</span>\n              <div class=\"flex-row\"><img src=\"assets/img/chevron-down.svg\"></div>\n            </div>\n          </div>\n          <form *ngIf=\"advancedForm\" autocomplete=\"off\" class=\"more-info-body\" [class.expanded]=\"advancedForm\">\n            <div class=\"flex-row\">\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Gas limit</label>\n                <input inputmode=\"decimal\" type=\"text\" class=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\"\n                  (paste)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\"\n                  placeholder={{this.defaultTransactionParams.gas.toString()}} [value]=\"customGasLimit\">\n              </div>\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Fee</label>\n                <input inputmode=\"decimal\" type=\"text\" (input)=\"sanitizeNumberInput($event, 6, 'customFee')\"\n                  (paste)=\"sanitizeNumberInput($event, 6, 'customFee')\" class=\"text\"\n                  placeholder={{this.defaultTransactionParams.fee.toString()}} [value]=\"customFee\">\n              </div>\n            </div>\n            <div class=\"flex-row\">\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Storage limit</label>\n                <input inputmode=\"decimal\" type=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\"\n                  (paste)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\" class=\"text\"\n                  placeholder={{this.defaultTransactionParams.storage.toString()}} [value]=\"customStorageLimit\">\n              </div>\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Max Storage cost</label>\n                <input inputmode=\"decimal\" type=\"text\" class=\"text read-only\" [value]=\"burnAmount() ? burnAmount() : '0 tez'\" tabindex=-1\n                  readonly>\n              </div>\n            </div>\n          </form>\n          <div class=\"flex-column bottom\">\n            <div class=\"seperator\"></div>\n            <span class=\"form-validity error\">{{ formInvalid || latestSimError }}</span>\n            <button class=\"confirm\" [disabled]=\"formInvalid || latestSimError\" (click)=\"preview()\">Preview</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FullyPreparedTransaction, PartiallyPreparedTransaction, LqdEntrypoints } from '../../misc/send/interfaces';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { TezosDomainsService } from '../../../services/tezos-domains/tezos-domains.service';\nimport { TokenBalancesService } from '../../../services/token-balances/token-balances.service';\nimport { TokenService } from '../../../services/token/token.service';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { SwapLiquidityService } from '../../../services/swap-liquidity/swap-liquidity.service';\nimport { Amount } from '../../../services/swap-liquidity/classes/Amount';\nimport { ModalComponent } from '../modal.component';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { DefaultTransactionParams } from '../../../interfaces';\nimport Big from 'big.js';\nimport { Account } from '../../../services/wallet/wallet';\nimport assert from 'assert';\nimport { TranslateService } from '@ngx-translate/core';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { TorusService } from '../../../services/torus/torus.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { take } from 'rxjs/operators';\nimport { ChartComponent, ChartSeries } from '../../ui/chart/chart.component';\nimport { ChartData } from 'chart.js';\nimport { ChartService, ChartTitle } from '../../../services/chart/chart.service';\n\nenum Mode {\n  swap = 'swap',\n  liquidity = 'liquidity'\n}\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n\n@Component({\n  selector: 'app-swap-liquidity',\n  templateUrl: './swap-liquidity.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class SwapLiquidityComponent extends ModalComponent {\n  @ViewChild('leftChart') leftChart: ChartComponent;\n  @ViewChild('miniChart') miniChart: ChartComponent;\n  @Output() prepareResponse = new EventEmitter();\n  LqdEntrypoints = LqdEntrypoints;\n  Mode = Mode;\n  Object = Object;\n  mode = Mode.swap;\n  entrypoint: string = LqdEntrypoints.xtzToToken;\n  advancedForm = false;\n\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n\n  readonly lqdTokenContract = 'KT1AafHA1C1vk959wvHWBispY9Y2f3fxBUUo';\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  readonly costPerByte: string = this.estimateService.costPerByte;\n\n  moreInfo = false;\n\n  formInvalid = '';\n  latestSimError = '';\n\n  customFee = '';\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  minimumLqd: Amount = null;\n  minimumXtz: Amount = null;\n  minimumToken: Amount = null;\n  xtzRequired: Amount = null;\n  expectedRate: string;\n  impactDouble: number;\n  qty: Amount = new Amount({\n    normalisedAmount: '',\n    decimalPlaces: 6\n  });\n  qtyRaw = '';\n  qtyOut: Amount = new Amount({\n    normalisedAmount: '',\n    decimalPlaces: 8\n  });\n  qtyRawOut = '';\n  slippage = 0.005;\n\n  xtzBalance = '0';\n  lqdBalance = '0';\n  tzBTCBalance = '0';\n\n  activeAccount = null;\n  transactions: PartiallyPreparedTransaction[] = [];\n\n  balances: any[];\n  name = 'swap-liquidity';\n\n  private subscriptions: Subscription = new Subscription();\n  simSemaphore = 0;\n\n  tooltipValue: string = '--';\n  titleColor = '#333';\n  series = 'day';\n  units = 'tzBTC';\n  attributes: any = {};\n  chartData: ChartData;\n  chartDatas: Array<ChartData> = [];\n  chartOptions = null;\n  popoutOptions: any;\n  chartInit = false;\n\n  constructor(\n    public tokenService: TokenService,\n    public walletService: WalletService,\n    private estimateService: EstimateService,\n    public tezosDomainService: TezosDomainsService,\n    public tokenBalancesService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private swapLiquidityService: SwapLiquidityService,\n    private operationService: OperationService,\n    public torusService: TorusService,\n    private translate: TranslateService,\n    public tezosDomains: TezosDomainsService,\n    private inputValidationService: InputValidationService,\n    private messageService: MessageService,\n    private chartService: ChartService\n  ) {\n    super();\n    const setTokenBalances = () => {\n      this.xtzBalance = Big(this.activeAccount?.balanceXTZ ?? 0)\n        .div(10 ** 6)\n        .toString();\n      this.lqdBalance = this.balances.find((b) => b.contractAddress === this.lqdTokenContract && b.id == 0)?.balance ?? '0';\n      this.tzBTCBalance = this.balances.find((b) => b.contractAddress === this.tzBTCContract && b.id == 0)?.balance ?? '0';\n    };\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        if (!!activeAccount) {\n          this.activeAccount = activeAccount;\n          this.balances = this.tokenBalancesService?.balances;\n          setTokenBalances();\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        this.balances = p?.balances ?? this.tokenBalancesService?.balances;\n        setTokenBalances();\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(() => {\n        this.balances = this.tokenBalancesService?.balances;\n        setTokenBalances();\n      })\n    );\n  }\n\n  async initChartsMobile(): Promise<void> {\n    Promise.all([\n      this.chartService.fetchLBGraphData(ChartSeries.day),\n      this.chartService.fetchLBGraphData(ChartSeries.week),\n      this.chartService.fetchLBGraphData(ChartSeries.month),\n      this.chartService.fetchLBGraphData(ChartSeries.year)\n    ]).then((arr) => {\n      this.chartDatas[ChartSeries.day] = arr[0];\n      this.chartDatas[ChartSeries.week] = arr[1];\n      this.chartDatas[ChartSeries.month] = arr[2];\n      this.chartDatas[ChartSeries.year] = arr[3];\n      //prevents race cond\n      if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n        this.leftChart?.toggleSet(ChartTitle.XTZtzBTC);\n        this.miniChart?.toggleSet(ChartTitle.XTZtzBTC);\n      } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n        this.leftChart?.toggleSet(ChartTitle.tzBTCXTZ);\n        this.miniChart?.toggleSet(ChartTitle.tzBTCXTZ);\n      } else if (this.entrypoint === LqdEntrypoints.addLiquidity || this.entrypoint === LqdEntrypoints.removeLiquidity) {\n        this.leftChart?.toggleSet(ChartTitle.totalValueLocked);\n        this.miniChart?.toggleSet(ChartTitle.totalValueLocked);\n      }\n      this.leftChart?.toggleSeries(ChartSeries.day);\n      this.miniChart?.toggleSeries(ChartSeries.week);\n    });\n  }\n\n  async initChartsDesktop(): Promise<void> {\n    Promise.all([\n      this.chartService.fetchLBGraphData(ChartSeries.day),\n      this.chartService.fetchLBGraphData(ChartSeries.week),\n      this.chartService.fetchLBGraphData(ChartSeries.month),\n      this.chartService.fetchLBGraphData(ChartSeries.year)\n    ]).then((arr) => {\n      this.chartDatas[ChartSeries.day] = arr[0];\n      this.chartDatas[ChartSeries.week] = arr[1];\n      this.chartDatas[ChartSeries.month] = arr[2];\n      this.chartDatas[ChartSeries.year] = arr[3];\n      //prevents race cond\n      if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n        this.leftChart?.toggleSet(ChartTitle.XTZtzBTC);\n        this.leftChart?.toggleSeries(ChartSeries.day);\n      } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n        this.leftChart?.toggleSet(ChartTitle.tzBTCXTZ);\n        this.leftChart?.toggleSeries(ChartSeries.day);\n      } else if (this.entrypoint === LqdEntrypoints.addLiquidity || this.entrypoint === LqdEntrypoints.removeLiquidity) {\n        this.leftChart?.toggleSet(ChartTitle.totalValueLocked);\n        this.leftChart?.toggleSeries(ChartSeries.month);\n      }\n    });\n  }\n\n  async initCharts(): Promise<void> {\n    const isMobile = document.documentElement.style.getPropertyValue('--is-mobile');\n    const style = getComputedStyle(document.body);\n    this.titleColor = style.getPropertyValue('--base-font-color');\n    if (isMobile === '1') {\n      await this.initChartsMobile();\n    } else {\n      await this.initChartsDesktop();\n    }\n  }\n\n  birthExchangeRate(): void {\n    let qty = new Amount({\n      normalisedAmount: 1,\n      decimalPlaces: 6\n    });\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const rate = this.swapLiquidityService.xtzToTokenExchangeRateDisplay(qty, xtzPool, tokenPool, this.swapLiquidityService.settings('liquidityBaking'));\n    this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(rate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n  }\n\n  async init(): Promise<boolean> {\n    this.qtyRaw = '';\n    this.qty = new Amount({\n      normalisedAmount: 0,\n      decimalPlaces: 6\n    });\n    this.balances = this.tokenBalancesService?.balances;\n    const r = await this.hydratePools();\n    this.attributes = { APY: this.swapLiquidityService.estimateLiquidityBakingAPY() };\n    this.initCharts();\n    this.birthExchangeRate();\n    return r;\n  }\n\n  async open(): Promise<void> {\n    this.subjectService.activeAccount.pipe(take(1)).subscribe(async (activeAccount) => {\n      this.activeAccount = activeAccount;\n      await this.estimateService.preLoadData(this.activeAccount.pkh, this.activeAccount.pk);\n      if (await this.init()) {\n        super.open();\n      }\n      this.messageService.stopSpinner();\n    });\n  }\n\n  close(): void {\n    this.reset();\n    this.mode = Mode.swap;\n    this.entrypoint = LqdEntrypoints.xtzToToken;\n    this.chartInit = false;\n    super.close();\n  }\n\n  calculateXtzToToken(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 6\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 8\n    });\n    const xtzToSell = this.qty;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateXtzToToken(\n      xtzToSell,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumToken = result.minimum;\n    this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.rate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    this.impactDouble = result.impactDouble;\n    this.qtyOut = result.expected;\n    this.qtyRawOut = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n  }\n\n  calculateTokenToXTZFromXTZ(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 8\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 6\n    });\n    const xtzToBuy = this.qtyOut;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateTokenToXTZFromXTZ(\n      xtzToBuy,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumXtz = result.xtz.minimum;\n    this.expectedRate = `1 tzBTC ($${Big(result.xtz.rate).times(this.walletService?.wallet?.XTZrate).toFixed(2)}) = ${Big(result.xtz.rate).toFixed(\n      xtzPool.decimalPlaces\n    )} XTZ`;\n    this.impactDouble = result.xtz.impactDouble;\n    this.qty = result.token.expected;\n    this.qtyRaw = result.token.expected?.internalNormalised.toFixed(result.token.expected?.decimalPlaces).toString();\n  }\n\n  calculateTokenToXTZ(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 8\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 6\n    });\n    const tokenToSell = this.qty;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateTokenToXTZ(\n      tokenToSell,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumXtz = result.minimum;\n    this.expectedRate = `1 tzBTC ($${Big(result.rate).times(this.walletService?.wallet?.XTZrate).toFixed(2)}) = ${Big(result.rate).toFixed(\n      xtzPool.decimalPlaces\n    )} XTZ`;\n    this.impactDouble = result.impactDouble;\n    this.qtyOut = result.expected;\n    this.qtyRawOut = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n  }\n\n  calculateXtzToTokenFromToken(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 6\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 8\n    });\n    const tokenToBuy = this.qtyOut;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateXtzToTokenFromToken(\n      tokenToBuy,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumToken = result.token.minimum;\n    this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.token.rate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    this.impactDouble = result.token.impactDouble;\n    this.qty = result.xtz.expected;\n    this.qtyRaw = result.xtz.expected?.internalNormalised.toFixed(result.xtz.expected?.decimalPlaces).toString();\n  }\n\n  calcSwap(type: string = 'qtyRaw'): void {\n    if (type === 'qtyRaw' && this.entrypoint === LqdEntrypoints.xtzToToken) {\n      this.calculateXtzToToken();\n    } else if (type === 'qtyRawOut' && this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      this.calculateTokenToXTZFromXTZ();\n    } else if (type === 'qtyRaw' && this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      this.calculateTokenToXTZ();\n    } else if (type === 'qtyRawOut' && this.entrypoint === LqdEntrypoints.xtzToToken) {\n      this.calculateXtzToTokenFromToken();\n    }\n  }\n\n  calcAddLiquidity(type: string): void {\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    if (type === 'qtyRaw') {\n      const toSell = this.qty;\n      const result = this.swapLiquidityService.calculateAddLiquidityXTZ(\n        toSell,\n        xtzPool,\n        tokenPool,\n        parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n        this.slippage,\n        this.swapLiquidityService.settings('liquidityBaking')\n      );\n      this.minimumLqd = result.liquidityMinimum;\n      this.qtyOut = result.tokenRequired;\n      this.qtyRawOut = result.tokenRequired?.internalNormalised.toFixed(result.tokenRequired?.decimalPlaces).toString();\n      this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.exchangeRate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    } else {\n      const toSell = this.qtyOut;\n      const result = this.swapLiquidityService.calculateAddLiquidityToken(\n        toSell,\n        xtzPool,\n        tokenPool,\n        parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n        this.slippage,\n        this.swapLiquidityService.settings('liquidityBaking')\n      );\n      this.minimumLqd = result.liquidityMinimum;\n      this.qty = this.xtzRequired = result.xtzRequired;\n      this.qtyRaw = result.xtzRequired?.internalNormalised.toFixed(result.xtzRequired?.decimalPlaces).toString();\n      this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.exchangeRate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    }\n  }\n\n  calcRemoveLiquidity(): void {\n    const lqtToBurn = this.qty;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateRemoveLiquidity(\n      lqtToBurn,\n      xtzPool,\n      tokenPool,\n      parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumXtz = result.xtzMinimum;\n    this.minimumToken = result.tokenMinimum;\n  }\n\n  reset(): void {\n    this.minimumLqd = null;\n    this.minimumXtz = null;\n    this.minimumToken = null;\n    this.expectedRate = '';\n    this.impactDouble = undefined;\n    this.xtzRequired = null;\n\n    this.qty = new Amount({\n      normalisedAmount: '',\n      decimalPlaces: 6\n    });\n    this.qtyRaw = '';\n    this.qtyOut = new Amount({\n      normalisedAmount: '',\n      decimalPlaces: 8\n    });\n    this.qtyRawOut = '';\n\n    this.advancedForm = false;\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n    this.defaultTransactionParams = zeroTxParams;\n    this.formInvalid = '';\n    this.latestSimError = '';\n\n    this.slippage = 0.005;\n    this.transactions = [];\n\n    this.moreInfo = false;\n  }\n  async hydratePools(): Promise<boolean> {\n    try {\n      await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    } catch (e) {\n      this.messageService.addError(this.translate.instant('SWAPCOMPONENT.CONTRACTSTORAGEFAILED'));\n      return false;\n    }\n    return true;\n  }\n\n  async update(type: string = 'qtyRaw'): Promise<void> {\n    this.xtzBalance = Big(this.activeAccount?.balanceXTZ ?? 0)\n      .div(10 ** 6)\n      .toString();\n    this.lqdBalance = this.balances.find((b) => b.contractAddress === this.lqdTokenContract && b.id == 0)?.balance ?? '0';\n    this.tzBTCBalance = this.balances.find((b) => b.contractAddress === this.tzBTCContract && b.id == 0)?.balance ?? '0';\n    if (this.entrypoint === LqdEntrypoints.xtzToToken || this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      this.calcSwap(type);\n    } else if (this.entrypoint === LqdEntrypoints.addLiquidity) {\n      this.qty = new Amount({\n        normalisedAmount: parseFloat(this.qtyRaw),\n        decimalPlaces: 6\n      });\n      this.qtyOut = new Amount({\n        normalisedAmount: parseFloat(this.qtyRawOut),\n        decimalPlaces: 8\n      });\n      this.calcAddLiquidity(type);\n    } else if (this.entrypoint === LqdEntrypoints.removeLiquidity) {\n      this.qty = new Amount({\n        normalisedAmount: parseFloat(this.qtyRaw),\n        decimalPlaces: 0\n      });\n      this.qtyOut = new Amount({\n        normalisedAmount: parseFloat(this.qtyRawOut),\n        decimalPlaces: 0\n      });\n      this.calcRemoveLiquidity();\n    }\n    if (this.qty && this.qty.internalNormalised) {\n      this.estimateFees();\n    }\n  }\n\n  preview(): void {\n    if (!this.qtyRaw) {\n      return;\n    }\n    try {\n      this.prepareResponse.emit(this.getFullyPreparedTxs());\n      ModalComponent.currentModel.next({ name: '', data: {} });\n      this.reset();\n    } catch (e) {\n      this.formInvalid = e.message;\n    }\n  }\n  toggleMode(mode): void {\n    if (mode === this.mode) {\n      return;\n    }\n    this.reset();\n    const chartToggle = (label) => {\n      const style = getComputedStyle(document.body);\n      this.titleColor = style.getPropertyValue('--base-font-color');\n      this.miniChart.toggleSet(label);\n      this.leftChart.toggleSet(label);\n      if (label === ChartTitle.totalValueLocked) {\n        this.miniChart.toggleSeries(ChartSeries.month);\n        this.leftChart.toggleSeries(ChartSeries.month);\n      } else {\n        this.miniChart.toggleSeries(ChartSeries.week);\n        this.leftChart.toggleSeries(ChartSeries.day);\n      }\n    };\n    if (mode === Mode.swap) {\n      this.mode = Mode.swap;\n      this.entrypoint = LqdEntrypoints.xtzToToken;\n      chartToggle(ChartTitle.XTZtzBTC);\n    } else if (mode === Mode.liquidity) {\n      this.mode = Mode.liquidity;\n      this.entrypoint = LqdEntrypoints.addLiquidity;\n      chartToggle(ChartTitle.totalValueLocked);\n    }\n    this.qty = new Amount({\n      normalisedAmount: 0,\n      decimalPlaces: 6\n    });\n    this.birthExchangeRate();\n  }\n  toggleDirection(dir): void {\n    if (this.mode === 'swap') {\n      const chartToggle = (label) => {\n        const style = getComputedStyle(document.body);\n        this.titleColor = style.getPropertyValue('--base-font-color');\n        this.leftChart.toggleSet(label);\n        this.miniChart.toggleSet(label);\n        this.miniChart.toggleSeries(ChartSeries.week);\n      };\n      this.qtyRaw = this.qtyRawOut;\n      if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n        this.entrypoint = LqdEntrypoints.xtzToToken;\n        chartToggle(ChartTitle.XTZtzBTC);\n      } else if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n        this.entrypoint = LqdEntrypoints.tokenToXtz;\n        chartToggle(ChartTitle.tzBTCXTZ);\n      }\n      this.evalAmount();\n    } else {\n      if (dir === 0 && this.entrypoint !== LqdEntrypoints.addLiquidity) {\n        this.reset();\n        this.entrypoint = LqdEntrypoints.addLiquidity;\n        this.qty = new Amount({\n          normalisedAmount: parseFloat(this.qtyRaw),\n          decimalPlaces: 6\n        });\n      } else if (dir === 1 && this.entrypoint !== LqdEntrypoints.removeLiquidity) {\n        this.reset();\n        this.entrypoint = LqdEntrypoints.removeLiquidity;\n        this.qty = new Amount({\n          normalisedAmount: parseFloat(this.qtyRaw),\n          decimalPlaces: 0\n        });\n      }\n      this.birthExchangeRate();\n    }\n  }\n  getTotalFee(): number {\n    if (this.customFee !== '' && Number(this.customFee)) {\n      return Number(this.customFee);\n    }\n    return Number(this.defaultTransactionParams.fee);\n  }\n  getTotalBurn(): number {\n    if (this.customStorageLimit !== '' && Number(this.customStorageLimit)) {\n      return Number(Big(this.customStorageLimit).mul(this.transactions.length).times(this.costPerByte).div(1000000).toString());\n    }\n    return this.defaultTransactionParams.burn;\n  }\n  burnAmount(): string {\n    const burn = this.customStorageLimit ? Number(Big(this.customStorageLimit).times(this.costPerByte).div(1000000)) : this.defaultTransactionParams.burn;\n    if (burn) {\n      return burn + ' tez';\n    }\n    return '';\n  }\n  customSlippage(e): void {\n    e.target.value = e.target.value.replace(/[^0-9\\.]+/g, '');\n    this.slippage = Math.max(Math.min(100, parseFloat(e.target.value || 0) / 100.0), 0);\n    // this.slippageInput.nativeElement.value = this.slippage;\n    this.update();\n  }\n  customSlippageFocus(e): void {\n    if (e.target.value !== '') {\n      e.target.value = e.target.value.replace(/[^0-9\\.]+/g, '');\n      this.slippage = Math.max(Math.min(100, parseFloat(e.target.value || 0) / 100.0), 0);\n      this.update();\n    }\n  }\n  customSlippageBlur(e): void {\n    if (!Number.isNaN(Number(e.target.value)) && e.target.value !== '') {\n      e.target.value = Math.max(Math.min(100, e.target.value), 0);\n    } else {\n      e.target.value = '';\n      this.slippage = 0.005;\n      this.update();\n    }\n  }\n  getMaxAmount(account: Account): { tez; lqd; tzBTC } {\n    if (account) {\n      let accountBalance = Big(this.xtzBalance);\n      accountBalance = accountBalance.minus(this.customFee && Number(this.customFee) ? Number(this.customFee) : this.defaultTransactionParams.fee);\n      accountBalance = accountBalance.minus(\n        this.customStorageLimit && Number(this.customStorageLimit)\n          ? Number(Big(this.customStorageLimit).times(this.costPerByte).div('1000000'))\n          : this.defaultTransactionParams.burn\n      );\n      accountBalance = accountBalance.minus(0.000001); // dust\n      return {\n        tez: accountBalance.toFixed(),\n        lqd: Big(this.lqdBalance).toFixed(),\n        tzBTC: Big(this.tzBTCBalance).toFixed()\n      };\n    }\n  }\n  async estimateFees(): Promise<void> {\n    console.log('estimate..');\n    const prevSimError = this.latestSimError;\n    this.latestSimError = '';\n    let txs: PartiallyPreparedTransaction[] = [];\n    try {\n      txs = this.getMinimalPreparedTxs();\n      this.transactions = txs;\n    } catch (e) {\n      console.log(e);\n    }\n    if (txs?.length) {\n      this.simSemaphore++;\n      this.latestSimError = '';\n      const callback = (res) => {\n        if (res) {\n          this.formInvalid = this.checkBalances();\n          if (res.error) {\n            this.latestSimError = res.error;\n          } else {\n            this.defaultTransactionParams = res;\n            this.latestSimError = '';\n          }\n          console.log(res, txs);\n        } else {\n          console.log('no res');\n        }\n        this.simSemaphore--;\n      };\n      this.estimateService.estimateTransactions(JSON.parse(JSON.stringify(txs)), this.activeAccount.address, undefined, callback);\n    } else {\n      this.latestSimError = prevSimError;\n    }\n  }\n  updateMaxAmount(input: string = 'qtyRaw'): void {\n    if (this.activeAccount) {\n      const balances = this.getMaxAmount(this.activeAccount);\n      if (!balances) {\n        return;\n      }\n      let balance: string = '0.0';\n      if (this.entrypoint === this.LqdEntrypoints.removeLiquidity) {\n        balance = balances?.lqd;\n        this.qtyRaw = balance;\n        this.update('qtyRaw');\n      } else if (this.entrypoint === this.LqdEntrypoints.tokenToXtz) {\n        if (input === 'qtyRaw') {\n          balance = balances?.tzBTC;\n          this.qtyRaw = balance;\n          this.update('qtyRaw');\n        } else {\n          balance = balances?.tez;\n          this.qtyRawOut = balance;\n          this.update('qtyRawOut');\n        }\n      } else if (this.entrypoint === this.LqdEntrypoints.xtzToToken || this.entrypoint === this.LqdEntrypoints.addLiquidity) {\n        if (input === 'qtyRawOut') {\n          balance = balances?.tzBTC;\n          this.qtyRawOut = balance;\n          this.update('qtyRawOut');\n        } else {\n          balance = balances?.tez;\n          this.qtyRaw = balance;\n          this.update('qtyRaw');\n        }\n      }\n    }\n  }\n  getMinimalPreparedTxs(): PartiallyPreparedTransaction[] {\n    if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: this.qty.internalNormalised.toString(),\n          destination: this.lqdContract,\n          parameters: this.operationService.getXTZToTokenParameters(\n            this.activeAccount.address,\n            this.minimumToken.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        }\n      ]);\n    } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getApproveAmountParameters(this.lqdContract, this.qty.internalBigInt.toFixed(0).toString())\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.lqdContract,\n          parameters: this.operationService.getTokenToXTZParameters(\n            this.activeAccount.address,\n            this.qty.internalBigInt.toFixed(0).toString(),\n            this.minimumXtz.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        }\n      ]);\n    } else if (this.entrypoint === LqdEntrypoints.removeLiquidity) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.lqdContract,\n          parameters: this.operationService.getRemoveLiquidityParameters(\n            this.activeAccount.address,\n            this.qty.internalBigInt.toFixed(0).toString(),\n            this.minimumXtz.internalBigInt.toFixed(0).toString(),\n            this.minimumToken.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        }\n      ]);\n    } else if (this.entrypoint === LqdEntrypoints.addLiquidity) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getApproveAmountParameters(this.lqdContract, this.qtyOut.internalBigInt.toFixed(0))\n        },\n        {\n          kind: 'transaction',\n          amount: this.qty.internalNormalised.toString(),\n          destination: this.lqdContract,\n          parameters: this.operationService.getAddLiquidityParameters(\n            this.activeAccount.address,\n            this.minimumLqd.internalBigInt.toFixed(0).toString(),\n            this.qtyOut.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        }\n      ]);\n    }\n  }\n  getFullyPreparedTxs(): FullyPreparedTransaction[] {\n    assert(!this.simSemaphore, 'Awaiting request');\n    const minimalTxs = this.getMinimalPreparedTxs();\n    this.transactions = minimalTxs;\n    assert(this.inputValidationService.fee(this.customFee), 'Invalid fee');\n    assert(this.inputValidationService.gas(this.customGasLimit), 'Invalid gas limit');\n    assert(this.inputValidationService.gas(this.customStorageLimit), 'Invalid storage limit');\n    assert(!this.checkBalances(), this.checkBalances());\n    assert(minimalTxs.length === this.defaultTransactionParams.customLimits?.length, 'Simulation error');\n    return this.opsWithCustomLimits();\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.defaultTransactionParams.gas.toString()) {\n      extraGas = Number(this.customGasLimit) - this.defaultTransactionParams.gas;\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.defaultTransactionParams.storage.toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.defaultTransactionParams.storage;\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas\n        ? (Number(this.defaultTransactionParams.customLimits[i].gasLimit) + extraGasPerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.defaultTransactionParams.customLimits[i].storageLimit) + extraStoragePerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  checkBalances(): string {\n    if (this.transactions.length > 0 && this.activeAccount) {\n      const balances = this.getMaxAmount(this.activeAccount);\n      if (balances) {\n        const maxTez = Big(balances?.tez).minus(0.000001);\n        const maxLQD = Big(balances.lqd).plus(0.0);\n        const maxtzBTC = Big(balances.tzBTC).plus(0.0);\n        let amount = Big(0);\n        for (const tx of this.transactions) {\n          amount = amount.plus(Big(tx.amount));\n        }\n        if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n          if (!!maxTez && amount.gt(maxTez)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHFEEORAMOUNT');\n          }\n          if (this.minimumToken && this.minimumToken.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n          if (Big(this.qty.internalNormalised).gt(maxtzBTC)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.minimumXtz && this.minimumXtz.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        } else if (this.entrypoint === LqdEntrypoints.addLiquidity) {\n          if (!!maxTez && amount.gt(maxTez)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.qtyOut && Big(this.qtyOut.internalNormalised).gt(maxtzBTC)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.xtzRequired && this.xtzRequired.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n          if (this.minimumLqd && this.minimumLqd.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        } else if (this.entrypoint === LqdEntrypoints.removeLiquidity) {\n          if (Big(this.qty.internalNormalised).gt(maxLQD)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.minimumXtz && this.minimumXtz.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        }\n      }\n    }\n    return '';\n  }\n  sanitizeNumberInput(e, decimalPlaces: number, type = ''): void {\n    const exp = new RegExp(`^\\\\d{0,}(\\\\.\\\\d{0,${decimalPlaces}})?\\$`, 'g');\n    if (type === 'qtyRaw') {\n      if (exp.test(e?.target?.value)) {\n        this.qtyRaw = e?.target?.value;\n      } else {\n        e.target.value = this.qtyRaw;\n      }\n      this.evalAmount('qtyRaw');\n    } else if (type === 'qtyRawOut') {\n      if (exp.test(e?.target?.value)) {\n        this.qtyRawOut = e?.target?.value;\n      } else {\n        e.target.value = this.qtyRawOut;\n      }\n      this.evalAmount('qtyRawOut');\n    } else {\n      if (exp.test(e?.target?.value)) {\n        this[type] = e?.target?.value;\n      } else {\n        e.target.value = this[type];\n      }\n    }\n  }\n  evalAmount(type: string = 'qtyRaw'): void {\n    let qty = this[type];\n    if (parseFloat(qty) < 0.0 || !qty) {\n      this.qtyRawOut = this.qtyRaw = '';\n      return;\n    } else if (isNaN(parseFloat(qty)) && parseFloat(qty) === 0.0) {\n      return;\n    } else if (!isNaN(parseFloat(qty))) {\n      this.update(type);\n    }\n  }\n  openInfoModal(title: string): void {\n    switch (title) {\n      case 'slippage':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message:\n              'Token prices in a pool may change significantly within seconds. Slippage tolerance defines the difference between the expected and current exchange rate that you find acceptable. The higher the slippage tolerance, the more likely a transaction will go through.',\n            title: 'Slippage Information'\n          },\n          forceClose: false\n        });\n        break;\n      case 'pricerate':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The amount of token B you receive for 1 token A, per the current exchange rate.',\n            title: 'Price Rate Information'\n          },\n          forceClose: false\n        });\n        break;\n      case 'impactdouble':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The impact your transaction is expected to make on the exchange rate.',\n            title: 'Price Impact'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumxtz':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of XTZ to be received from the transaction.',\n            title: 'Minimum XTZ'\n          },\n          forceClose: false\n        });\n        break;\n      case 'requiredtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'Required tzBTC needed for transaction.',\n            title: 'Required tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of tzBTC to be received from the transaction.',\n            title: 'Minimum tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumlqt':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of LBT to be received from the transaction.',\n            title: 'Minimum LBT'\n          },\n          forceClose: false\n        });\n        break;\n      default:\n        break;\n    }\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"flex-column confirm-send\" [class.image]=\"tokenBalanceService.isNFT(token)\" [class.batch]=\"parameters\">\n      <form autocomplete=\"off\">\n        <div class=\"flex-row top\">\n          <div class=\"flex-column left\" [style.minHeight]=\"!tokenBalanceService.isNFT(token) ? 'unset' : ''\">\n            <span *ngIf=\"!tokenBalanceService.isNFT(token)\" class=\"key\">SEND AMOUNT:</span>\n            <app-asset class=\"token-image\" [class.balance]=\"!tokenBalanceService.isNFT(token)\"\n              [assets]=\"token ? {displayAsset: token?.displayAsset, thumbnailAsset: token?.thumbnailAsset} : {thumbnailAsset: 'assets/img/tezos-xtz-logo.svg'}\"\n              [priorityList]=\"['thumbnailAsset', 'displayAsset']\" [class.sd]=\"!token\"></app-asset>\n          </div>\n          <div class=\"flex-column right\">\n            <span class=\"flex-row amount\"><span class=\"tez value\">{{ formatAmount(token, totalAmount(),\n                false)\n                }}</span>\n              <ng-container *ngIf=\"!tokenTransfer\"><span class=\"fiat key\">USD: <span class=\"value\">{{'$' +\n                    (totalAmount()\n                    *\n                    walletService.wallet.XTZrate | number:'1.2-2')\n                    }}</span></span>\n              </ng-container>\n            </span>\n            <div class=\"flex-column items\">\n              <span *ngIf=\"tokenBalanceService.isNFT(token)\" class=\"key amount-quantity\">QUANTITY:&nbsp;&nbsp;<span\n                  class=\"value\">{{ getQuantity(totalAmount())\n                  }}</span></span>\n              <span class=\"key\">FEE:&nbsp;&nbsp;<span class=\"value\">{{ (getTotalFee() | number:'1.0-6') + ' tez'\n                  }}</span></span>\n              <span *ngIf=\"getTotalBurn(); let totalBurn\" class=\"key\">STORAGE COST:&nbsp;<span class=\"value\">{{\n                  (totalBurn\n                  |\n                  number:'1.0-6') + ' tez'\n                  }}</span></span>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex-row from\">\n          <div class=\"flex-column left\">\n            <span class=\"key\">FROM: </span>\n          </div>\n          <div class=\"flex-column right\">\n            <div *ngIf=\"getUsername(); let displayName\" class=\"flex-row torus-name\"><img class=\"verifier-logo\"\n                src=\"../../../assets/img/{{ getVerifier() }}-logo.svg\">{{ displayName }}</div>\n            <span class=\"address\">{{\n              activeAccount?.address\n              }}</span>\n          </div>\n        </div>\n        <div *ngIf=\"!parameters\" class=\"flex-row divider\">\n          <span></span><img class=\"icon\" src=\"../../../assets/img/send-down-arrow.png\" /><span></span>\n        </div>\n        <div class=\"flex-row to\">\n          <div class=\"flex-column left\">\n            <span class=\"key\">SEND TO<ng-container *ngIf=\"parameters && transactions?.length > 1\">&nbsp;BATCH\n              </ng-container>: </span>\n          </div>\n          <div class=\"flex-column right\">\n            <div *ngFor=\"let transaction of transactions | slice:0:showAll; index as i\"\n              (click)=\"updateParameters(i, transaction.parameters)\" class=\"flex-column transaction\">\n              <span *ngIf=\"transaction?.meta && transaction.meta?.verifier\" class=\"flex-row torus-to value\"><img\n                  src=\"../../../assets/img/{{ transaction.meta.verifier }}-logo.svg\" class=\"icon\">\n                {{ transaction.meta?.alias }}</span>\n              <span class=\"flex-row single-to\" [class.default]=\"transactions.length === 1\"\n                [class.selectable]=\"transactions.length > 1 && parameters\"\n                [class.active]=\"batchParamIndex === i && transactions.length > 1 && parameters\"><span>{{\n                  transaction?.destination\n                  }}</span></span>\n              <p class=\"previewAttention\" *ngIf=\"tokenTransfer && transaction?.destination.slice(0, 3) === 'KT1'\">\n                Warning:\n                Verify the contract can manage tokens</p>\n            </div>\n            <div *ngIf=\"transactions?.length > 10\" class=\"button show-all\"\n              (click)=\"showAll = showAll === 10 ? undefined : 10\">{{ showAll === 10 ? 'Show All' : 'Show Less' }}</div>\n          </div>\n        </div>\n        <br />\n        <br />\n        <span *ngIf=\"parameters && transactions.length > 1\" class=\"flex-row transfer-amount\"><span class=\"key\">TRANSFER\n            AMOUNT: </span><span class=\"key\">{{ (transactions[batchParamIndex]?.amount | number:'1.0-6')\n            }}</span></span>\n        <div *ngIf=\"parameters && parameters?.entrypoint\" class=\"flex-row contract-call\"><span class=\"key\">CONTRACT\n            CALL:\n          </span><span class=\"key\">{{ parameters?.entrypoint }}</span></div>\n        <app-ui-toggle-advanced style=\"width: calc(100% - 1em);margin: 0 0 2.5em 0;\" *ngIf=\"externalReq\"\n          [default]=\"false\" (stateChange)=\"advancedForm = $event\">\n        </app-ui-toggle-advanced>\n      </form>\n      <div *ngIf=\"advancedForm\" class=\"advanced-form\">\n        <ng-container *ngIf=\"parameters\">\n          <div class=\"tabs-container\">\n            <ul class=\"flex-row tabs\">\n              <li class=\"tab\" [class.active]=\"parametersFormat === 0\" (click)=\"setParametersFormat(0)\">Micheline</li>\n              <li class=\"tab\" [class.active]=\"parametersFormat === 1\" (click)=\"setParametersFormat(1)\">JSON</li>\n            </ul>\n          </div>\n          <textarea *ngIf=\"parameters\" name=\"none\" rows=\"10\" readonly>{{ parametersDisplay }}</textarea>\n        </ng-container>\n        <form autocomplete=\"off\" *ngIf=\"externalReq && (!walletService.isLedgerWallet()) || ledgerError\">\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Gas limit</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\" (input)=\"sanitizeNumberInput($event, 'gas')\"\n                (paste)=\"sanitizeNumberInput($event, 'gas')\" [placeholder]=\"getTotalDefaultGas() || '0'\"\n                [(ngModel)]=\"customGasLimit\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Fee</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\" [placeholder]=\"getTotalFee() || '0'\"\n                (paste)=\"sanitizeNumberInput($event)\" (input)=\"sanitizeNumberInput($event)\" [(ngModel)]=\"customFee\">\n            </div>\n          </div>\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Storage limit</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\" (input)=\"sanitizeNumberInput($event, 'storage')\"\n                (paste)=\"sanitizeNumberInput($event, 'storage')\" [placeholder]=\"getTotalDefaultStorage() || '0'\"\n                [(ngModel)]=\"customStorageLimit\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Max storage cost</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text read-only\" [placeholder]=\"(getTotalBurn() || '0') + ' tez'\"\n                tabindex=-1 readonly>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"flex-column bottom\">\n        <span [style.visibility]=\"!pwdInvalid ? 'hidden' : ''\" [style.margin]=\"!pwdInvalid ? '0' : ''\"\n          class=\"label danger\">{{ this.pwdInvalid }}</span>\n        <ng-container *ngIf=\"walletService.isPwdWallet()\">\n          <span class=\"label\">ENTER YOUR\n            PASSWORD TO CONFIRM:</span>\n          <input name=\"none\" [(ngModel)]=\"password\" autocomplete=\"current-password\" placeholder=\"Password\"\n            class=\"text password\" type=\"password\" (input)=\"this.pwdInvalid = ''\" (change)=\"this.pwdInvalid = ''\"\n            (keydown.enter)='!messageService.spinnerOn ? inject() : null'>\n        </ng-container>\n        <button class=\"confirm\" *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\"\n          (click)=\"ledgerRetry()\">Sign with\n          Ledger</button>\n        <ng-template #elseBlock>\n          <button class=\"confirm\" (click)=\"!messageService.spinnerOn ? inject() : null\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : 'Confirm'}}</button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>","import { EventEmitter, Input, OnChanges, OnDestroy, Output } from '@angular/core';\nimport { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { FullyPreparedTransaction, PrepareRequest } from '../../../misc/send/interfaces';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { EstimateService } from '../../../../services/estimate/estimate.service';\nimport { OperationService } from '../../../../services/operation/operation.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { CoordinatorService } from '../../../../services/coordinator/coordinator.service';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { LedgerService } from '../../../../services/ledger/ledger.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { KeyPair } from '../../../../interfaces';\nimport { emitMicheline, assertMichelsonData } from '@taquito/michel-codec';\nimport Big from 'big.js';\nimport { LedgerWallet, TorusWallet } from '../../../../services/wallet/wallet';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { ModalComponent } from '../../modal.component';\nimport { Subscription } from 'rxjs';\nimport { TezosDomainsService } from '../../../../services/tezos-domains/tezos-domains.service';\nimport { TokenBalancesService } from '../../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-confirm-send',\n  templateUrl: './send-confirmation.component.html',\n  styleUrls: ['../../../../../scss/components/modals/modal.scss']\n})\nexport class ConfirmSendComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() confirmRequest: PrepareRequest = null;\n  @Output() operationResponse = new EventEmitter();\n  syncSub: Subscription;\n  tokenTransfer = '';\n  activeAccount = null;\n  externalReq: boolean = false;\n  transactions: FullyPreparedTransaction[] = [];\n  costPerByte: string = this.estimateService.costPerByte;\n\n  customFee = '';\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  parameters: any = null;\n  batchParamIndex = 0;\n  micheline: any = null;\n  batchParameters: { num: number; parameters: any }[] = [];\n  parametersFormat = 0;\n  parametersDisplay = '';\n  showAll = 10;\n\n  showFullBatch = false;\n  sendResponse = null;\n  ledgerError = '';\n  password = '';\n  pwdInvalid = '';\n  advancedForm = false;\n  name = 'confirm-send';\n  token = null;\n  domain = undefined;\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private translate: TranslateService,\n    public tokenService: TokenService,\n    public walletService: WalletService,\n    private estimateService: EstimateService,\n    private operationService: OperationService,\n    private messageService: MessageService,\n    private coordinatorService: CoordinatorService,\n    private lookupService: LookupService,\n    private ledgerService: LedgerService,\n    private inputValidationService: InputValidationService,\n    public tezosDomainService: TezosDomainsService,\n    public tokenBalanceService: TokenBalancesService,\n    private subjectService: SubjectService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.confirmRequest?.currentValue) {\n      this.reset(true);\n      this.externalReq = changes.confirmRequest.currentValue.externalReq;\n      this.tokenTransfer = changes.confirmRequest.currentValue.tokenTransfer;\n      this.activeAccount = changes.confirmRequest.currentValue.account;\n      this.tezosDomainService.getDomainFromAddress(this.activeAccount?.address).then((domain) => {\n        this.domain = domain;\n      });\n      this.transactions = changes.confirmRequest.currentValue.transactions;\n      this.token = this.tokenService.getAsset(this.tokenTransfer);\n      console.log('transactions', this.transactions);\n      if (this.externalReq) {\n        ModalComponent.currentModel.next({\n          name: this.name,\n          data: null\n        });\n      }\n      this.init();\n      if (this.externalReq) {\n        this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n          if (response) {\n            this.closeModalAction('silent');\n          }\n        });\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  open(data: any): void {\n    this.customFee = data?.customFee;\n    this.customGasLimit = data?.customGasLimit;\n    this.customStorageLimit = data?.customStorageLimit;\n    super.open();\n  }\n  async init(): Promise<void> {\n    await this.loadParameters();\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      this.ledgerError = '?';\n    }\n  }\n  async loadParameters(): Promise<void> {\n    if (this.transactions.length > 1) {\n      for (const [i, op] of this.transactions.entries()) {\n        if (op.parameters) {\n          this.batchParameters.push({\n            num: i + 1,\n            parameters: op.parameters\n          });\n          if (!this.parameters) {\n            this.updateParameters(0, op.parameters);\n          }\n        }\n      }\n    } else if (this.transactions[0].parameters) {\n      this.updateParameters(0, this.transactions[0].parameters);\n    }\n  }\n  updateParameters(index: number, parameters: any): void {\n    if (!parameters) {\n      return;\n    }\n    this.batchParamIndex = index;\n    this.parameters = parameters;\n    this.parametersToMicheline();\n    this.parametersDisplay = this.parametersTextboxDisplay();\n  }\n  parametersTextboxDisplay(): string {\n    return !this.parametersFormat ? this.micheline.value : JSON.stringify(this.parameters.value, null, 2);\n  }\n  setParametersFormat(id: number): void {\n    this.parametersFormat = id;\n    this.parametersDisplay = this.parametersTextboxDisplay();\n  }\n  beaconTokenTransfer(op: any): null | { tokenId: string; to: string; amount: string } {\n    if (op.parameters && this.tokenService.isKnownTokenContract(op.destination)) {\n      return this.operationService.parseTokenTransfer(op);\n    }\n    return null;\n  }\n  parametersToMicheline(): void {\n    if (this.parameters) {\n      try {\n        if (!this.parameters.value || !this.parameters.entrypoint) {\n          throw new Error('entrypoint and value expected');\n        }\n        assertMichelsonData(this.parameters.value);\n        const res = emitMicheline(this.parameters.value, {\n          indent: '  ',\n          newline: '\\n'\n        });\n        this.micheline = {\n          entrypoint: this.parameters.entrypoint,\n          value: res\n        };\n      } catch (e) {\n        console.warn(e);\n        this.micheline = null;\n      }\n    }\n  }\n  getTotalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  getTotalCost(display: boolean = false): string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return totalFee;\n  }\n  getTotalFee(): string {\n    if (this.customFee) {\n      return this.customFee;\n    }\n    let totalFee = Big(0);\n    for (const tx of this.transactions) {\n      totalFee = totalFee.add(tx.fee ? tx.fee : 0);\n    }\n    return totalFee.toFixed();\n  }\n  getTotalBurn(): number {\n    const totalActiveStorageLimit: number =\n      this.customStorageLimit !== '' && Number(this.customStorageLimit) ? Number(this.customStorageLimit) : this.getTotalDefaultStorage();\n    return Number(Big(totalActiveStorageLimit).times(this.costPerByte).div(1000000).toString());\n  }\n  getTotalDefaultGas(): number {\n    let totalGas = Big(0);\n    for (const tx of this.transactions) {\n      totalGas = totalGas.plus(tx.gasLimit);\n    }\n    return totalGas.toFixed();\n  }\n  getTotalDefaultStorage(): number {\n    let totalStorage = Big(0);\n    for (const tx of this.transactions) {\n      totalStorage = totalStorage.plus(tx.storageLimit);\n    }\n    return totalStorage.toFixed();\n  }\n  getQuantity(amount): number {\n    return Big(amount)\n      .div(10 ** (false ? this.token.decimals : 0))\n      .toFixed();\n  }\n  totalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  formatAmount(token, amount: string, baseUnit = true): string {\n    if (!token) {\n      return `${Big(amount)\n        .div(10 ** (baseUnit ? 6 : 0))\n        .toFixed()} tez`;\n    } else {\n      if (token) {\n        if (this.tokenBalanceService.isNFT(token)) {\n          return `${token.name}`;\n        } else {\n          return `${Big(amount)\n            .div(10 ** (baseUnit ? token.decimals : 0))\n            .toFixed()} ${token.symbol}`;\n        }\n      } else {\n        return '[Unknown token]';\n      }\n    }\n  }\n  async ledgerRetry(): Promise<void> {\n    if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n      this.messageService.addError('Invalid fee');\n      return;\n    }\n    this.messageService.startSpinner('Preparing transaction...');\n    const keys = await this.walletService.getKeys('');\n    if (keys) {\n      await this.sendTransaction(keys);\n    } else {\n      this.messageService.stopSpinner();\n    }\n  }\n  async inject(): Promise<void> {\n    if (this.walletService.isLedgerWallet()) {\n      await this.broadCastLedgerTransaction();\n      this.sendResponse = null;\n      ModalComponent.currentModel.next({ name: '', data: null });\n    } else {\n      if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n        this.messageService.addError('Invalid fee');\n        return;\n      }\n      const pwd = this.password;\n      this.password = '';\n      this.messageService.startSpinner('Signing transaction...');\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n      } catch {\n        this.messageService.stopSpinner();\n      }\n      if (keys) {\n        this.pwdInvalid = '';\n        this.messageService.startSpinner('Sending transaction...');\n        await this.sendTransaction(keys);\n        ModalComponent.currentModel.next({ name: '', data: null });\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.wallet instanceof TorusWallet) {\n          this.pwdInvalid = `Authorization failed`;\n        } else {\n          this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD'); // 'Wrong password!';\n        }\n      }\n    }\n  }\n  async sendTransaction(keys: KeyPair): Promise<void> {\n    const txs: FullyPreparedTransaction[] = this.opsWithCustomLimits();\n    this.subscriptions.add(\n      this.operationService.transfer(this.activeAccount.address, txs, Number(this.getTotalFee()), keys, this.tokenTransfer).subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success === true) {\n            console.log('Transaction successful ', ans);\n            if (ans.payload.opHash) {\n              await this.messageService.stopSpinner();\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                transactions: this.transactions,\n                opHash: ans.payload.opHash,\n                tokenTransfer: this.tokenTransfer\n              };\n              await this.coordinatorService.boost(this.activeAccount.address, metadata);\n              if (this.transactions[0].meta) {\n                this.torusNotification(this.transactions[0]);\n              }\n              for (const transaction of this.transactions) {\n                if (this.walletService.addressExists(transaction.destination)) {\n                  await this.coordinatorService.boost(transaction.destination);\n                }\n              }\n            } else if (this.walletService.wallet instanceof LedgerWallet) {\n              await this.requestLedgerSignature();\n              return;\n            }\n          } else {\n            await this.messageService.stopSpinner();\n            console.log('Transaction error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        },\n        (err) => {\n          this.messageService.stopSpinner();\n          console.log('Error Message ', JSON.stringify(err));\n          if (this.walletService.isLedgerWallet()) {\n            this.messageService.addError('Failed to create transaction', 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        }\n      )\n    );\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.getTotalDefaultGas().toString()) {\n      extraGas = Number(this.customGasLimit) - this.getTotalDefaultGas();\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.getTotalDefaultStorage().toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.getTotalDefaultStorage();\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas ? (Number(this.transactions[i].gasLimit) + extraGasPerOp).toString() : this.transactions[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.transactions[i].storageLimit) + extraStoragePerOp).toString()\n        : this.transactions[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      await this.messageService.startSpinner('Waiting for Ledger signature...');\n      try {\n        const op = this.sendResponse.payload.unsignedOperation;\n        let signature = '';\n        if (op.length <= 2290) {\n          signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n        } else {\n          signature = await this.ledgerService.signHash(\n            this.operationService.ledgerPreHash('03' + op),\n            this.walletService.wallet.implicitAccounts[0].derivationPath\n          );\n        }\n        if (signature) {\n          const signedOp = op + signature;\n          this.sendResponse.payload.signedOperation = signedOp;\n          this.ledgerError = '';\n        } else {\n          this.ledgerError = 'Failed to sign transaction';\n        }\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.subscriptions.add(\n      this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(async (ans: any) => {\n        this.sendResponse = ans;\n        if (ans.success && this.activeAccount) {\n          const metadata = {\n            transactions: this.transactions,\n            opHash: ans.payload.opHash,\n            tokenTransfer: this.tokenTransfer\n          };\n          if (this.transactions[0].meta) {\n            this.torusNotification(this.transactions[0]);\n          }\n          await this.coordinatorService.boost(this.activeAccount.address, metadata);\n          if (this.walletService.addressExists(this.transactions[0].destination)) {\n            await this.coordinatorService.boost(this.transactions[0].destination);\n          }\n          this.operationResponse.emit(ans.payload.opHash);\n        } else {\n          console.log('sendResponse', JSON.stringify(this.sendResponse));\n          this.operationResponse.emit('broadcast_error');\n        }\n        console.log('ans: ' + JSON.stringify(ans));\n        this.reset();\n      })\n    );\n  }\n  async torusNotification(transaction: FullyPreparedTransaction): Promise<void> {\n    if (transaction.meta) {\n      const amount = this.tokenService.formatAmount(this.tokenTransfer, transaction.amount.toString(), false);\n      if (transaction.meta.verifier === 'google') {\n        this.messageService.emailNotify(transaction.meta.alias, amount);\n        this.lookupService.add(transaction.destination, transaction.meta.alias, 2);\n      } else if (transaction.meta.verifier === 'reddit') {\n        this.messageService.redditNotify(transaction.meta.alias, amount);\n        this.lookupService.add(transaction.destination, transaction.meta.alias, 3);\n      } else if (transaction.meta.verifier === 'twitter') {\n        this.messageService.twitterNotify(transaction.meta.twitterId, transaction.meta.alias, amount);\n        this.lookupService.add(transaction.destination, transaction.meta.alias, 4);\n      }\n    }\n  }\n  getUsername(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else if (this.activeAccount) {\n      const party = this.lookupService.resolve({\n        address: this.activeAccount.address\n      });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n  previewAttention(): string {\n    if (this.transactions[0]?.meta?.verifier) {\n      if (!this.tokenTransfer && new Big(this.totalAmount()).gt('50')) {\n        let recipientKind = '';\n        switch (this.transactions[0].meta.verifier) {\n          case 'google':\n            recipientKind = 'Google account email address';\n            break;\n          case 'reddit':\n            recipientKind = 'Reddit username';\n            break;\n          case 'twitter':\n            recipientKind = 'Twitter handle';\n            break;\n          default:\n            recipientKind = 'information';\n        }\n        return `Carefully review the recipient's ${recipientKind}! Spelling mistakes can lead to permanent loss of the transferred funds.`;\n      }\n    }\n    return '';\n  }\n  // Only Numbers with Decimals\n  sanitizeNumberInput(e, type = ''): void {\n    console.dir(this.token?.decimals, e.target);\n    if (['gas', 'storage'].includes(type) || (type === 'amount' && this.token?.decimals == 0)) {\n      e.target.value = e.target.value.replace(/[^0-9]/g, '');\n    } else {\n      e.target.value = e.target.value.replace(/[^0-9\\.]/g, '');\n      if ((e.target.value.match(/\\./g) || []).length > 1) {\n        const tmp = e.target.value.split('');\n        tmp.splice(tmp.lastIndexOf('.'), 1);\n        e.target.value = tmp.join('');\n      }\n      if (e.target.value.charAt(0) === '.') {\n        e.target.value = '0' + e.target.value;\n      }\n    }\n  }\n  closeModalAction(emit: string = null): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.operationResponse.emit(emit);\n    this.reset();\n  }\n  reset(init = false): void {\n    if (!init) {\n      this.confirmRequest = null;\n      if (this.syncSub) {\n        this.syncSub.unsubscribe();\n        this.syncSub = undefined;\n      }\n    }\n    this.tokenTransfer = '';\n    this.transactions = [];\n    this.activeAccount = null;\n\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n\n    this.token = null;\n    this.domain = undefined;\n\n    this.parameters = null;\n    this.batchParamIndex = 0;\n    this.micheline = null;\n    this.batchParameters = [];\n    this.parametersFormat = 0;\n\n    this.showFullBatch = false;\n    this.sendResponse = null;\n    this.ledgerError = '';\n    this.password = '';\n    this.pwdInvalid = '';\n    this.advancedForm = false;\n    this.customFee = '';\n    this.externalReq = false;\n  }\n}\n","<div class=\"flex-row dropdown\" [class.expanded]=\"isOpen\" (click)=\"toggleDropdown()\" [id]=\"ecmpId\">\n  <img class=\"button icon-torus\"\n    [src]=\"torusVerifier === '' ? 'assets/img/tezos-xtz-logo.svg' :  'assets/img/' + torusVerifier.toLowerCase() + '-logo.svg'\" />\n  <input readonly [(ngModel)]=\"torusVerifierName\" /><img class=\"button icon-db\"\n    src=\"../../../assets/img/down-arrow.svg\" />\n  <div class=\"flex-column dropdown-content\">\n    <a [class.selected]=\"torusVerifierName === 'Tezos Address'\"\n      (click)=\"torusVerifier = ''; torusVerifierName = 'Tezos Address';\">\n      Tezos Address\n    </a>\n    <a [class.selected]=\"torusVerifierName === 'Tezos Domains'\"\n      (click)=\"torusVerifier = 'domain'; torusVerifierName = 'Tezos Domains'\">\n      Tezos Domains\n    </a>\n    <ng-container *ngFor=\"let key of torusService.verifierMapKeys\">\n      <ng-container *ngIf=\"torusService.verifierMap[key].lookups\">\n        <a [class.selected]=\"torusVerifierName === torusService.verifierMap[key].name\"\n          (click)=\"torusVerifier = key; torusVerifierName = torusService.verifierMap[key].name\">\n          {{ torusService.verifierMap[key].name }}\n        </a>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TorusService } from '../../../../services/torus/torus.service';\nimport { DropdownComponent } from '../dropdown.component';\n\n@Component({\n  selector: 'app-ui-dropdown-prepare-send',\n  templateUrl: './prepare-send-dropdown.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/prepare-send-dropdown.component.scss']\n})\nexport class PrepareSendDropdownComponent extends DropdownComponent implements OnInit {\n  @Input() torusVerifierName = 'Tezos Address';\n  @Input() torusVerifier = '';\n\n  constructor(public router: Router, public torusService: TorusService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  toggleDropdown(): void {\n    this.dropdownResponse.emit({\n      torusVerifierName: this.torusVerifierName,\n      torusVerifier: this.torusVerifier\n    });\n    this.isOpen = !this.isOpen;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">{{ !isNFT ? getTitle() : 'Send Token'}}</h1>\n    </div>\n    <div class=\"flex-column prepare-send\">\n      <form autocomplete=\"off\">\n        <div *ngIf=\"!this.isMultipleDestinations\" class=\"flex-column top\">\n          <div *ngIf=\"isNFT\" class=\"flex-row token\">\n            <app-asset class=\"asset\" [priorityList]=\"['thumbnailAsset', 'displayAsset']\" [assets]=\"token\"></app-asset>\n            <span class=\"title\">{{token?.name}}</span>\n          </div>\n          <span *ngIf=\"!this.token || !(this.token?.isBooleanAmount || this.token?.balance == 1)\"\n            class=\"flex-row label title\">ENTER {{!isNFT ? 'AMOUNT' :\n            'QUANTITY'}}:</span>\n          <div *ngIf=\"!this.token || !(this.token?.isBooleanAmount || this.token?.balance == 1)\"\n            class=\"flex-row amount\">\n            <input #amountInput inputmode=\"decimal\" name=\"none\" [placeholder]=\"token?.decimals == 0 ? '0' : '0.00'\" [(ngModel)]=\"amount\"\n              name=\"none\" (mousedown)=\"sendMax = false; default\"\n              (input)=\"sanitizeNumberInput($event, 'amount'); amountChange()\"\n              (paste)=\"sanitizeNumberInput($event, 'amount')\" (change)=\"amountChange()\"\n              [disabled]=\"isMultipleDestinations\" />\n            <button *ngIf=\"!this.isMultipleDestinations\" tabindex=-1 class=\"small\" [class.max]=\"sendMax\"\n              (click)=\"sendEntireBalance($event)\">MAX</button>\n          </div>\n          <div class=\"flex-row fees\">\n            <span *ngIf=\"!tokenTransfer\" class=\"amount-usd\">\n              <span>USD:&nbsp;</span>{{'$' + (getTotalAmount() * walletService.wallet.XTZrate | number:'1.2-2' ||\n              '0.00')\n              }}\n            </span>\n            <span class=\"amount-fee\"><span>FEE{{ getTotalBurn() > 0 ? ' & STORAGE COST' : ''}}:&nbsp;</span><img\n                *ngIf=\"simSemaphore\" src=\"../../../../assets/img/feeLoader.gif\">{{ getTotalCost() != 0 ? (getTotalCost()\n              |\n              number:'1.0-6') + ' tez' : '--'\n              }}</span>\n          </div>\n        </div>\n      </form>\n      <form class=\"to\" autocomplete=\"off\">\n        <div *ngIf=\"!this.isMultipleDestinations\" class=\"flex-column\">\n          <span class=\"label title\">SEND TO:</span>\n          <div class=\"address\">\n            <div *ngIf=\"!toPkh\" class=\"flex-column tool\" id=\"paste\" (click)=\"pasteToPkh()\">\n              <img src=\"assets/img/paste.svg\" />\n            </div>\n            <app-qr-scanner *ngIf=\"!toPkh\" [override]=\"true\" class=\"flex-column tool\" id=\"qr\" (scanResponse)=\"handleScanResponse($event)\"></app-qr-scanner>\n            <app-ui-dropdown-prepare-send [torusVerifier]=\"torusVerifier\" [torusVerifierName]=\"torusVerifierName\"\n              (dropdownResponse)=\"dropdownResponse($event)\"></app-ui-dropdown-prepare-send>\n            <input type=\"text\" placeholder=\"Recipient\" class=\"text\" (input)=\"updateDefaultValues($event)\"\n              (change)=\"toPkhChange()\" name=\"toPkh\" [(ngModel)]=\"toPkh\">\n          </div>\n          <div class=\"flex-row address-display\">\n            <span [style.display]=\"!torusPendingLookup && torusLookupAddress ? '' : 'none'\">{{ torusLookupAddress\n              }}</span><span [style.display]=\"torusPendingLookup ? '' : 'none'\"><img\n                src=\"../../../../assets/img/feeLoader.gif\"></span>\n          </div>\n        </div>\n        <div *ngIf=\"this.isMultipleDestinations\" class=\"flex-column\">\n          <label class=\"label\">Addresses and amounts <span class=\"batchInfo\">{{ batchSpace() }}</span></label>\n          <textarea name=\"none\" type=\"text\" class=\"text\" (input)=\"updateDefaultValues()\" rows=\"3\"\n            [(ngModel)]=\"toMultipleDestinationsString\" name=\"none\"\n            placeholder=\"address1 amount1 ; &#10;address2 amount2 ; &#10;address3 ...\"></textarea>\n        </div>\n        <div class=\"flex-column\">\n          <app-ui-toggle-advanced style=\"width: calc(100% - 1.5em);margin: 1rem 0;\" [default]=\"false\"\n            (stateChange)=\"advancedForm = $event\"></app-ui-toggle-advanced>\n          <button *ngIf=\"!isNFT && advancedForm\" class=\"small multiple-destinations\" (click)=\"toggleDestination()\">\n            <span>\n              <ng-container *ngIf=\"!this.isMultipleDestinations\">Multiple transactions</ng-container>\n              <ng-container *ngIf=\"this.isMultipleDestinations\">Single transaction</ng-container>\n            </span>\n          </button>\n        </div>\n      </form>\n      <form autocomplete=\"off\" *ngIf=\"advancedForm\" class=\"flex-column advanced-form\">\n        <div class=\"flex-row\">\n          <div class=\"flex-column\">\n            <label class=\"label\">Gas limit</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\" (input)=\"sanitizeNumberInput($event, 'gas')\"\n              (paste)=\"sanitizeNumberInput($event, 'gas')\" placeholder={{this.defaultTransactionParams.gas.toString()}}\n              [(ngModel)]=\"customGasLimit\" name=\"none\">\n          </div>\n          <div class=\"flex-column\">\n            <label class=\"label\">Fee</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" (input)=\"sanitizeNumberInput($event); updateMaxAmount()\"\n              (paste)=\"sanitizeNumberInput($event); updateMaxAmount()\" class=\"text\"\n              placeholder={{this.defaultTransactionParams.fee.toString()}} [(ngModel)]=\"customFee\" name=\"none\">\n          </div>\n        </div>\n        <div class=\"flex-row\">\n          <div class=\"flex-column\">\n            <label class=\"label\">Storage limit</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" (input)=\"sanitizeNumberInput($event, 'storage'); updateMaxAmount()\"\n              (paste)=\"sanitizeNumberInput($event, 'storage'); updateMaxAmount()\" class=\"text\"\n              placeholder={{this.defaultTransactionParams.storage.toString()}} [(ngModel)]=\"customStorageLimit\"\n              name=\"none\">\n          </div>\n          <div class=\"flex-column\">\n            <label class=\"label\">Max storage cost</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text read-only\" [value]=\"burnAmount() ? burnAmount() : '0 tez'\"\n              tabindex=-1 readonly>\n          </div>\n        </div>\n      </form>\n      <br />\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <span *ngIf=\"formInvalid !== ''\" class=\"label danger\">\n          {{ formInvalid }}\n        </span>\n        <button class=\"confirm\" (click)=\"preview()\">Preview</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { EstimateService } from '../../../../services/estimate/estimate.service';\nimport { DefaultTransactionParams } from '../../../../interfaces';\nimport { FullyPreparedTransaction, PartiallyPreparedTransaction, PrepareRequest } from '../../../misc/send/interfaces';\nimport { Account, ImplicitAccount, OriginatedAccount } from '../../../../services/wallet/wallet';\nimport { TorusService } from '../../../../services/torus/torus.service';\nimport Big from 'big.js';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport assert from 'assert';\nimport { TezosDomainsService } from '../../../../services/tezos-domains/tezos-domains.service';\nimport { ModalComponent } from '../../modal.component';\nimport { TokenBalancesService } from '../../../../services/token-balances/token-balances.service';\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n@Component({\n  selector: 'app-prepare-send',\n  templateUrl: './prepare-send.component.html',\n  styleUrls: ['../../../../../scss/components/modals/modal.scss']\n})\nexport class PrepareSendComponent extends ModalComponent implements OnInit, OnChanges {\n  @Input() prepareRequest: PrepareRequest = null;\n  @Output() prepareResponse = new EventEmitter();\n  @ViewChild('destType') public destType: ElementRef;\n  activeAccount: Account = null;\n  tokenTransfer: string = null;\n  token = null;\n  costPerByte: string = this.estimateService.costPerByte;\n\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n  active = false;\n  isMultipleDestinations = false;\n  advancedForm = false;\n  hideAmount = false;\n  simSemaphore = 0;\n  isNFT = false;\n  accountDropdownIsOpen = false;\n\n  torusVerifierName = 'Tezos Address';\n  torusVerifier = '';\n  torusLookupId = '';\n  torusLookupAddress = '';\n  torusTwitterId = '';\n  torusPendingLookup = false;\n\n  transactions = [];\n  toMultipleDestinationsString = '';\n\n  formInvalid = '';\n  latestSimError = '';\n  prevEquiClass = '';\n\n  sendMax = null;\n\n  amount = '';\n  toPkh = '';\n  customFee = '';\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  name = 'prepare-send';\n\n  constructor(\n    private tokenService: TokenService,\n    private estimateService: EstimateService,\n    public torusService: TorusService,\n    private translate: TranslateService,\n    private walletService: WalletService,\n    public tezosDomains: TezosDomainsService,\n    private inputValidationService: InputValidationService,\n    private tokenBalancesService: TokenBalancesService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.prepareRequest?.currentValue) {\n      this.reset(true);\n      this.tokenTransfer = changes.prepareRequest.currentValue.tokenTransfer ?? null;\n      this.token = this.tokenService.getAsset(this.tokenTransfer);\n      this.isNFT = this.tokenBalancesService.isNFT(this.token);\n      this.activeAccount = changes.prepareRequest.currentValue.account;\n      this.amount = !this.token || !(this.token?.isBooleanAmount || this.token?.balance == 1) ? '' : '1';\n      if (!this.isOpen) {\n        this.openModal();\n      }\n    }\n  }\n  openModal() {\n    ModalComponent.currentModel.next({ name: this.name, data: null });\n    this.estimateService.preLoadData(this.activeAccount.pkh, this.activeAccount.pk);\n  }\n  closeModalAction() {\n    this.prepareResponse.emit(null);\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.reset();\n  }\n\n  reset(init = false) {\n    if (!init) {\n      this.prepareRequest = null;\n    }\n\n    this.defaultTransactionParams = zeroTxParams;\n    this.active = false;\n    this.isMultipleDestinations = false;\n    this.advancedForm = false;\n    this.hideAmount = false;\n    this.simSemaphore = 0;\n\n    this.tokenTransfer = null;\n    this.token = null;\n    this.isNFT = null;\n    this.accountDropdownIsOpen = false;\n\n    this.transactions = [];\n    this.toMultipleDestinationsString = '';\n\n    this.formInvalid = '';\n    this.latestSimError = '';\n    this.prevEquiClass = '';\n    this.torusVerifierName = 'Tezos Address';\n    this.torusVerifier = '';\n\n    this.sendMax = null;\n\n    this.amount = '';\n    this.toPkh = '';\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n    this.clearTorus();\n  }\n  getTitle(): string {\n    return `Send ${this.getAssetName(true)}`;\n  }\n  getAssetName(short = true): string {\n    if (this.tokenTransfer) {\n      return this.token?.symbol ?? this.token?.name ?? 'Unknown';\n    } else {\n      return !this.prepareRequest.symbol ? 'tez' : this.prepareRequest.symbol;\n    }\n  }\n  getTotalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  getTotalCost(display: boolean = false): number | string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return Number(totalFee);\n  }\n  getTotalFee(): number {\n    if (this.customFee !== '' && Number(this.customFee)) {\n      return Number(this.customFee);\n    }\n    return Number(this.defaultTransactionParams.fee);\n  }\n  getTotalBurn(): number {\n    if (this.customStorageLimit !== '' && Number(this.customStorageLimit)) {\n      return Number(Big(this.customStorageLimit).mul(this.transactions.length).times(this.costPerByte).div(1000000).toString());\n    }\n    return this.defaultTransactionParams.burn;\n  }\n  burnAmount(): string {\n    const burn = this.customStorageLimit ? Number(Big(this.customStorageLimit).times(this.costPerByte).div(1000000)) : this.defaultTransactionParams.burn;\n    if (burn) {\n      return burn + ' tez';\n    }\n    return '';\n  }\n  amountChange(): void {\n    this.estimateFees();\n  }\n  async estimateFees(): Promise<void> {\n    console.log('estimate..');\n    const prevSimError = this.latestSimError;\n    this.latestSimError = '';\n    let txs: PartiallyPreparedTransaction[] = [];\n    try {\n      txs = this.getMinimalPreparedTxs();\n      this.transactions = txs;\n    } catch (e) {\n      console.log(e);\n    }\n    if (txs?.length) {\n      const equiClass = this.equiClass(this.activeAccount.address, txs);\n      if (this.prevEquiClass !== equiClass || (this.tokenTransfer && this.checkBalance())) {\n        this.latestSimError = '';\n        this.prevEquiClass = equiClass;\n        this.simSemaphore++; // Put lock on 'Preview and 'Send max'\n        const callback = (res) => {\n          if (res) {\n            if (res.error) {\n              this.formInvalid = res.error;\n              this.latestSimError = res.error;\n            } else {\n              this.defaultTransactionParams = res;\n              this.formInvalid = '';\n              this.latestSimError = '';\n              this.updateMaxAmount();\n            }\n          } else {\n            console.log('no res');\n          }\n          this.simSemaphore--;\n        };\n        this.estimateService.estimateTransactions(JSON.parse(JSON.stringify(txs)), this.activeAccount.address, this.tokenTransfer, callback);\n      } else {\n        this.latestSimError = prevSimError;\n        this.formInvalid = this.latestSimError;\n      }\n    } else {\n      this.latestSimError = prevSimError;\n      if (this.isMultipleDestinations ? !this.toMultipleDestinationsString : !this.toPkh) {\n        this.defaultTransactionParams = zeroTxParams;\n        this.updateMaxAmount();\n        this.prevEquiClass = '';\n      }\n    }\n  }\n  equiClass(sender: string, transactions: any): string {\n    let data = sender;\n    if (this.tokenTransfer) {\n      data += transactions[0].to + transactions[0].amount.toString();\n    } else {\n      for (const tx of transactions) {\n        data += tx.to;\n      }\n    }\n    return data;\n  }\n  /*\n    1. input validation\n      strict checks that\n    2. create basic transaction array\n  */\n  sanitizeNumberInput(e, type = ''): void {\n    console.dir(this.token?.decimals, e.target);\n    if (['gas', 'storage'].includes(type) || (type === 'amount' && this.token?.decimals == 0)) {\n      e.target.value = e.target.value.replace(/[^0-9]/g, '');\n    } else {\n      e.target.value = e.target.value.replace(/[^0-9\\.]/g, '');\n      if ((e.target.value.match(/\\./g) || []).length > 1) {\n        const tmp = e.target.value.split('');\n        tmp.splice(tmp.lastIndexOf('.'), 1);\n        e.target.value = tmp.join('');\n      }\n      if (e.target.value.charAt(0) === '.') {\n        e.target.value = '0' + e.target.value;\n      }\n    }\n  }\n  updateDefaultValues(ev?: any): void {\n    const val = ev?.target.value.trim();\n    if (val && !this.torusVerifier) {\n      if (this.inputValidationService.twitterAccount(val)) {\n        this.torusVerifier = 'twitter';\n        this.torusVerifierName = 'Twitter';\n      } else if (this.inputValidationService.tezosDomain(val)) {\n        this.torusVerifier = 'domain';\n        this.torusVerifierName = 'Tezos Domains';\n      }\n      ev.target.value = ev.target.value.trim();\n    }\n\n    if (!this.torusVerifier) {\n      this.estimateFees();\n      if (this.isMultipleDestinations) {\n        this.amount = this.getTotalAmount();\n      }\n    }\n  }\n  toPkhChange(): void {\n    if (this.torusVerifier) {\n      this.torusLookup();\n    }\n  }\n  // Will return PartiallyPreparedTransaction or throw an error\n  getMinimalPreparedTxs(finalCheck = false): PartiallyPreparedTransaction[] {\n    if (!this.isMultipleDestinations) {\n      if (this.torusVerifier) {\n        assert(!this.invalidTorusAccount(), this.invalidTorusAccount());\n        assert(this.torusReady(), 'Pending lookup');\n        this.checkTx(this.torusLookupAddress, this.amount, finalCheck);\n        const meta: any = {\n          verifier: this.torusVerifier,\n          alias: this.torusLookupId\n        };\n        if (this.torusTwitterId) {\n          meta.twitterId = this.torusTwitterId;\n        }\n        return [\n          {\n            kind: 'transaction',\n            destination: this.torusLookupAddress,\n            amount: this.amount ? this.amount : '0',\n            meta\n          }\n        ];\n      } else {\n        this.checkTx(this.toPkh, this.amount, finalCheck);\n      }\n      return [\n        {\n          kind: 'transaction',\n          destination: this.toPkh,\n          amount: this.amount ? this.amount : '0'\n        }\n      ];\n      //this.checkGasStorageFee();\n    } else {\n      return this.getBatch(finalCheck);\n      //assert(false, 'not supported yet')\n    }\n  }\n  checkTx(toPkh: string, amount: string, finalCheck: boolean): void {\n    assert(\n      this.torusVerifier || !(!this.inputValidationService.address(toPkh) || toPkh === this.activeAccount.address),\n      this.translate.instant('SENDCOMPONENT.INVALIDRECEIVERADDRESS')\n    );\n    assert(\n      !this.torusVerifier ||\n        !(!this.inputValidationService.torusAccount(this.toPkh, this.torusVerifier) || this.torusLookupAddress === this.activeAccount.address),\n      'Invalid recipient'\n    );\n    assert(\n      !(\n        !this.inputValidationService.amount(amount, this.token ? this.token.decimals : undefined) ||\n        (finalCheck && (amount === '0' || amount === '') && toPkh.slice(0, 3) !== 'KT1')\n      ),\n      this.translate.instant('SENDCOMPONENT.INVALIDAMOUNT')\n    );\n  }\n  getBatch(finalCheck = false): PartiallyPreparedTransaction[] {\n    const txs: PartiallyPreparedTransaction[] = this.toMultipleDestinationsString\n      .trim()\n      .split(';')\n      .map((row, i) => {\n        if (row.trim()) {\n          const cols = row\n            .trim()\n            .split(' ')\n            .map((col) => col.trim())\n            .filter((col) => col);\n          assert(cols?.length === 2, `Transaction ${i + 1} has invalid number of arguments. Expected 2, but got ${cols?.length}.`);\n          assert(this.inputValidationService.address(cols[0]), `Transaction ${i + 1} contains an invalid destination.`);\n          assert(this.inputValidationService.amount(cols[1]), `Transaction ${i + 1} contains an invalid amount.`);\n          this.checkTx(cols[0], cols[1], finalCheck);\n          const tx: PartiallyPreparedTransaction = {\n            kind: 'transaction',\n            destination: cols[0],\n            amount: cols[1]\n          };\n          return tx;\n        }\n      })\n      .filter((row) => row);\n    return txs;\n  }\n  getFullyPreparedTxs(): FullyPreparedTransaction[] {\n    assert(!this.simSemaphore && (!this.torusVerifier || this.torusReady()), this.formInvalid ? this.formInvalid : 'Awaiting request');\n    const minimalTxs = this.getMinimalPreparedTxs(true);\n    this.transactions = minimalTxs;\n    assert(this.inputValidationService.fee(this.customFee), 'Invalid fee');\n    assert(this.inputValidationService.gas(this.customGasLimit), 'Invalid gas limit');\n    assert(this.inputValidationService.gas(this.customStorageLimit), 'Invalid storage limit');\n    assert(!this.checkBalance(), this.checkBalance());\n    assert(minimalTxs.length === this.defaultTransactionParams.customLimits?.length, 'Simulation error');\n    return this.opsWithCustomLimits();\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.defaultTransactionParams.gas.toString()) {\n      extraGas = Number(this.customGasLimit) - this.defaultTransactionParams.gas;\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.defaultTransactionParams.storage.toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.defaultTransactionParams.storage;\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas\n        ? (Number(this.defaultTransactionParams.customLimits[i].gasLimit) + extraGasPerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.defaultTransactionParams.customLimits[i].storageLimit) + extraStoragePerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  invalidTorusAccount(): string {\n    const torusError = {\n      google: 'Invalid Google email address',\n      reddit: 'Invalid Reddit username',\n      twitter: 'Invalid Twitter username',\n      domain: 'Tezos Domains must be valid url'\n    };\n    if (!this.inputValidationService.torusAccount(this.toPkh, this.torusVerifier) && this.toPkh !== '') {\n      return torusError[this.torusVerifier];\n    }\n  }\n  sendEntireBalance(event: Event): void {\n    event.stopPropagation();\n    this.sendMax = true;\n    this.checkMaxAmount();\n    this.amountChange();\n  }\n  toggleDestination(): void {\n    this.defaultTransactionParams = zeroTxParams;\n    this.sendMax = false;\n    this.prevEquiClass = '';\n    this.isMultipleDestinations = !this.isMultipleDestinations;\n    this.transactions = [];\n    this.toMultipleDestinationsString = '';\n    this.formInvalid = '';\n    this.toPkh = '';\n    this.amount = '';\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n    this.clearTorus();\n    this.updateDefaultValues();\n  }\n  clearTorus(): void {\n    this.torusVerifier = '';\n    this.torusPendingLookup = false;\n    this.torusLookupAddress = '';\n    this.torusLookupId = '';\n    this.torusTwitterId = '';\n  }\n  checkMaxAmount(): void {\n    if (this.sendMax) {\n      const max = this.maxToSend(this.activeAccount);\n      if (max.length && max.slice(0, 1) !== '-') {\n        this.amount = max;\n      } else {\n        this.amount = '0';\n      }\n    }\n  }\n  checkBalance(): string {\n    if (this.transactions.length > 0) {\n      if (this.activeAccount && this.activeAccount instanceof ImplicitAccount) {\n        const max = Big(this.maxToSend(this.activeAccount)).plus(this.tokenTransfer ? 0 : 0.000001);\n        let amount = Big(0);\n        for (const tx of this.transactions) {\n          amount = amount.plus(Big(tx.amount));\n        }\n        if (amount.gt(max)) {\n          return this.translate.instant('SENDCOMPONENT.TOOHIGHFEEORAMOUNT');\n        }\n      } else if (this.activeAccount && this.activeAccount instanceof OriginatedAccount) {\n        const maxKt = Big(this.maxToSend(this.activeAccount));\n        const maxTz = Big(this.maxToSend(this.walletService.wallet.getImplicitAccount(this.activeAccount.pkh))).plus(0.000001);\n        let amount = Big(0);\n        for (const tx of this.transactions) {\n          amount = amount.plus(Big(tx.amount));\n        }\n        if (amount.gt(maxKt)) {\n          return this.translate.instant('SENDCOMPONENT.TOOHIGHAMOUNT');\n        } else if (new Big('0').gt(maxTz)) {\n          return this.translate.instant('SENDCOMPONENT.TOOHIGHFEE');\n        }\n      }\n    }\n    return '';\n  }\n  updateMaxAmount(): void {\n    if (this.sendMax) {\n      const max = this.maxToSend(this.activeAccount);\n      let maxAmount = '0';\n      if (max.length && max.slice(0, 1) !== '-') {\n        maxAmount = max;\n      }\n      if (this.amount !== maxAmount) {\n        this.amount = maxAmount;\n      }\n    }\n  }\n  maxToSend(account: Account): string {\n    if (account && account instanceof ImplicitAccount && !this.tokenTransfer) {\n      let accountBalance = Big(account.balanceXTZ).div(1000000);\n      accountBalance = accountBalance.minus(this.customFee && Number(this.customFee) ? Number(this.customFee) : this.defaultTransactionParams.fee);\n      if (!this.isMultipleDestinations) {\n        accountBalance = accountBalance.minus(\n          this.customStorageLimit && Number(this.customStorageLimit)\n            ? Number(Big(this.customStorageLimit).times(this.costPerByte).div('1000000'))\n            : this.defaultTransactionParams.burn\n        );\n      } else {\n        accountBalance = accountBalance.minus(this.defaultTransactionParams.burn);\n      }\n      accountBalance = accountBalance.minus(0.000001); // dust\n      return accountBalance.toString();\n    } else {\n      if (this.tokenTransfer) {\n        if (account instanceof ImplicitAccount) {\n          return Big(account.getTokenBalance(this.tokenTransfer))\n            .div(10 ** this.token.decimals)\n            .toFixed();\n        }\n      } else {\n        return Big(account.balanceXTZ).div(1000000).toString();\n      }\n    }\n  }\n\n  async verifierChange(): Promise<void> {\n    this.torusLookupAddress = '';\n    if (this.torusVerifier) {\n      this.torusLookup();\n    } else {\n      this.formInvalid = '';\n      this.estimateFees();\n    }\n    // this.validateReceiverAddress();\n    // resimulate?\n  }\n  async torusLookup(): Promise<any> {\n    if (!this.torusService.verifierMapKeys.includes(this.torusVerifier) && this.torusVerifier !== 'domain') {\n      this.formInvalid = 'Invalid verifier';\n    } else if (this.invalidTorusAccount()) {\n      this.formInvalid = this.invalidTorusAccount();\n    } else if (this.toPkh) {\n      this.torusPendingLookup = true;\n      this.torusLookupId = this.toPkh;\n\n      const { pkh, twitterId } =\n        this.torusVerifier === 'domain'\n          ? await this.tezosDomains\n              .getAddressFromDomain(this.toPkh)\n              .then((ans) => {\n                if (ans?.pkh === '') {\n                  this.formInvalid = 'Could not find the domain';\n                }\n                return ans;\n              })\n              .catch((e) => {\n                console.error(e);\n                this.formInvalid = e;\n                return '';\n              })\n          : await this.torusService.lookupPkh(this.torusVerifier, this.toPkh).catch((e) => {\n              console.error(e);\n              this.formInvalid = e;\n              return '';\n            });\n\n      this.torusPendingLookup = false;\n      if (pkh) {\n        this.torusLookupAddress = pkh;\n        this.torusTwitterId = twitterId ? twitterId : '';\n        this.estimateFees();\n      } else {\n        this.torusLookupAddress = '';\n      }\n    }\n  }\n  batchSpace(txs = 0): boolean | string {\n    if (this.isMultipleDestinations && this.defaultTransactionParams.customLimits && this.defaultTransactionParams.customLimits.length) {\n      const numberOfTxs = txs ? txs : this.defaultTransactionParams.customLimits.length;\n      const txsLimit = 294 + (this.defaultTransactionParams.reveal ? 0 : 2); // Max transactions in a batch is 296 (294 with a reveal)\n      return !txs ? this.numberWithCommas(numberOfTxs + ' / ' + txsLimit) : numberOfTxs <= txsLimit;\n    }\n    return !txs ? '' : true;\n  }\n  numberWithCommas(x: string): string {\n    const parts: Array<string> = x.split('.');\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return parts.join('.');\n  }\n  torusReady(): boolean {\n    return !this.torusPendingLookup && this.torusLookupAddress !== '';\n  }\n  preview(): void {\n    let txs: FullyPreparedTransaction[];\n    try {\n      txs = this.getFullyPreparedTxs();\n      this.prepareResponse.emit(txs);\n      ModalComponent.currentModel.next({\n        name: 'confirm-send',\n        data: {\n          customFee: this.customFee,\n          customGasLimit: this.customGasLimit,\n          customStorageLimit: this.customStorageLimit\n        }\n      });\n      this.reset();\n    } catch (e) {\n      this.formInvalid = e.message;\n    }\n  }\n  dynSize(): string {\n    const size = this.amount ? this.amount.length : 0;\n    if (size < 7) {\n      return '5';\n    } else if (size < 9) {\n      return '4';\n    } else if (size < 12) {\n      return '3';\n    } else if (size < 17) {\n      return '2';\n    }\n    return '1.5';\n  }\n\n  dropdownResponse(data): void {\n    if (data?.torusVerifier !== this.torusVerifier) {\n      console.log(this.torusVerifier + ' -> ' + data.torusVerifier);\n      this.torusVerifier = data.torusVerifier;\n      this.torusVerifierName = data.torusVerifierName;\n      this.verifierChange();\n    }\n  }\n  pasteToPkh(): void {\n    navigator.clipboard.readText().then((clipText) => {\n      this.toPkh = clipText;\n      this.updateDefaultValues({ target: { value: this.toPkh } });\n    });\n  }\n  handleScanResponse(ev): void {\n    this.toPkh = ev?.pkh || '';\n    this.updateDefaultValues({ target: { value: this.toPkh } });\n  }\n}\n","<div *ngIf=\"active && template === 'gap'\" class=\"flex-column kukai-modal gap\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"cancel()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column confirm-send\">\n        <div class=\"asset-name\">{{ templateRequest.template.descriptions[0].text }}</div>\n        <div class=\"flex-row transaction\">\n          <div class=\"flex-column left\">\n            <span class=\"default-text\">Send</span>\n            <span class=\"default-text amount\">{{ (templateRequest.partialOps[0].amount | number:'1.0-6') + ' tez'\n              }}</span>\n            <span class=\"default-text\">USD&nbsp;{{'$' +\n              (templateRequest.partialOps[0].amount\n              *\n              walletService.wallet.XTZrate | number:'1.0-2')\n              }}</span>\n            <span class=\"default-text\">From:</span>\n            <div class=\"flex-row torus\" *ngIf=\"this.walletService.wallet.verifier\">\n              <img class=\"icon\" src=\"../../../assets/img/{{ this.walletService.wallet.verifier }}-logo.svg\">\n              <div class=\"flex-column\">\n                <span class=\"name\">{{ this.walletService.wallet.displayName() }}</span><span class=\"address\">{{\n                  activeAccount.address }}</span>\n              </div>\n            </div>\n            <span *ngIf=\"!this.walletService.wallet.verifier\" class=\"default-text single-to\">{{ activeAccount.address\n              }}</span>\n          </div>\n          <div *ngIf=\"templateRequest.template.descriptions[0]?.imgUrl\" class=\"flex-column right\">\n            <img class=\"token-image\" [src]=\"templateRequest.template.descriptions[0]?.imgUrl\" />\n          </div>\n        </div>\n      <br />\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column bottom\">\n        <div class=\"flex-row default-text more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"toggle()\">{{ !showMore ?\n          'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/gap-arrow.svg\"></div>\n        <div *ngIf=\"showMore\" class=\"info\">\n          <div class=\"flex-column\">\n            <div class=\"default-text\">\n              Send to:\n            </div>\n            <div class=\"default-text\">\n              {{ templateRequest.ops[0].destination }}\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Fee\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.network + ' tez' }}\n              </div>\n            </div>\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Max Storage Cost\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.storage + ' tez' }}\n              </div>\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Contract Call\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.ops[0]?.parameters?.entrypoint }}\n              </div>\n            </div>\n            <br/>\n          </div>\n        </div>\n      </div>\n      <br />\n      <div class=\"flex-row buttons\">\n        <button (click)=\"approve()\" [disabled]=\"templateRequest?.partialOps?.length !== 1\">\n          <ng-container *ngIf=\"templateRequest.template.button; else defaultButtonText\">\n            {{templateRequest.template.button}}</ng-container>\n          <ng-template #defaultButtonText>PURCHASE</ng-template>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"active && template === 'minterpop'\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"cancel()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column confirm-send\">\n        <div class=\"asset-name\">{{ templateRequest.template.descriptions[0].text }}</div>\n        <div class=\"flex-row transaction\">\n          <div class=\"flex-column left\">\n            <span class=\"default-text\">Send</span>\n            <span class=\"default-text amount\">{{ (templateRequest.partialOps[0].amount | number:'1.0-6') + ' tez'\n              }}</span>\n            <span class=\"default-text\">USD&nbsp;{{'$' +\n              (templateRequest.partialOps[0].amount\n              *\n              walletService.wallet.XTZrate | number:'1.0-2')\n              }}</span>\n            <span class=\"default-text\">From:</span>\n            <div class=\"flex-row torus\" *ngIf=\"this.walletService.wallet.verifier\">\n              <img class=\"icon\" src=\"../../../assets/img/{{ this.walletService.wallet.verifier }}-logo.svg\">\n              <div class=\"flex-column\">\n                <span class=\"name\">{{ this.walletService.wallet.displayName() }}</span><span class=\"address\">{{\n                  activeAccount.address }}</span>\n              </div>\n            </div>\n            <span *ngIf=\"!this.walletService.wallet.verifier\" class=\"default-text single-to\">{{ activeAccount.address\n              }}</span>\n          </div>\n          <div *ngIf=\"templateRequest.template.descriptions[0]?.imgUrl\" class=\"flex-column right\">\n            <img class=\"token-image\" [src]=\"templateRequest.template.descriptions[0]?.imgUrl\" />\n          </div>\n        </div>\n      <br />\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column bottom\">\n        <div class=\"flex-row default-text more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"toggle()\">{{ !showMore ?\n          'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/dropdown-minterpop.svg\"></div>\n        <div *ngIf=\"showMore\" class=\"info\">\n          <div class=\"flex-column\">\n            <div class=\"default-text\">\n              Send to:\n            </div>\n            <div class=\"default-text\">\n              {{ templateRequest.ops[0].destination }}\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Fee\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.network + ' tez' }}\n              </div>\n            </div>\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Max Storage Cost\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.storage + ' tez' }}\n              </div>\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Contract Call\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.ops[0]?.parameters?.entrypoint }}\n              </div>\n            </div>\n            <br/>\n          </div>\n        </div>\n      </div>\n      <br />\n      <div class=\"flex-row buttons\">\n        <button (click)=\"approve()\" [disabled]=\"templateRequest?.partialOps?.length !== 1\">\n          <ng-container *ngIf=\"templateRequest.template.button; else defaultButtonText\">\n            {{templateRequest.template.button}}</ng-container>\n          <ng-template #defaultButtonText>Send</ng-template>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<div *ngIf=\"active && template === 'default'\" class=\"kukai-template\">\n  <div *ngIf=\"templateRequest.template\" class=\"flex-column card\">\n    <H1>You are about to<BR><b\n        *ngIf=\"templateRequest.template.action; else defaultAction\">{{templateRequest.template.action}}</b>\n      <ng-template #defaultAction><b>send</b></ng-template>\n    </H1>\n    <ng-container *ngFor=\"let description of templateRequest.template.descriptions\">\n      <ng-container *ngIf=\"!description.imgUrl\">\n        <p class=\"single\" *ngIf=\"description.text\">{{ description.text }}</p>\n      </ng-container>\n      <ng-container *ngIf=\"description.imgUrl\">\n        <img *ngIf=\"description.imgUrl\" src=\"{{description.imgUrl}}\" height=\"150\">\n        <p class=\"img-text\" *ngIf=\"description.text\">{{description.text}}</p>\n      </ng-container>\n    </ng-container>\n    <div class=\"buttons\" [class.horizontally]=\"!templateRequest.template.buttonsVertically\"\n      [class.vertically]=\"templateRequest.template.buttonsVertically\">\n      <button class=\"secondary\" (click)=\"cancel()\">Cancel</button>\n      <button (click)=\"approve()\">\n        <ng-container *ngIf=\"templateRequest.template.button; else defaultButtonText\">\n          {{templateRequest.template.button}}</ng-container>\n        <ng-template #defaultButtonText>Send</ng-template>\n      </button>\n    </div>\n    <p class=\"fee\">Estimated fee <b *ngIf=\"templateRequest.fee\">{{templateRequest.fee.total}} tez</b><img\n        *ngIf=\"!templateRequest.fee\" src=\"../../../../assets/img/feeLoader.gif\"></p>\n    <div class=\"footer\">\n      <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n    </div>\n  </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges, OnChanges } from '@angular/core';\nimport { TemplateRequest, TemplateFee, FullyPreparedTransaction } from '../../../misc/send/interfaces';\nimport { Template, BaseTemplate } from 'kukai-embed';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-confirm-send-embed',\n  templateUrl: './confirm-send.component.html',\n  styleUrls: ['./confirm-send.component.scss']\n})\nexport class ConfirmSendEmbedComponent implements OnInit, OnChanges {\n  @Input() templateRequest: TemplateRequest = null;\n  @Output() isApproved = new EventEmitter();\n  @Input() activeAccount = null;\n  active = false;\n  showMore = false;\n  template = 'default';\n  constructor(public walletService: WalletService, public messageService: MessageService, private subjectService: SubjectService) {}\n\n  ngOnInit(): void {\n    this.subjectService.origin.subscribe((origin) => {\n      if (origin && origin.indexOf('gap') !== -1) {\n        // (m)interpop\n        this.template = 'gap';\n      } else if (origin && origin.indexOf('interpop') !== -1) {\n        // (m)interpop\n        this.template = 'minterpop';\n      } else {\n        this.template = 'default';\n      }\n    });\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.templateRequest?.currentValue) {\n      console.log(this.templateRequest);\n      if ((<BaseTemplate>this.templateRequest?.template)?.descriptions?.length) {\n        this.hideScrollbar();\n        this.active = true;\n      } else {\n        console.warn('No template descriptions');\n        this.cancel();\n      }\n    }\n  }\n  cancel() {\n    this.reset();\n    this.isApproved.emit(null);\n  }\n  approve() {\n    if (this.templateRequest.ops && this.templateRequest.fee) {\n      this.isApproved.emit(this.templateRequest.ops);\n      this.reset();\n    }\n  }\n  toggle() {\n    if (this.templateRequest.ops) {\n      this.showMore = !this.showMore;\n    }\n  }\n  reset() {\n    this.resetScrollbar();\n    this.active = false;\n  }\n  hideScrollbar() {\n    const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n    document.body.style.marginRight = scrollBarWidth.toString();\n    document.body.style.overflow = 'hidden';\n  }\n  resetScrollbar() {\n    document.body.style.marginRight = '';\n    document.body.style.overflow = '';\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"flex-column liquidity-baking-confirm\">\n      <ng-container *ngIf=\"entrypoint === 'addLiquidity'\">\n        <div class=\"flex-column container-inputs alt from\">\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{ expectedXtz | number:'1.0-6' }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow plus\">\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-plus.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{ expectedToken | number:'1.0-8' }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"seperator arrow\">\n          <div class=\"backdrop\"></div>\n          <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n        </div>\n        <div class=\"flex-column container-inputs alt to\">\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{ expectedLqd ? (expectedLqd | number:'1.0-0') : \"&nbsp;\" }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'LBT' }}</span>\n              <img [src]=\"'assets/img/tokens/lbt.png'\" />\n            </div>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"entrypoint === 'removeLiquidity'\">\n        <div class=\"flex-column container-inputs alt from\">\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{ expectedLqd | number:'1.0-0' }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'LBT' }}</span>\n              <img [src]=\"'assets/img/tokens/lbt.png'\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"seperator arrow\">\n          <div class=\"backdrop\"></div>\n          <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n        </div>\n        <div class=\"flex-column container-inputs alt to\">\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedXtz ? (expectedXtz | number:'1.0-6') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow plus\">\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-plus.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedToken ? (expectedToken | number:'1.0-8') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"entrypoint === 'xtzToToken'\">\n        <div class=\"flex-column container-inputs\">\n          <div *ngIf=\"expectedXtz\" class=\"flex-row currency from\">\n            <span class=\"amount\">{{expectedXtz | number:'1.0-6'}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow\">\n            <div class=\"backdrop\"></div>\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedToken ? (expectedToken | number:'1.0-8') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n            <span class=\"flex-row hint\">Expected</span>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"entrypoint === 'tokenToXtz'\">\n        <div class=\"flex-column container-inputs\">\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{expectedToken | number:'1.0-8'}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow\">\n            <div class=\"backdrop\"></div>\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedXtz ? (expectedXtz | number:'1.0-6') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n            <span class=\"flex-row hint\">Expected</span>\n          </div>\n        </div>\n      </ng-container>\n      <div class=\"output\">\n        <div *ngIf=\"minimumToken && !minimumXtz\" class=\"flex-row item\">\n          <span class=\"flex-row key\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\" class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumToken | number:'1.2-8'}} tzBTC</span>\n        </div>\n        <div *ngIf=\"minimumXtz && !minimumToken\" class=\"flex-row item\">\n          <span class=\"flex-row key\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\"\n              class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumXtz | number:'1.6-6'}} XTZ</span>\n        </div>\n        <div\n          *ngIf=\"minimumXtz && minimumToken\"\n          class=\"item\">\n          <span class=\"flex-row key\" style=\"margin: 0 0 0.5em 0\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\" class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumXtz | number:'1.6-6'}} XTZ + {{\n            minimumToken | number:'1.2-8'}} tzBTC</span>\n        </div>\n        <div *ngIf=\"minimumLqd\" class=\"flex-row item\">\n          <span class=\"flex-row key\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\" class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumLqd | number:'1.0-0'}} LBT</span>\n        </div>\n        <div class=\"flex-row item\">\n          <span class=\"flex-row key\">Fee:</span>\n          <span class=\"value\">&nbsp;{{getTotalFee() | number:'1.0-6'}} tez</span>\n        </div>\n        <div class=\"flex-row item\" *ngIf=\"getTotalBurn(); let storageCost\">\n          <span class=\"flex-row key\">Max Storage Cost:</span>\n          <span class=\"value\">&nbsp;{{storageCost | number:'1.0-6'}} tez</span>\n        </div>\n      </div>\n      <div *ngIf=\"(externalReq && (!walletService.isLedgerWallet() || ledgerError))\" class=\"flex-column more-info-toggle\" [class.expanded]=\"advancedForm\">\n        <div class=\"flex-row item\" (click)=\"advancedForm = !advancedForm\">\n          <span class=\"value\">{{ 'Advanced' }}</span>\n          <div class=\"flex-row\"><img src=\"assets/img/chevron-down.svg\"></div>\n        </div>\n      </div>\n      <form *ngIf=\"advancedForm && (externalReq && (!walletService.isLedgerWallet() || ledgerError))\" autocomplete=\"off\" class=\"more-info-body\" [class.expanded]=\"advancedForm\">\n        <div class=\"flex-row\">\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Gas limit</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\"\n              (paste)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\" [placeholder]=\"getTotalDefaultGas() || '0'\"\n              [value]=\"customGasLimit\">\n          </div>\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Fee</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text\" [placeholder]=\"getTotalFee() || '0'\" (paste)=\"sanitizeNumberInput($event, 6, 'customFee')\"\n              (input)=\"sanitizeNumberInput($event, 6, 'customFee')\" [value]=\"customFee\">\n          </div>\n        </div>\n        <div class=\"flex-row\">\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Storage limit</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\"\n              (paste)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\" [placeholder]=\"getTotalDefaultStorage() || '0'\"\n              [value]=\"customStorageLimit\">\n          </div>\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Max storage cost</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text read-only\" [placeholder]=\"(getTotalBurn() || '0') + ' tez'\" tabindex=-1\n              readonly>\n          </div>\n        </div>\n      </form>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <span class=\"form-validity\" [class.error]=\"formInvalid !== 'Awaiting Request'\">{{ formInvalid }}</span>\n        <button *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\" class=\"confirm\"\n          [disabled]=\"!!formInvalid\" (click)=\"ledgerRetry()\">Sign with Ledger</button>\n        <ng-template #elseBlock>\n          <span *ngIf=\"this.pwdInvalid\" class=\"label danger\">{{ pwdInvalid }}</span>\n          <input *ngIf=\"walletService.isPwdWallet()\" [(ngModel)]=\"password\" autocomplete=\"current-password\"\n            placeholder=\"Password\" class=\"text password\" type=\"password\" (input)=\"this.pwdInvalid = ''\"\n            (change)=\"this.pwdInvalid = ''\" (keydown.enter)='inject()'>\n          <button class=\"confirm\" (click)=\"inject()\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : confirmTitle}}</button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>","import { EventEmitter, Input, OnChanges, OnDestroy, Output } from '@angular/core';\nimport { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { ConfirmSwapRequest, FullyPreparedTransaction, PrepareRequest, LqdEntrypoints, PartiallyPreparedTransaction } from '../../misc/send/interfaces';\nimport { TokenService } from '../../../services/token/token.service';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { LookupService } from '../../../services/lookup/lookup.service';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DefaultTransactionParams, KeyPair } from '../../../interfaces';\nimport Big from 'big.js';\nimport { LedgerWallet, TorusWallet } from '../../../services/wallet/wallet';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { ModalComponent } from '../modal.component';\nimport { Subscription } from 'rxjs';\nimport { TezosDomainsService } from '../../../services/tezos-domains/tezos-domains.service';\nimport { TokenBalancesService } from '../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Amount } from '../../../services/swap-liquidity/classes/Amount';\nimport assert from 'assert';\nimport { SwapLiquidityService } from '../../../services/swap-liquidity/swap-liquidity.service';\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n\n@Component({\n  selector: 'app-swap-liquidity-confirm',\n  templateUrl: './swap-liquidity-confirm.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class SwapLiquidityConfirmComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  readonly lqdTokenContract = 'KT1AafHA1C1vk959wvHWBispY9Y2f3fxBUUo';\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  @Input() confirmRequest: PrepareRequest = null;\n  @Output() operationResponse = new EventEmitter();\n  syncSub: Subscription;\n  activeAccount = null;\n  externalReq: boolean = false;\n  transactions: FullyPreparedTransaction[] = [];\n  semaphore = false;\n\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n\n  customFee = '';\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  sendResponse = null;\n  ledgerError = '';\n  password = '';\n  pwdInvalid = '';\n  advancedForm = false;\n  name = 'swap-liquidity-confirm';\n\n  expectedLqd: number;\n  minimumLqd: number;\n  expectedXtz: number;\n  minimumXtz: number;\n  expectedToken: number;\n  minimumToken: number;\n  entrypoint: string;\n\n  confirmTitle = '';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private translate: TranslateService,\n    public tokenService: TokenService,\n    public walletService: WalletService,\n    private estimateService: EstimateService,\n    private operationService: OperationService,\n    private messageService: MessageService,\n    private coordinatorService: CoordinatorService,\n    private lookupService: LookupService,\n    private ledgerService: LedgerService,\n    private inputValidationService: InputValidationService,\n    public tezosDomainService: TezosDomainsService,\n    public tokenBalanceService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private swapLiquidityService: SwapLiquidityService\n  ) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.confirmRequest?.currentValue) {\n      this.reset(true);\n      this.parseTransactions(changes.confirmRequest.currentValue);\n      this.init();\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n      if (this.externalReq) {\n        this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n          if (response) {\n            this.closeModalAction('silent');\n          }\n        });\n      }\n    }\n  }\n  parseTransactions(csr: ConfirmSwapRequest): void {\n    let hasTrailingZeroApproval = false;\n    this.externalReq = csr.externalReq;\n    this.activeAccount = csr.account;\n    this.transactions = csr.transactions;\n    this.entrypoint = this.transactions.find((t) => Object.values(LqdEntrypoints).includes(t?.parameters?.entrypoint))?.parameters.entrypoint;\n    switch (this.entrypoint) {\n      case LqdEntrypoints.xtzToToken:\n        this.confirmTitle = 'Confirm Swap';\n        this.expectedXtz = parseFloat(this.transactions[0]?.amount);\n        this.minimumToken = new Amount({ rpcAmount: this.transactions[0]?.parameters.value.args[1].args[0].int, decimalPlaces: 8 }).internalNormalised;\n        this.calculateXtzToToken();\n        break;\n      case LqdEntrypoints.tokenToXtz:\n        this.confirmTitle = 'Confirm Swap';\n        const tokenToXtz = this.transactions.find((t) => t?.parameters?.entrypoint === LqdEntrypoints.tokenToXtz);\n        hasTrailingZeroApproval =\n          this.transactions[this.transactions.length - 1].parameters.entrypoint === 'approve' &&\n          this.transactions[this.transactions.length - 1]?.parameters?.value.args[1].int === '0';\n        this.expectedToken = new Amount({ rpcAmount: tokenToXtz?.parameters.value.args[1].args[0].int, decimalPlaces: 8 }).internalNormalised;\n        this.minimumXtz = new Amount({ rpcAmount: tokenToXtz?.parameters.value.args[1].args[1].args[0].int, decimalPlaces: 6 }).internalNormalised;\n        this.calculateTokenToXTZ();\n        break;\n      case LqdEntrypoints.addLiquidity:\n        this.confirmTitle = 'Add Liquidity';\n        const addLiquidity = this.transactions.find((t) => t?.parameters?.entrypoint === LqdEntrypoints.addLiquidity);\n        hasTrailingZeroApproval =\n          this.transactions[this.transactions.length - 1].parameters.entrypoint === 'approve' &&\n          this.transactions[this.transactions.length - 1]?.parameters?.value.args[1].int === '0';\n        this.expectedToken = new Amount({ rpcAmount: addLiquidity?.parameters.value.args[1].args[1].args[0].int, decimalPlaces: 8 }).internalNormalised;\n        this.expectedXtz = parseFloat(addLiquidity?.amount);\n        this.minimumLqd = new Amount({ rpcAmount: addLiquidity?.parameters.value.args[1].args[0].int, decimalPlaces: 0 }).internalNormalised;\n        this.calcAddLiquidity();\n        break;\n      case LqdEntrypoints.removeLiquidity:\n        this.confirmTitle = 'Remove Liquidity';\n        this.expectedLqd = new Amount({ rpcAmount: this.transactions[0]?.parameters.value.args[1].args[0].int, decimalPlaces: 0 }).internalNormalised;\n        this.minimumXtz = new Amount({ rpcAmount: this.transactions[0]?.parameters.value.args[1].args[1].args[0].int, decimalPlaces: 6 }).internalNormalised;\n        this.minimumToken = new Amount({\n          rpcAmount: this.transactions[0]?.parameters.value.args[1].args[1].args[1].args[0].int,\n          decimalPlaces: 8\n        }).internalNormalised;\n        this.calcRemoveLiquidity();\n        break;\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  open(): void {\n    super.open();\n  }\n  async init(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      this.ledgerError = '?';\n    }\n  }\n  getTotalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  getTotalCost(display: boolean = false): string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return totalFee;\n  }\n  getTotalFee(): string {\n    if (this.customFee) {\n      return this.customFee;\n    }\n    let totalFee = Big(0);\n    for (const tx of this.transactions) {\n      totalFee = totalFee.add(tx.fee ? tx.fee : 0);\n    }\n    return totalFee.toFixed();\n  }\n  getTotalBurn(): number {\n    const totalActiveStorageLimit: number =\n      this.customStorageLimit !== '' && Number(this.customStorageLimit) ? Number(this.customStorageLimit) : this.getTotalDefaultStorage();\n    return Number(Big(totalActiveStorageLimit).times(this.estimateService.costPerByte).div(1000000).toString());\n  }\n  getTotalDefaultGas(): number {\n    let totalGas = Big(0);\n    for (const tx of this.transactions) {\n      totalGas = totalGas.plus(tx.gasLimit);\n    }\n    return totalGas.toFixed();\n  }\n  getTotalDefaultStorage(): number {\n    let totalStorage = Big(0);\n    for (const tx of this.transactions) {\n      totalStorage = totalStorage.plus(tx.storageLimit);\n    }\n    return totalStorage.toFixed();\n  }\n  totalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  async ledgerRetry(): Promise<void> {\n    if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n      this.messageService.addError('Invalid fee');\n      return;\n    }\n    this.messageService.startSpinner('Preparing transaction...');\n    const keys = await this.walletService.getKeys('');\n    if (keys) {\n      await this.sendTransaction(keys);\n    } else {\n      this.messageService.stopSpinner();\n    }\n  }\n  async inject(): Promise<void> {\n    if (this.semaphore) {\n      return;\n    }\n    if (this.walletService.isLedgerWallet()) {\n      await this.broadCastLedgerTransaction();\n      this.sendResponse = null;\n      ModalComponent.currentModel.next({ name: '', data: null });\n    } else {\n      if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n        this.messageService.addError('Invalid fee');\n        return;\n      }\n      const pwd = this.password;\n      this.password = '';\n      this.messageService.startSpinner('Signing transaction...');\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n      } catch {\n        this.messageService.stopSpinner();\n      }\n      if (keys) {\n        this.pwdInvalid = '';\n        this.messageService.startSpinner('Sending transaction...');\n        await this.sendTransaction(keys);\n        ModalComponent.currentModel.next({ name: '', data: null });\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.wallet instanceof TorusWallet) {\n          this.pwdInvalid = `Authorization failed`;\n        } else {\n          this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD'); // 'Wrong password!';\n        }\n      }\n    }\n  }\n  async sendTransaction(keys: KeyPair): Promise<void> {\n    const txs: FullyPreparedTransaction[] = this.opsWithCustomLimits();\n    this.subscriptions.add(\n      this.operationService.transfer(this.activeAccount.address, txs, Number(this.getTotalFee()), keys, '').subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success === true) {\n            console.log('Transaction successful ', ans);\n            if (ans.payload.opHash) {\n              await this.messageService.stopSpinner();\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                transactions: this.transactions,\n                opHash: ans.payload.opHash\n              };\n              await this.coordinatorService.boost(this.activeAccount.address, metadata);\n              for (const transaction of this.transactions) {\n                if (this.walletService.addressExists(transaction.destination)) {\n                  await this.coordinatorService.boost(transaction.destination);\n                }\n              }\n            } else if (this.walletService.wallet instanceof LedgerWallet) {\n              await this.requestLedgerSignature();\n              return;\n            }\n          } else {\n            await this.messageService.stopSpinner();\n            console.log('Transaction error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        },\n        (err) => {\n          this.messageService.stopSpinner();\n          console.log('Error Message ', JSON.stringify(err));\n          if (this.walletService.isLedgerWallet()) {\n            this.messageService.addError('Failed to create transaction', 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        }\n      )\n    );\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.getTotalDefaultGas().toString()) {\n      extraGas = Number(this.customGasLimit) - this.getTotalDefaultGas();\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.getTotalDefaultStorage().toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.getTotalDefaultStorage();\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas ? (Number(this.transactions[i].gasLimit) + extraGasPerOp).toString() : this.transactions[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.transactions[i].storageLimit) + extraStoragePerOp).toString()\n        : this.transactions[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  sanitizeNumberInput(e, decimalPlaces: number, type = ''): void {\n    const exp = new RegExp(`^\\\\d{0,}(\\\\.\\\\d{0,${decimalPlaces}})?\\$`, 'g');\n    if (exp.test(e?.target?.value)) {\n      this[type] = e?.target?.value;\n    } else {\n      e.target.value = this[type];\n    }\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      await this.messageService.startSpinner('Waiting for Ledger signature...');\n      try {\n        const op = this.sendResponse.payload.unsignedOperation;\n        let signature = '';\n        if (op.length <= 2290) {\n          signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n        } else {\n          signature = await this.ledgerService.signHash(\n            this.operationService.ledgerPreHash('03' + op),\n            this.walletService.wallet.implicitAccounts[0].derivationPath\n          );\n        }\n        if (signature) {\n          const signedOp = op + signature;\n          this.sendResponse.payload.signedOperation = signedOp;\n          this.ledgerError = '';\n        } else {\n          this.ledgerError = 'Failed to sign transaction';\n        }\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.subscriptions.add(\n      this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(async (ans: any) => {\n        this.sendResponse = ans;\n        if (ans.success && this.activeAccount) {\n          const metadata = {\n            transactions: this.transactions,\n            opHash: ans.payload.opHash\n          };\n          await this.coordinatorService.boost(this.activeAccount.address, metadata);\n          if (this.walletService.addressExists(this.transactions[0].destination)) {\n            await this.coordinatorService.boost(this.transactions[0].destination);\n          }\n          this.operationResponse.emit(ans.payload.opHash);\n        } else {\n          console.log('sendResponse', JSON.stringify(this.sendResponse));\n          this.operationResponse.emit('broadcast_error');\n        }\n        console.log('ans: ' + JSON.stringify(ans));\n        this.reset();\n      })\n    );\n  }\n  closeModalAction(emit: string = null): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.operationResponse.emit(emit);\n    this.reset();\n  }\n  reset(init = false): void {\n    if (!init) {\n      this.confirmRequest = null;\n      if (this.syncSub) {\n        this.syncSub.unsubscribe();\n        this.syncSub = undefined;\n      }\n    }\n    this.transactions = [];\n    this.activeAccount = null;\n\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n\n    this.sendResponse = null;\n    this.ledgerError = '';\n    this.password = '';\n    this.pwdInvalid = '';\n    this.advancedForm = false;\n    this.externalReq = false;\n\n    this.expectedLqd = undefined;\n    this.minimumLqd = undefined;\n    this.expectedXtz = undefined;\n    this.minimumXtz = undefined;\n    this.expectedToken = undefined;\n    this.minimumToken = undefined;\n  }\n  openInfoModal(title: string): void {\n    switch (title) {\n      case 'fee':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'Expected fee for this transaction charged by the Tezos blockchain.',\n            title: 'Fee'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumxtz':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of XTZ to be received from the transaction.',\n            title: 'Minimum XTZ'\n          },\n          forceClose: false\n        });\n        break;\n      case 'expectedxtz':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The expected amount of XTZ to be received from the transaction.',\n            title: 'Expected XTZ'\n          },\n          forceClose: false\n        });\n        break;\n      case 'requiredtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'Required tzBTC needed for transaction.',\n            title: 'Required tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of tzBTC to be received from the transaction.',\n            title: 'Minimum tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'expectedtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The expected amount of tzBTC to be received from the transaction.',\n            title: 'Expected tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumlqt':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of LBT to be received from the transaction.',\n            title: 'Minimum LBT'\n          },\n          forceClose: false\n        });\n        break;\n      case 'expectedlqt':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The expected amount of LBT to be received from the transaction.',\n            title: 'Expected LBT'\n          },\n          forceClose: false\n        });\n        break;\n      default:\n        break;\n    }\n  }\n  async calculateXtzToToken(): Promise<void> {\n    this.semaphore = true;\n    const xtzToSell = new Amount({\n      normalisedAmount: this.expectedXtz,\n      decimalPlaces: 6\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateXtzToToken(xtzToSell, xtzPool, tokenPool, 0.005, this.swapLiquidityService.settings('liquidityBaking'));\n    this.expectedToken = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n  async calculateTokenToXTZ(): Promise<void> {\n    this.semaphore = true;\n    const tokenToSell = new Amount({\n      normalisedAmount: this.expectedToken,\n      decimalPlaces: 8\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateTokenToXTZ(tokenToSell, xtzPool, tokenPool, 0.005, this.swapLiquidityService.settings('liquidityBaking'));\n    this.expectedXtz = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n  async calcAddLiquidity(): Promise<void> {\n    this.semaphore = true;\n    const toSell = new Amount({\n      normalisedAmount: this.expectedXtz,\n      decimalPlaces: 6\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateAddLiquidityXTZ(\n      toSell,\n      xtzPool,\n      tokenPool,\n      parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n      0.005,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.expectedLqd = result.liquidityExpected?.internalNormalised.toFixed(result.liquidityExpected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n  async calcRemoveLiquidity(): Promise<void> {\n    this.semaphore = true;\n    const lqtToBurn = new Amount({\n      normalisedAmount: this.expectedLqd,\n      decimalPlaces: 0\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateRemoveLiquidity(\n      lqtToBurn,\n      xtzPool,\n      tokenPool,\n      parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n      0.005,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.expectedXtz = result.xtzExpected?.internalNormalised.toFixed(result.xtzExpected?.decimalPlaces).toString();\n    this.expectedToken = result.tokenExpected?.internalNormalised.toFixed(result.tokenExpected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n}\n","<app-prepare-send *ngIf=\"!embedded\" [prepareRequest]=\"prepareRequest\" (prepareResponse)=\"handlePrepareResponse($event)\"></app-prepare-send>\n<app-confirm-send [confirmRequest]=\"confirmRequest\" (operationResponse)=\"handleConfirmResponse($event)\"></app-confirm-send>\n<app-confirm-send-embed *ngIf=\"embedded\" [templateRequest]=\"templateRequest\" (isApproved)=\"handleTemplateApproval($event)\" [activeAccount]=\"activeAccount\"></app-confirm-send-embed>\n<app-swap-liquidity (prepareResponse)=\"handlePrepareResponse($event)\"></app-swap-liquidity>\n<app-swap-liquidity-confirm [confirmRequest]=\"confirmSwapLiquidityRequest\" (operationResponse)=\"handleConfirmResponse($event)\"></app-swap-liquidity-confirm>\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { Account, EmbeddedTorusWallet } from '../../../services/wallet/wallet';\nimport {\n  PrepareRequest,\n  ConfirmRequest,\n  FullyPreparedTransaction,\n  PartiallyPreparedTransaction,\n  TemplateRequest,\n  TemplateFee,\n  ConfirmSwapRequest,\n  LqdEntrypoints\n} from './interfaces';\nimport { Template } from 'kukai-embed';\nimport { TokenService } from '../../../services/token/token.service';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { assertMichelsonData } from '@taquito/michel-codec';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport Big from 'big.js';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\nimport { ExternalRequest } from '../../../interfaces';\n\n@Component({\n  selector: 'app-send',\n  templateUrl: './send.component.html'\n})\nexport class SendComponent implements OnInit, OnChanges, OnDestroy {\n  LqdEntrypoints = LqdEntrypoints;\n  @Input() embedded: boolean;\n  activeAccount: Account;\n  @Input() tokenTransfer: string;\n  @Input() externalRequest: ExternalRequest;\n  @Input() template: Template;\n  @Output() operationResponse = new EventEmitter();\n  prepareRequest: PrepareRequest = null;\n  confirmRequest: ConfirmRequest = null;\n  templateRequest: TemplateRequest = null;\n  confirmSwapLiquidityRequest: ConfirmSwapRequest = null;\n  symbol: string;\n  readonly thresholdUSD = 50;\n  private subscriptions: Subscription = new Subscription();\n  private swapLiquidityEntrypoints = ['addLiquidity', 'removeLiquidity', 'xtzToToken', 'tokenToXtz'];\n\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  constructor(\n    public tokenService: TokenService,\n    private estimateService: EstimateService,\n    private messageService: MessageService,\n    private operationService: OperationService,\n    private walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private subjectService: SubjectService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.prepareTokenTransfer.subscribe((t) => {\n        this.prepareRequest = t;\n        this.tokenTransfer = t?.tokenTransfer;\n        this.activeAccount = t?.account;\n        this.symbol = t?.symbol;\n      })\n    );\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.externalRequest?.currentValue) {\n      this.activeAccount = changes.externalRequest.currentValue.selectedAccount;\n      this.checkOpReq(changes.externalRequest.currentValue.operationRequest);\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  private async checkOpReq(opReq: any): Promise<void | {\n    kind;\n    destination;\n    amount;\n    parameters;\n    gasRecommendation;\n    storageRecommendation;\n  }> {\n    if (opReq.operationDetails) {\n      opReq = opReq.operationDetails;\n    }\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && !this.walletService.wallet?.sk && this.template?.silent) {\n      this.operationResponse.emit('invalid_parameters');\n      return;\n    }\n    if (opReq[0].kind === 'transaction') {\n      const txs: PartiallyPreparedTransaction[] = opReq.map((tx) => {\n        if (tx.kind !== 'transaction') {\n          throw new Error('Invalid op kind');\n        }\n        // identify token transfers\n        return {\n          kind: 'transaction',\n          destination: tx.destination,\n          amount: Big(tx.amount)\n            .div(10 ** 6)\n            .toFixed(), // handle token decimals here\n          parameters: tx.parameters ? tx.parameters : undefined,\n          gasRecommendation: tx.gas_limit ? tx.gas_limit : undefined,\n          storageRecommendation: tx.storage_limit ? tx.storage_limit : undefined\n        };\n      });\n      if (this.validParameters(txs)) {\n        if (txs.length === 1 && !this.template) {\n          const tokenTransferObj: any = this.getTokenTransferObj(txs[0]);\n          if (tokenTransferObj) {\n            const asset = this.tokenService.getAsset(tokenTransferObj.tokenId);\n            txs[0].amount = Big(tokenTransferObj.amount)\n              .div(10 ** asset.decimals)\n              .toFixed();\n            txs[0].destination = tokenTransferObj.to;\n            this.tokenTransfer = tokenTransferObj.tokenId;\n            delete txs[0].parameters;\n          } else {\n            this.tokenTransfer = '';\n          }\n          this.simulateRequest(txs, tokenTransferObj?.tokenId);\n        } else {\n          this.tokenTransfer = '';\n          this.simulateRequest(txs, '');\n        }\n      } else {\n        this.operationResponse.emit('invalid_parameters');\n      }\n    }\n  }\n  getTokenTransferObj(op: any): null | { tokenId: string; to: string; amount: string } {\n    if (op.parameters && this.tokenService.isKnownTokenContract(op.destination)) {\n      const tokenTransfer = this.operationService.parseTokenTransfer(op);\n      if (tokenTransfer && this.tokenService.isKnownTokenId(tokenTransfer?.tokenId)) {\n        return tokenTransfer;\n      }\n    }\n    return null;\n  }\n  validParameters(txs: PartiallyPreparedTransaction[]): boolean {\n    for (const tx of txs) {\n      if (tx.parameters) {\n        try {\n          if (!tx.parameters.value || !tx.parameters.entrypoint) {\n            throw new Error('entrypoint and value expected');\n          }\n          assertMichelsonData(tx.parameters.value);\n        } catch (e) {\n          this.messageService.addError(`Invalid parameters: ${e.message}`);\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  async simulateRequest(\n    txs: PartiallyPreparedTransaction[],\n    tokenTransfer: string\n  ): Promise<void | {\n    tx: PartiallyPreparedTransaction;\n    fee;\n    gasLimit;\n    storageLimit;\n  }> {\n    if (this.template) {\n      if (this.template.silent) {\n        console.log('Silent signing');\n      } else {\n        this.templateRequest = {\n          template: this.template,\n          partialOps: txs\n        };\n      }\n    } else {\n      await this.messageService.startSpinner('Preparing transaction...');\n    }\n    try {\n      await this.estimateService.preLoadData(this.activeAccount.pkh, this.activeAccount.pk);\n      const callback = (res) => {\n        if (res) {\n          if (res.error) {\n            this.messageService.addError(`Simulation error: ${res.error.message}`, 0);\n            this.operationResponse.emit({\n              error: 'invalid_parameters',\n              errorMessage: res.error.message\n            });\n          } else {\n            const fullyPrepared: FullyPreparedTransaction[] = txs.map((tx, i) => {\n              return {\n                ...tx,\n                fee: i === txs.length - 1 ? res.fee : '0',\n                gasLimit: res.customLimits[i].gasLimit.toString(),\n                storageLimit: res.customLimits[i].storageLimit.toString()\n              };\n            });\n            if (this.template) {\n              const fee = this.getTemplateFee(fullyPrepared);\n              console.log('Use template', this.template);\n              if (!this.template.silent) {\n                this.templateRequest = {\n                  template: this.template,\n                  partialOps: txs,\n                  ops: fullyPrepared,\n                  fee\n                };\n              } else {\n                let amount = Big(0);\n                for (const op of fullyPrepared) {\n                  amount = Big(op.amount).plus(amount);\n                }\n                amount = Big(fee.total).plus(amount);\n                amount = amount.times(Big(CONSTANTS.MAINNET && this.walletService.wallet?.XTZrate ? this.walletService.wallet.XTZrate : 5));\n                if (amount.gt(Big(this.thresholdUSD))) {\n                  this.operationResponse.emit('exceeded_threshold');\n                } else {\n                  this.silentInject(fullyPrepared);\n                }\n              }\n            } else {\n              this.confirmTransactions(fullyPrepared, true);\n            }\n          }\n        } else {\n          throw new Error('No simulation result');\n        }\n      };\n      await this.estimateService.estimateTransactions(JSON.parse(JSON.stringify(txs)), this.activeAccount.pkh, tokenTransfer, callback);\n    } catch (e) {\n      console.error(e);\n      this.operationResponse.emit('unknown_error');\n    } finally {\n      await this.messageService.stopSpinner();\n    }\n  }\n  prepareTransaction(): void {\n    this.prepareRequest = {\n      account: this.activeAccount,\n      tokenTransfer: this.tokenTransfer,\n      symbol: this.symbol\n    };\n  }\n  confirmTransactions(transactions: FullyPreparedTransaction[], externalReq: boolean): void {\n    if (this.isLbReq(transactions)) {\n      if (!externalReq) {\n        this.activeAccount = this.subjectService.activeAccount.getValue();\n      }\n      this.confirmSwapLiquidityRequest = {\n        account: this.activeAccount,\n        transactions,\n        externalReq\n      };\n    } else {\n      this.confirmRequest = {\n        account: this.activeAccount,\n        tokenTransfer: this.tokenTransfer,\n        transactions,\n        externalReq\n      };\n    }\n  }\n  private isLbReq(transactions: FullyPreparedTransaction[]): boolean {\n    if (\n      transactions.length === 1 &&\n      transactions[0].destination === this.lqdContract &&\n      ['xtzToToken', 'removeLiquidity'].includes(transactions[0].parameters?.entrypoint)\n    ) {\n      // xtzToToken or removeLiquidity\n      return true;\n    } else if (transactions[0].destination === this.tzBTCContract && transactions[0].parameters?.entrypoint === 'approve') {\n      // can be tokenToXtz or addLiquidity\n      if (transactions.length === 3 && transactions[0].parameters?.value?.args[1]?.int !== '0') {\n        console.log('prepend 0 approve');\n        // normalize\n        transactions.unshift({\n          ...transactions[0],\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        });\n      }\n      if (\n        transactions.length === 4 &&\n        new Set([transactions[0].destination, transactions[1].destination, transactions[3].destination, this.tzBTCContract]).size === 1 &&\n        new Set([transactions[0].parameters?.entrypoint, transactions[1].parameters?.entrypoint, transactions[3].parameters?.entrypoint, 'approve']).size ===\n          1 &&\n        new Set([\n          transactions[0].parameters?.value?.args[0]?.string,\n          transactions[1].parameters?.value?.args[0]?.string,\n          transactions[3].parameters?.value?.args[0]?.string,\n          this.lqdContract\n        ]).size === 1 &&\n        transactions[2].destination === this.lqdContract &&\n        ['tokenToXtz', 'addLiquidity'].includes(transactions[2].parameters?.entrypoint)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n  handlePrepareResponse(preparedTransactions: FullyPreparedTransaction[]): void {\n    this.prepareRequest = null;\n    if (preparedTransactions) {\n      console.log('PrepareResponse', JSON.stringify(preparedTransactions));\n      this.confirmTransactions(preparedTransactions, false);\n    }\n  }\n  handleConfirmResponse(opHash: string): void {\n    this.confirmRequest = null;\n    this.confirmSwapLiquidityRequest = null;\n    this.operationResponse.emit(opHash);\n  }\n  handleTemplateApproval(ops: FullyPreparedTransaction[]): void {\n    if (ops) {\n      this.silentInject(ops);\n    } else {\n      this.operationResponse.emit(null);\n    }\n    this.template = null;\n  }\n  private getTemplateFee(ops: FullyPreparedTransaction[]): TemplateFee {\n    let network = new Big(0);\n    let storageLimit = new Big(0);\n    for (const op of ops) {\n      network = network.plus(op.fee);\n      storageLimit = storageLimit.plus(op.storageLimit);\n    }\n    let storage = storageLimit.times(this.estimateService.costPerByte).div('1000000');\n    const total = network.plus(storage).toFixed();\n    network = network.toFixed();\n    storage = storage.toFixed();\n    return { network, storage, total };\n  }\n  async silentInject(ops: FullyPreparedTransaction[]): Promise<void> {\n    if (!this.walletService.isEmbeddedTorusWallet()) {\n      this.operationResponse.emit('UNSUPPORTED_WALLET_TYPE');\n      return;\n    }\n    for (const op of ops) {\n      // Limit to transactions for now\n      if (op.kind !== 'transaction') {\n        this.operationResponse.emit('UNSUPPORTED_KIND');\n        break;\n      }\n    }\n    if (!this.template.silent) {\n      this.messageService.startSpinner('Sending transaction...');\n    }\n    let keys;\n    try {\n      keys = await this.walletService.getKeys('', this.activeAccount.pkh);\n    } catch {\n      this.messageService.stopSpinner();\n    }\n    if (!keys) {\n      this.operationResponse.emit('FAILED_TO_SIGN');\n      return;\n    }\n    this.subscriptions.add(\n      this.operationService.transfer(this.activeAccount.address, ops, Number(ops[ops.length - 1].fee), keys, '').subscribe(\n        async (ans: any) => {\n          if (ans.success === true) {\n            console.log('Transaction successful ', ans);\n            await this.messageService.stopSpinner();\n            this.operationResponse.emit(ans.payload.opHash);\n            const metadata = {\n              transactions: ops,\n              opHash: ans.payload.opHash\n            };\n            await this.coordinatorService.boost(this.activeAccount.address, metadata);\n            for (const transaction of ops) {\n              if (this.walletService.addressExists(transaction.destination)) {\n                await this.coordinatorService.boost(transaction.destination);\n              }\n            }\n          } else {\n            await this.messageService.stopSpinner();\n            console.log('Transaction error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit({\n              error: 'broadcast_error',\n              errorMessage: ans.payload.msg\n            });\n          }\n        },\n        (err) => {\n          this.messageService.stopSpinner();\n          console.log(err);\n          this.operationResponse.emit('UNKNOWN_ERROR');\n        }\n      )\n    );\n  }\n}\n","<div *ngIf=\"req\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"cancel()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">{{req.template.action || 'Confirmation'}}</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column confirm-send\">\n        <div *ngIf=\"req.template.descriptions[0].text\" class=\"asset-name\">{{ req.template.descriptions[0].text }}</div>\n        <div class=\"flex-row transaction\">\n          <div class=\"flex-column left\">\n            <span *ngIf=\"req.template.descriptions[1].text\" class=\"default-text\">{{ req.template.descriptions[1].text }}</span>\n            <span *ngIf=\"req.template.descriptions[2]\" class=\"default-text amount\">{{ req.template.descriptions[2].text }}</span>\n            <span *ngIf=\"req.template.descriptions[3]\" class=\"default-text\">{{ req.template.descriptions[3].text }}</span>\n            <span class=\"default-text\">From:</span>\n            <div class=\"flex-row torus\" *ngIf=\"this.walletService.wallet.verifier\">\n              <img class=\"icon\" src=\"../../../assets/img/{{ this.walletService.wallet.verifier }}-logo.svg\">\n              <div class=\"flex-column\">\n                <span class=\"name\">{{ this.walletService.wallet.displayName() }}</span><span class=\"address\">{{\n                  req.activeAccount.address }}</span>\n              </div>\n            </div>\n            <span *ngIf=\"!this.walletService.wallet.verifier\" class=\"default-text single-to\">{{ req.activeAccount.address\n              }}</span>\n          </div>\n          <div *ngIf=\"req.template.descriptions[0]?.imgUrl\" class=\"flex-column right\">\n            <img class=\"token-image\" [src]=\"req.template.descriptions[0]?.imgUrl\" />\n          </div>\n        </div>\n      <br />\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column bottom\">\n        <div class=\"flex-row default-text more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"showMore = !showMore\">{{ !showMore ?\n          'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/dropdown-minterpop.svg\"></div>\n        <div *ngIf=\"showMore && req.payload\" class=\"info\">\n          <textarea style=\"width: 100%; padding: 0.5rem\" rows=10>{{req.payload}}</textarea>\n        </div>\n      </div>\n      <br />\n      <div class=\"flex-row buttons\">\n        <button (click)=\"approve()\">\n          <ng-container *ngIf=\"req.template.button; else defaultButtonText\">\n            {{req.template.button}}</ng-container>\n          <ng-template #defaultButtonText>Send</ng-template>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n      </div>\n    </div>\n  </div>\n</div> ","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\n\n@Component({\n  selector: 'app-sign-expr-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['../../confirm-send/confirm-send.component.scss']\n})\nexport class ExprTemplateComponent implements OnInit, OnChanges {\n  @Input() req = null;\n  @Output() isApproved = new EventEmitter();\n  constructor(public walletService: WalletService) {}\n\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {}\n  cancel() {\n    this.isApproved.emit(false);\n  }\n  approve() {\n    this.isApproved.emit(true);\n  }\n}\n","<div *ngIf=\"signRequest && payload && !template\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"rejectSigning()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">{{ signRequest?.title ? signRequest.title : 'Sign Expression' }}</h1>\n    </div>\n    <div class=\"flex-column sign-expr\">\n      <div class=\"seperator\"></div>\n      <p class=\"previewAttention\">{{ description ? description : 'An application has requested you sign an\n        expression.' }}</p>\n        <div class=\"seperator\"></div>\n      <div class=\"flex-row more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"toggle()\">{{ !showMore ? 'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/dropdown-minterpop.svg\"></div>\n      <div *ngIf=\"showMore\" class=\"info\">\n        <textarea rows=\"6\" readonly>{{ payload }}</textarea>\n      </div>\n      <div class=\"flex-column bottom\">\n        <span *ngIf=\"this.pwdInvalid\" class=\"danger margin\">{{ this.pwdInvalid }}</span>\n        <button class=\"purple confirm\" (click)=\"sign()\">SIGN</button>\n        <div class=\"footer\">\n          <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<app-sign-expr-template *ngIf=\"signRequest && payload && template\" [req]=\"{payload: payload, template: template, activeAccount: activeAccount}\" (isApproved)=\"handleTemplateApproval($event)\"></app-sign-expr-template>","import { Component, OnInit, SimpleChanges, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Account } from '../../../../services/wallet/wallet';\nimport { OperationService } from '../../../../services/operation/operation.service';\nimport { emitMicheline } from '@taquito/michel-codec';\nimport { valueDecoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { Uint8ArrayConsumer } from '@taquito/local-forging/dist/lib/uint8array-consumer';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-sign-expr-embed',\n  templateUrl: './sign-expr.component.html',\n  styleUrls: ['./sign-expr.component.scss']\n})\nexport class SignExprEmbedComponent implements OnInit, OnChanges {\n  @Input() signRequest: any;\n  @Input() activeAccount: Account;\n  @Output() signResponse = new EventEmitter();\n  syncSub: Subscription;\n  password = '';\n  pwdInvalid = '';\n  payload = '';\n  template = null;\n  description = null;\n  isMessage = false;\n  showMore = false;\n  constructor(\n    public walletService: WalletService,\n    private messageService: MessageService,\n    public translate: TranslateService,\n    private operationService: OperationService,\n    private inputValidationService: InputValidationService\n  ) {}\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.signRequest) {\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflow = 'hidden';\n      this.template = this.signRequest.ui;\n      this.isMessage = this.inputValidationService.isMessageSigning(this.signRequest.payload);\n      const value = valueDecoder(Uint8ArrayConsumer.fromHexString(this.signRequest.payload.slice(2)));\n      const payload = emitMicheline(value, {\n        indent: '  ',\n        newline: '\\n'\n      });\n      this.payload = this.isMessage ? value.string : payload;\n    }\n  }\n  async sign() {\n    const pwd = this.password;\n    this.password = '';\n    await this.messageService.startSpinner(`Signing ${this.isMessage ? 'message' : 'payload'}...`);\n    let keys;\n    try {\n      keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n    } catch (e) {\n      console.warn(e);\n      this.messageService.stopSpinner();\n    }\n    if (keys) {\n      this.pwdInvalid = '';\n      try {\n        const signature = this.operationService.sign(this.signRequest.payload, keys.sk).edsig;\n        this.acceptSigning(signature);\n      } catch (e) {\n        this.pwdInvalid = 'Signing failed';\n        console.warn(e);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    } else {\n      this.messageService.stopSpinner();\n      if (this.walletService.isTorusWallet()) {\n        this.pwdInvalid = `Authorization failed`;\n      } else {\n        this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD');\n      }\n    }\n  }\n  rejectSigning() {\n    this.closeModal();\n    this.signResponse.emit(null);\n  }\n  acceptSigning(signature: string) {\n    this.messageService.addSuccess(this.isMessage ? 'Message signed!' : 'Payload signed!');\n    this.closeModal();\n    this.signResponse.emit(signature);\n  }\n  closeModal() {\n    // restore body scrollbar\n    document.body.style.marginRight = '';\n    document.body.style.overflow = '';\n    this.clear();\n  }\n  clear() {\n    this.password = '';\n    this.pwdInvalid = '';\n    this.payload = '';\n    this.isMessage = false;\n    this.template = null;\n  }\n  toggle() {\n    this.showMore = !this.showMore;\n  }\n  handleTemplateApproval(t) {\n    if (t) {\n      this.sign();\n    } else {\n      this.rejectSigning();\n    }\n  }\n}\n","<h3>Processing Transaction...</h3>\n<br />\n<h1 class=\"high-demand\">High Demand Item!</h1>\n<br />\n<p class=\"desc\">Your order is being delivered. Wait times vary, but can be<br />as short as seconds or a few minutes\n</p>\n<br />\n<br />\n<h1>Estimated Wait Time:</h1>\n<h1 class=\"flex-row time\">\n  <span *ngIf=\"hours !== '00'\"class=\"flex-column hours\">\n    <h1>{{ hours }}</h1>\n    <h5>Hours</h5>\n  </span>\n  <span class=\"flex-column minutes\">\n    <h1>{{ minutes }}</h1>\n    <h5>Minutes</h5>\n  </span>\n  <span class=\"flex-column seconds\">\n    <h1>{{ seconds }}</h1>\n    <h5>Seconds</h5>\n  </span>\n</h1>\n<br />\n<br />\n<h2 class=\"note\">Note: Do not close this window or leave this page!</h2>\n<br />\n<h2 class=\"desc\">You will cancel this transaction<br />and have to start over!</h2>","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-queue-embed',\n  templateUrl: './queue.component.html',\n  styleUrls: ['./queue.component.scss']\n})\nexport class QueueEmbedComponent implements OnInit {\n  @Input('queueTime') queueTime = 0;\n  hours = '0';\n  minutes = '0';\n  seconds = '0';\n  constructor() {}\n  ngOnInit(): void {\n    this.updateTime();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.queueTime.currentValue !== changes.queueTime.previousValue) {\n      this.updateTime();\n    }\n  }\n\n  updateTime() {\n    let sec: any = this.queueTime;\n    let hrs: any = Math.floor(sec / 3600);\n    sec -= hrs * 3600;\n    let min: any = Math.floor(sec / 60);\n    sec -= min * 60;\n    sec = sec.toString();\n    min = min.toString();\n    hrs = hrs.toString();\n\n    this.hours = hrs.length < 2 ? '0' + hrs : hrs;\n    this.minutes = min.length < 2 ? '0' + min : min;\n    this.seconds = sec.length < 2 ? '0' + sec : sec;\n  }\n}\n","<app-queue-embed *ngIf=\"this.queueTimeVisible > 0\" [queueTime]=\"this.queueTimeVisible\"></app-queue-embed>\n<div *ngIf=\"this.queueTime === 0 && this.queueTimeVisible === 0\" class=\"direct-auth-login\">\n  <div class=\"body\">\n    <div class=\"header\">\n      <img (click)=\"abort()\" class=\"abort\" src=\"../../../assets/img/x.svg\">\n    </div>\n    <h2 *ngIf=\"this.loginConfig?.customPrio === 'high'\">Please re-authenticate your social<br>login to complete your purchase:</h2>\n    <h2 *ngIf=\"this.loginConfig?.customPrio !== 'high'\">Sign in with one of the<br>following providers:</h2>\n    <div class=\"login-options\" [class.vertically]=\"loginConfig.buttonsVertically\"\n      [class.horizontally]=\"!loginConfig.buttonsVertically\" *ngIf=\"torusService && torusService.verifierMapKeys\">\n      <ng-container *ngFor=\"let key of loginOptions\">\n        <div *ngIf=\"!loginConfig.buttonsVertically\" class=\"login-option\" (click)=\"login(key)\">\n          <img src=\"../../../../assets/img/torus-login/{{ key }}-color.svg\" width=\"24\">\n        </div>\n        <div *ngIf=\"loginConfig.buttonsVertically\" class=\"login-option\" (click)=\"login(key)\">\n          <img src=\"../../../../assets/img/torus-login/{{ key }}-color.svg\" width=\"24\"><span>Sign in with {{ key |\n            titlecase }}</span>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"footer\">\n    <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n  </div>\n</div>","import { EventEmitter, Input, Output, SimpleChanges, Component, OnInit, OnChanges } from '@angular/core';\nimport { LoginConfig, TypeOfLogin, LoginPrio } from 'kukai-embed';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { TorusService } from '../../../../services/torus/torus.service';\nimport { EmbeddedTorusWallet } from '../../../../services/wallet/wallet';\nimport { CONSTANTS } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit, OnChanges {\n  constructor(private messageService: MessageService, public torusService: TorusService, private walletService: WalletService) {}\n  @Input() dismiss: Boolean;\n  @Input() loginConfig: LoginConfig;\n  @Output() loginResponse = new EventEmitter();\n  loginOptions = [];\n  queueTime: number = 0;\n  queueTimeVisible: number = 0;\n  statusCounter: number = 0;\n  queueInterval: NodeJS.Timeout;\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.dismiss?.currentValue === true) {\n      this.messageService.stopSpinner().then(() => this.loginResponse.emit('dismiss'));\n    }\n    if (changes?.loginConfig?.currentValue) {\n      if (this.loginConfig.customPrio === 'high') {\n        if (this.walletService.wallet && this.walletService.wallet instanceof EmbeddedTorusWallet) {\n          if (this.walletService.wallet?.verifier) {\n            this.loginConfig.loginOptions = [this.walletService.wallet.verifier as TypeOfLogin];\n          }\n          this.startQueue();\n        }\n      }\n      if (this.loginConfig.loginOptions?.length > 0) {\n        this.loginOptions = [];\n        for (const loginOption of this.loginConfig.loginOptions) {\n          if (this.torusService.verifierMapKeys.includes(loginOption)) {\n            this.loginOptions.push(loginOption);\n          }\n        }\n      } else {\n        this.loginOptions = this.torusService.verifierMapKeys;\n      }\n    }\n  }\n  async startQueue() {\n    // set high prio\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet) {\n      this.queueTime = -1;\n      this.setHighPrio(this.walletService.wallet.verifier, this.walletService.wallet.id);\n    }\n    this.queueTimeVisible = -1;\n    this.messageService.startSpinner();\n    this.queueInterval = setInterval(() => {\n      if (this.queueTimeVisible > 1 || (this.queueTimeVisible === 1 && this.queueTime === 0)) {\n        this.queueTimeVisible -= 1;\n      }\n      if (this.walletService.wallet instanceof EmbeddedTorusWallet) {\n        let timeBetweenChecks = 300;\n        if (this.queueTimeVisible < 4) {\n          timeBetweenChecks = 2;\n        } else if (this.queueTimeVisible < 60) {\n          timeBetweenChecks = 15;\n        } else if (this.queueTimeVisible < 1800) {\n          timeBetweenChecks = 60;\n        }\n        this.statusCounter = ++this.statusCounter % timeBetweenChecks;\n        if (this.statusCounter === 0) {\n          this.checkQueue(this.walletService.wallet.verifier, this.walletService.wallet.id);\n        }\n      }\n      if (this.queueTimeVisible <= 0 && this.queueTime === 0) {\n        this.stopQueue();\n      }\n    }, 1000);\n  }\n  stopQueue() {\n    if (this.queueInterval) {\n      clearInterval(this.queueInterval);\n    }\n    this.queueTime = 0;\n    this.queueTimeVisible = 0;\n    this.statusCounter = 0;\n    this.messageService.stopSpinner();\n  }\n  abort() {\n    this.loginResponse.emit(null);\n    this.stopQueue();\n  }\n  async login(typeOfLogin: string) {\n    try {\n      this.messageService.startSpinner('Loading wallet...');\n      let loginData;\n      if (this.loginConfig?.customPrio === LoginPrio.Low) {\n        loginData = await this.torusService.loginTorus(typeOfLogin, '', true);\n      } else if (this.loginConfig?.customPrio === LoginPrio.High && this.walletService.wallet instanceof EmbeddedTorusWallet) {\n        loginData = await this.torusService.loginTorus(typeOfLogin, this.walletService.wallet.id);\n      } else {\n        loginData = await this.torusService.loginTorus(typeOfLogin);\n      }\n      if (!loginData?.keyPair) {\n        throw new Error('Login failed');\n      }\n      if (this.loginConfig?.customPrio === LoginPrio.Low) {\n        //loginData.keyPair = {pk: '', pkh: ''};\n        if (loginData?.keyPair?.pk === '') {\n          this.setLowPrio(loginData.userInfo);\n        } else {\n          console.log('skipping queue');\n        }\n      }\n      if (this.dismiss === null) {\n        await this.messageService.stopSpinner();\n      }\n      this.loginResponse.emit(loginData);\n      this.stopQueue();\n    } catch {\n      await this.messageService.stopSpinner();\n    }\n  }\n  async setLowPrio(userInfo: any) {\n    let { typeOfLogin, verifierId } = userInfo;\n    if (!CONSTANTS.MAINNET) {\n      typeOfLogin = 'mock';\n    }\n    const res = await this.get(`https://queue.tcinfra.net/q/low_priority?authorizer=${typeOfLogin}&id=${verifierId}`);\n    console.log('setLowPrio', res);\n    return res;\n  }\n  async setHighPrio(typeOfLogin: string, verifierId: string) {\n    if (!CONSTANTS.MAINNET) {\n      typeOfLogin = 'mock';\n    }\n    const res = await this.get(`https://queue.tcinfra.net/q/high_priority?authorizer=${typeOfLogin}&id=${verifierId}`);\n    console.log('setHighPrio', res);\n    this.updateQueue(res);\n    return res;\n  }\n  async checkQueue(typeOfLogin: string, verifierId: string) {\n    if (!CONSTANTS.MAINNET) {\n      typeOfLogin = 'mock';\n    }\n    const res = await this.get(`https://queue.tcinfra.net/check?authorizer=${typeOfLogin}&id=${verifierId}`, 0);\n    console.log('checkQueue', res);\n    this.updateQueue(res);\n    return res;\n  }\n  updateQueue(res: any) {\n    if (res?.EstimatedTimeSeconds !== -1) {\n      if (res.EstimatedTimeSeconds === 0 && res.Status === 'error') {\n        console.error('FailedToResolve');\n        this.abort();\n        return;\n      }\n      if (this.queueTimeVisible === -1) {\n        this.messageService.stopSpinner();\n      }\n      this.queueTime = this.queueTimeVisible = res.EstimatedTimeSeconds;\n    }\n  }\n  async get(url: string, triesLeft = 3) {\n    return await fetch(url)\n      .then(async (res) => {\n        return await res.json();\n      })\n      .catch(async (e) => {\n        if (triesLeft > 0) {\n          return await this.get(url, --triesLeft);\n        } else {\n          throw e;\n        }\n      });\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { TorusWallet, ImplicitAccount } from '../../../../services/wallet/wallet';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['../../../../../scss/components/views/embedded/card/card.component.scss']\n})\nexport class CardComponent implements OnInit {\n  @Input() activeAccount: ImplicitAccount;\n\n  constructor(private walletService: WalletService) {}\n\n  ngOnInit(): void {}\n\n  displayName(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      return '';\n    }\n  }\n\n  verifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return '';\n    }\n  }\n}\n","<div class=\"container\">\n    <div>\n        <img src=\"../../../assets/img/torus-login/{{verifier()}}-color.svg\" width=\"24\">\n        <h4>{{displayName()}}</h4>\n        <p>{{activeAccount.pkh}}</p>\n    </div>\n    <div>\n        <h4>BALANCE:</h4>\n        <h3>{{activeAccount.balanceXTZ || 0}} XTZ</h3>\n    </div>\n</div>\n","<app-signin *ngIf=\"login\" [dismiss]=\"dismiss\" [loginConfig]=\"loginConfig\" (loginResponse)=\"loginResponse($event)\"></app-signin>\n<app-send [embedded]=\"true\" *ngIf=\"externalRequest\" (operationResponse)=\"operationResponse($event)\" [headless]=true [externalRequest]=externalRequest\n    [template]=\"template\" [activeAccount]=activeAccount></app-send>\n<app-sign-expr-embed *ngIf=\"signRequest && activeAccount\" [signRequest]=\"signRequest\" [activeAccount]=activeAccount (signResponse)=\"signResponse($event)\"></app-sign-expr-embed>\n<app-card *ngIf=\"activeAccount && !blockCard && (!externalRequest && !login && !signRequest)\" [activeAccount]=activeAccount></app-card>\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { TorusService } from '../../../services/torus/torus.service';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { ImportService } from '../../../services/import/import.service';\nimport { KeyPair, ExternalRequest } from '../../../interfaces';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { PartialTezosTransactionOperation } from '@airgap/beacon-sdk';\nimport { EmbeddedTorusWallet, ImplicitAccount } from '../../../services/wallet/wallet';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { utils, common } from '@tezos-core-tools/crypto-utils';\nimport { ActivatedRoute } from '@angular/router';\nimport { LookupService } from '../../../services/lookup/lookup.service';\nimport { ActivityService } from '../../../services/activity/activity.service';\nimport { EmbeddedAuthService } from '../../../services/embedded-auth/embedded-auth.service';\nimport {\n  RequestTypes,\n  ResponseTypes,\n  RequestMessage,\n  ResponseMessage,\n  OperationResponse,\n  LogoutRequest,\n  TrackRequest,\n  LoginRequest,\n  OperationRequest,\n  AuthRequest,\n  CardRequest,\n  CardResponse,\n  SignExprRequest,\n  SignExprResponse,\n  LoginConfig,\n  LoginPrio\n} from 'kukai-embed';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nenum Permission {\n  LOGIN = 'login',\n  OPERATIONS = 'operations',\n  MICHELINE = 'micheline',\n  MICHELINE_SILENT = 'micheline_silent'\n}\ninterface Permissions {\n  origins: string[];\n  permissions: {\n    [Permission.LOGIN]: boolean;\n    [Permission.OPERATIONS]: boolean;\n    [Permission.MICHELINE]: boolean;\n    [Permission.MICHELINE_SILENT]?: boolean;\n  };\n}\n@Component({\n  selector: 'app-embedded',\n  templateUrl: './embedded.component.html',\n  styleUrls: ['../../../../scss/components/views/embedded/embedded.component.scss']\n})\nexport class EmbeddedComponent implements OnInit {\n  readonly permissionMatrix: Record<string, Permissions> = {\n    brio: {\n      origins: ['https://playwithbrio.com', 'https://www.playwithbrio.com', 'https://production.playwithbrio.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    minterpop: {\n      origins: ['https://minterpop.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    interpop: {\n      origins: ['https://interpopcomics.com', 'https://www.interpopcomics.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    humanMachine: {\n      origins: ['https://human-machine.io'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    ubisoft: {\n      origins: ['*.ubisoft.com'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: true\n      }\n    },\n    gap: {\n      origins: ['*.gap.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true,\n        micheline_silent: true\n      }\n    },\n    lexus: {\n      origins: ['https://ldai.lexusdesign.in'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    blockspace: {\n      origins: ['https://block-space.app'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    evian: {\n      origins: ['https://nft.evian.com'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    souvie: {\n      origins: ['https://souvie.dev'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    tzstaging: {\n      origins: ['*.tzstaging.com', 'https://tzstaging.com', 'https://tezos.com'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    studioexception: {\n      origins: ['https://studioexception.eu'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: true\n      }\n    },\n    cleantree: {\n      origins: ['https://cleantree.artshelp.net'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    vitality: {\n      origins: ['*.vitality.gg'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    kanvas: {\n      origins: ['*.tzconnect.berlin', 'https://metavert.sowvital.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    proofof: {\n      origins: ['https://proofofperformance.xyz', 'https://pop-six.vercel.app'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    }\n  };\n  constructor(\n    private torusService: TorusService,\n    private importService: ImportService,\n    private walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private route: ActivatedRoute,\n    private lookupService: LookupService,\n    private activityService: ActivityService,\n    private embeddedAuthService: EmbeddedAuthService,\n    private subjectService: SubjectService,\n    private inputValidationService: InputValidationService,\n    private elRef: ElementRef\n  ) {}\n  pendingOps: string[] = [];\n  ophashSubscription: Subscription;\n  origin = '';\n  login = false;\n  dismiss: Boolean = null;\n  blockCard = true;\n  activeAccount: ImplicitAccount = null;\n  template = null;\n  externalRequest: ExternalRequest = null;\n  signRequest = null;\n  loginConfig: LoginConfig = null;\n  queueMode: LoginPrio = null;\n  currentInstanceId = '';\n\n  ngOnInit(): void {\n    const htmlElem = this.elRef.nativeElement.closest('html');\n    htmlElem.style.fontSize = '100%';\n    document.body.style.background = 'none';\n    this.torusService.initTorus();\n    if (window.addEventListener) {\n      window.addEventListener('message', this.handleRequest, false);\n    } else {\n      (window as any).attachEvent('onmessage', this.handleRequest);\n    }\n    console.log('icabod is connected...');\n    this.route.queryParams\n      .filter((params) => params.instanceId)\n      .subscribe((params) => {\n        this.walletService.loadStoredWallet(params.instanceId);\n        this.currentInstanceId = params.instanceId;\n        if (this.walletService.wallet instanceof EmbeddedTorusWallet) {\n          this.origin = this.walletService.wallet.origin;\n          this.subjectService.origin.next(this.origin);\n          if (this.walletService.wallet?.implicitAccounts[0]) {\n            this.activeAccount = this.walletService.wallet.implicitAccounts[0];\n            this.coordinatorService.startXTZ();\n            this.coordinatorService.start(this.activeAccount.address, this.coordinatorService.defaultDelayActivity);\n            this.subscribeToConfirmedOps();\n          }\n        }\n      });\n    window.parent.window.postMessage(JSON.stringify({ type: ResponseTypes.initComplete, failed: false }), this.origin || '*');\n  }\n  handleRequest = (evt) => {\n    try {\n      const data: RequestMessage = JSON.parse(evt.data);\n      if (this.hasPermission(null, evt.origin)) {\n        console.log(`Received ${evt.data} from ${evt.origin}`);\n        if (data && data.type) {\n          this.origin = evt.origin;\n          this.subjectService.origin.next(this.origin);\n          switch (data.type) {\n            case RequestTypes.loginRequest:\n              this.handleLoginRequest(data);\n              break;\n            case RequestTypes.operationRequest:\n              this.handleOperationRequest(data);\n              break;\n            case RequestTypes.signExprRequest:\n              this.handleSignExprRequest(data);\n              break;\n            case RequestTypes.trackRequest:\n              this.handleTrackRequest(data);\n              break;\n            case RequestTypes.logoutRequest:\n              this.handleLogoutRequest(data);\n              break;\n            case RequestTypes.authRequest:\n              this.handleAuthRequest(data);\n              break;\n            case RequestTypes.cardRequest:\n              this.handleCardRequest(data);\n              break;\n            case RequestTypes.dismissRequest:\n              this.dismiss = true;\n              break;\n            default:\n              console.warn('Unknown request', data);\n          }\n        }\n      } else if (data && data.type) {\n        console.error(`Invalid origin (${evt.origin})`);\n      }\n    } catch {}\n  };\n  private handleSignExprRequest(req: SignExprRequest) {\n    if (!this.hasPermission(Permission.MICHELINE)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.signExprResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && this.walletService.wallet.implicitAccounts[0] && req.expr) {\n      if (req.expr.slice(0, 2) === '0x') {\n        req.expr = req.expr.slice(2);\n      }\n      if (this.inputValidationService.isMichelineExpr(req.expr)) {\n        if (req?.ui?.silent && this.hasPermission(Permission.MICHELINE_SILENT)) {\n          this.embeddedAuthService\n            .signExprSilent(req.expr)\n            .then((signature) => {\n              this.signResponse(signature);\n            })\n            .catch((e) => {\n              this.sendResponse({\n                type: ResponseTypes.signExprResponse,\n                failed: true,\n                error: e.message ? e.message : 'UNKNOWN_ERROR'\n              });\n            });\n        } else {\n          this.signRequest = {\n            payload: req.expr,\n            ui: this.normalizeTemplate(req?.ui)\n          };\n        }\n      } else {\n        this.sendResponse({\n          type: ResponseTypes.signExprResponse,\n          failed: true,\n          error: 'INVALID_PARAMETERS'\n        });\n      }\n    } else {\n      let response: ResponseMessage;\n      if (!(this.walletService.wallet instanceof EmbeddedTorusWallet) || !this.walletService.wallet.implicitAccounts[0]) {\n        response = {\n          type: ResponseTypes.signExprResponse,\n          failed: true,\n          error: 'NO_WALLET_FOUND'\n        };\n      } else {\n        response = {\n          type: ResponseTypes.signExprResponse,\n          failed: true,\n          error: 'INVALID_PARAMETERS'\n        };\n      }\n      this.sendResponse(response);\n    }\n  }\n  public signResponse(response: any) {\n    this.signRequest = null;\n    let resp: SignExprResponse;\n    if (response && typeof response === 'string' && response.length > 95 && response.slice(0, 5) === 'spsig') {\n      resp = {\n        type: ResponseTypes.signExprResponse,\n        failed: false,\n        signature: response\n      };\n    } else {\n      resp = {\n        type: ResponseTypes.signExprResponse,\n        failed: true,\n        error: 'ABORTED_BY_USER'\n      };\n    }\n    this.sendResponse(resp);\n  }\n  private handleLoginRequest(req: LoginRequest) {\n    if (!this.hasPermission(Permission.LOGIN)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    this.queueMode = req?.config.customPrio ? req?.config.customPrio : null;\n    if (this.activeAccount || (this.queueMode === 'low' && this.walletService.wallet)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'ALREADY_LOGGED_IN'\n      };\n      this.sendResponse(response);\n    } else if (this.queueMode === 'high' && !this.walletService.wallet) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'NO_WALLET_FOUND'\n      };\n      this.sendResponse(response);\n    } else {\n      if (req?.config?.customSpinnerDismissal) {\n        this.dismiss = false;\n      }\n      if (req?.config) {\n        this.loginConfig = req.config;\n      }\n      this.login = true;\n    }\n  }\n  private handleOperationRequest(req: OperationRequest) {\n    if (!this.hasPermission(Permission.OPERATIONS)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && this.walletService.wallet.implicitAccounts[0] && req.operations) {\n      if (this.isValidOperation(req.operations)) {\n        this.template = req.ui ? this.normalizeTemplate(req.ui) : null;\n        this.externalRequest = { operationRequest: req.operations, selectedAccount: this.activeAccount };\n      } else {\n        this.externalRequest = null;\n        this.sendResponse({\n          type: ResponseTypes.operationResponse,\n          failed: true,\n          error: 'INVALID_TRANSACTION'\n        });\n      }\n    } else {\n      this.sendResponse({\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'NO_WALLET_FOUND'\n      });\n    }\n  }\n  private async handleTrackRequest(req: TrackRequest) {\n    this.pendingOps.push(req.opHash);\n  }\n  private handleLogoutRequest(req: LogoutRequest) {\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && this.walletService.wallet.instanceId) {\n      const instanceId = this.walletService.wallet.instanceId;\n      this.logout(instanceId);\n      this.sendResponse({\n        type: ResponseTypes.logoutResponse,\n        instanceId,\n        failed: false\n      });\n    } else {\n      this.noWalletError();\n    }\n  }\n  async loginResponse(loginData: any) {\n    let response: ResponseMessage;\n    let toImport: any;\n    if (loginData === 'dismiss') {\n      this.dismiss = null;\n      response = {\n        type: ResponseTypes.dismissResponse,\n        failed: false\n      };\n    } else if (loginData) {\n      const { keyPair, userInfo } = loginData;\n      const { idToken = '', accessToken = '', long_lived_token = '', ...filteredUserInfo } = { ...userInfo };\n      let instanceId;\n      if (\n        this.walletService.wallet &&\n        this.walletService.wallet instanceof EmbeddedTorusWallet &&\n        keyPair?.pk &&\n        !this.walletService.wallet.implicitAccounts[0] &&\n        this.currentInstanceId\n      ) {\n        instanceId = this.currentInstanceId;\n      } else {\n        // 160 bits of entropy, base58 encoded\n        instanceId = this.generateInstanceId();\n      }\n      response = {\n        type: ResponseTypes.loginResponse,\n        instanceId,\n        pk: keyPair.pk,\n        pkh: keyPair.pkh,\n        userData: filteredUserInfo,\n        failed: false\n      };\n      toImport = { keyPair, userInfo, instanceId };\n      if (this.loginConfig?.authParams) {\n        try {\n          response.authResponse = await this.embeddedAuthService.authenticate(this.loginConfig.authParams, this.origin, keyPair);\n        } catch (e) {\n          console.error(e);\n          response = {\n            type: ResponseTypes.loginResponse,\n            failed: true,\n            error: e?.message\n          };\n          toImport = undefined;\n        }\n      }\n    } else {\n      this.dismiss = null;\n      response = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'ABORTED_BY_USER'\n      };\n    }\n    const loginConfig = this.loginConfig;\n    if (this.dismiss === null) {\n      this.login = false;\n      this.loginConfig = null;\n    }\n    setTimeout(() => {\n      this.sendResponse(response);\n      if (toImport) {\n        if (loginConfig?.strictAuth) {\n          toImport.keyPair.sk = '';\n        }\n        this.importAccount(toImport.keyPair, toImport.userInfo, toImport.instanceId);\n      }\n    }, 10);\n  }\n  async handleAuthRequest(authReq: AuthRequest) {\n    if (!this.hasPermission(Permission.LOGIN)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    this.embeddedAuthService\n      .authenticate(authReq, this.origin)\n      .then((authResponse: any) => {\n        this.sendResponse({\n          type: ResponseTypes.authResponse,\n          failed: false,\n          message: authResponse.message,\n          signature: authResponse.signature\n        });\n      })\n      .catch((e: Error) => {\n        this.sendResponse({\n          type: ResponseTypes.authResponse,\n          failed: true,\n          error: e.message ? e.message : 'UNKNOWN_ERROR'\n        });\n      });\n  }\n  handleCardRequest(req: CardRequest) {\n    this.blockCard = !req.show;\n    const response: CardResponse = {\n      type: ResponseTypes.cardResponse,\n      failed: false\n    };\n    this.sendResponse(response);\n  }\n  noWalletError() {\n    this.sendResponse({\n      type: ResponseTypes.logoutResponse,\n      failed: true,\n      error: 'NO_WALLET_FOUND'\n    });\n  }\n  operationResponse(opHash: any) {\n    let response: OperationResponse;\n    let errorMessage = '';\n    if (opHash?.error && opHash.errorMessage) {\n      errorMessage = opHash.errorMessage;\n      opHash = opHash.error;\n    }\n    if (!opHash) {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'ABORTED_BY_USER'\n      };\n    } else if (opHash === 'exceeded_threshold') {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'EXEEDED_THRESHOLD'\n      };\n    } else if (opHash === 'broadcast_error') {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'BROADCAST_ERROR',\n        errorMessage\n      };\n    } else if (opHash === 'invalid_parameters') {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'INVALID_PARAMETERS',\n        errorMessage\n      };\n    } else if (utils.validOperationHash(opHash)) {\n      response = {\n        type: ResponseTypes.operationResponse,\n        opHash,\n        failed: false\n      };\n    } else {\n      console.warn('Unknown operation response:', opHash);\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'UNKNOWN_ERROR'\n      };\n    }\n    this.template = null;\n    this.externalRequest = null;\n    setTimeout(() => {\n      this.sendResponse(response);\n    }, 0);\n  }\n  private sendResponse(resp: ResponseMessage) {\n    window.parent.window.postMessage(JSON.stringify(resp), this.origin);\n  }\n  private async importAccount(keyPair: KeyPair, userInfo: any, instanceId: string) {\n    if (keyPair?.pk) {\n      await this.importService\n        .importWalletFromPk(\n          keyPair.pk,\n          '',\n          {\n            verifier: userInfo.typeOfLogin,\n            id: userInfo.verifierId,\n            name: userInfo.name,\n            embedded: true,\n            origin: this.origin\n          },\n          keyPair.sk,\n          instanceId\n        )\n        .then((success: boolean) => {\n          if (success) {\n            this.activeAccount = this.walletService.wallet.implicitAccounts[0];\n            this.coordinatorService.startXTZ();\n            this.coordinatorService.start(this.activeAccount.address, this.coordinatorService.defaultDelayActivity);\n            this.subscribeToConfirmedOps();\n          }\n        });\n    } else if (keyPair?.pk === '') {\n      // login without keys\n      await this.importService.importWalletFromPk(\n        keyPair.pk,\n        '',\n        {\n          verifier: userInfo.typeOfLogin,\n          id: userInfo.verifierId,\n          name: userInfo.name,\n          embedded: true,\n          origin: this.origin\n        },\n        '',\n        instanceId\n      );\n    }\n    this.currentInstanceId = instanceId;\n  }\n  private isValidOperation(transactions: PartialTezosTransactionOperation[]): boolean {\n    try {\n      transactions.forEach((tx) => {\n        if (tx.kind !== 'transaction' || typeof tx.amount !== 'string' || !utils.validAddress(tx.destination)) {\n          throw new Error('Invalid transaction');\n        }\n      });\n    } catch (e) {\n      console.warn(e);\n      return false;\n    }\n    return true;\n  }\n  private generateInstanceId(): string {\n    return common.base58encode(utils.mnemonicToEntropy(utils.generateMnemonic(15)), new Uint8Array([]));\n  }\n  private logout(instanceId: string) {\n    this.subjectService.logout.next(true);\n    this.walletService.clearWallet(instanceId);\n    this.lookupService.clear();\n    this.activeAccount = null;\n    if (this.ophashSubscription) {\n      this.ophashSubscription.unsubscribe();\n    }\n    this.currentInstanceId = '';\n  }\n  subscribeToConfirmedOps() {\n    this.ophashSubscription = this.subjectService.confirmedOp.subscribe((opHash) => {\n      if (this.pendingOps.includes(opHash)) {\n        this.sendResponse({\n          type: ResponseTypes.trackResponse,\n          opHash: opHash,\n          failed: false\n        });\n        for (let i = 0; i < this.pendingOps.length; i++) {\n          if (this.pendingOps[i] === opHash) {\n            this.pendingOps.splice(i, 1);\n          }\n        }\n      }\n    });\n  }\n  private normalizeTemplate(template: any): any {\n    if (template?.descriptions) {\n      for (let i in template.descriptions) {\n        if (typeof template.descriptions[i] === 'string') {\n          template.descriptions[i] = {\n            text: template.descriptions[i]\n          };\n        }\n      }\n    }\n    return template;\n  }\n  private hasPermission(permission: Permission, origin: string = this.origin): boolean {\n    if (!CONSTANTS.MAINNET) {\n      return true;\n    }\n    try {\n      const keys = Object.keys(this.permissionMatrix);\n      for (const key of keys) {\n        for (const allowedOrigin of this.permissionMatrix[key].origins) {\n          if (allowedOrigin.startsWith('*.') ? origin.endsWith(allowedOrigin.slice(1)) : origin === allowedOrigin) {\n            return permission ? this.permissionMatrix[key].permissions[permission] : !!this.permissionMatrix[key].permissions;\n          }\n        }\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    return false;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Receive Address</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column receive\">\n      <label class=\"value\">Your account QR code</label>\n      <canvas id='canvas'></canvas>\n      <span class=\"flex-row value\">{{ activeAddress }}<img class=\"copy\" src=\"../../../assets/img/copy-icon.svg\"\n          (click)=\"copy()\" /></span>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport * as QRCode from 'qrcode';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ModalComponent } from '../modal.component';\nimport copy from 'copy-to-clipboard';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-receive',\n  templateUrl: './receive.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class ReceiveComponent extends ModalComponent implements OnInit {\n  activeAddress: string;\n  showReceiveFormat = {\n    btnOutline: true,\n    dropdownItem: false\n  };\n\n  name = 'receive';\n\n  constructor(private messageService: MessageService, private translate: TranslateService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  open(data: any): void {\n    this.activeAddress = data.address;\n    setTimeout(() => {\n      this.getQR();\n    }, 100);\n    super.open(data);\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n  getQR(): void {\n    QRCode.toCanvas(\n      document.getElementById('canvas'),\n      this.activeAddress,\n      {\n        errorCorrectionLevel: 'H',\n        scaleFactor: 2,\n        color: { light: '#FCFCFC' }\n      },\n      function (err, canvas) {\n        if (err) {\n          throw err;\n        }\n      }\n    );\n  }\n  copy(): void {\n    copy(this.activeAddress);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(this.activeAddress + ' ' + copyToClipboard, 5);\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\" src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Add New Account</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column new-account\">\n      <div class=\"label\">\n        ENTER YOUR PASSWORD TO CONFIRM\n      </div>\n      <input #pwdInput [(ngModel)]=\"password\" class=\"text password\" autocomplete=\"current-password\"\n        placeholder=\"Password\" type=\"password\" (input)=\"this.errorMsg = ''\" (change)=\"this.errorMsg = ''\" (keydown.enter)=\"!messageService.spinnerOn ? addPkh() : null\">\n      <span *ngIf=\"this.errorMsg\" class=\"danger margin\">{{ this.errorMsg }}</span>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <button class=\"confirm\" (click)=\"!messageService.spinnerOn ? addPkh() : null\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { HdWallet } from '../../../services/wallet/wallet';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ModalComponent } from '../modal.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-implicit',\n  templateUrl: './new-implicit.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class NewImplicitComponent extends ModalComponent implements OnInit {\n  @ViewChild('pwdInput') pwdView: ElementRef;\n  password = '';\n  errorMsg = '';\n  name = 'new-implicit';\n  constructor(\n    public walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private messageService: MessageService,\n    private router: Router\n  ) {\n    super();\n  }\n  openModal(): void {\n    if (this.openPkhSpot()) {\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n      this.clear();\n      setTimeout(() => {\n        const inputElem = this.pwdView.nativeElement as HTMLInputElement;\n        inputElem.focus();\n      }, 100);\n    } else {\n      this.messageService.addWarning(\"Can't create additional accounts when an unused account already exists\");\n    }\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clear();\n  }\n  ngOnInit(): void {}\n  async addPkh(): Promise<void> {\n    if (this.openPkhSpot()) {\n      this.messageService.startSpinner('Creating new account');\n      const pkh = await this.walletService.incrementAccountIndex(this.password);\n      if (pkh) {\n        this.coordinatorService.start(pkh, this.coordinatorService.defaultDelayActivity);\n        this.closeModal();\n        this.router.navigateByUrl(`/account/${pkh}`);\n      } else {\n        this.errorMsg = 'Wrong password!';\n      }\n      this.messageService.stopSpinner();\n    } else {\n      console.log('blocked!');\n      this.messageService.addError(\"Can't create additional accounts when an unused account already exists\");\n    }\n  }\n  openPkhSpot(): boolean {\n    const balance: number = this.walletService.wallet.implicitAccounts[this.walletService.wallet.implicitAccounts.length - 1].balanceXTZ;\n    const tokens = this.walletService.wallet.implicitAccounts[this.walletService.wallet.implicitAccounts.length - 1].tokens?.length;\n    return this.walletService.wallet instanceof HdWallet && ((balance && balance > 0) || (tokens && tokens > 0));\n  }\n  clear(): void {\n    this.password = '';\n    this.errorMsg = '';\n  }\n}\n","<div class=\"flex-row dropdown pr-request\" [class.expanded]=\"isOpen\" [id]=\"ecmpId\">\n  <div class=\"flex-row currentAddress\" (click)=\"toggleDropdown()\"><img\n      *ngIf=\"!!getUsername(selection?.address)\" class=\"logo\" src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span\n      class=\"address\">{{\n      getUsername(selection?.address) || \"&nbsp;&nbsp;&nbsp;&nbsp;\" + selection?.address }}</span><img\n      *ngIf=\"['', 'domain'].includes(getVerifier())\" class=\"button icon-db\"\n      src=\"../../../../assets/img/down-arrow.svg\" />\n  </div>\n  <div class=\"flex-column dropdown-content\">\n    <ng-container *ngFor=\"let account of options\">\n      <div class=\"option\" [class.selected]=\"account?.address === current?.address\"\n        (click)=\"selection = account; toggleDropdown()\">\n        <ng-container *ngIf=\"getUsername(account?.address)\">\n          <div class=\"flex-row alias\"><img class=\"logo\"\n              src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span>{{\n              getUsername(account?.address) }}</span></div>\n          <br /><span>{{\n            account?.address }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"!getUsername(account?.address)\">{{ account?.address }}</ng-container>\n      </div>\n    </ng-container>\n  </div>\n</div>","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TorusWallet } from '../../../../services/wallet/wallet';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { DropdownComponent } from '../dropdown.component';\n\n@Component({\n  selector: 'app-ui-dropdown-permission-request',\n  templateUrl: './permission-request.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/account-dropdown.component.scss']\n})\nexport class PermissionRequestDropdownComponent extends DropdownComponent implements OnInit, OnChanges {\n  constructor(public router: Router, public lookupService: LookupService, private walletService: WalletService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.selection = this.current;\n    this.list = this.options;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options && changes.options.currentValue !== changes.options.previousValue) {\n      this.list = this.options;\n    }\n  }\n\n  getUsername(address: string): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      const party = this.lookupService.resolve({\n        address: address || this.current?.address\n      });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n\n  toggleDropdown(): void {\n    this.dropdownResponse.emit(this.selection);\n    this.isOpen = !this.isOpen;\n  }\n}\n","<div *ngIf=\"permissionRequest\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"rejectPermissions()\"><img class=\"x\" src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">{{ permissionRequest.appMetadata.name }}</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column permission-request\">\n      <ng-container *ngIf=\"cachedIcon(permissionRequest); let cachedIcon;\"><app-asset class=\"app-icon\" [assets]=\"{ displayAsset: cachedIcon }\"></app-asset></ng-container>\n      <h4>Permissions requests:</h4>\n      <div class=\"flex-row-wrap requests\">\n        <span class=\"flex-row\" *ngFor=\"let scope of permissionRequest.scopes\">{{ scopeToText(scope) }}</span>\n      </div>\n      <h6>Apply To Account:</h6>\n      <app-ui-dropdown-permission-request [options]=\"accounts\" [current]=\"preSelectedAccount\" (dropdownResponse)=\"selectedAccount = $event\" style=\"width: 100%;align-self: center;\"></app-ui-dropdown-permission-request>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <button class=\"blue confirm\" (click)=\"grantPermissions()\">Approve</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, EventEmitter, Output, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Router } from '@angular/router';\nimport { BeaconService } from '../../../services/beacon/beacon.service';\nimport { Account } from '../../../services/wallet/wallet';\n\n@Component({\n  selector: 'app-permission-request',\n  templateUrl: './permission-request.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class PermissionRequestComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() permissionRequest: any;\n  @Input() activeAccount;\n  @Output() permissionResponse = new EventEmitter();\n  syncSub: Subscription;\n  preSelectedAccount: Account;\n  selectedAccount: Account;\n  accounts: Account[];\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public walletService: WalletService,\n    private messageService: MessageService,\n    private subjectService: SubjectService,\n    private router: Router,\n    private beaconService: BeaconService\n  ) {}\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.preSelectedAccount = this.selectedAccount = this.activeAccount?.address?.startsWith('tz')\n        ? this.activeAccount\n        : this.walletService.wallet.implicitAccounts[0];\n    }\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(async () => {\n        this.accounts = this.walletService.wallet?.getImplicitAccounts();\n      })\n    );\n    this.accounts = this.walletService.wallet?.getImplicitAccounts();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.activeAccount) {\n      this.preSelectedAccount = this.selectedAccount = this.activeAccount?.address?.startsWith('tz')\n        ? this.activeAccount\n        : this.walletService.wallet.implicitAccounts[0];\n    }\n    if (this.permissionRequest) {\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflow = 'hidden';\n      this.messageService.removeBeaconMsg(true);\n      this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n        if (response) {\n          this.permissionResponse.emit('silent');\n          this.reset();\n        }\n      });\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  rejectPermissions(): void {\n    this.permissionResponse.emit(null);\n    this.reset();\n  }\n  grantPermissions(): void {\n    const pk = this.selectedAccount?.pk;\n    this.permissionResponse.emit(pk);\n    this.reset();\n    this.router.navigate([`/account/${this.selectedAccount.address}`]);\n  }\n  reset(): void {\n    document.body.style.marginRight = '';\n    document.body.style.overflow = '';\n    this.permissionRequest = null;\n    if (this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n  }\n  scopeToText(scope: string): string {\n    if (scope === 'sign') {\n      return 'Request other signing';\n    } else if (scope === 'operation_request') {\n      return 'Request operation signing';\n    }\n    return scope;\n  }\n  cachedIcon(permissionRequest): string {\n    if (permissionRequest) {\n      for (const app of this.beaconService.peers) {\n        if (permissionRequest.senderId === app.senderId) {\n          if (app.cachedIcon) {\n            return app.cachedIcon;\n          }\n        }\n      }\n    }\n    return '';\n  }\n}\n","<div *ngIf=\"signRequest\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"rejectSigning()\"><img class=\"x\" src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">\n        <ng-container *ngIf=\"isMessage\">Sign Message</ng-container>\n        <ng-container *ngIf=\"!isMessage\">Sign Expression</ng-container>\n      </h1>\n    </div>\n    <div class=\"flex-column sign-expr\">\n      <p class=\"previewAttention\">An application has requested you sign a<ng-container *ngIf=\"isMessage\"> message</ng-container><ng-container *ngIf=\"!isMessage\">n expression</ng-container></p>\n      <p *ngIf=\"!isMessage\" class=\"previewAttention warning\">Warning! Only sign if you understand the expression or trust the source.</p>\n      <app-ui-toggle-advanced *ngIf=\"!isMessage\" style=\"width: 13rem; margin-bottom: 2rem;\" [default]=\"false\" (stateChange)=\"advancedForm = $event\"></app-ui-toggle-advanced>\n      <textarea *ngIf=\"advancedForm || isMessage\" rows=\"10\" readonly>{{ payload }}</textarea>\n      <div class=\"seperator\" style =\"left: 0\"></div>\n      <div class=\"flex-column bottom\">\n        <span *ngIf=\"this.pwdInvalid\" class=\"danger margin\">{{ this.pwdInvalid }}</span>\n        <input *ngIf=\"walletService.isPwdWallet()\" [(ngModel)]=\"password\"\n          autocomplete=\"current-password\" placeholder=\"Password\" class=\"text password\" type=\"password\"\n          (input)=\"this.pwdInvalid = ''\" (change)=\"this.pwdInvalid = ''\" (keydown.enter)='!messageService.spinnerOn ? sign(): null'>\n        <button class=\"purple confirm\" (click)=\"!messageService.spinnerOn ? sign(): null\" [disabled]=\"walletService.isWatchWallet()\">\n          {{ walletService.isLedgerWallet() ? 'Sign with Ledger' : 'Sign'}}</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, SimpleChanges, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Account } from '../../../services/wallet/wallet';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { emitMicheline } from '@taquito/michel-codec';\nimport { valueDecoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { Uint8ArrayConsumer } from '@taquito/local-forging/dist/lib/uint8array-consumer';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { ModalComponent } from '../modal.component';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-sign-expr',\n  templateUrl: './sign-expr.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class SignExprComponent extends ModalComponent implements OnInit, OnChanges {\n  @Input() signRequest: any;\n  @Input() activeAccount: Account;\n  @Output() signResponse = new EventEmitter();\n  syncSub: Subscription;\n  password = '';\n  pwdInvalid = '';\n  payload = '';\n  isMessage = false;\n  advancedForm = false;\n  name = 'sign-expr';\n  constructor(\n    public walletService: WalletService,\n    private messageService: MessageService,\n    public translate: TranslateService,\n    private operationService: OperationService,\n    private ledgerService: LedgerService,\n    private inputValidationService: InputValidationService,\n    private subjectService: SubjectService\n  ) {\n    super();\n  }\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.signRequest) {\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n      this.isMessage = this.inputValidationService.isMessageSigning(this.signRequest.payload);\n      const value = valueDecoder(Uint8ArrayConsumer.fromHexString(this.signRequest.payload.slice(2)));\n      const payload = emitMicheline(value, {\n        indent: '  ',\n        newline: '\\n'\n      });\n      this.payload = this.isMessage ? value.string : payload;\n      this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n        if (response) {\n          this.signResponse.emit('silent');\n          this.closeModal();\n        }\n      });\n    }\n  }\n  async sign(): Promise<void> {\n    if (this.walletService.isLedgerWallet()) {\n      this.requestLedgerSignature();\n    } else {\n      const pwd = this.password;\n      this.password = '';\n      await this.messageService.startSpinner(`Signing ${this.isMessage ? 'message' : 'payload'}...`);\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n      } catch (e) {\n        console.warn(e);\n        this.messageService.stopSpinner();\n      }\n      if (keys) {\n        this.pwdInvalid = '';\n        try {\n          const signature = this.operationService.sign(this.signRequest.payload, keys.sk).edsig;\n          this.acceptSigning(signature);\n        } catch (e) {\n          this.pwdInvalid = 'Signing failed';\n          console.warn(e);\n        } finally {\n          this.messageService.stopSpinner();\n        }\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.isTorusWallet()) {\n          this.pwdInvalid = `Authorization failed`;\n        } else {\n          this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD');\n        }\n      }\n    }\n  }\n  async requestLedgerSignature(): Promise<void> {\n    await this.messageService.startSpinner('Waiting for Ledger signature...');\n    try {\n      const payload = this.signRequest.payload;\n      let signature = '';\n      if (payload.length <= 2290) {\n        signature = await this.ledgerService.signOperation(payload, this.walletService.wallet.implicitAccounts[0].derivationPath);\n      } else {\n        signature = await this.ledgerService.signHash(\n          this.operationService.ledgerPreHash(payload),\n          this.walletService.wallet.implicitAccounts[0].derivationPath\n        );\n      }\n      if (signature) {\n        this.acceptSigning(this.operationService.hexsigToEdsig(signature));\n      } else {\n        this.pwdInvalid = 'Failed to sign transaction';\n      }\n    } finally {\n      this.messageService.stopSpinner();\n    }\n  }\n  rejectSigning(): void {\n    this.closeModal();\n    this.signResponse.emit(null);\n  }\n  acceptSigning(signature: string): void {\n    this.messageService.addSuccess(this.isMessage ? 'Message signed!' : 'Payload signed!');\n    this.closeModal();\n    this.signResponse.emit(signature);\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clear();\n  }\n  clear(): void {\n    this.password = '';\n    this.pwdInvalid = '';\n    this.payload = '';\n    this.isMessage = false;\n    if (this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Originate</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column originate\">\n      <div class=\"flex-column top\">\n        <span class=\"amount key\">AMOUNT:&nbsp;<span class=\"value\">{{ this.balance ? this.balance + ' ' + 'tez' : ''\n            }}</span></span>\n        <!-- <span class=\"amount-usd\"> </span> -->\n        <span class=\"section key\">From:&nbsp;<span class=\"from\">{{ externalRequest?.selectedAccount?.address }}</span></span>\n      </div>\n      <br />\n      <div class=\"flex-row attrs\">\n        <div class=\"flex-row attr\">\n          <span class=\"key\">FEE:&nbsp;</span><span class=\"value\">{{ this.getTotalFee() }} tez</span>\n        </div>\n        <div class=\"flex-row attr\">\n          <span class=\"key\">MAX STORAGE COST:&nbsp;</span><span class=\"value\">{{ getTotalBurn() }} tez</span>\n        </div>\n      </div>\n      <app-ui-toggle-advanced style=\"width: calc(100% - 1em);margin: 2em 0;\" [default]=\"false\"\n        (stateChange)=\"advancedForm = $event\">\n      </app-ui-toggle-advanced>\n      <form autocomplete=\"off\" *ngIf=\"advancedForm\" class=\"advanced-form\">\n        <div class=\"tabs-container\">\n          <div class=\"flex-row tabs\">\n            <span class=\"tab\" [class.active]=\"activeTab === 0\" (click)=\"activeTab = 0\">Code</span>\n            <span class=\"tab\" [class.active]=\"activeTab === 1\" (click)=\"activeTab = 1\">Storage</span>\n          </div>\n        </div>\n        <textarea rows=\"10\" readonly>{{ getScript() }}</textarea>\n        <ng-container *ngIf=\"!(walletService.isLedgerWallet() && !ledgerError)\">\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Gas limit</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text\" placeholder={{this.defaultTransactionParams.gas.toString()}}\n                [(ngModel)]=\"customGas\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Fee</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text\" (keypress)=\"keyPressNumbersDecimal($event, 'customFee')\"\n                placeholder={{this.defaultTransactionParams.fee.toString()}} [(ngModel)]=\"customFee\">\n            </div>\n          </div>\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Storage limit</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text\"\n                placeholder={{this.defaultTransactionParams?.storage.toString()}} [(ngModel)]=\"customStorage\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Max storage cost</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text read-only\" [value]=\"burnAmount() ? burnAmount() : '0 tez'\"\n                tabindex=-1 readonly>\n            </div>\n          </div>\n        </ng-container>\n      </form>\n      <span *ngIf=\"formInvalid\" class=\"danger margin\">\n        {{ formInvalid }}\n      </span>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <br />\n        <ng-container *ngIf=\"walletService.isPwdWallet()\">\n          <input name=\"none\" [(ngModel)]=\"password\" placeholder=\"Password\" autocomplete=\"current-password\"\n            class=\"text password\" type=\"password\" (input)=\"this.pwdInvalid = ''\" (paste)=\"this.pwdInvalid = ''\"\n            (keydown.enter)='!messageService.spinnerOn ? inject() : null'>\n        </ng-container>\n        <button *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\" class=\"blue confirm\"\n          (click)=\"ledgerSign()\">Sign with Ledger</button>\n        <ng-template #elseBlock>\n          <button class=\"blue confirm\" (click)=\"!messageService.spinnerOn ? inject() : null\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : 'Confirm'}}</button>\n        </ng-template>\n      </div>\n      <span *ngIf=\"this.pwdInvalid\" class=\"danger margin\">{{ this.pwdInvalid }}</span>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { KeyPair, DefaultTransactionParams, ExternalRequest } from '../../../interfaces';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { LedgerWallet, Account, TorusWallet } from '../../../services/wallet/wallet';\nimport { MessageService } from '../../../services/message/message.service';\nimport Big from 'big.js';\nimport { emitMicheline, assertMichelsonData, assertMichelsonContract } from '@taquito/michel-codec';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { Subscription } from 'rxjs';\nimport { ModalComponent } from '../modal.component';\nimport { SubjectService } from '../../../services/subject/subject.service';\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n\n@Component({\n  selector: 'app-originate',\n  templateUrl: './originate.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class OriginateComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  readonly beaconMode = true;\n  @Input() externalRequest: ExternalRequest;\n  @Output() operationResponse = new EventEmitter();\n  syncSub: Subscription;\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n  costPerByte: string = this.estimateService.costPerByte;\n\n  balance = '';\n  script: any;\n\n  customFee = '';\n  customGas = '';\n  customStorage = '';\n\n  pwdInvalid: string;\n  formInvalid = '';\n  sendResponse: any;\n  ledgerError = '';\n  simError = '';\n\n  password: string;\n  advancedForm = false;\n  simSemaphore = 0;\n  activeTab = 0;\n\n  name = 'originate';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private walletService: WalletService,\n    private operationService: OperationService,\n    private coordinatorService: CoordinatorService,\n    private inputValidationService: InputValidationService,\n    private ledgerService: LedgerService,\n    private messageService: MessageService,\n    private estimateService: EstimateService,\n    private subjectService: SubjectService\n  ) {\n    super();\n  }\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.beaconMode) {\n      if (\n        this.externalRequest?.operationRequest?.operationDetails?.length === 1 &&\n        this.externalRequest.operationRequest.operationDetails[0].kind === 'origination'\n      ) {\n        if (this.isValidOrigination()) {\n          this.openModal();\n          this.balance = Big(this.externalRequest.operationRequest.operationDetails[0].balance)\n            .div(10 ** 6)\n            .toFixed();\n          this.script = this.externalRequest.operationRequest.operationDetails[0].script;\n          const recommendations = {\n            gasRecommendation: this.externalRequest.operationRequest.operationDetails[0].gas_limit\n              ? this.externalRequest.operationRequest.operationDetails[0].gas_limit\n              : undefined,\n            storageRecommendation: this.externalRequest.operationRequest.operationDetails[0].storage_limit\n              ? this.externalRequest.operationRequest.operationDetails[0].storage_limit\n              : undefined\n          };\n          this.estimateFees(recommendations);\n          if (this.beaconMode) {\n            this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n              if (response) {\n                this.operationResponse.emit('silent');\n                this.closeModal();\n              }\n            });\n          }\n        } else {\n          console.warn('Invalid origination');\n          this.operationResponse.emit('parameters_error');\n        }\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  openModal(): void {\n    if (this.walletService.wallet) {\n      // hide body scrollbar\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflow = 'hidden';\n      this.clearForm();\n      if (this.walletService.isLedgerWallet()) {\n        this.ledgerError = '?';\n      }\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n    }\n  }\n  isValidOrigination(): boolean {\n    const origination = this.externalRequest.operationRequest.operationDetails[0];\n    if (!origination.balance || !this.inputValidationService.amount(origination.balance, 0)) {\n      console.warn('invalid balance');\n      return false;\n    }\n    try {\n      assertMichelsonContract(origination.script.code);\n      assertMichelsonData(origination.script.storage);\n    } catch (e) {\n      console.warn('Invalid script');\n      return false;\n    }\n    return true;\n  }\n  async estimateFees(recommendations: any = {}): Promise<void> {\n    const callback = (res) => {\n      if (res) {\n        if (res.error) {\n          this.simError = res.error;\n          this.formInvalid = this.simError;\n        } else {\n          this.defaultTransactionParams = res;\n        }\n      }\n      this.simSemaphore--;\n    };\n    this.simSemaphore++;\n    await this.estimateService.preLoadData(this.externalRequest.selectedAccount.pkh, this.externalRequest.selectedAccount.pk);\n    this.estimateService.estimateOrigination({ ...this.getOrigination(), ...recommendations }, this.externalRequest.selectedAccount.pkh, callback);\n  }\n  getOrigination(): {\n    balance: string;\n    script: string;\n    gasLimit: number;\n    storageLimit: number;\n  } {\n    const gasLimit = this.customGas ? Number(this.customGas) : this.defaultTransactionParams.gas;\n    const storageLimit = this.customStorage ? Number(this.customStorage) : this.defaultTransactionParams.storage;\n    return JSON.parse(\n      JSON.stringify({\n        balance: this.balance,\n        script: this.script,\n        gasLimit,\n        storageLimit\n      })\n    );\n  }\n  getTotalCost(display: boolean = false): string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return totalFee;\n  }\n  getTotalFee(): number {\n    if (this.customFee !== '' && Number(this.customFee)) {\n      return Number(this.customFee);\n    }\n    return Number(this.defaultTransactionParams.fee);\n  }\n  getTotalBurn(): number {\n    if (this.customStorage !== '' && Number(this.customStorage)) {\n      return Number(Big(this.customStorage).times(this.costPerByte).div(1000000).toString());\n    }\n    return this.defaultTransactionParams.burn;\n  }\n  burnAmount(): string {\n    const burn = this.customStorage ? Number(Big(this.customStorage).times(this.costPerByte).div(1000000)) : this.defaultTransactionParams.burn;\n    if (burn) {\n      return burn + ' tez';\n    }\n    return '';\n  }\n  getScript(): string {\n    return this.activeTab\n      ? emitMicheline(this.script.storage, {\n          indent: '  ',\n          newline: '\\n'\n        })\n      : emitMicheline(this.script.code, { indent: '  ', newline: '\\n' });\n  }\n  closeModalAction(): void {\n    this.operationResponse.emit(null);\n    this.closeModal();\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clearForm();\n    this.messageService?.stopSpinner();\n  }\n  async inject(): Promise<void> {\n    this.formInvalid = this.simError;\n    const valid = this.validateOrigination();\n    if (valid) {\n      const pwd = this.password;\n      this.password = '';\n      this.messageService.startSpinner('Signing operation...');\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.externalRequest.selectedAccount.pkh);\n      } catch {\n        this.messageService.stopSpinner();\n      }\n      if (this.walletService.isLedgerWallet()) {\n        this.broadCastLedgerTransaction();\n        this.sendResponse = null;\n      } else {\n        if (keys) {\n          this.pwdInvalid = '';\n          this.messageService.startSpinner('Sending operation...');\n          this.sendOrigination(keys);\n          this.closeModal();\n        } else {\n          this.messageService.stopSpinner();\n          if (this.walletService.wallet instanceof TorusWallet) {\n            this.pwdInvalid = `Authorization failed`;\n          } else {\n            this.pwdInvalid = 'Wrong password!';\n          }\n        }\n      }\n    }\n  }\n  validateOrigination(): boolean {\n    if (this.simSemaphore) {\n      return false;\n    } else if (this.formInvalid) {\n      return false;\n    } else if (!this.inputValidationService.gas(this.customGas)) {\n      this.formInvalid = 'Invalid gas limit';\n      return false;\n    } else if (!this.inputValidationService.storage(this.customStorage)) {\n      this.formInvalid = 'Invalid storage limit';\n      return false;\n    } else if (!this.inputValidationService.amount(this.customFee, 6)) {\n      this.formInvalid = 'Invalid fee';\n      return false;\n    }\n    return true;\n  }\n  async ledgerSign(): Promise<void> {\n    this.formInvalid = this.simError;\n    const valid = this.validateOrigination();\n    if (valid) {\n      const keys = await this.walletService.getKeys('');\n      if (keys) {\n        this.sendOrigination(keys);\n      }\n    }\n  }\n  async sendOrigination(keys: KeyPair): Promise<void> {\n    //this.fee = '';\n    this.subscriptions.add(\n      this.operationService.originate(this.getOrigination(), this.getTotalFee(), keys).subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success === true) {\n            if (ans.payload.opHash) {\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                kt1: ans.payload.newPkh,\n                opHash: ans.payload.opHash,\n                origination: this.externalRequest.operationRequest.operationDetails[0]\n              };\n              this.coordinatorService.boost(this.externalRequest.selectedAccount.address, metadata);\n            } else if (this.walletService.isLedgerWallet()) {\n              this.requestLedgerSignature();\n            }\n          } else {\n            this.messageService.stopSpinner();\n            console.log('Origination error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n            if (this.walletService.isLedgerWallet) {\n              this.closeModal();\n            }\n          }\n        },\n        (err) => {\n          console.log('Error Message ', JSON.stringify(err));\n          this.ledgerError = 'Failed to create operation';\n        }\n      )\n    );\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      const op = this.sendResponse.payload.unsignedOperation;\n      this.messageService.startSpinner('Waiting for Ledger signature');\n      let signature;\n      try {\n        signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n      if (signature) {\n        const signedOp = op + signature;\n        this.sendResponse.payload.signedOperation = signedOp;\n        this.ledgerError = '';\n      } else {\n        this.ledgerError = 'Failed to sign operation';\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.messageService.startSpinner('Broadcasting operation');\n    this.subscriptions.add(\n      this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(\n        (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success && this.externalRequest.selectedAccount.address) {\n            const metadata = {\n              kt1: ans.payload.newPkh,\n              opHash: ans.payload.opHash,\n              origination: this.externalRequest.operationRequest.operationDetails[0]\n            };\n            this.coordinatorService.boost(this.externalRequest.selectedAccount.address, metadata);\n          } else {\n            this.messageService.addError(this.sendResponse.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.closeModal();\n          console.log('ans: ' + JSON.stringify(ans));\n        },\n        (error) => {\n          this.messageService.stopSpinner();\n          this.messageService.addError(error, 0);\n          this.operationResponse.emit('broadcast_error');\n        }\n      )\n    );\n  }\n  clearForm(): void {\n    this.defaultTransactionParams = zeroTxParams;\n    this.customFee = '';\n    this.customGas = '';\n    this.customStorage = '';\n\n    this.balance = '';\n    this.script = null;\n\n    this.advancedForm = false;\n\n    this.password = '';\n    this.pwdInvalid = '';\n    this.formInvalid = '';\n    this.simError = '';\n\n    this.sendResponse = null;\n    this.ledgerError = '';\n    this.simSemaphore = 0;\n    this.activeTab = 0;\n\n    if (this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n  }\n  // Only Numbers with Decimals\n  keyPressNumbersDecimal(event, input): boolean {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode !== 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n      event.preventDefault();\n      return false;\n    } else if (charCode === 46 && this[input].length === 0) {\n      this[input] = '0' + this[input];\n    }\n    return true;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Confirm Staking</h1>\n    </div>\n    <div class=\"flex-column confirm-staking\">\n      <div class=\"flex-row head\">\n        <img *ngIf=\"delegate?.logo\" [src]=\"delegate.logo\" />\n        <div class=\"flex-column data\"\n          *ngIf=\"delegate?.name ? delegate.name : toPkh; let delegateDisplayName; else undelegate\">\n          <span class=\"name\">{{ delegateDisplayName }}</span>\n          <div class=\"flex-row fee-space\"><span class=\"fee\"><span>SPLIT:</span>&nbsp;{{ delegate?.fee ?\n              toPercent(delegate.fee) : 'UNKNOWN' }}</span><span *ngIf=\"delegate?.freeSpace\"\n              class=\"space\"><span>SPACE:</span>&nbsp;{{ round(delegate.freeSpace) }}</span>\n          </div>\n        </div>\n        <ng-template #undelegate>\n          <div class=\"flex-column data\">\n            <span class=\"name\">Undelegate from baker</span>\n          </div>\n        </ng-template>\n      </div>\n      <br />\n      <app-ui-toggle-advanced style=\"width: calc(100% - 1em);\" [default]=\"false\" (stateChange)=\"advanced = $event\">\n      </app-ui-toggle-advanced>\n      <br />\n      <br />\n      <ng-container *ngIf=\"advanced\">\n        <form autocomplete=\"off\">\n          <div class=\"label\">Fee <span class=\"label\" style=\"margin: 0; text-transform: lowercase;\">(tez)</span></div>\n          <input inputmode=\"decimal\" name=\"none\" [(ngModel)]=\"fee\" class=\"text fee\" type=\"text\" placeholder=\"{{defaultFee}}\"\n            [disabled]=\"walletService.isLedgerWallet() && sendResponse?.payload?.signedOperation\" />\n        </form>\n      </ng-container>\n      <br />\n      <br />\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <ng-container *ngIf=\"walletService.isPwdWallet()\">\n          <div class=\"label\">ENTER YOUR PASSWORD TO CONFIRM</div>\n          <span *ngIf=\"this.pwdValid\" class=\"label danger\">{{ this.pwdValid }}</span>\n          <input name=\"none\" [(ngModel)]=\"password\" placeholder=\"Password\" autocomplete=\"current-password\"\n            class=\"text password\" type=\"password\" (input)=\"this.pwdValid = ''\" (change)=\"this.pwdValid = ''\"\n            (keydown.enter)='!messageService.spinnerOn ? inject() : null'>\n        </ng-container>\n        <button class=\"confirm\" *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\"\n          (click)=\"ledgerSign()\">Sign with Ledger</button>\n        <ng-template #elseBlock>\n          <button class=\"confirm\" (click)=\"!messageService.spinnerOn ? inject() : null\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : 'Confirm'}}</button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { KeyPair, ExternalRequest } from '../../../interfaces';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { ExportService } from '../../../services/export/export.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { LedgerWallet, Account, ImplicitAccount, OriginatedAccount, TorusWallet } from '../../../services/wallet/wallet';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TezosDomainsService } from '../../../services/tezos-domains/tezos-domains.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalComponent } from '../modal.component';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport Big from 'big.js';\n\n@Component({\n  selector: 'app-delegate',\n  templateUrl: './delegate.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class DelegateComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  domainPendingLookup = false;\n  defaultFee = 0.0004;\n  readonly pkhFee = 0.0004;\n  readonly ktFee = 0.0008;\n  @ViewChild('toPkhInput') toPkhView: ElementRef;\n  @Input() beaconMode = false;\n  @Input() externalRequest: ExternalRequest;\n  @Output() operationResponse = new EventEmitter();\n  activeAccount: Account;\n  toPkh: string;\n  delegate = null;\n  fee: string = '';\n  password: string;\n  pwdValid: string;\n  formInvalid = '';\n  sendResponse: any;\n  ledgerError = '';\n  syncSub: Subscription;\n  advanced = false;\n\n  name = 'delegate-confirm';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private route: ActivatedRoute,\n    public walletService: WalletService,\n    private operationService: OperationService,\n    private coordinatorService: CoordinatorService,\n    private exportService: ExportService,\n    private inputValidationService: InputValidationService,\n    private ledgerService: LedgerService,\n    private messageService: MessageService,\n    private tezosDomains: TezosDomainsService,\n    private subjectService: SubjectService,\n    private router: Router\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      let address = this.route.snapshot.paramMap.get('address');\n      if (this.walletService.addressExists(address)) {\n        this.activeAccount = this.walletService.wallet.getAccount(address);\n      }\n      this.subscriptions.add(\n        this.subjectService.activeAccount.subscribe((activeAccount) => {\n          this.activeAccount = activeAccount;\n        })\n      );\n    }\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.beaconMode) {\n      if (this.externalRequest?.operationRequest) {\n        const opReq = this.externalRequest.operationRequest.operationDetails\n          ? this.externalRequest.operationRequest.operationDetails\n          : this.externalRequest.operationRequest;\n        if (opReq[0]?.kind === 'delegation') {\n          if (opReq[0].delegate) {\n            this.activeAccount = this.externalRequest.selectedAccount;\n            ModalComponent.currentModel.next({\n              name: '',\n              data: null\n            });\n            this.clearForm();\n            ModalComponent.currentModel.next({\n              name: 'delegate-confirm',\n              data: { address: opReq[0].delegate }\n            });\n          }\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  open(data): void {\n    if (this.walletService.wallet) {\n      this.clearForm(true);\n      this.estimateDefaultFee();\n      this.toPkh = data.address;\n      this.delegate = data;\n      if (this.walletService.isLedgerWallet()) {\n        this.ledgerError = '?';\n      }\n      if (this.beaconMode) {\n        this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n          if (response) {\n            this.operationResponse.emit('silent');\n          }\n        });\n      }\n      super.open();\n    }\n  }\n\n  async inject(): Promise<void> {\n    const pwd = this.password;\n    this.password = '';\n    this.messageService.startSpinner('Signing operation...');\n    let keys;\n    try {\n      keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n    } catch {\n      this.messageService.stopSpinner();\n    }\n    if (this.walletService.isLedgerWallet()) {\n      this.broadCastLedgerTransaction();\n      this.sendResponse = null;\n    } else {\n      if (keys) {\n        this.pwdValid = '';\n        this.messageService.startSpinner('Sending operation...');\n        this.sendDelegation(keys);\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.wallet instanceof TorusWallet) {\n          this.pwdValid = `Authorization failed`;\n        } else {\n          this.pwdValid = 'Wrong password!';\n        }\n      }\n    }\n  }\n  async ledgerSign(): Promise<void> {\n    const keys = await this.walletService.getKeys('');\n    if (keys) {\n      this.messageService.startSpinner('');\n      this.sendDelegation(keys);\n    }\n  }\n\n  async sendDelegation(keys: KeyPair): Promise<void> {\n    let fee = this.getFee();\n    this.subscriptions.add(\n      this.operationService.delegate(this.activeAccount.address, this.toPkh, Number(fee), keys).subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          console.log(JSON.stringify(ans));\n          if (ans.success === true) {\n            if (ans.payload.opHash) {\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                delegate: this.toPkh,\n                opHash: ans.payload.opHash\n              };\n              this.coordinatorService.boost(this.activeAccount.address, metadata);\n              this.closeModal();\n              this.router.navigate([`/account/${this.activeAccount.address}`]);\n            } else if (this.walletService.isLedgerWallet()) {\n              this.requestLedgerSignature();\n            }\n          } else {\n            console.log('Delegation error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n            this.closeModal();\n          }\n        },\n        (err) => {\n          console.log('Error Message ', JSON.stringify(err));\n          this.ledgerError = 'Failed to create operation';\n        }\n      )\n    );\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      const op = this.sendResponse.payload.unsignedOperation;\n      this.messageService.startSpinner('Waiting for Ledger signature');\n      let signature;\n      try {\n        signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n      if (signature) {\n        const signedOp = op + signature;\n        this.sendResponse.payload.signedOperation = signedOp;\n        this.ledgerError = '';\n      } else {\n        this.ledgerError = 'Failed to sign operation';\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.messageService.startSpinner('Broadcasting operation');\n    this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(\n      (ans: any) => {\n        this.sendResponse = ans;\n        if (ans.success && this.activeAccount.address) {\n          this.operationResponse.emit(ans.payload.opHash);\n          const metadata = {\n            delegate: this.toPkh,\n            opHash: ans.payload.opHash\n          };\n          this.coordinatorService.boost(this.activeAccount.address, metadata);\n          this.closeModal();\n          this.router.navigate([`/account/${this.activeAccount.address}`]);\n        } else {\n          this.messageService.addError(this.sendResponse.payload.msg, 0);\n          this.operationResponse.emit('broadcast_error');\n        }\n        this.closeModal();\n        console.log('ans: ' + JSON.stringify(ans));\n      },\n      (error) => {\n        this.messageService.stopSpinner();\n        this.messageService.addError(error, 0);\n        this.operationResponse.emit('broadcast_error');\n      }\n    );\n  }\n  estimateDefaultFee(): void {\n    this.subscriptions.add(\n      this.operationService.isRevealed(this.activeAccount.pkh).subscribe((revealed: boolean) => {\n        const revealFee = revealed ? 0 : 0.0002;\n        if (this.activeAccount instanceof ImplicitAccount) {\n          this.defaultFee = Number(new Big(revealFee).plus(this.pkhFee));\n        } else if (this.activeAccount instanceof OriginatedAccount) {\n          this.defaultFee = Number(new Big(revealFee).plus(this.ktFee));\n        }\n      })\n    );\n  }\n  getFee(): string {\n    return this.fee !== '' ? this.fee : this.defaultFee.toString();\n  }\n  clearForm(init: boolean = false): void {\n    if (!init && this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n    this.toPkh = '';\n    this.fee = '';\n    this.defaultFee = 0.0004;\n    this.password = '';\n    this.pwdValid = '';\n    this.formInvalid = '';\n    this.sendResponse = '';\n    this.ledgerError = '';\n    this.domainPendingLookup = false;\n    this.delegate = null;\n    this.advanced = false;\n  }\n  async invalidInput(): Promise<string> {\n    // if it is a tezos-domain\n    if (this.toPkh && this.toPkh.indexOf('.') > -1) {\n      try {\n        this.domainPendingLookup = true;\n        const { pkh } = await this.tezosDomains.getAddressFromDomain(this.toPkh);\n        if (pkh) {\n          this.toPkh = pkh;\n        } else {\n          this.domainPendingLookup = false;\n          return 'Could not find the domain';\n        }\n      } catch (error) {\n        return error.message;\n      } finally {\n        this.domainPendingLookup = false;\n      }\n    }\n    if (\n      (!this.inputValidationService.address(this.toPkh) && this.toPkh !== '') ||\n      (this.toPkh.length > 1 && this.toPkh.slice(0, 2) !== 'tz') ||\n      this.walletService.wallet.getImplicitAccount(this.toPkh)\n    ) {\n      return 'invalid delegate address';\n    } else if (!this.inputValidationService.fee(this.fee)) {\n      return 'invalid fee';\n    } else {\n      return '';\n    }\n  }\n  // Only Numbers with Decimals\n  keyPressNumbersDecimal(event, input): boolean {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode !== 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n      event.preventDefault();\n      return false;\n    } else if (charCode === 46 && this[input].length === 0) {\n      this[input] = '0' + this[input];\n    }\n    return true;\n  }\n  download(): void {\n    this.exportService.downloadOperationData(this.sendResponse.payload.unsignedOperation, false);\n  }\n\n  closeModalAction(): void {\n    this.operationResponse.emit(null);\n    this.closeModal();\n  }\n\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clearForm();\n    this.ledgerError = '';\n    this.messageService.stopSpinner();\n  }\n\n  round(val): string {\n    return Math.round(Number(val)).toString();\n  }\n\n  toPercent(val): string {\n    return parseFloat((Number(val) * 100).toFixed(2)).toString() + '%';\n  }\n}\n","<div #viewRef class=\"flex-column list\">\n  <a *ngFor=\"let account of list\" class=\"flex-row option\" [class.selected]=\"account?.address === current?.address\"\n    routerLink=\"/account/{{account?.address}}{{postfix}}\" (click)=\"closeModal()\">\n    <div class=\"flex-column left\">\n      <ng-container *ngIf=\"getUsername(account?.address)\">\n        <div class=\"flex-row alias\"><img class=\"logo\" src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span\n            class=\"name\">{{\n            getUsername(account?.address) }}</span><img class=\"copy\" src=\"../../../../assets/img/copy-icon.svg\"\n            (click)=\"this.copy($event, account?.address); false\" /></div>\n        <span class=\"addr\">{{\n          !isMobile ? account?.address : account?.shortAddress() }}</span>\n      </ng-container>\n      <ng-container *ngIf=\"!getUsername(account?.address)\">\n        <div class=\"flex-row\"><span class=\"addr default\">{{\n            !isMobile ? account?.address : account?.shortAddress() }}</span><img class=\"copy\"\n            src=\"../../../../assets/img/copy-icon.svg\" (click)=\"this.copy($event, account?.address); false\" /></div>\n      </ng-container>\n    </div>\n    <div class=\"flex-column balances\">\n      <div class=\"balance-tez\">{{ (getBalance(account) | number: '1.0-6' | removeComma) }} tez</div>\n      <div class=\"balance-fiat\">{{ '$' + (getBalanceFiat(account) | number:'1.2-2' | removeComma)\n        }}</div>\n    </div>\n  </a>\n  <div class=\"flex-row total-balances\">\n    <h3>TOTAL:</h3>\n    <div class=\"flex-column\">\n      <div class=\"balance-tez\">{{ (getTotalBalance() | number: '1.0-6' | removeComma) + ' tez' }}\n      </div>\n      <div class=\"balance-fiat\">{{ '$' + (getTotalFiat() | number:'1.2-2' | removeComma) }}\n      </div>\n    </div>\n  </div>\n</div>","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { TorusWallet } from '../../../../services/wallet/wallet';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { ModalComponent } from '../../modal.component';\nimport { Subscription } from 'rxjs';\nimport { ListComponent } from '../../../ui/generic/list.component';\nimport copy from 'copy-to-clipboard';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport Big from 'big.js';\nimport { RemoveCommaPipe } from '../../../../pipes/remove-comma.pipe';\nimport { filter } from 'rxjs/operators';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-account-list-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['../../../../../scss/components/modals/account-list.scss']\n})\nexport class AccountListBodyComponent extends ListComponent implements OnInit, AfterViewInit, OnDestroy {\n  postfix = '';\n  isMobile = false;\n  @ViewChild('viewRef') viewRef: ElementRef;\n  preSelectedAccount: string;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    public router: Router,\n    public lookupService: LookupService,\n    private walletService: WalletService,\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public removeCommaPipe: RemoveCommaPipe,\n    private subjectService: SubjectService\n  ) {\n    super();\n    this.subscriptions.add(\n      this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n        let accountAddress = r.url.substr(r.url.indexOf('/account/') + 9);\n        this.postfix = !!accountAddress.substring(36) ? accountAddress.substring(36) : '';\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.preSelectedAccount = this.current;\n    }\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(() => {\n        this.list = this.walletService.wallet?.getAccounts();\n      })\n    );\n    this.list = this.walletService.wallet?.getAccounts();\n\n    const e = () => {\n      this.isMobile = !!parseInt(document.documentElement.style.getPropertyValue('--is-mobile'));\n    };\n    window.addEventListener('resize', e);\n    e();\n  }\n\n  ngAfterViewInit(): void {\n    const selRef = this.viewRef.nativeElement.querySelector('.option.selected') as HTMLElement;\n    this.viewRef.nativeElement.scrollTo(0, selRef.offsetTop - 100);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  getUsername(address: string): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      const party = this.lookupService.resolve({ address: address });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n  copy(e, address: string): void {\n    e.stopPropagation();\n    copy(address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(address + ' ' + copyToClipboard, 5);\n  }\n  getBalance(account): number | string {\n    return Big(account?.balanceXTZ ?? 0)\n      .div(1000000)\n      .toFixed();\n  }\n  getBalanceFiat(account): number {\n    return account?.balanceUSD ?? 0;\n  }\n\n  getTotalBalance(): number {\n    return Big(this.walletService.wallet.totalBalanceXTZ ?? 0)\n      .div(1000000)\n      .toFixed();\n  }\n\n  getTotalFiat(): number {\n    return this.walletService.wallet.totalBalanceUSD ?? 0;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LookupService } from '../../../services/lookup/lookup.service';\nimport { ModalComponent } from '../modal.component';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-account-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class AccountListComponent extends ModalComponent implements OnInit {\n  @Input() title;\n  @Input() activeAccount;\n  name = 'account-list';\n\n  constructor(public router: Router, public lookupService: LookupService, public translate: TranslateService, public messageService: MessageService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n}\n","<div [style.display]=\"!isOpen ? 'none' : ''\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">{{ title }}</h1>\n    </div>\n    <app-account-list-body [current]=\"activeAccount\">\n    </app-account-list-body>\n  </div>\n</div>","<div [style.display]=\"!isOpen ? 'none' : ''\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">{{ title }}</h1>\n    </div>\n    <div class=\"flex-column export-mnemonic\">\n      <div *ngIf=\"!!mnemonicPhrase\" class=\"whitebox\" (mouseout)=\"mouseOut($event)\" (touchstart)=\"$event.stopPropagation(); this.hideBlur = true;\"\n        (touchend)=\"checkSelection($event)\" (click)=\"$event.stopPropagation()\" (mouseup)=\"checkSelection($event)\">\n        {{ mnemonicPhrase }}<div *ngIf=\"!hideBlur\" class=\"flex-row seed-blur\"\n          (click)=\"$event.stopPropagation(); this.hideBlur = true;\">\n          <span>CLICK HERE TO REVEAL YOUR SEED WORDS</span>\n        </div>\n      </div>\n      <p *ngIf=\"!!mnemonicPhrase\" class=\"description red\">\n        <span *ngIf=\"isSelectedMnemonic\" style=\"margin: 1rem 0\" class=\"warning red\">\n          WARNING: Copying the seed words to your clipboard can result in sensitive leakage. The clipboard is a shared\n          resource that can be monitored by other web pages or browser extensions.<br />\n        </span>\n      </p>\n      <div *ngIf=\"!mnemonicPhrase\" class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <div class=\"label\">\n          ENTER YOUR PASSWORD TO REVEAL \n        </div>\n        <span [style.visibility]=\"!pwdInvalid ? 'hidden' : ''\" [style.margin]=\"!pwdInvalid ? '0' : ''\"\n        class=\"label danger\">{{ this.pwdInvalid }}</span>\n        <input [(ngModel)]=\"pwd\" autocomplete=\"current-password\" placeholder=\"Password\" class=\"text password\"\n          type=\"password\" (input)=\"this.pwdInvalid = ''\" (change)=\"this.pwdInvalid = ''\" (keydown.enter)='!messageService.spinnerOn ? reveal() : null'>\n        <button class=\"button confirm\" (click)=\"!messageService.spinnerOn ? reveal() : null\">Continue</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { ModalComponent } from '../modal.component';\n\n@Component({\n  selector: 'app-export-mnemonic',\n  templateUrl: './export-mnemonic.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class ExportMnemonicComponent extends ModalComponent implements OnInit {\n  title = 'Reveal Seed Words';\n  name = 'export-mnemonic';\n  mnemonicPhrase = '';\n  ledgerError = '';\n  pwdInvalid = '';\n  pwd = '';\n  hideBlur = false;\n  isSelectedMnemonic = false;\n  constructor(public walletService: WalletService, private messageService: MessageService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  closeModal(): void {\n    this.reset();\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n\n  async reveal(): Promise<void> {\n    try {\n      this.messageService.startSpinner();\n      this.mnemonicPhrase = await this.walletService.revealMnemonicPhrase(this.pwd);\n      this.pwdInvalid = this.mnemonicPhrase === '' ? 'INVLAID PASSWORD' : '';\n      this.messageService.stopSpinner();\n    } catch {\n      this.pwdInvalid = this.mnemonicPhrase === '' ? 'INVLAID PASSWORD' : '';\n    }\n  }\n\n  mouseOut(e): void {\n    e.stopPropagation();\n    this.hideBlur = false;\n    window.getSelection()?.removeAllRanges();\n  }\n  checkSelection(ev): void {\n    ev.stopPropagation();\n    if (this.isTextSelected()) {\n      this.isSelectedMnemonic = true;\n    }\n  }\n  private isTextSelected(): boolean {\n    let selection: Selection;\n    if (window.getSelection) {\n      selection = window.getSelection();\n    } else if (document.getSelection) {\n      selection = document.getSelection();\n    } else return false;\n    return !selection?.isCollapsed;\n  }\n  reset(): void {\n    this.mnemonicPhrase = '';\n    this.ledgerError = '';\n    this.pwdInvalid = '';\n    this.pwd = '';\n    this.hideBlur = false;\n    this.isSelectedMnemonic = false;\n  }\n}\n","import { Component, OnDestroy, OnInit, HostListener } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\nimport { WalletClient, BeaconMessageType, PermissionScope, PermissionResponseInput, OperationResponseInput } from '@airgap/beacon-sdk';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { Account } from '../../../services/wallet/wallet';\nimport { BeaconService } from '../../../services/beacon/beacon.service';\nimport { DeeplinkService } from '../../../services/deeplink/deeplink.service';\nimport { assertMichelsonData } from '@taquito/michel-codec';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\nimport { ExternalRequest } from '../../../interfaces';\n\n@Component({\n  selector: 'app-uri-handler',\n  templateUrl: './uri-handler.component.html'\n})\nexport class UriHandlerComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public messageService: MessageService,\n    public walletService: WalletService,\n    private beaconService: BeaconService,\n    private deeplinkService: DeeplinkService,\n    private inputValidationService: InputValidationService,\n    private subjectService: SubjectService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.activeAccount = activeAccount;\n      })\n    );\n  }\n  permissionRequest: PermissionResponseInput = null;\n  externalRequest: ExternalRequest = null;\n  signRequest: any = null;\n  activeAccount: Account;\n  selectedAccount: Account;\n  @HostListener('window:focus', ['$event'])\n  onFocus(event: FocusEvent): void {\n    this.changeFavicon();\n  }\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.init();\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  async init() {\n    const pairingString = this.deeplinkService.popPairingJson();\n    if (pairingString) {\n      console.log(pairingString);\n      this.beaconService.preNotifyPairing(pairingString);\n    }\n    window.addEventListener('storage', (e) => {\n      this.handleStorageEvent(e);\n    });\n    await this.connectApp().catch((error) => console.error('connect error', error));\n    if (pairingString) {\n      await this.beaconService.client.isConnected;\n      this.beaconService.addPeer(pairingString);\n    }\n  }\n  changeFavicon(active: boolean = false): void {\n    if (active && document.hasFocus()) {\n      active = false;\n    }\n    const src: string = active ? 'favicon-attention.ico' : 'favicon.ico';\n    document.getElementById('favicon').setAttribute('href', src);\n  }\n  /* https://github.com/airgap-it/beacon-sdk/blob/master/src/clients/wallet-client/WalletClient.ts */\n  connectApp = async (): Promise<void> => {\n    if (!this.beaconService.client) {\n      this.beaconService.client = new WalletClient({\n        name: 'Kukai Wallet'\n      });\n    }\n    await this.beaconService.client.init(); // Establish P2P connection\n    this.beaconService.client\n      .connect(async (message: any) => {\n        console.log('### beacon message', message);\n        if (message.type !== BeaconMessageType.SignPayloadRequest && message.network.type.replace('edo2net', 'edonet') !== CONSTANTS.NETWORK) {\n          console.warn(`Rejecting Beacon message because of network. Expected ${CONSTANTS.NETWORK} instead of ${message.network.type}`);\n          await this.beaconService.rejectOnNetwork(message);\n        } else if (!this.permissionRequest && !this.externalRequest && !this.signRequest) {\n          switch (message.type) {\n            case BeaconMessageType.PermissionRequest:\n              await this.handlePermissionRequest(message);\n              break;\n            case BeaconMessageType.OperationRequest:\n              if (await this.isSupportedOperationRequest(message)) {\n                this.externalRequest = { operationRequest: message, selectedAccount: this.selectedAccount };\n                this.changeFavicon(true);\n              }\n              break;\n            case BeaconMessageType.SignPayloadRequest:\n              if (await this.isSupportedSignPayload(message)) {\n                this.signRequest = message;\n                this.changeFavicon(true);\n              }\n              break;\n            default:\n              await this.beaconService.rejectOnUnknown(message);\n              console.warn('Unknown message type', message);\n          }\n        } else {\n          console.log('Blocked by other Beacon request');\n        }\n      })\n      .catch((error) => console.error('connect error', error));\n  };\n  async handlePermissionRequest(message: any): Promise<void> {\n    console.log('## permission request');\n    message.scopes = message.scopes.filter((scope: PermissionScope) => [PermissionScope.OPERATION_REQUEST, PermissionScope.SIGN].includes(scope));\n    if (message.scopes.length) {\n      if (this.walletService.wallet) {\n        this.permissionRequest = message;\n        this.changeFavicon(true);\n      } else {\n        console.warn('No wallet found');\n        await this.beaconService.rejectOnSourceAddress(message);\n      }\n    } else {\n      console.warn('No valid scope');\n    }\n  }\n  async isSupportedOperationRequest(message: any): Promise<boolean> {\n    if (!this.walletService.wallet) {\n      console.log('No wallet found');\n      await this.beaconService.rejectOnUnknown(message);\n      return false;\n    } else if (!this.walletService.wallet.getImplicitAccount(message.sourceAddress)) {\n      console.warn('Source address not recogized');\n      await this.beaconService.rejectOnSourceAddress(message);\n      return false;\n    } else if (message.operationDetails.length > 1) {\n      for (const op of message.operationDetails) {\n        if (op.kind !== 'transaction') {\n          console.warn('Only transaction batches supported');\n          await this.beaconService.rejectOnTooManyOps(message);\n          return false;\n        }\n      }\n    }\n    if (message.operationDetails[0].kind === 'transaction') {\n      for (let i = 0; i < message.operationDetails.length; i++) {\n        if (\n          message.operationDetails[i].destination &&\n          message.operationDetails[i].parameters &&\n          this.walletService.wallet.getAccount(message.operationDetails[i].destination)\n        ) {\n          console.warn('Invocation of user controlled contract is disabled');\n          await this.beaconService.rejectOnPermission(message);\n          return false;\n        } else if (!message.operationDetails[i].destination || !message.operationDetails[i].amount) {\n          console.warn('Missing destination or amount');\n          await this.beaconService.rejectOnUnknown(message);\n          return false;\n        } else if (this.invalidParameters(message.operationDetails[i].parameters)) {\n          await this.beaconService.rejectOnParameters(message);\n          return false;\n        } else if (this.invalidOptionals(message.operationDetails[i])) {\n          await this.beaconService.rejectOnParameters(message);\n          return false;\n        }\n      }\n    } else if (message.operationDetails[0].kind === 'delegation') {\n      if (!message.operationDetails[0].delegate) {\n        console.warn('Invalid delegate');\n        await this.beaconService.rejectOnUnknown(message);\n        return false;\n      }\n    } else if (message.operationDetails[0].kind === 'origination') {\n      if (!message.operationDetails[0].script) {\n        console.warn('No script found');\n        await this.beaconService.rejectOnParameters(message);\n        return false;\n      } else if (this.invalidOptionals(message.operationDetails[0])) {\n        await this.beaconService.rejectOnParameters(message);\n        return false;\n      }\n    } else {\n      console.warn('Unsupported operation kind');\n      await this.beaconService.rejectOnUnknown(message);\n      return false;\n    }\n    this.selectedAccount = this.walletService.wallet.getImplicitAccount(message.sourceAddress);\n    return true;\n  }\n  private invalidOptionals(op: any): boolean {\n    if (typeof op.gas_limit === 'number') {\n      // normalize\n      op.gas_limit = op.gas_limit.toString();\n    }\n    if (typeof op.storage_limit === 'number') {\n      op.storage_limit = op.storage_limit.toString();\n    }\n    if (op.gas_limit && (typeof op.gas_limit !== 'string' || !this.inputValidationService.amount(op.gas_limit, 0))) {\n      return true;\n    } else if (op.storage_limit && (typeof op.storage_limit !== 'string' || !this.inputValidationService.amount(op.storage_limit, 0))) {\n      return true;\n    }\n    return false;\n  }\n  async isSupportedSignPayload(message: any): Promise<Boolean> {\n    if (!this.walletService.wallet) {\n      console.log('No wallet found');\n      await this.beaconService.rejectOnUnknown(message);\n      return false;\n    } else if (!this.walletService.wallet.getImplicitAccount(message.sourceAddress)) {\n      console.warn('Source address not recogized');\n      await this.beaconService.rejectOnSourceAddress(message);\n      return false;\n    }\n    if (message.payload.slice(0, 2) === '0x') {\n      message.payload = message.payload.slice(2);\n    }\n    message.payload = message.payload.toLowerCase();\n    const hexString = message.payload;\n    console.log('hex', hexString);\n    if ((message.signingType !== 'raw' && message.signingType !== 'micheline') || !this.inputValidationService.hexString(hexString)) {\n      console.warn('Invalid sign payload');\n      await this.beaconService.rejectOnUnknown(message);\n      return false;\n    } else if (hexString.slice(0, 2) !== '05') {\n      console.warn('Unsupported prefix (expected 05)');\n      await this.beaconService.rejectOnUnknown(message);\n      return false;\n    }\n    if (!this.inputValidationService.isMichelineExpr(hexString)) {\n      await this.beaconService.rejectOnUnknown(message);\n      return false;\n    }\n    this.selectedAccount = this.walletService.wallet.getImplicitAccount(message.sourceAddress);\n    return true;\n  }\n  invalidParameters(parameters: any): boolean {\n    try {\n      if (parameters) {\n        if (!parameters.value || !parameters.entrypoint) {\n          throw new Error('entrypoint and value expected');\n        }\n        assertMichelsonData(parameters.value);\n      }\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n  /* operation request handling */\n  async operationResponse(opHash: any): Promise<void> {\n    if (opHash?.error) {\n      opHash = opHash.error;\n    }\n    if (!this.externalRequest) {\n      return;\n    }\n    console.log('hash', opHash);\n    console.log('externalRequest', this.externalRequest);\n    if (!opHash) {\n      await this.beaconService.rejectOnUserAbort(this.externalRequest.operationRequest);\n    } else if (opHash === 'broadcast_error') {\n      await this.beaconService.rejectOnBroadcastError(this.externalRequest.operationRequest);\n    } else if (opHash === 'invalid_parameters') {\n      await this.beaconService.rejectOnParameters(this.externalRequest.operationRequest);\n    } else if (opHash === 'parameters_error') {\n      await this.beaconService.rejectOnParameters(this.externalRequest.operationRequest);\n    } else if (opHash === 'unknown_error') {\n      await this.beaconService.rejectOnUnknown(this.externalRequest.operationRequest);\n    } else if (opHash !== 'silent') {\n      const response: OperationResponseInput = {\n        type: BeaconMessageType.OperationResponse,\n        transactionHash: opHash,\n        id: this.externalRequest.operationRequest.id\n      };\n      await this.beaconService.client.respond(response);\n    }\n    if (opHash !== 'silent') {\n      this.beaconService.responseSync();\n    }\n    this.externalRequest = null;\n  }\n  /* permission handling */\n  async permissionResponse(publicKey: string): Promise<void> {\n    if (!publicKey) {\n      await this.beaconService.rejectOnUserAbort(this.permissionRequest);\n      this.beaconService.responseSync();\n    } else if (publicKey !== 'silent') {\n      await this.beaconService.approvePermissionRequest(this.permissionRequest, publicKey);\n      this.beaconService.syncBeaconState();\n      this.beaconService.responseSync();\n    }\n    this.permissionRequest = null;\n  }\n  /* sign payload handling */\n  async signResponse(signature: string): Promise<void> {\n    if (!signature) {\n      await this.beaconService.rejectOnUserAbort(this.signRequest);\n      this.beaconService.responseSync();\n    } else if (signature !== 'silent') {\n      await this.beaconService.approveSignPayloadRequest(this.signRequest, signature);\n      this.beaconService.responseSync();\n    }\n    console.log(signature);\n    this.signRequest = null;\n  }\n  private async handleStorageEvent(ev: StorageEvent): Promise<void> {\n    switch (ev.key) {\n      case 'beacon:communication-peers-wallet':\n        const peers = JSON.parse(ev.newValue);\n        const senderIds = (await this.beaconService.client.getAppMetadataList()).map((app) => {\n          return app.senderId;\n        });\n        const newPeers = peers.length - senderIds.length;\n        if (newPeers > 0) {\n          const newPeer = peers ? peers.pop() : null;\n          if (newPeer && !senderIds.includes(newPeer.senderId)) {\n            const { senderId, ...peer } = newPeer;\n            await this.beaconService.addPeer(JSON.stringify(peer), false);\n          }\n        } else {\n          this.beaconService.syncBeaconState();\n        }\n        break;\n      case 'beacon:request-response':\n        if (ev.newValue) {\n          this.subjectService.beaconResponse.next(true);\n          this.beaconService.syncBeaconState();\n          this.changeFavicon();\n        }\n        break;\n    }\n  }\n}\n","<app-send [embedded]=\"false\" (operationResponse)=\"operationResponse($event)\"\n  [externalRequest]=\"externalRequest\"></app-send>\n<app-delegate (operationResponse)=\"operationResponse($event)\" [beaconMode]=true [externalRequest]=externalRequest>\n</app-delegate>\n<app-originate (operationResponse)=\"operationResponse($event)\" [externalRequest]=externalRequest></app-originate>\n<app-permission-request (permissionResponse)=\"permissionResponse($event)\" [permissionRequest]=\"permissionRequest\"\n  [activeAccount]=activeAccount>\n</app-permission-request>\n<app-sign-expr (signResponse)=\"signResponse($event)\" [signRequest]=\"signRequest\" [activeAccount]=selectedAccount>\n</app-sign-expr>\n<app-account-list [title]=\"'Accounts'\" [activeAccount]=\"activeAccount\"></app-account-list>\n<app-new-implicit></app-new-implicit>\n<app-receive></app-receive>\n<app-export-mnemonic></app-export-mnemonic>","<div *ngIf=\"active\" class=\"moonpay\">\n  <div class=\"top\">\n    <a>\n      <button class=\"back secondary\" (click)=\"close()\">\n        <img src=\"../../../../../assets/img/left-arrow.svg\">Back</button>\n    </a>\n    <p>Buy XTZ (tez) with MoonPay</p>\n  </div>\n  <div class=\"main\">\n    <ng-container *ngIf=\"url\">\n      <iframe allow=\"accelerometer; autoplay; camera; gyroscope; payment\" frameborder=\"0\" height=\"100%\" [src]=\"this.url\"\n        width=\"100%\">\n        <p>Your browser does not support iframes.</p>\n      </iframe>\n    </ng-container>\n    <img *ngIf=\"!(url && mobile)\" class=\"loading\" src=\"../../../../../../assets/img/loader.svg\">\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { CONSTANTS, environment } from '../../../../../../environments/environment';\nimport { SubjectService } from '../../../../../services/subject/subject.service';\nimport { HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-moonpay',\n  templateUrl: './moonpay.component.html',\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/cards/moonpay/moonpay.component.scss']\n})\nexport class MoonpayComponent implements OnInit {\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.mobile = window.innerWidth < 575;\n  }\n  readonly dev: boolean = !(CONSTANTS.MAINNET && environment.production);\n  readonly baseUrl: string = `https://buy${this.dev ? '-staging' : ''}.moonpay.com`;\n  mobile = false;\n  url: SafeUrl;\n  active = false;\n  account: Account;\n  constructor(private walletService: WalletService, private sanitizer: DomSanitizer, private subjectService: SubjectService) {}\n\n  ngOnInit(): void {\n    this.onResize();\n    this.subjectService.activeAccount.subscribe((a) => {\n      this.account = a;\n    });\n    this.subjectService.moonpay.subscribe((o) => {\n      if (o) {\n        this.open();\n      } else {\n        this.close();\n      }\n    });\n  }\n  private async signUrl(address: string): Promise<SafeUrl> {\n    if (address?.startsWith('tz')) {\n      const query: string = `?apiKey=${\n        this.dev ? 'pk_test_M23P0Zc5SvBORSFV63sfWKi7n5QbGZR' : 'pk_live_rP9HlBRO54nY4QKLxc6ONl4Prrm6vymK'\n      }&colorCode=%237178E3&currencyCode=xtz&walletAddress=${encodeURIComponent(address)}`;\n      const sig = await this.post({ dev: this.dev, url: query });\n      if (sig) {\n        const url = this.sanitizer.bypassSecurityTrustResourceUrl(`${this.baseUrl}${query}&signature=${encodeURIComponent(sig)}`);\n        return url;\n      }\n    }\n    return null;\n  }\n  private async open(): Promise<void> {\n    this.active = true;\n    const address: string = this.account ? this.account.address : null;\n    if (!address?.startsWith('tz')) {\n      return;\n    }\n    this.url = await this.signUrl(address);\n  }\n  private close(): void {\n    this.url = null;\n    this.active = false;\n  }\n  private async post(data: any = {}): Promise<string> {\n    return fetch('https://utils.kukai.network/moonpay/sign', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(async (d) => {\n        return d.text();\n      })\n      .catch((e) => {\n        return '';\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StartComponent } from './components/views/start/start.component';\nimport { NewWalletComponent } from './components/views/start/login-types/new-wallet/new-wallet.component';\nimport { MnemonicImportComponent } from './components/views/start/login-types/mnemonic-import/mnemonic-import.component';\nimport { ConnectLedgerComponent } from './components/views/start/login-types/connect-ledger/connect-ledger.component';\nimport { P404Component } from './components/views/error/404.component';\nimport { P500Component } from './components/views/error/500.component';\nimport { PrivacyPolicyComponent } from './components/views/start/agreement/privacy-policy/privacy-policy.component';\nimport { TermsOfUseComponent } from './components/views/start/agreement/terms-of-use/terms-of-use.component';\nimport { EmbeddedComponent } from './components/views/embedded/embedded.component';\nimport { LoggedInComponent } from './components/views/logged-in/logged-in.component';\nimport { ActivateComponent } from './components/views/start/activate/activate.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: '', component: StartComponent },\n      { path: 'new-wallet', component: NewWalletComponent },\n      { path: 'import', component: MnemonicImportComponent },\n      { path: 'connect-ledger', component: ConnectLedgerComponent },\n      {\n        path: 'account',\n        component: LoggedInComponent,\n        loadChildren: () => import(`./components/views/logged-in/logged-in.module`).then((module) => module.LoggedInModule)\n      },\n      { path: 'activate', component: ActivateComponent },\n      { path: 'serviceworker', component: TermsOfUseComponent },\n      { path: 'embedded', component: EmbeddedComponent }\n    ]\n  },\n  { path: 'privacy-policy', component: PrivacyPolicyComponent },\n  { path: 'terms-of-use', component: TermsOfUseComponent },\n  { path: '404', component: P404Component, data: { title: 'Page 404' } },\n  { path: '500', component: P500Component, data: { title: 'Page 500' } },\n  { path: '**', redirectTo: '404' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logged-in',\n  templateUrl: './logged-in.component.html'\n})\nexport class LoggedInComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-uri-handler></app-uri-handler>\n<router-outlet></router-outlet>\n<app-moonpay></app-moonpay>","<div [style.display]=\"!isOpen ? 'none' : ''\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"close()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <h1 class=\"title\">{{ title }}</h1>\n    </div>\n    <div class=\"flex-column info\">\n      <div class=\"message\">\n        {{ message }}\n      </div>\n      <div *ngIf=\"action\" class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <button class=\"button confirm\" (click)=\"proceed()\">{{ action }}</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalComponent } from '../modal.component';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class InfoComponent extends ModalComponent implements OnInit {\n  action = '';\n  message = '';\n  href = '';\n  title = 'Info';\n  name = 'info';\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  open(data: any): void {\n    this.action = data?.action;\n    this.message = data?.message;\n    this.href = data?.href;\n    this.title = data?.title || this.title;\n    super.open();\n  }\n\n  closeModal(): void {\n    super.close();\n  }\n  proceed(): void {\n    if (!!this.href) {\n      const newTab = window.open(this.href, '_blank');\n      newTab.focus();\n      newTab.opener = null;\n    }\n    this.closeModal();\n  }\n}\n","<ng-container *ngIf=\"!message?.timeout && message?.msg\">\n  <span *ngIf=\"!message?.email && !message?.username && !message?.twitterId && message?.msg\">{{ message.msg }}</span>\n  <span *ngIf=\"message?.email || message?.username || message?.twitterId\">Click <a target=\"_blank\"\n      href=\"{{ notifyFormat(message) }}\">here to notify</a> {{ getAlias(message) }} via {{ message.msg }}: <b>{{\n      message.amount }}</b> sent</span>\n  <svg version=\"1.2\" baseProfile=\"tiny-ps\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14 14\" width=\"14\" height=\"14\"\n    class=\"flex-row button close\" (click)=\"removeMessage(index)\">\n    <title>Popups</title>\n    <g id=\"Popups\">\n      <g id=\"Confirmation TEZ\">\n        <g id=\"Close Button\">\n          <path id=\"Rectangle 13\" class=\"shp0\"\n            d=\"M13.46 0.54C14.18 1.25 14.18 2.41 13.46 3.12L3.12 13.46C2.41 14.18 1.25 14.18 0.54 13.46C-0.18 12.75 -0.18 11.59 0.54 10.88L10.88 0.54C11.59 -0.18 12.75 -0.18 13.46 0.54ZM3.12 0.54L13.46 10.88C14.18 11.59 14.18 12.75 13.46 13.46C12.75 14.18 11.59 14.18 10.88 13.46L0.54 3.12C-0.18 2.41 -0.18 1.25 0.54 0.54C1.25 -0.18 2.41 -0.18 3.12 0.54Z\" />\n        </g>\n      </g>\n    </g>\n  </svg>\n</ng-container>\n<ng-container *ngIf=\"message?.timeout && message?.msg\">\n  <span *ngIf=\"message?.msg\">{{ message.msg }}</span><img *ngIf=\"message?.loader\" class=\"loader\"\n    src=\"../../../../assets/img/wait.svg\">\n</ng-container>","import { Component, Input, OnInit } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['../../../../scss/components/modals/alert/alert.component.scss']\n})\nexport class AlertComponent implements OnInit {\n  @Input() public message;\n  @Input() index;\n\n  constructor(public messageService: MessageService) {}\n  readonly subject = 'Sent you Tezos tokens';\n  ngOnInit(): void {\n    if (this.message?.timeout) {\n      setTimeout(() => {\n        this.removeMessage(this.index);\n        this.message = null;\n      }, this.message?.timeout);\n    }\n  }\n\n  removeMessage(index: number): void {\n    this.messageService.messages.splice(index, 1);\n  }\n  getHostName(): string {\n    return location.hostname;\n  }\n  notifyFormat(message: any): string | Error {\n    if (message.email) {\n      return this.mailtoFormat(message);\n    } else if (message.username) {\n      return this.redditPmFormat(message);\n    } else if (message.twitterId) {\n      return this.twitterPmFormat(message);\n    } else {\n      throw new Error('Invalid message');\n    }\n  }\n  mailtoFormat(message: any): string {\n    const subject = encodeURI(this.subject);\n    const body = this.encodedBody(message.amount, 'Google', `https://${this.getHostName()}\\n\\n`);\n    return `mailto:${message.email}?subject=${subject}&body=${body}`;\n  }\n  redditPmFormat(message: any): string {\n    // https://www.reddit.com/message/compose?to=USERNAME&subject=SUBJECT&message=MESSAGE\n    const subject = encodeURI(this.subject);\n    const body = this.encodedBody(`${message.amount}`, 'Reddit', `[kukai.app](https://${this.getHostName()})`);\n    return `https://www.reddit.com/message/compose?to=${message.username}&subject=${subject}&message=${body}`;\n  }\n  twitterPmFormat(message: any): string {\n    // https://twitter.com/messages/compose?recipient_id=USER_ID&text=MESSAGE\n    const body = this.encodedBody(message.amount, 'Twitter', `https://${this.getHostName()}`);\n    return `https://twitter.com/messages/compose?recipient_id=${message.twitterId}&text=${body}`;\n  }\n  encodedBody(amount: string, accountType: string, url: string): string {\n    const s = accountType === 'Reddit' ? '  ' : '';\n    const b = accountType === 'Reddit' ? '**' : '';\n    const t = accountType === 'Twitter' ? 'Tezos ' : '';\n    return encodeURI(\n      `Hi,${s}\\nI sent you ${b}${amount}${b} using the Kukai wallet.\\n\\nYou can access your ${t}wallet with your ${accountType} account at: ${url}`\n    );\n  }\n  getAlias(message: any): string {\n    return message.email ? message.email : message.username ? message.username : message.handler ? message.handler : 'recipient';\n  }\n}\n","<div class='msg-container'>\n  <div *ngFor=\"let message of messageService.messages ; let i = index\">\n    <app-alert [message]=\"message\" [index]=\"i\" class=\"flex-row alert\" [class]=\"'alert alert-'+message.type\">\n    </app-alert>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TorusService } from '../../../services/torus/torus.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['../../../../scss/components/ui/messages/messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n  constructor(public messageService: MessageService, public torusService: TorusService) {}\n  ngOnInit(): void {}\n}\n","<div *ngIf=\"router.url.indexOf('/account/') > -1\" class=\"flex-row dropdown\" [class.expanded]=\"isOpen\"\n  [style.cursor]=\"['', 'domain'].includes(getVerifier()) ? '' : 'text'\" [id]=\"ecmpId\">\n  <div class=\"flex-row currentAddress\" (click)=\"['', 'domain'].includes(getVerifier()) ? toggleDropdown() : ''\"><img\n      *ngIf=\"!!getUsername(current?.address)\" class=\"logo\"\n      src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span class=\"address\">{{\n      getUsername(current?.address) || \"&nbsp;&nbsp;&nbsp;&nbsp;\" + current?.shortAddress() }}</span><img\n      *ngIf=\"['', 'domain'].includes(getVerifier())\" class=\"button icon-db\"\n      src=\"../../../../assets/img/down-arrow.svg\" />\n  </div>\n  <div class=\"flex-column dropdown-content\">\n    <div class=\"flex-column body\">\n      <ng-container *ngFor=\"let account of list; trackBy: trackAccount\">\n        <a class=\"option\" routerLink=\"/account/{{account?.address}}{{postfix}}\"\n          [class.selected]=\"account?.address === current?.address\"\n          [style.padding]=\"!getUsername(current?.address) ? '0.75rem 1.125rem 0.75rem calc(2.5rem - var(--border-width))' : ''\"\n          (click)=\"toggleDropdown()\">\n          <ng-container *ngIf=\"getUsername(account?.address)\">\n            <div class=\"flex-row alias\"><img class=\"logo\"\n                src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span>{{\n                getUsername(account?.address) }}</span></div>\n          </ng-container>\n          <ng-container *ngIf=\"!getUsername(account?.address)\">{{ account?.shortAddress() }}</ng-container>\n        </a>\n      </ng-container>\n    </div>\n    <div *ngIf=\"list?.length > 1\" class=\"option show-all\" [style.padding]=\"!getUsername(current?.address) ? '0.75rem 1.125rem 0.75rem calc(2.5rem - var(--border-width))' : ''\" (click)=\"showAll()\">\n      <span>Show All</span>\n    </div>\n  </div>\n</div>","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { TorusWallet } from '../../../../services/wallet/wallet';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { DropdownComponent } from '../dropdown.component';\nimport { ModalComponent } from '../../../modals/modal.component';\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-ui-dropdown-account',\n  templateUrl: './account-dropdown.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/account-dropdown.component.scss']\n})\nexport class AccountDropdownComponent extends DropdownComponent implements OnInit, OnChanges, OnDestroy {\n  postfix = '';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(public router: Router, public lookupService: LookupService, private walletService: WalletService) {\n    super();\n    this.subscriptions.add(\n      this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n        let accountAddress = r.url.substr(r.url.indexOf('/account/') + 9);\n        this.postfix = !!accountAddress.substring(36) ? accountAddress.substring(36) : '';\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    this.list = this.options;\n    let accountAddress = this.router.url.substr(this.router.url.indexOf('/account/') + 9);\n    this.postfix = !!accountAddress.substring(36) ? accountAddress.substring(36) : '';\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options && changes.options.currentValue !== changes.options.previousValue) {\n      this.list = this.options;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  getUsername(address: string): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      const party = this.lookupService.resolve({\n        address: address || this.current?.address\n      });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n  showAll(): void {\n    ModalComponent.currentModel.next({ name: 'account-list', data: null });\n  }\n  trackAccount(index: number, account: any) {\n    return account?.address ? account.address : index;\n  }\n}\n","<div class=\"hamburger-dropdown\" [class.expanded]=\"isOpen\" [id]=\"ecmpId\">\n  <img class=\"button icon-db\" src=\"../../../../assets/img/hamburger.svg\" (click)=\"toggleDropdown()\" />\n  <div *ngIf=\"router.url.indexOf('/account/') === 0\" class=\"flex-column mobile dropdown-content\">\n    <div class=\"flex-row-wrap account-content\">\n      <div class=\"flex-column button\" (click)=\"unlockableService.toggleFeature('theme', 'dark');toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" [src]=\"this.unlockableService?.unlockables?.theme === 'dark' ? 'assets/img/light_mode_blue.svg' : 'assets/img/dark_mode_blue.svg'\" />\n        </div>\n        <span>THEME</span>\n      </div>\n      <div *ngIf=\"router.url.indexOf('/account/') === 0\" class=\"flex-column button\" (click)=\"copy();toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" src=\"../../../../assets/img/copy-blue.svg\" />\n        </div>\n        <span>COPY</span>\n      </div>\n      <div class=\"flex-column button\" (click)=\"receive();toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" src=\"../../../../assets/img/qr-blue.svg\" />\n        </div>\n        <span>QR</span>\n      </div>\n      <div *ngIf=\"walletService.isHdWallet()\" class=\"flex-column button\" (click)=\"newAccount();toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" src=\"../../../../assets/img/add-blue.svg\" />\n        </div>\n        <span>ADD</span>\n      </div>\n    </div>\n    <div class=\"flex-row button delegation\" routerLink=\"/account/{{activeAccount?.address}}/stakers\"\n      (click)=\"toggleDropdown()\">\n      <div *ngIf=\"!activeAccount?.delegate\" class=\"flex-row\">\n        <span class=\"flex-row\">STAKING:</span><span class=\"choose\">NOT\n          STAKING</span>\n      </div>\n      <div *ngIf=\"activeAccount?.delegate\" class=\"flex-row\">\n        <span>STAKING</span>\n        <span class=\"flex-row address\">{{ delegateName\n          }}</span>\n      </div>\n    </div>\n\n    <div class=\"flex-row button\" [routerLink]=\"'/account/' + activeAccount?.address + '/settings'\" (click)=\"toggleDropdown()\">\n      <span>SETTINGS</span><img class=\"icon settings\" src=\"../../../../assets/img/cog.svg\" style=\"width: 2.75rem\" />\n    </div>\n    <div class=\"flex-row button\" (click)=\"logout();toggleDropdown()\">\n      <span>LOGOUT</span><img class=\"icon\" src=\"../../../../assets/img/sign-out-alt.svg\" style=\"width: 2.5rem\" />\n    </div>\n  </div>\n  <div *ngIf=\"router.url.indexOf('/account/') !== 0\" class=\"flex-column mobile dropdown-content\">\n    <div routerLink=\"/import/\" class=\"flex-row button\" (click)=\"toggleDropdown()\">\n      <span>Import Wallet</span>\n    </div>\n    <div routerLink=\"/new-wallet/\" class=\"flex-row button\" (click)=\"toggleDropdown()\">\n      <span>Create New Wallet</span>\n    </div>\n    <div routerLink=\"/connect-ledger/\" class=\"flex-row button\" (click)=\"toggleDropdown()\">\n      <span>Connect Ledger</span>\n    </div>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { Account } from '../../../../services/wallet/wallet';\nimport { DropdownComponent } from '../dropdown.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport copy from 'copy-to-clipboard';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { ModalComponent } from '../../../../components/modals/modal.component';\nimport { take } from 'rxjs/operators';\nimport { UnlockableService } from '../../../../services/unlockable/unlockable.service';\n\n@Component({\n  selector: 'app-ui-mobile-menu',\n  templateUrl: './mobile-menu.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/mobile-menu.component.scss']\n})\nexport class MobileMenuDropdownComponent extends DropdownComponent implements OnInit {\n  @Input() activeAccount: Account;\n  @Input() delegateName;\n  @Input() newAccount;\n  @Input() receive;\n\n  constructor(\n    public router: Router,\n    public walletService: WalletService,\n    public lookupService: LookupService,\n    private messageService: MessageService,\n    private translate: TranslateService,\n    private subjectService: SubjectService,\n    public unlockableService: UnlockableService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  toggleDropdown(): void {\n    if (window.innerHeight < document.body.scrollHeight) {\n      document.body.style.overflow = 'hidden';\n    }\n    this.isOpen = !this.isOpen;\n  }\n  copy(): void {\n    copy(this.activeAccount.address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(this.activeAccount.address + ' ' + copyToClipboard, 5);\n  }\n  openSwap() {\n    this.messageService.startSpinner();\n    ModalComponent.currentModel.next({ name: 'swap-liquidity', data: null });\n  }\n  logout(): void {\n    this.subjectService.logout.next(true);\n    this.messageService.clear();\n    this.walletService.clearWallet();\n    this.lookupService.clear();\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"flex-row top-container desktop\" [class]=\"router.url.indexOf('/account') === 0 ? 'default' : ''\">\n  <a routerLink=\"/\" class=\"flex-row brand-logo\">\n    <img class=\"icon\" src=\"../../../assets/img/header-logo.svg\" />\n  </a>\n  <div *ngIf=\"router.url.indexOf('/account/') === 0\" class=\"flex-row right\">\n    <div class=\"button icon\" (click)=\"unlockableService.toggleFeature('theme', 'dark')\">\n      <img [src]=\"this.unlockableService?.unlockables?.theme === 'dark' ? 'assets/img/light_mode.svg' : 'assets/img/dark_mode.svg'\" />\n      <div class=\"tooltip\">\n        <div class=\"description\">THEME</div>\n      </div>\n    </div>\n    <div class=\"flex-column left\">\n      <app-ui-dropdown-account [options]=\"accounts\" [current]=\"activeAccount\"></app-ui-dropdown-account>\n      <div class=\"delegation\">\n        <div class=\"flex-row outside-container\" *ngIf=\"!beaconMode\">\n          <div class=\"flex-row button\" routerLink=\"/account/{{activeAccount?.address}}/stakers\">\n            <span *ngIf=\"!activeAccount?.delegate\">STAKING: <span class=\"choose\">NOT\n                STAKED</span></span>\n            <span *ngIf=\"activeAccount?.delegate\" class=\"address\">STAKING: <span>{{ delegateName }}</span></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"flex-row right\">\n      <div class=\"button icon\" (click)=\"copy()\">\n        <img src=\"../../../assets/img/copy.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">COPY ADDRESS</div>\n        </div>\n      </div>\n      <div class=\"button icon receive\" (click)=\"receive()\">\n        <img src=\"../../../assets/img/qr.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">ADDRESS QR</div>\n        </div>\n      </div>\n      <div *ngIf=\"walletService.isHdWallet()\" class=\"button icon\" (click)=\"newAccount()\">\n        <img src=\"../../../assets/img/add.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">ADD ACCOUNT</div>\n        </div>\n      </div>\n      <div class=\"button icon settings\" [routerLink]=\"'/account/' + activeAccount?.address + '/settings'\">\n        <img src=\"../../../assets/img/settings.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">SETTINGS</div>\n        </div>\n      </div>\n      <div class=\"button icon\" (click)=\"logout()\">\n        <img src=\"../../../assets/img/logout.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">SIGN OUT</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"router?.url?.indexOf('/account/') !== 0\" class=\"flex-row right\">\n    <div class=\"right\">\n      <span *ngIf=\"router.url.indexOf('/import') === 0 || router.url === '/' || router.url.startsWith('/?type')\" routerLink=\"/import/\" class=\"button\"\n        [class.selected]=\"router.url.indexOf('/import') === 0\">Import Wallet</span>\n      <span *ngIf=\"router.url.indexOf('/new-wallet') === 0 || router.url === '/' || router.url.startsWith('/?type')\" routerLink=\"/new-wallet/\"\n        class=\"button\" [class.selected]=\"router.url.indexOf('/new-wallet') === 0\">Create New Wallet</span>\n      <span *ngIf=\"router.url.indexOf('/connect-ledger') === 0 || router.url === '/' || router.url.startsWith('/?type')\" routerLink=\"/connect-ledger/\"\n        class=\"button\" [class.selected]=\"router.url.indexOf('/connect-ledger') === 0\">Connect Ledger</span>\n      <span *ngIf=\"router.url.indexOf('/activate') === 0\" routerLink=\"/activate/\" class=\"button\"\n        [class.selected]=\"router.url.indexOf('/activate') === 0\">Activate</span>\n    </div>\n  </div>\n</div>\n<div class=\"flex-row top-container mobile\" [class]=\"router.url.indexOf('/account') === 0 ? 'default' : ''\">\n  <a routerLink=\"/\" class=\"flex-row brand-logo\">\n    <img class=\"icon\" src=\"../../../assets/img/header-logo.svg\" />\n  </a>\n  <div *ngIf=\"router.url.indexOf('/account/') > -1\" class=\"flex-row center\">\n    <app-ui-dropdown-account [options]=\"accounts\" [current]=\"activeAccount\" style=\"width: 100%;\">\n    </app-ui-dropdown-account>\n  </div>\n  <app-ui-mobile-menu [activeAccount]=\"activeAccount\" [delegateName]=\"delegateName\" [newAccount]=\"newAccount\" [receive]=\"receive\"></app-ui-mobile-menu>\n</div>","import { Component, OnInit, Input, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { Account } from '../../../../services/wallet/wallet';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { CONSTANTS as _CONSTANTS } from '../../../../../environments/environment';\nimport { filter } from 'rxjs/operators';\nimport copy from 'copy-to-clipboard';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalComponent } from '../../../modals/modal.component';\nimport { DelegateService } from '../../../../services/delegate/delegate.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\nimport { DeeplinkService } from '../../../../services/deeplink/deeplink.service';\nimport { UnlockableService } from '../../../../services/unlockable/unlockable.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['../../../../../scss/components/views/layouts/header/header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnChanges, OnDestroy {\n  window = window;\n  document = document;\n  @Input() activeAccount: Account;\n  accounts: Account[];\n  delegateName = '';\n  readonly CONSTANTS = _CONSTANTS;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public router: Router,\n    private route: ActivatedRoute,\n    private deeplinkService: DeeplinkService,\n    public walletService: WalletService,\n    public lookupService: LookupService,\n    private messageService: MessageService,\n    private translate: TranslateService,\n    private delegateService: DelegateService,\n    private subjectService: SubjectService,\n    public unlockableService: UnlockableService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(async () => {\n        this.accounts = this.walletService.wallet?.getAccounts();\n        this.delegateName = await this.getDelegateName(this.activeAccount?.delegate);\n      })\n    );\n    this.accounts = this.walletService.wallet?.getAccounts();\n    this.subscriptions.add(\n      this.route.queryParams.subscribe(async (params) => {\n        if (params?.type) {\n          this.deeplinkService.set(params);\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n        document.body.scrollTop = 0;\n        if (!(this.accounts?.length > 0) && r.url.indexOf('/account/') === 0) {\n          this.router.navigateByUrl('/');\n        } else if (this.accounts?.length > 0 && !r.url.match(/terms\\-of\\-use|privacy\\-policy/g)) {\n          let accountAddress = r.url.substr(r.url.indexOf('/account/') + 9);\n          accountAddress = accountAddress.indexOf('/') !== -1 ? accountAddress.substring(0, accountAddress.indexOf('/')) : accountAddress;\n          if (!this.walletService.addressExists(accountAddress)) {\n            this.router.navigateByUrl(`/account/${this.accounts[0].address}`);\n            this.activeAccount = this.accounts[0];\n            this.subjectService.activeAccount.next(this.accounts[0]);\n          } else {\n            this.activeAccount = this.walletService.wallet?.getAccount(accountAddress);\n            this.subjectService.activeAccount.next(this.activeAccount);\n          }\n          this.delegateName = await this.getDelegateName(this.activeAccount?.delegate);\n        }\n      })\n    );\n  }\n\n  async ngOnChanges(changes: SimpleChanges): Promise<void> {\n    if (changes?.activeAccount?.currentValue) {\n      this.delegateName = await this.getDelegateName(changes?.activeAccount?.currentValue.delegate);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  logout(): void {\n    this.subjectService.logout.next(true);\n    this.messageService.clear();\n    this.walletService.clearWallet();\n    this.lookupService.clear();\n    this.router.navigate(['']);\n  }\n  copy(): void {\n    copy(this.activeAccount.address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(this.activeAccount.address + ' ' + copyToClipboard, 5);\n  }\n\n  toggleDropdown(sel): void {\n    document.querySelector(sel).parentNode.classList.toggle('expanded');\n  }\n  newAccount(): void {\n    ModalComponent.currentModel.next({ name: 'new-implicit', data: null });\n  }\n  receive(): void {\n    ModalComponent.currentModel.next({\n      name: 'receive',\n      data: { address: this.activeAccount.address }\n    });\n  }\n\n  async getDelegateName(address: string): Promise<string> {\n    return address\n      ? (await this.delegateService.resolveDelegateByAddress(address))?.name ??\n          address.substring(0, 7) + '...' + address.substring(address.length - 4, address.length)\n      : address;\n  }\n}\n","<div *ngIf=\"this.path !== '/embedded'\" class=\"foot-container\" [class.dark]=\"true\">\n  <div class=\"flex-row links\">\n    <div class=\"flex-row left low\">\n      <a href=\"./terms-of-use\" target=\"_blank\">Terms of Use</a>\n      <a href=\"./privacy-policy\" target=\"_blank\">Privacy</a>\n      <a class=\"desktop\" target=\"_blank\" href=\"mailto:contact@kukai.app\">Contact</a>\n    </div>\n    <div class=\"flex-column since low\">\n      <div class=\"flex-row-wrap\" id=\"follow\">\n        <span>follow kukai on</span>\n        <a href=\"https://github.com/kukai-wallet/kukai\" target=\"_blank\"><img src=\"../../../assets/img/logo-github.svg\"></a>\n        <a (click)=\"promptTelegramDialog($event)\" id=\"tg\"><img src=\"../../../assets/img/logo-telegram.svg\"></a>\n        <a href=\"https://twitter.com/KukaiWallet/\" target=\"_blank\"><img src=\"../../../assets/img/logo-twitter.svg\"></a>\n        <a id=\"since\">Since 2018 &trade;</a>\n      </div>\n    </div>\n    <div class=\"flex-row low\">\n      <a class=\"mobile\" target=\"_blank\" href=\"mailto:contact@kukai.app\">Contact</a>\n        <a class=\"docs\" href=\"https://docs.kukai.app\" target=\"_blank\">\n          Help</a>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ModalComponent } from '../../../../components/modals/modal.component';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['../../../../../scss/components/views/layouts/footer/footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  darkText = false;\n  path = '';\n  ModalComponent = ModalComponent;\n  constructor() {}\n\n  ngOnInit(): void {}\n  promptTelegramDialog(ev) {\n    ev.preventDefault();\n    ModalComponent.currentModel.next({\n      name: 'info',\n      data: {\n        href: 'https://t.me/KukaiWallet',\n        message: `Social engineering attacks are currently a high threat on Telegram.\n\n• Do not answer anyone that sends you private messages or calls you\n\n• Do not click on any links in a private message, or share your seed words with anyone`,\n        title: 'Security Notice',\n        action: 'I understand'\n      }\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner-new',\n  templateUrl: './spinner-new.component.html',\n  styleUrls: ['./spinner-new.component.scss']\n})\nexport class SpinnerNewComponent implements OnInit {\n  @Input() logo: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<img class=\"spinner\" src=\"../../../../assets/img/spinner/gradientSpiral.svg\">\n<img class=\"logo\" src=\"../../../../assets/img/spinner/{{logo}}.svg\">","<ng-container *ngIf=\"messageService && messageService.spinnerOn\">\n  <app-spinner-new [logo]=\"logo\"></app-spinner-new>\n  <!-- <app-spinner-legacy *ngIf=\"!embedded\"></app-spinner-legacy> -->\n</ng-container>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MessageService } from '../../../services/message/message.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit, OnDestroy {\n  @Input() embedded: boolean;\n  logo = 'default';\n  private subscriptions: Subscription = new Subscription();\n  constructor(public messageService: MessageService, private subjectService: SubjectService) {}\n\n  ngOnInit(): void {\n    this.subjectService.origin.subscribe((o) => {\n      if (o?.endsWith('gap.com')) {\n        this.logo = 'gap';\n      } else if (o?.endsWith('truesy.com')) {\n        this.logo = 'truesy';\n      } else if (o?.endsWith('playwithbrio.com')) {\n        this.logo = 'brio';\n      } else if (o && o?.indexOf('interpop') !== -1) {\n        this.logo = 'minterPop';\n      } else {\n        this.logo = 'default';\n      }\n    });\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div *ngIf=\"displayAgreement\" class=\"agreement-wrapper fade-in\">\n  <div class=\"agreement-body\">\n    <div class=\"agreement-footer fade-in\">\n      <p>By Accessing, Continuing to Use & Browse this Website including its Services provided therein (“Kukai Wallet”),\n        you agree that you have read and reviewed our <a href=\"./terms-of-use\" target=\"_blank\">Terms of Use</a> and <a\n          href=\"./privacy-policy\" target=\"_blank\">Privacy Policy</a>.</p>\n      <div>\n        <div class=\"flex-column accept\">\n          <button class=\"fade-in\" (click)=\"accept()\">Accept</button>\n          <p>I have reviewed the Terms of Use and Privacy Policy, I hereby Accept and Agree to the Terms of Use and\n            Privacy Policy.</p>\n        </div>\n        <div class=\"flex-column decline\">\n          <a class=\"flex-column\" href=\"about:blank\"><button>Decline</button></a>\n          <p>I have reviewed the Terms of Use and Privacy Policy, I hereby DO NOT Accept and Agree to the Terms of Use\n            and Privacy Policy.</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-agreement',\n  templateUrl: './agreement.component.html',\n  styleUrls: ['../../../../../scss/components/views/start/agreement/agreement.component.scss']\n})\nexport class AgreementComponent implements OnInit {\n  displayAgreement = false;\n  key = 'accepted-terms';\n  constructor(private location: Location) {}\n  ngOnInit(): void {\n    // localStorage.removeItem(this.key);\n    const accepted = localStorage.getItem(this.key);\n    const path = this.location.path();\n    if (!accepted && path !== '/terms-of-use' && path !== '/privacy-policy') {\n      this.displayAgreement = true;\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflowY = 'hidden';\n    }\n  }\n  accept(): void {\n    localStorage.setItem(this.key, '1');\n    this.displayAgreement = false;\n    document.body.style.marginRight = '';\n    document.body.style.overflowY = '';\n  }\n  reject(): void {\n    document.body.style.marginRight = '';\n    document.body.style.overflowY = '';\n    window.open('', '_self');\n  }\n}\n","<div *ngIf=\"!CONSTANTS.MAINNET && !embedded\" class=\"network\"\n  [style.boxShadow]=\"document?.body.scrollTop !== 0 ? '0 2px 10px #3333' : ''\">\n  WARNING: TEST ONLY {{ CONSTANTS.NETWORK.toUpperCase() }}\n</div>\n<app-header *ngIf=\"!embedded\"></app-header>\n<router-outlet></router-outlet>\n<app-messages *ngIf=\"!embedded\"></app-messages>\n<app-spinner [embedded]=\"embedded\"></app-spinner>\n<app-agreement *ngIf=\"!embedded\"></app-agreement>\n<app-info></app-info>\n<app-footer *ngIf=\"!embedded\" [class.initial]=\"router.url !== '/'\"></app-footer>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { WalletService } from './services/wallet/wallet.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Location } from '@angular/common';\nimport { CONSTANTS as _CONSTANTS } from '../environments/environment';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  readonly CONSTANTS = _CONSTANTS;\n  embedded = false;\n  isMobile = false;\n  previous = 0;\n  current = 0;\n  diff = 0;\n  container = null;\n  post = false;\n  private subscriptions: Subscription = new Subscription();\n  constructor(private walletService: WalletService, public router: Router, public translate: TranslateService, private location: Location) {\n    // this language will be used as a fallback when a translation isn't found in the current language\n    translate.setDefaultLang('en');\n\n    // the lang to use, if the lang isn't available, it will use the current loader to get them\n    const languagePreference = window.localStorage.getItem('languagePreference');\n    const browserLang = translate.getBrowserLang();\n    translate.use('en');\n  }\n\n  ngOnInit() {\n    this.checkEmbedded();\n    if (!this.embedded) {\n      this.walletService.loadStoredWallet();\n    }\n    this.subscriptions.add(\n      this.router.events.subscribe((event: Event) => {\n        if (event instanceof NavigationEnd) {\n          this.checkEmbedded();\n          window.scrollTo(0, 0);\n        }\n      })\n    );\n    if (!this.embedded) {\n      window.addEventListener('storage', (e) => {\n        this.handleStorageEvent(e);\n      });\n    }\n\n    const e = () => {\n      const brk = getComputedStyle(document.documentElement).getPropertyValue('--layout-break-5');\n      if (parseFloat(brk.replace(/[a-zA-Z]/g, '')) * 16 > document.documentElement.clientWidth) {\n        document.documentElement.style.setProperty('--is-mobile', '1');\n      } else {\n        document.documentElement.style.setProperty('--is-mobile', '0');\n      }\n    };\n    window.addEventListener('resize', e);\n    window.addEventListener('load', e);\n    e();\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  private handleStorageEvent(e: StorageEvent) {\n    if (e.key === 'kukai-wallet' && !this.embedded) {\n      if (e.oldValue && !e.newValue) {\n        window.location.reload();\n      } else if (!e.oldValue && e.newValue) {\n        setTimeout(async () => {\n          await this.router.navigate(['']);\n          window.location.reload();\n        }, 10000);\n      }\n    }\n  }\n  returnLanguage(lang: string) {\n    // this.translate.use(lang);\n    // console.log('lang ', lang);\n\n    const map: Map<string, string> = new Map([\n      ['en', 'English'],\n      ['cn', '中国'],\n      ['es', 'Español'],\n      ['fr', 'Français'],\n      ['ru', 'Pусский'],\n      ['jp', '日本語'],\n      ['kor', '한국어'],\n      ['por', 'Português'],\n      ['swe', 'Svenska']\n    ]);\n\n    const language = map.get(lang);\n\n    return language;\n  }\n  checkEmbedded() {\n    const path = this.location.path();\n    this.embedded = path.startsWith('/embedded');\n    const bg = this.embedded ? 'none' : '#f8f9fa';\n    if (!!this.embedded) {\n      document.documentElement.style.setProperty('--base-background-color', bg); // recheck\n      const resize = () => {\n        if (document.body.clientWidth < 540) {\n          document.documentElement.style.fontSize = '75%';\n        } else if (document.body.clientWidth < 650) {\n          document.documentElement.style.fontSize = '87.5%';\n        } else {\n          document.documentElement.style.fontSize = '100%';\n        }\n      };\n      window.addEventListener('resize', resize);\n      window.addEventListener('load', resize);\n      resize();\n    }\n  }\n  setLanguage(lang) {\n    window.localStorage.setItem('languagePreference', lang);\n    this.translate.use(lang);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value?: string, args?: number, endTrail?: boolean): string {\n    const limit = args ? args : 3;\n    const trail = '...';\n\n    let returnString;\n\n    if (endTrail && value.length > limit) {\n      const endTrailstring = value.slice(-limit);\n      returnString = value.substring(0, limit) + trail + endTrailstring;\n\n      return returnString;\n    } else {\n      return value.length > limit ? value.substring(0, limit) + trail : value;\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\n\n// From Angular Material\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// For translation\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\n// External libraries\nimport { AppComponent } from './app.component';\n\n// Services\nimport { MessageService } from './services/message/message.service';\nimport { WalletService } from './services/wallet/wallet.service';\nimport { ActivityService } from './services/activity/activity.service';\nimport { BalanceService } from './services/balance/balance.service';\nimport { EncryptionService } from './services/encryption/encryption.service';\nimport { ImportService } from './services/import/import.service';\nimport { TzrateService } from './services/tzrate/tzrate.service';\nimport { ExportService } from './services/export/export.service';\nimport { DelegateService } from './services/delegate/delegate.service';\nimport { InputValidationService } from './services/input-validation/input-validation.service';\nimport { LedgerService } from './services/ledger/ledger.service';\nimport { BeaconService } from './services/beacon/beacon.service';\nimport { TorusService } from './services/torus/torus.service';\nimport { EmbeddedAuthService } from './services/embedded-auth/embedded-auth.service';\nimport { TokenBalancesService } from './services/token-balances/token-balances.service';\nimport { SubjectService } from './services/subject/subject.service';\nimport { UnlockableService } from './services/unlockable/unlockable.service';\nimport { CoordinatorService } from './services/coordinator/coordinator.service';\nimport { OperationService } from './services/operation/operation.service';\n\n// View components\nimport { StartComponent } from './components/views/start/start.component';\nimport { NewWalletComponent } from './components/views/start/login-types/new-wallet/new-wallet.component';\nimport { MnemonicImportComponent } from './components/views/start/login-types/mnemonic-import/mnemonic-import.component';\nimport { MessagesComponent } from './components/ui/messages/messages.component';\nimport { ModalComponent } from './components/modals/modal.component';\nimport { HeaderComponent } from './components/views/layouts/header/header.component';\nimport { ConnectLedgerComponent } from './components/views/start/login-types/connect-ledger/connect-ledger.component';\nimport { FooterComponent } from './components/views/layouts/footer/footer.component';\nimport { AccountViewComponent } from './components/views/logged-in/account-view/account-view.component';\nimport { ActivityComponent } from './components/views/logged-in/account-view/activity/activity.component';\nimport { EventComponent } from './components/views/logged-in/account-view/activity/event/event.component';\nimport { NftsComponent } from './components/views/logged-in/account-view/nfts/nfts.component';\nimport { PendingComponent } from './components/views/logged-in/account-view/pending/pending.component';\nimport { BalancesComponent } from './components/views/logged-in/account-view/balances/balances.component';\nimport { BalanceTokenComponent } from './components/views/logged-in/account-view/balances/token/balance-token.component';\nimport { SpinnerComponent } from './components/ui/spinner/spinner.component';\nimport { AgreementComponent } from './components/views/start/agreement/agreement.component';\nimport { TermsOfUseComponent } from './components/views/start/agreement/terms-of-use/terms-of-use.component';\nimport { PrivacyPolicyComponent } from './components/views/start/agreement/privacy-policy/privacy-policy.component';\nimport { EmbeddedComponent } from './components/views/embedded/embedded.component';\nimport { SigninComponent } from './components/views/embedded/signin/signin.component';\nimport { CardComponent } from './components/views/embedded/card/card.component';\nimport { SendButtonComponent } from './components/ui/button/basic/send/send-button.component';\nimport { TokenDetail } from './components/modals/send/detail/token-detail.component';\nimport { AlertComponent } from './components/modals/alert/alert.component';\nimport { SpinnerLegacyComponent } from './components/ui/spinner/legacy/spinner-legacy.component';\nimport { SpinnerNewComponent } from './components/ui/spinner/new/spinner-new.component';\nimport { AccountDropdownComponent } from './components/ui/dropdown/account/account-dropdown.component';\nimport { MobileMenuDropdownComponent } from './components/ui/dropdown/mobile-menu/mobile-menu.component';\nimport { P404Component } from './components/views/error/404.component';\nimport { P500Component } from './components/views/error/500.component';\n\n// Modules\nimport { LoggedInModule } from './components/views/logged-in/logged-in.module';\n\n// Pipes\nimport { ErrorHandlingPipe } from './pipes/error-handling.pipe';\nimport { TruncatePipe } from './pipes/truncate.pipe';\nimport { TimeAgoPipe } from './pipes/time-ago.pipe';\nimport { DeeplinkService } from './services/deeplink/deeplink.service';\nimport { RemoveCommaPipe } from './pipes/remove-comma.pipe';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    // View components\n    NewWalletComponent,\n    StartComponent,\n    MnemonicImportComponent,\n    MessagesComponent,\n    ModalComponent,\n    HeaderComponent,\n    P404Component,\n    P500Component,\n    SendButtonComponent,\n    ConnectLedgerComponent,\n    FooterComponent,\n    AccountViewComponent,\n    ActivityComponent,\n    EventComponent,\n    NftsComponent,\n    PendingComponent,\n    BalancesComponent,\n    BalanceTokenComponent,\n    SpinnerComponent,\n    AgreementComponent,\n    TermsOfUseComponent,\n    PrivacyPolicyComponent,\n    EmbeddedComponent,\n    SigninComponent,\n    CardComponent,\n    TokenDetail,\n    SpinnerLegacyComponent,\n    SpinnerNewComponent,\n    AccountDropdownComponent,\n    MobileMenuDropdownComponent,\n    SpinnerLegacyComponent,\n\n    // Modals\n    ModalComponent,\n    AlertComponent,\n\n    // Pipes\n    ErrorHandlingPipe,\n    TruncatePipe,\n    TimeAgoPipe\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    LoggedInModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }) // lazy loading will need TranslateModule.forChild() in the lazy loaded modules\n  ],\n  providers: [\n    // Services\n    MessageService,\n    WalletService,\n    ActivityService,\n    EncryptionService,\n    BalanceService,\n    ImportService,\n    TzrateService,\n    CoordinatorService,\n    OperationService,\n    ExportService,\n    DelegateService,\n    InputValidationService,\n    LedgerService,\n    BeaconService,\n    TorusService,\n    EmbeddedAuthService,\n    SubjectService,\n    TokenBalancesService,\n    DeeplinkService,\n    UnlockableService,\n    // Pipes\n    ErrorHandlingPipe,\n    TruncatePipe,\n    TimeAgoPipe,\n    RemoveCommaPipe\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n  window.console.log = function () {};\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.log(err));\n","var map = {\n\t\"./af\": 58685,\n\t\"./af.js\": 58685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 32614,\n\t\"./ar-kw.js\": 32614,\n\t\"./ar-ly\": 18630,\n\t\"./ar-ly.js\": 18630,\n\t\"./ar-ma\": 28674,\n\t\"./ar-ma.js\": 28674,\n\t\"./ar-sa\": 49032,\n\t\"./ar-sa.js\": 49032,\n\t\"./ar-tn\": 24730,\n\t\"./ar-tn.js\": 24730,\n\t\"./ar.js\": 254,\n\t\"./az\": 53052,\n\t\"./az.js\": 53052,\n\t\"./be\": 60150,\n\t\"./be.js\": 60150,\n\t\"./bg\": 63069,\n\t\"./bg.js\": 63069,\n\t\"./bm\": 13466,\n\t\"./bm.js\": 13466,\n\t\"./bn\": 18516,\n\t\"./bn-bd\": 90557,\n\t\"./bn-bd.js\": 90557,\n\t\"./bn.js\": 18516,\n\t\"./bo\": 26273,\n\t\"./bo.js\": 26273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 19815,\n\t\"./bs.js\": 19815,\n\t\"./ca\": 83331,\n\t\"./ca.js\": 83331,\n\t\"./cs\": 21320,\n\t\"./cs.js\": 21320,\n\t\"./cv\": 72219,\n\t\"./cv.js\": 72219,\n\t\"./cy\": 68266,\n\t\"./cy.js\": 68266,\n\t\"./da\": 66427,\n\t\"./da.js\": 66427,\n\t\"./de\": 67435,\n\t\"./de-at\": 52871,\n\t\"./de-at.js\": 52871,\n\t\"./de-ch\": 12994,\n\t\"./de-ch.js\": 12994,\n\t\"./de.js\": 67435,\n\t\"./dv\": 82357,\n\t\"./dv.js\": 82357,\n\t\"./el\": 95649,\n\t\"./el.js\": 95649,\n\t\"./en-au\": 59961,\n\t\"./en-au.js\": 59961,\n\t\"./en-ca\": 10860,\n\t\"./en-ca.js\": 10860,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 70864,\n\t\"./en-ie.js\": 70864,\n\t\"./en-il\": 91579,\n\t\"./en-il.js\": 91579,\n\t\"./en-in\": 30940,\n\t\"./en-in.js\": 30940,\n\t\"./en-nz\": 16181,\n\t\"./en-nz.js\": 16181,\n\t\"./en-sg\": 44301,\n\t\"./en-sg.js\": 44301,\n\t\"./eo\": 85291,\n\t\"./eo.js\": 85291,\n\t\"./es\": 54529,\n\t\"./es-do\": 53764,\n\t\"./es-do.js\": 53764,\n\t\"./es-mx\": 12584,\n\t\"./es-mx.js\": 12584,\n\t\"./es-us\": 63425,\n\t\"./es-us.js\": 63425,\n\t\"./es.js\": 54529,\n\t\"./et\": 35203,\n\t\"./et.js\": 35203,\n\t\"./eu\": 70678,\n\t\"./eu.js\": 70678,\n\t\"./fa\": 83483,\n\t\"./fa.js\": 83483,\n\t\"./fi\": 96262,\n\t\"./fi.js\": 96262,\n\t\"./fil\": 52521,\n\t\"./fil.js\": 52521,\n\t\"./fo\": 34555,\n\t\"./fo.js\": 34555,\n\t\"./fr\": 63131,\n\t\"./fr-ca\": 88239,\n\t\"./fr-ca.js\": 88239,\n\t\"./fr-ch\": 21702,\n\t\"./fr-ch.js\": 21702,\n\t\"./fr.js\": 63131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 23821,\n\t\"./ga.js\": 23821,\n\t\"./gd\": 71753,\n\t\"./gd.js\": 71753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 92762,\n\t\"./gom-deva.js\": 92762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 82809,\n\t\"./gu.js\": 82809,\n\t\"./he\": 45402,\n\t\"./he.js\": 45402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 10410,\n\t\"./hr.js\": 10410,\n\t\"./hu\": 38288,\n\t\"./hu.js\": 38288,\n\t\"./hy-am\": 67928,\n\t\"./hy-am.js\": 67928,\n\t\"./id\": 71334,\n\t\"./id.js\": 71334,\n\t\"./is\": 86959,\n\t\"./is.js\": 86959,\n\t\"./it\": 34864,\n\t\"./it-ch\": 51124,\n\t\"./it-ch.js\": 51124,\n\t\"./it.js\": 34864,\n\t\"./ja\": 36141,\n\t\"./ja.js\": 36141,\n\t\"./jv\": 29187,\n\t\"./jv.js\": 29187,\n\t\"./ka\": 42136,\n\t\"./ka.js\": 42136,\n\t\"./kk\": 94332,\n\t\"./kk.js\": 94332,\n\t\"./km\": 18607,\n\t\"./km.js\": 18607,\n\t\"./kn\": 84305,\n\t\"./kn.js\": 84305,\n\t\"./ko\": 70234,\n\t\"./ko.js\": 70234,\n\t\"./ku\": 16003,\n\t\"./ku.js\": 16003,\n\t\"./ky\": 75061,\n\t\"./ky.js\": 75061,\n\t\"./lb\": 32786,\n\t\"./lb.js\": 32786,\n\t\"./lo\": 66183,\n\t\"./lo.js\": 66183,\n\t\"./lt\": 50029,\n\t\"./lt.js\": 50029,\n\t\"./lv\": 24169,\n\t\"./lv.js\": 24169,\n\t\"./me\": 68577,\n\t\"./me.js\": 68577,\n\t\"./mi\": 68177,\n\t\"./mi.js\": 68177,\n\t\"./mk\": 50337,\n\t\"./mk.js\": 50337,\n\t\"./ml\": 65260,\n\t\"./ml.js\": 65260,\n\t\"./mn\": 52325,\n\t\"./mn.js\": 52325,\n\t\"./mr\": 14695,\n\t\"./mr.js\": 14695,\n\t\"./ms\": 75334,\n\t\"./ms-my\": 37151,\n\t\"./ms-my.js\": 37151,\n\t\"./ms.js\": 75334,\n\t\"./mt\": 63570,\n\t\"./mt.js\": 63570,\n\t\"./my\": 97963,\n\t\"./my.js\": 97963,\n\t\"./nb\": 88028,\n\t\"./nb.js\": 88028,\n\t\"./ne\": 86638,\n\t\"./ne.js\": 86638,\n\t\"./nl\": 50302,\n\t\"./nl-be\": 66782,\n\t\"./nl-be.js\": 66782,\n\t\"./nl.js\": 50302,\n\t\"./nn\": 33501,\n\t\"./nn.js\": 33501,\n\t\"./oc-lnc\": 50563,\n\t\"./oc-lnc.js\": 50563,\n\t\"./pa-in\": 50869,\n\t\"./pa-in.js\": 50869,\n\t\"./pl\": 65302,\n\t\"./pl.js\": 65302,\n\t\"./pt\": 49687,\n\t\"./pt-br\": 74884,\n\t\"./pt-br.js\": 74884,\n\t\"./pt.js\": 49687,\n\t\"./ro\": 79107,\n\t\"./ro.js\": 79107,\n\t\"./ru\": 33627,\n\t\"./ru.js\": 33627,\n\t\"./sd\": 30355,\n\t\"./sd.js\": 30355,\n\t\"./se\": 83427,\n\t\"./se.js\": 83427,\n\t\"./si\": 43906,\n\t\"./si.js\": 43906,\n\t\"./sk\": 54590,\n\t\"./sk.js\": 54590,\n\t\"./sl\": 20184,\n\t\"./sl.js\": 20184,\n\t\"./sq\": 56361,\n\t\"./sq.js\": 56361,\n\t\"./sr\": 78965,\n\t\"./sr-cyrl\": 81287,\n\t\"./sr-cyrl.js\": 81287,\n\t\"./sr.js\": 78965,\n\t\"./ss\": 25456,\n\t\"./ss.js\": 25456,\n\t\"./sv\": 70451,\n\t\"./sv.js\": 70451,\n\t\"./sw\": 77558,\n\t\"./sw.js\": 77558,\n\t\"./ta\": 51356,\n\t\"./ta.js\": 51356,\n\t\"./te\": 73693,\n\t\"./te.js\": 73693,\n\t\"./tet\": 21243,\n\t\"./tet.js\": 21243,\n\t\"./tg\": 42500,\n\t\"./tg.js\": 42500,\n\t\"./th\": 55768,\n\t\"./th.js\": 55768,\n\t\"./tk\": 77761,\n\t\"./tk.js\": 77761,\n\t\"./tl-ph\": 35780,\n\t\"./tl-ph.js\": 35780,\n\t\"./tlh\": 29590,\n\t\"./tlh.js\": 29590,\n\t\"./tr\": 33807,\n\t\"./tr.js\": 33807,\n\t\"./tzl\": 93857,\n\t\"./tzl.js\": 93857,\n\t\"./tzm\": 60654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 60654,\n\t\"./ug-cn\": 30845,\n\t\"./ug-cn.js\": 30845,\n\t\"./uk\": 19232,\n\t\"./uk.js\": 19232,\n\t\"./ur\": 47052,\n\t\"./ur.js\": 47052,\n\t\"./uz\": 77967,\n\t\"./uz-latn\": 32233,\n\t\"./uz-latn.js\": 32233,\n\t\"./uz.js\": 77967,\n\t\"./vi\": 98615,\n\t\"./vi.js\": 98615,\n\t\"./x-pseudo\": 12320,\n\t\"./x-pseudo.js\": 12320,\n\t\"./yo\": 31313,\n\t\"./yo.js\": 31313,\n\t\"./zh-cn\": 64490,\n\t\"./zh-cn.js\": 64490,\n\t\"./zh-hk\": 55910,\n\t\"./zh-hk.js\": 55910,\n\t\"./zh-mo\": 98262,\n\t\"./zh-mo.js\": 98262,\n\t\"./zh-tw\": 44223,\n\t\"./zh-tw.js\": 44223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"]}