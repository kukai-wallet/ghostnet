{"version":3,"file":"main.ee246e305eba4389.js","mappings":"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","sources":["./src/app/components/modals/modal.component.ts","./src/app/components/modals/qr-scanner/qr-scanner.component.html","./src/app/components/modals/qr-scanner/qr-scanner.component.ts","./src/app/components/ui/asset/asset.component.html","./src/app/components/ui/asset/asset.component.ts","./src/app/components/ui/button/toggle/toggle.component.ts","./src/app/components/ui/button/toggle/advanced/advanced.component.ts","./src/app/components/ui/button/toggle/advanced/advanced.component.html","./src/app/components/ui/chart/chart.component.html","./src/app/components/ui/chart/chart.component.ts","./src/app/components/ui/dropdown/dropdown.component.ts","./src/app/components/ui/generic/list.component.ts","./src/app/components/views/logged-in/account-view/activity/event/event.component.html","./src/app/components/views/logged-in/account-view/activity/event/event.component.ts","./src/app/components/views/logged-in/account-view/activity/activity.component.html","./src/app/components/views/logged-in/account-view/activity/activity.component.ts","./src/app/components/views/logged-in/account-view/nfts/token/token.component.html","./src/app/components/views/logged-in/account-view/nfts/token/token.component.ts","./src/app/components/ui/search/search.component.html","./src/app/components/ui/search/search.component.ts","./src/app/components/views/logged-in/account-view/nfts/body/body.component.html","./src/app/components/views/logged-in/account-view/nfts/body/body.component.ts","./src/app/components/views/logged-in/account-view/nfts/nfts.component.html","./src/app/components/views/logged-in/account-view/nfts/nfts.component.ts","./src/app/components/ui/button/basic/basic.component.ts","./src/app/components/ui/button/basic/send/send-button.component.html","./src/app/components/ui/button/basic/send/send-button.component.ts","./src/app/components/views/logged-in/account-view/balances/token/balance-token.component.html","./src/app/components/views/logged-in/account-view/balances/token/balance-token.component.ts","./src/app/components/views/logged-in/account-view/balances/balances.component.html","./src/app/components/views/logged-in/account-view/balances/balances.component.ts","./src/app/components/modals/send/detail/token-detail.component.html","./src/app/components/modals/send/detail/token-detail.component.ts","./src/app/components/views/logged-in/account-view/account-view.component.html","./src/app/components/views/logged-in/account-view/account-view.component.ts","./src/app/components/views/logged-in/settings/settings.component.html","./src/app/components/views/logged-in/settings/settings.component.ts","./src/app/components/views/logged-in/delegate-page/delegate-page.component.html","./src/app/components/views/logged-in/delegate-page/delegate-page.component.ts","./src/app/components/views/logged-in/logged-in-routing.module.ts","./src/app/components/views/logged-in/logged-in.module.ts","./src/app/components/views/start/activate/activate.component.html","./src/app/components/views/start/activate/activate.component.ts","./src/app/interfaces.ts","./src/app/pipes/error-handling.pipe.ts","./src/app/pipes/remove-comma.pipe.ts","./src/app/pipes/time-ago.pipe.ts","./src/app/services/activity/activity.service.ts","./src/app/services/balance/balance.service.ts","./src/app/services/beacon/beacon.service.ts","./src/app/services/chart/chart.service.ts","./src/app/services/indexer/signal/signal.service.ts","./src/app/services/coordinator/coordinator.service.ts","./src/app/services/deeplink/deeplink.service.ts","./src/app/services/delegate/delegate.service.ts","./src/app/services/encryption/encryption.service.ts","./src/app/services/estimate/estimate.service.ts","./src/app/services/indexer/dipdup/dipdup.service.ts","./src/app/services/indexer/indexer.service.ts","./src/app/services/indexer/objkt/objkt.service.ts","./src/app/services/indexer/tzkt/tzkt.service.ts","./src/app/services/input-validation/input-validation.service.ts","./src/app/services/lookup/lookup.service.ts","./src/app/services/message/message.service.ts","./src/app/services/operation/operation.service.ts","./src/app/services/subject/subject.service.ts","./src/app/services/swap-liquidity/classes/Amount.ts","./src/app/services/swap-liquidity/swap-liquidity.service.ts","./src/app/services/tezos-domains/tezos-domains.service.ts","./src/app/services/token-balances/token-balances.service.ts","./src/app/services/token/token.service.ts","./src/app/services/torus/torus.service.ts","./src/app/services/tzrate/tzrate.service.ts","./src/app/services/unlockable/unlockable.service.ts","./src/app/services/utils/utils.service.ts","./src/app/services/bc/bc.service.ts","./src/app/services/wallet-connect/wallet-connect.service.ts","./src/app/services/wallet/wallet.service.ts","./src/app/services/wallet/wallet.ts","./src/environments/environment.ghostnet.ts","./src/environments/environment.ts","./src/app/services/import/import.service.ts","./src/app/components/views/start/start.component.html","./src/app/components/views/start/start.component.ts","./src/app/services/export/export.service.ts","./src/app/components/views/start/login-types/new-wallet/new-wallet.component.html","./src/app/components/views/start/login-types/new-wallet/new-wallet.component.ts","./src/app/components/views/start/login-types/mnemonic-import/mnemonic-import.component.html","./src/app/components/views/start/login-types/mnemonic-import/mnemonic-import.component.ts","./src/app/services/ledger/ledger.service.ts","./src/app/components/views/start/login-types/connect-ledger/connect-ledger.component.ts","./src/app/components/views/start/login-types/connect-ledger/connect-ledger.component.html","./src/app/components/views/error/404.component.ts","./src/app/components/views/error/404.component.html","./src/app/components/views/error/500.component.ts","./src/app/components/views/error/500.component.html","./src/app/components/views/start/agreement/privacy-policy/privacy-policy.component.ts","./src/app/components/views/start/agreement/privacy-policy/privacy-policy.component.html","./src/app/components/views/start/agreement/terms-of-use/terms-of-use.component.ts","./src/app/components/views/start/agreement/terms-of-use/terms-of-use.component.html","./src/app/services/embedded-auth/embedded-auth.service.ts","./src/app/components/misc/send/interfaces.ts","./src/app/components/modals/swap-liquidity/swap-liquidity.component.html","./src/app/components/modals/swap-liquidity/swap-liquidity.component.ts","./src/app/components/modals/send/confirm/send-confirmation.component.html","./src/app/components/modals/send/confirm/send-confirmation.component.ts","./src/app/components/ui/dropdown/prepare-send/prepare-send-dropdown.component.html","./src/app/components/ui/dropdown/prepare-send/prepare-send-dropdown.component.ts","./src/app/components/modals/send/prepare/prepare-send.component.html","./src/app/components/modals/send/prepare/prepare-send.component.ts","./src/app/components/views/embedded/confirm-send/confirm-send.component.html","./src/app/components/views/embedded/confirm-send/confirm-send.component.ts","./src/app/components/modals/swap-liquidity/swap-liquidity-confirm.component.html","./src/app/components/modals/swap-liquidity/swap-liquidity-confirm.component.ts","./src/app/components/misc/send/send.component.html","./src/app/components/misc/send/send.component.ts","./src/app/components/views/embedded/sign-expr/template/template.component.html","./src/app/components/views/embedded/sign-expr/template/template.component.ts","./src/app/components/views/embedded/sign-expr/sign-expr.component.html","./src/app/components/views/embedded/sign-expr/sign-expr.component.ts","./src/app/components/views/embedded/queue/queue.component.html","./src/app/components/views/embedded/queue/queue.component.ts","./src/app/components/views/embedded/signin/signin.component.html","./src/app/components/views/embedded/signin/signin.component.ts","./src/app/components/views/embedded/card/card.component.ts","./src/app/components/views/embedded/embedded.component.html","./src/app/components/views/embedded/card/card.component.html","./src/app/components/views/embedded/embedded.component.ts","./src/app/components/modals/receive/receive.component.html","./src/app/components/modals/receive/receive.component.ts","./src/app/components/modals/new-implicit/new-implicit.component.html","./src/app/components/modals/new-implicit/new-implicit.component.ts","./src/app/components/ui/dropdown/permission-request/permission-request.component.html","./src/app/components/ui/dropdown/permission-request/permission-request.component.ts","./src/app/components/modals/permission-request/permission-request.component.html","./src/app/components/modals/permission-request/permission-request.component.ts","./src/app/components/modals/sign-expr/sign-expr.component.html","./src/app/components/modals/sign-expr/sign-expr.component.ts","./src/app/components/modals/originate/originate.component.html","./src/app/components/modals/originate/originate.component.ts","./src/app/components/modals/delegate/delegate.component.html","./src/app/components/modals/delegate/delegate.component.ts","./src/app/components/modals/account-list/body/body.component.html","./src/app/components/modals/account-list/body/body.component.ts","./src/app/components/modals/account-list/list.component.ts","./src/app/components/modals/export-mnemonic/export-mnemonic.component.html","./src/app/components/modals/account-list/list.component.html","./src/app/components/modals/export-mnemonic/export-mnemonic.component.ts","./src/app/components/ui/dropdown/session-select/session-select.component.html","./src/app/components/ui/dropdown/session-select/session-select.component.ts","./src/app/components/modals/session-select/session-select.component.html","./src/app/components/modals/session-select/session-select.component.ts","./src/app/components/misc/uri-handler/uri-handler.component.ts","./src/app/components/misc/uri-handler/uri-handler.component.html","./src/app/components/views/logged-in/account-view/buy/buy.component.html","./src/app/components/views/logged-in/account-view/buy/buy.component.ts","./src/app/components/modals/buy/buy.component.html","./src/app/components/modals/buy/buy.component.ts","./src/app/components/views/logged-in/logged-in.component.ts","./src/app/components/views/logged-in/logged-in.component.html","./src/app/app-routing.module.ts","./src/app/components/modals/info/info.component.html","./src/app/components/modals/info/info.component.ts","./src/app/components/modals/alert/alert.component.html","./src/app/components/modals/alert/alert.component.ts","./src/app/components/ui/messages/messages.component.html","./src/app/components/ui/messages/messages.component.ts","./src/app/components/ui/dropdown/account/account-dropdown.component.html","./src/app/components/ui/dropdown/account/account-dropdown.component.ts","./src/app/components/ui/dropdown/mobile-menu/mobile-menu.component.html","./src/app/components/ui/dropdown/mobile-menu/mobile-menu.component.ts","./src/app/components/views/layouts/header/header.component.html","./src/app/components/views/layouts/header/header.component.ts","./src/app/components/views/layouts/footer/footer.component.html","./src/app/components/views/layouts/footer/footer.component.ts","./src/app/components/ui/spinner/new/spinner-new.component.ts","./src/app/components/ui/spinner/spinner.component.html","./src/app/components/ui/spinner/new/spinner-new.component.html","./src/app/components/ui/spinner/spinner.component.ts","./src/app/components/views/start/agreement/agreement.component.html","./src/app/components/views/start/agreement/agreement.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/pipes/truncate.pipe.ts","./src/app/app.module.ts","./src/main.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import { Component, OnInit, Optional, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\ninterface ModalPayload {\n  name: string | null;\n  data: any;\n  forceClose?: boolean;\n}\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html'\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n  public isOpen = false;\n  name = '';\n  static currentModel = new BehaviorSubject<ModalPayload>({\n    name: '',\n    data: null\n  });\n  private modalSub: Subscription = new Subscription();\n  constructor(@Optional() public cd?: ChangeDetectorRef) {\n    this.cd = cd;\n    this.modalSub = ModalComponent.currentModel.subscribe((load) => {\n      load.forceClose = load.forceClose === undefined ? true : load.forceClose;\n      if (!!load.name && load.name === this.name) {\n        if (!this.isOpen) {\n          this.willOpen();\n          this.open(load.data);\n        }\n      } else {\n        if (this.isOpen && load.forceClose) {\n          this.close();\n          if (this.cd) {\n            this.cd.detectChanges();\n          }\n        }\n      }\n    });\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.modalSub.unsubscribe();\n  }\n\n  willOpen(): void {}\n\n  open(data?: any): void {\n    if (window.innerHeight < document.body.scrollHeight) {\n      document.body.style.marginRight = '0.5rem !important';\n      document.body.style.overflowY = 'hidden !important';\n    }\n    const isMobile = Number(document.documentElement.style.getPropertyValue('--is-mobile'));\n    if (isMobile) {\n      setTimeout(() => {\n        window.scrollTo({ top: 0 });\n      }, 0);\n    }\n    this.isOpen = true;\n  }\n\n  close(): void {\n    document.body.style.marginRight = '';\n    document.body.style.overflowY = '';\n    this.isOpen = false;\n  }\n}\n","<button *ngIf=\"!override\" class=\"scan\" (click)=\"openModal()\">Scan QR code</button>\n<img *ngIf=\"override\" class=\"scan override\" (click)=\"openModal()\" src=\"assets/img/qr.svg\" />\n<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <form autocomplete=\"off\">\n    <div class=\"content\">\n      <div class=\"flex-row top\">\n        <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n            src=\"../../../assets/img/close-btn-x.png\" /></div>\n        <h1 class=\"title\">QR-Scanner</h1>\n      </div>\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column qr-scanner\">\n        <div class=\"video-container\">\n          <video #videoPlayer>\n            Browser not supported\n          </video>\n          <p class=\"no-cam\" *ngIf=\"!qrScanner\">No camera detected</p>\n          <p class=\"no-cam\" *ngIf=\"!!errorMessage\">{{ errorMessage }}</p>\n          <p class=\"no-cam\" *ngIf=\"!!errorMessage\">Please check site permissions</p>\n        </div>\n        <input *ngIf=\"!override\" name=\"none\" type=\"text\" [(ngModel)]=\"manualInput\" class=\"text\" (paste)=\"handlePaste($event)\"\n          placeholder=\"...or paste pairing string here\">\n      </div>\n    </div>\n  </form>\n</div>","import { Component, ViewChild, ElementRef, Input, EventEmitter, Output } from '@angular/core';\nimport { BeaconService } from '../../../services/beacon/beacon.service';\nimport QrScanner from 'qr-scanner';\nimport { DeeplinkService } from '../../../services/deeplink/deeplink.service';\nimport { CONSTANTS as _CONSTANTS, environment } from '../../../../environments/environment';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ModalComponent } from '../modal.component';\nimport { WalletConnectService } from '../../../services/wallet-connect/wallet-connect.service';\n\n@Component({\n  selector: 'app-qr-scanner',\n  templateUrl: './qr-scanner.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class QrScannerComponent extends ModalComponent {\n  readonly CONSTANTS = _CONSTANTS;\n  readonly env = environment;\n  constructor(\n    private beaconService: BeaconService,\n    private deeplinkService: DeeplinkService,\n    private messageService: MessageService,\n    private walletConnectService: WalletConnectService\n  ) {\n    super();\n  }\n  @Output('scanResponse') scanResponse = new EventEmitter();\n  @ViewChild('videoPlayer') videoplayer: ElementRef;\n  @Input() override = false;\n  qrScanner: QrScanner;\n  manualInput = '';\n  name = 'qr-scanner';\n  loadingCam = false;\n  errorMessage = '';\n  openModal(): void {\n    if (!this.override) {\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n    } else {\n      super.open();\n    }\n    this.scan();\n  }\n  async scan(): Promise<void> {\n    this.loadingCam = true;\n    const hasCamera = await QrScanner.hasCamera();\n    if (hasCamera && this.videoplayer?.nativeElement) {\n      this.errorMessage = '';\n      try {\n        this.qrScanner = new QrScanner(this.videoplayer?.nativeElement, (result: QrScanner.ScanResult) => this.handleQrCode(result), {});\n        await this.qrScanner.start();\n        if (!this.isOpen) {\n          this.qrScanner.stop();\n          this.qrScanner.destroy();\n          this.qrScanner = null;\n        }\n      } catch (e) {\n        this.errorMessage = e;\n      }\n    } else {\n      console.warn('no camera found');\n    }\n    this.loadingCam = false;\n  }\n  handleQrCode(scanResult: QrScanner.ScanResult): void {\n    const qrString = scanResult.data;\n    console.log('QR Code', qrString);\n    try {\n      const pairingInfo = this.deeplinkService.QRtoPairingJson(qrString);\n      if (pairingInfo && !this.override) {\n        this.beaconService.preNotifyPairing(pairingInfo);\n        this.beaconService.addPeer(pairingInfo);\n      } else if (qrString && this.override) {\n        this.scanResponse.emit({ pkh: qrString });\n      }\n      this.closeModal();\n    } catch (e) {\n      if (!this.override) {\n        this.messageService.addError('Invalid Base58 checksum!');\n      }\n    }\n  }\n  async handlePaste(ev: ClipboardEvent) {\n    try {\n      const clipboardString = ev?.clipboardData?.getData('text');\n      const pairingInfo = clipboardString ? this.deeplinkService.QRtoPairingJson(clipboardString) : '';\n      if (!this.override && pairingInfo) {\n        this.beaconService.preNotifyPairing(pairingInfo);\n        this.beaconService.addPeer(pairingInfo);\n      } else if (clipboardString && this.override) {\n        this.scanResponse.emit({ pkh: clipboardString });\n      } else if (clipboardString.startsWith('wc')) {\n        this.walletConnectService.pair(clipboardString);\n      }\n      this.closeModal();\n    } catch (e) {\n      if (!this.override) {\n        this.messageService.addError('Invalid Base58 checksum!');\n      }\n    }\n  }\n  closeModal(): void {\n    // restore body scrollbar\n    if (this.qrScanner && !this.loadingCam) {\n      this.qrScanner.stop();\n      this.qrScanner.destroy();\n      this.qrScanner = null;\n    }\n    if (!this.override) {\n      ModalComponent.currentModel.next({ name: '', data: null });\n    } else {\n      super.close();\n    }\n    this.manualInput = '';\n  }\n}\n","<ng-container *ngIf=\"this.display === Display.image || (this.display === Display.audio && !!poster)\">\n  <!-- Need crossorigin anonymous here to leverage caching from first GET (check mime type) -->\n  <img crossorigin=\"anonymous\" #postImage [src]=\"postSrc\" id=\"postImage\" [style.objectFit]=\"postSrc?.indexOf(loaderUrl) > -1 ? 'scale-down' : ''\" (error)=\"onError($event)\" (load)=\"onLoad($event)\" />\n  <img crossorigin=\"anonymous\" #preImage [src]=\"preSrc\" id=\"preImage\" (error)=\"onError($event)\" (load)=\"onLoad($event)\" />\n</ng-container>\n<audio crossorigin=\"anonymous\" #audio *ngIf=\"this.display === Display.audio\" preload=\"metadata\" [controls]=\"controls\" [controlsList]=\"controlsList\" id=\"audio\" (error)=\"onError($event)\" (loadeddata)=\"onLoadData($event)\">\n  <source crossorigin=\"anonymous\" [src]=\"dataSrc\" [type]=\"mimeType\" />\n</audio>\n<video crossorigin=\"anonymous\" #video *ngIf=\"this.display === Display.video\" preload=\"metadata\" id=\"video\" [controls]=\"controls\" [playsinline]=\"playsinline\" [muted]=\"muted\" [loop]=\"loop\" [autoplay]=\"autoplay\" (error)=\"onError($event)\" (loadeddata)=\"onLoadData($event)\">\n  <source crossorigin=\"anonymous\" [src]=\"dataSrc\" [type]=\"mimeType\" />\n  <img crossorigin=\"anonymous\" [src]=\"loaderUrl\" class=\"spinner\" />\n</video>\n<div *ngIf=\"this.display === Display.threeD\" class=\"model-wrapper\">\n  <model-viewer crossorigin=\"anonymous\" #model id=\"modelCanvas\" auto-rotate rotation-per-second=\"30deg\"\n    [src]=\"dataSrc\" alt=\"postSrc\" (load)=\"onLoad($event)\" (error)=\"onError($event)\"\n    camera-controls ar ar-modes=\"webxr scene-viewer quick-look\"></model-viewer>\n</div>","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, Sanitizer, SimpleChanges, ViewChild } from '@angular/core';\nimport { Asset, CachedAsset, TokenService } from '../../../services/token/token.service';\nimport { CONSTANTS, MODEL_3D_WHITELIST } from '../../../../environments/environment';\n\nenum Display {\n  'none',\n  'audio',\n  'image',\n  'video',\n  'threeD'\n}\n\nenum Size {\n  'icon' = 'icon',\n  'small' = 'small',\n  'medium' = 'medium',\n  'gallery' = 'gallery',\n  'raw' = 'raw'\n}\n\nconst MIMETYPE_OVERLOADS = ['unknown', 'image/gif'];\n\n@Component({\n  selector: 'app-asset',\n  templateUrl: './asset.component.html',\n  styleUrls: ['../../../../scss/components/ui/asset/asset.component.scss']\n})\nexport class AssetComponent implements OnInit, AfterViewInit {\n  Display = Display;\n  display = Display.image;\n  @ViewChild('preImage') preImage;\n  @ViewChild('postImage') postImage;\n  @ViewChild('audio') audio;\n  @ViewChild('video') video;\n  @ViewChild('model') model;\n  @Input() assets: any;\n  @Input() size = Size.medium;\n  @Input() priorityList = ['displayAsset', 'thumbnailAsset'];\n  @Input() controlsList = 'nofullscreen nodownload noremoteplayback noplaybackrate';\n  @Input() poster: CachedAsset;\n  @Input() controls = false;\n  @Input() requires = ['all'];\n  @Input() hideSpinner = false;\n  @Input() muted = false;\n  @Input() autoplay = false;\n  @Input() loop = false;\n  @Input() playsinline = false;\n  @Output() inView = new EventEmitter(null);\n  @Output() load = new EventEmitter(null);\n  readonly loaderUrl = 'assets/img/loader.svg';\n  readonly unknownUrl = 'assets/img/unknown-token-grayscale.svg';\n  dataSrc = undefined;\n  preSrc = this.loaderUrl;\n  postSrc = this.loaderUrl;\n  mimeType = 'image/*';\n  errors = 0;\n  obs: IntersectionObserver;\n\n  constructor(private elRef: ElementRef, private tokenService: TokenService) {}\n\n  ngOnInit(): void {\n    if (this.hideSpinner) {\n      this.display = Display.none;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes?.assets?.previousValue &&\n      changes?.assets?.currentValue &&\n      JSON.stringify(changes?.assets?.previousValue) !== JSON.stringify(changes?.assets?.currentValue)\n    ) {\n      const p0 = this.assetToUrl(this.pickAsset(changes?.assets?.previousValue));\n      const p1 = this.assetToUrl(this.pickAsset(changes?.assets?.currentValue));\n      if (p0 !== p1) {\n        console.log('reload asset', { from: p0, to: p1 });\n        this.reload();\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.lazyLoad();\n  }\n  private reload() {\n    this.display = Display.none;\n    this.dataSrc = undefined;\n    this.preSrc = this.loaderUrl;\n    this.postSrc = this.loaderUrl;\n    this.mimeType = 'image/*';\n    this.updateDisplay();\n    this.lazyLoad();\n  }\n  updateDisplay(): void {\n    if (this.isImage() && (this.requires.includes('image') || this.requires.includes('all'))) {\n      this.display = Display.image;\n    } else if (this.isAudio() && (this.requires.includes('audio') || this.requires.includes('all'))) {\n      this.display = Display.audio;\n    } else if (this.isVideo() && (this.requires.includes('video') || this.requires.includes('all'))) {\n      this.display = Display.video;\n    } else if (this.is3D() && (this.requires.includes('model') || this.requires.includes('all'))) {\n      this.display = Display.threeD;\n    } else {\n      this.display = Display.none;\n    }\n  }\n\n  isImage(): boolean {\n    return this.mimeType?.startsWith('image/') || this.mimeType?.startsWith('application/');\n  }\n\n  isVideo(): boolean {\n    return this.mimeType?.startsWith('video/');\n  }\n\n  isAudio(): boolean {\n    return this.mimeType?.startsWith('audio/');\n  }\n\n  is3D(): boolean {\n    return this.mimeType?.startsWith('model/');\n  }\n\n  onLoad(e): void {\n    if (e?.target?.id === 'preImage') {\n      this.postSrc = this.preSrc;\n      this.updateDisplay();\n    }\n  }\n\n  onLoadData(e): void {\n    if (this.isAudio()) {\n      if (this.audio.nativeElement.muted) {\n        this.audio.nativeElement.volume = 1.0;\n      }\n    }\n  }\n\n  onError(e): void {\n    if ((e?.target?.id === 'postImage' || e?.target?.id === 'preImage') && this.isImage()) {\n      this.errors++;\n      if (this.errors <= 2) {\n        console.log('retry lazyload', this.preSrc);\n        this.reload();\n      } else {\n        console.log('failed to load asset', this.preSrc);\n        this.evaluateInvalid();\n      }\n    }\n  }\n\n  evaluateInvalid(): void {\n    this.mimeType = 'image/*';\n    this.updateDisplay();\n    this.preSrc = this.unknownUrl;\n  }\n  pickAsset(assets): Asset {\n    for (let type of this.priorityList) {\n      if (assets && assets[type] && !(typeof assets[type] === 'object' && !assets[type]?.uri)) {\n        return assets[type];\n      }\n    }\n    return null;\n  }\n\n  async evaluate(assets): Promise<void> {\n    if (this.poster) {\n      this.preSrc = this.assetToUrl(this.poster);\n    }\n    let asset = this.pickAsset(assets);\n    if (asset) {\n      try {\n        await this.determineMime(asset);\n      } catch (e) {\n        console.error(e);\n        this.evaluateInvalid();\n        return;\n      }\n      this.setSrc(asset);\n    } else {\n      this.evaluateInvalid();\n    }\n  }\n\n  lazyLoad(): void {\n    this.obs = new IntersectionObserver((entries, _) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          this.evaluate(this.assets);\n          this.obs.unobserve(this.elRef?.nativeElement);\n        }\n        this.inView.emit();\n      });\n    });\n    if (this.elRef?.nativeElement) {\n      this.obs.observe(this.elRef?.nativeElement);\n    }\n  }\n\n  async determineMime(asset: Asset) {\n    const url = this.assetToUrl(asset);\n    if (!url) {\n      throw new Error('InvalidUrl');\n    }\n    if (url?.startsWith('data:image')) {\n      this.mimeType = 'image/*';\n      return (this.preSrc = url);\n    }\n    // Ignore MIME type provided in metadata for now. Way too unreliable. Exception for nfts in 3d wl. (media proxy don't return the correct mime type)\n    if (\n      typeof asset !== 'string' &&\n      !(asset?.mimeType?.startsWith('model/') && (MODEL_3D_WHITELIST as Array<any>).includes(this.tokenService.getContractAddressFromAsset(asset?.uri)))\n    ) {\n      let response;\n      for (let i = 0; i < 3 && !response?.ok; i++) {\n        response = await fetch(url, { method: 'GET' });\n      }\n      if (!response?.ok) {\n        throw new Error('Failed to fetch asset');\n      }\n      this.mimeType = response.headers.get('content-type');\n    } else if (typeof asset === 'string') {\n      this.mimeType = 'image/*';\n    } else {\n      this.mimeType = asset.mimeType;\n    }\n  }\n\n  setSrc(asset): void {\n    this.updateDisplay();\n    if (this.isAudio() || this.isVideo() || this.is3D()) {\n      this.isAudio() ? this.load.emit() : undefined;\n      if (this.is3D()) {\n        const contractAddress = this.tokenService.getContractAddressFromAsset(asset?.uri);\n        if (!(MODEL_3D_WHITELIST as Array<any>).includes(contractAddress)) {\n          console.warn('Content blocked');\n          this.evaluateInvalid();\n          return;\n        }\n      }\n      this.dataSrc = this.assetToUrl(asset);\n    } else if (this.isImage()) {\n      this.preSrc = this.assetToUrl(asset);\n    } else {\n      console.warn(`Unrecognized MIME type: ${this.mimeType}`, '\\n', 'Assuming: image/*');\n      this.mimeType = 'image/*';\n      this.updateDisplay();\n      this.preSrc = this.assetToUrl(asset);\n    }\n  }\n  assetToUrl(asset: Asset): string {\n    let url = '';\n    const uri = typeof asset === 'string' ? asset : asset?.uri;\n    if (uri.startsWith('ipfs://')) {\n      const mediaAndSize = this.size === Size.raw ? '' : `media/${this.size}/`;\n      url = `https://static.tcinfra.net/${mediaAndSize}ipfs/${uri.slice(7)}`;\n    } else if (uri.startsWith('https://')) {\n      url = `https://static.tcinfra.net/media/${this.size}/web/${uri.slice(8)}`;\n    } else if (!CONSTANTS.MAINNET && (uri.startsWith('http://localhost') || uri.startsWith('http://127.0.0.1'))) {\n      url = uri.slice(16);\n    } else if (typeof asset === 'string') {\n      url = uri;\n    } else {\n      console.warn('failed to parse asset', asset);\n      url = uri;\n    }\n    return url ?? '';\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-ui-toggle',\n  templateUrl: './toggle.component.html'\n})\nexport class ToggleComponent implements OnInit {\n  @Input() state: boolean;\n  @Input() text = 'Advanced:';\n  @Input() default: boolean = false;\n  @Output() stateChange = new EventEmitter<boolean>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.state = this.default;\n  }\n\n  toggle(): void {\n    this.state = !this.state;\n    this.stateChange.emit(this.state);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ToggleComponent } from '../toggle.component';\n\n@Component({\n  selector: 'app-ui-toggle-advanced',\n  templateUrl: './advanced.component.html',\n  styleUrls: ['../../../../../../scss/components/ui/button/toggle.component.scss']\n})\nexport class AdvancedToggleComponent extends ToggleComponent implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"flex-row advanced\">\n  <div class=\"flex-row switch-container\">\n    <span class=\"value\">{{ text }}&nbsp;&nbsp;&nbsp;&nbsp;</span>\n    <label class=\"flex-row switch\">\n      <span class=\"key\" [class]=\"state ? 'active' : ''\">{{ state ? ' ON' : 'OFF' }}</span>\n      <span class=\"slider\" [class]=\"state ? 'active' : ''\" (click)=\"toggle()\">\n        <span class=\"round\"></span>\n      </span>\n    </label>\n  </div>\n</div>","<div class=\"title-dropdown\" [class.expanded]=\"ddExpanded\">\n  <ng-container *ngFor=\"let value of ddSets\">\n    <p [class.active]=\"set === value?.name\" (click)=\"toggleSet(value?.name);ddExpanded = !ddExpanded\">{{ value?.name ||\n      '' }}</p>\n  </ng-container>\n</div>\n<div *ngIf=\"sets?.length\" class=\"flex-row mode\">\n  <div class=\"flex-column left\">\n    <span class=\"title\" (click)=\"ddExpanded = !ddExpanded\">{{ set }}<img [class.expanded]=\"ddExpanded\"\n        src=\"assets/img/chevron-down.svg\" /></span>\n    <span class=\"tooltip value\">{{ tooltipValue }}\n      <span class=\"unit\">{{ units }}</span>\n    </span>\n  </div>\n  <div class=\"right\">\n    <div class=\"attributes\">\n      <ng-container *ngFor=\"let key of Object.keys(attributes)\">\n        <span>{{ attributes[key] }}</span>\n      </ng-container>\n    </div>\n  </div>\n</div>\n<svg *ngIf=\"!sets?.length\" class=\"spinner\" viewBox=\"0 0 50 50\">\n  <circle class=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"5\"></circle>\n</svg>\n<span *ngIf=\"!sets?.length\" class=\"loading-text\">Loading Chart...</span>\n<div class=\"expand\" (click)=\"toggleChartExpand(); ddExpanded = false; toggleSet(set)\">{{ !chartExpanded ? 'Expand' : 'Collapse' }}\n</div>\n<ng-container *ngIf=\"design === 'default'\">\n  <div class=\"flex-column canvas-wrapper\">\n    <canvas #chart [class.loaded]=\"sets?.length\"></canvas>\n    <div *ngIf=\"sets?.length\" class=\"flex-row time\" [class.expanded]=\"chartExpanded\">\n      <span *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'day'\" (click)=\"toggleSeries('day')\">24H</span><span\n      *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'week'\" (click)=\"toggleSeries('week')\">1W</span>\n      <span [class.active]=\"series === 'month'\" (click)=\"toggleSeries('month')\">1M</span><span\n      *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'year'\" (click)=\"toggleSeries('year')\">1Y</span>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"design === 'mini'\">\n  <div class=\"canvas-wrapper\">\n    <canvas #chart [class.loaded]=\"sets?.length\"></canvas>\n    <div *ngIf=\"sets?.length\" class=\"flex-row time\" [class.expanded]=\"chartExpanded\">\n      <span *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'day'\"\n        (click)=\"toggleSeries('day')\">24H</span><span *ngIf=\"set !== 'Total Value Locked'\"\n        [class.active]=\"series === 'week'\" (click)=\"toggleSeries('week')\">1W</span>\n      <span [class.active]=\"series === 'month'\" (click)=\"toggleSeries('month')\">1M</span><span\n        *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'year'\" (click)=\"toggleSeries('year')\">1Y</span>\n    </div>\n  </div>\n</ng-container>","import { Component, ElementRef, EventEmitter, Input, Output, SimpleChange, SimpleChanges, ViewChild } from '@angular/core';\nimport { Chart, ChartOptions, ChartTypeRegistry, registerables } from 'chart.js';\nimport { ChartTitle } from '../../../services/chart/chart.service';\n\nChart.register(...registerables);\n\nlet width, height, gradient;\nfunction getGradientBackground(ctx, chartArea) {\n  const style = getComputedStyle(document.body);\n  const theme = style.getPropertyValue('--theme').replace(/[ \\\"]/g, '');\n  const chartWidth = chartArea.right - chartArea.left;\n  const chartHeight = chartArea.bottom - chartArea.top;\n  if (gradient === null || width !== chartWidth || height !== chartHeight) {\n    width = chartWidth;\n    height = chartHeight;\n    gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n    // gradient.addColorStop(1, '#5963ff88');\n    // gradient.addColorStop(0.5, '#5963ff33');\n    // gradient.addColorStop(0, '#5963ff19');\n    if (theme === 'dark') {\n      gradient.addColorStop(1, '#383d7d');\n      gradient.addColorStop(0.5, '#2e304f');\n      gradient.addColorStop(0, '#2a2c3f');\n    } else {\n      gradient.addColorStop(1, '#c2c5fc');\n      gradient.addColorStop(0.5, '#e0e1fb');\n      gradient.addColorStop(0, '#e8eafb');\n    }\n  }\n\n  return gradient;\n}\n\nexport enum ChartSeries {\n  'day' = 'day',\n  'week' = 'week',\n  'month' = 'month',\n  'year' = 'year'\n}\n@Component({\n  selector: 'app-ui-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['../../../../scss/components/ui/chart/chart.component.scss']\n})\nexport class ChartComponent {\n  Object = Object;\n  @Input() attributes: any = {};\n  @Input() type: keyof ChartTypeRegistry = 'line';\n  @Input() data = { datasets: [], labels: [] };\n  @Input() datas = {};\n  @Input() options: ChartOptions = {};\n  @Input() design: string;\n  @Input() ddSets = [];\n  @Input() sets = [];\n  @Input() set = '';\n  @Input() units = {};\n  @Input() layout = 'default';\n  tooltipValue: string = '';\n  @ViewChild('chart') chartRef: ElementRef;\n  @Output('drawn') drawn = new EventEmitter();\n\n  chart = null;\n  series: ChartSeries = ChartSeries.day;\n  ddExpanded = false;\n  chartExpanded = false;\n\n  constructor() {\n    Chart.register({\n      id: 'my-plugin',\n      afterTooltipDraw: (chart, args, options) => {\n        if (chart) {\n          let x = chart.tooltip.dataPoints[0].element.x;\n          let yAxis = chart.scales.y;\n          let ctx = chart.ctx;\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(x, yAxis.bottom + 60);\n          ctx.lineTo(x, yAxis.top + 60);\n          ctx.lineWidth = 2;\n          ctx.setLineDash([3, 1]);\n          ctx.strokeStyle = 'rgba(0, 0, 255, 0.3)';\n          ctx.stroke();\n          ctx.setLineDash([0, 0]);\n          ctx.textAlign = 'center';\n          if (x >= chart.chartArea.right + -30) {\n            ctx.textAlign = 'right';\n          } else if (x <= chart.chartArea.left + 30) {\n            ctx.textAlign = 'left';\n          }\n          ctx.font = '14px sans-serif';\n          ctx.fillStyle = getComputedStyle(document.documentElement).getPropertyValue('--base-font-color-secondary');\n          ctx.fillText(chart.tooltip.title[0], x, yAxis.top + 45);\n          ctx.restore();\n        }\n      }\n    });\n  }\n\n  toggleChartExpand() {\n    this.chartExpanded = !this.chartExpanded;\n    (this.chartRef.nativeElement as HTMLCanvasElement).parentElement.parentElement.classList.toggle('expanded');\n  }\n\n  refreshDDSets(): void {\n    this.ddSets = this.sets?.sort(function (a, b) {\n      const nameA = a.name.toLowerCase(),\n        nameB = b.name.toLowerCase();\n      if (nameA > nameB) return -1;\n      if (nameA < nameB) return 1;\n      return 0;\n    });\n  }\n\n  draw(): void {\n    if (this.set === ChartTitle.totalValueLocked) {\n      const data = this.datas[this.series]?.datasets?.find((ds) => ds.label === ChartTitle.totalValueLocked).data;\n      if (!data) {\n        return;\n      }\n      this.tooltipValue = parseFloat(parseFloat(data[data.length - 1].toString()).toFixed(2)).toLocaleString();\n    } else if (this.set === ChartTitle.XTZtzBTC) {\n      const data = this.datas[this.series]?.datasets?.find((ds) => ds.label === ChartTitle.XTZtzBTC).data;\n      if (!data) {\n        return;\n      }\n      this.tooltipValue = parseFloat(data[data.length - 1].toString()).toFixed(8);\n    } else if (this.set === ChartTitle.tzBTCXTZ) {\n      const data = this.datas[this.series]?.datasets?.find((ds) => ds.label === ChartTitle.tzBTCXTZ).data;\n      if (!data) {\n        return;\n      }\n      this.tooltipValue = parseFloat(parseFloat(data[data.length - 1].toString()).toFixed(6)).toLocaleString();\n    }\n\n    if (this.chartRef?.nativeElement && this.datas[this.series]?.datasets) {\n      const ctx = this.chartRef.nativeElement.getContext('2d');\n      this.chart?.destroy();\n      this.sets = this.data?.datasets.map((set) => ({ name: set.label }));\n      this.chart = new Chart(ctx, {\n        type: this.type,\n        data: this.data,\n        options: this.options,\n        plugins: []\n      });\n      this.drawn.emit(null);\n    }\n  }\n  toggleSeries(series): void {\n    this.series = series;\n    this.data = this.datas[series];\n    this.overrideDatasetConfig();\n    this.options = this.getChartOptions();\n    this.draw();\n  }\n  toggleSet(set): void {\n    this.reset();\n    this.overrideDatasetConfig();\n    for (let key of Object.keys(this.datas)) {\n      for (let i = 0; i < this.datas[key].datasets.length; ++i) {\n        if (this.datas[key].datasets[i].label === set) {\n          this.datas[key].datasets[i].hidden = false;\n          if (set === ChartTitle.XTZtzBTC) {\n            this.units = 'tzBTC';\n          } else if (set === ChartTitle.tzBTCXTZ) {\n            this.units = 'XTZ';\n          } else {\n            this.toggleSeries(ChartSeries['month']);\n            this.units = 'usd';\n          }\n        } else {\n          this.datas[key].datasets[i].hidden = true;\n        }\n      }\n    }\n    this.data = this.datas[this.series];\n    this.sets = this.data?.datasets.map((set) => ({ name: set.label }));\n    this.set = set ?? this.sets[0].name;\n    this.refreshDDSets();\n    this.options = this.getChartOptions();\n    this.draw();\n  }\n  reset(): void {\n    this.ddSets = [];\n    this.sets = [];\n    this.set = '';\n    this.data = null;\n  }\n  overrideDatasetConfig(): void {\n    for (let i = 0; i < this.datas[this.series]?.datasets.length; ++i) {\n      this.datas[this.series].datasets[i].pointHoverBorderWidth = this.design === 'mini' && !this.chartExpanded ? 0 : 6;\n      this.datas[this.series].datasets[i].pointHitRadius = this.design === 'mini' && !this.chartExpanded ? 0 : 6;\n      this.datas[this.series].datasets[i].pointHoverBackgroundColor = this.design === 'mini' && !this.chartExpanded ? '#00000000' : '#5963ff88';\n      this.datas[this.series].datasets[i].pointHoverBorderColor = this.design === 'mini' && !this.chartExpanded ? '#00000000' : '#5963ff88';\n      this.datas[this.series].datasets[i].pointBackgroundColor = this.design === 'mini' && !this.chartExpanded ? '#00000000' : '#5963ff88';\n      this.datas[this.series].datasets[i].backgroundColor = function (context) {\n        const chart = context.chart;\n        const { ctx, chartArea } = chart;\n\n        if (!chartArea) {\n          return null;\n        }\n        return getGradientBackground(ctx, chartArea);\n      };\n    }\n  }\n  getChartOptions(): any {\n    let yTickPadding = -102;\n    if (this.set === ChartTitle.tzBTCXTZ) {\n      yTickPadding = -71;\n    } else if (this.set === ChartTitle.totalValueLocked) {\n      yTickPadding = -95;\n    }\n    return {\n      layout: {\n        padding: 0\n      },\n      scales: {\n        y: {\n          beginAtZero: false,\n          position: 'right',\n          ticks: {\n            maxTicksLimit: 5,\n            display: this.design === 'mini' && this.chartExpanded === false ? false : true,\n            padding: yTickPadding,\n            align: 'start',\n            font: {\n              size: 14,\n              weight: 500,\n              family: 'Roboto'\n            },\n            textStrokeColor: '#333',\n            z: 1,\n            callback: (label, index, ticks) => {\n              if (index >= 1 && index < 4) {\n                return label < 1 ? label.toFixed(8) : Number(label.toFixed(8).replace(/(\\.0+|0+)$/, '')).toLocaleString();\n              } else {\n                return '';\n              }\n            }\n          },\n          grid: {\n            drawBorder: false,\n            lineWidth: 0\n          }\n        },\n        x: {\n          ticks: {\n            maxTicksLimit: 0,\n            display: false\n          },\n          grid: {\n            drawBorder: false,\n            lineWidth: 0\n          }\n        }\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      hover: {\n        mode: 'nearest',\n        axis: 'x',\n        intersect: false\n      },\n      tooltips: {\n        mode: 'index',\n        axis: 'x',\n        intersect: false\n      },\n      interaction: {\n        intersect: false,\n        mode: 'index',\n        axis: 'x'\n      },\n      elements: {\n        line: {\n          tension: 0.0\n        },\n        point: {\n          radius: 0\n        }\n      },\n      plugins: {\n        tooltip: {\n          enabled: this.design === 'mini' && !this.chartExpanded ? false : true,\n          mode: 'nearest',\n          intersect: false,\n          backgroundColor: 'rgba(0, 0, 0, 0.0)',\n          titleColor: 'rgba(0, 0, 0, 0.0)',\n          bodyColor: 'rgba(0, 0, 0, 0.0)',\n          footerColor: 'rgba(0, 0, 0, 0.0)',\n          displayColors: false,\n          callbacks: {\n            label: (item, a, b) => {\n              this.tooltipValue =\n                item.dataset.data[item.dataIndex] < 1\n                  ? item.dataset.data[item.dataIndex].toFixed(8).toLocaleString()\n                  : parseFloat(item.dataset.data[item.dataIndex].toFixed(2).replace(/(\\.0+|0+)$/, '')).toLocaleString() ?? '';\n              return parseFloat(item.dataset.data[item.dataIndex].toFixed(8)).toLocaleString();\n            }\n          }\n        },\n        legend: { display: false }\n      }\n    };\n  }\n}\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { ListComponent } from '../generic/list.component';\n\n@Component({\n  selector: 'app-ui-dropdown',\n  templateUrl: './dropdown.component.html'\n})\nexport class DropdownComponent extends ListComponent implements OnInit {\n  @Output() dropdownResponse = new EventEmitter();\n  @Input() options: any[];\n  selection: any;\n  ecmpId = this.constructor['ɵcmp'].id;\n  isOpen = false;\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  @HostListener('document:click', ['$event'])\n  @HostListener('document:touchend', ['$event'])\n  closeDropdown(e): void {\n    if (!e.target.closest('#' + this.ecmpId) && this.isOpen) {\n      this.isOpen = false;\n    }\n  }\n\n  toggleDropdown(): void {\n    this.isOpen = !this.isOpen;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html'\n})\nexport class ListComponent implements OnInit {\n  @Input() current;\n  @Input() list: any[];\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"flex-column\" [class]=\"getType().replace('undelegated', 'delegated')\"\n  [class.unconfirmed]=\"activity.status === OpStatus.UNCONFIRMED\" [class.half_confirmed]=\"activity.status === OpStatus.HALF_CONFIRMED\"\n  [class.confirmed]=\"activity.status === OpStatus.CONFIRMED\" [class.new]=\"fresh && activity.status === OpStatus.CONFIRMED\"\n  [class.failed]=\"activity.status === OpStatus.FAILED\">\n  <div class=\"flex-row top\">\n    <div class=\"flex-row title\">\n      <ng-container *ngIf=\"!activity.entrypoint; else callEntrypoint\">\n        <ng-container [ngSwitch]=\"getType()?.replace('undelegated', 'delegated')\">\n          <img *ngSwitchCase=\"'sent'\" [src]=\"activity.status === OpStatus.FAILED ? '../../../../assets/img/up-arrow-red.svg' : '../../../../assets/img/up-arrow-black.svg'\"\n            style=\"transform: rotate(45deg)\" />\n          <img *ngSwitchCase=\"'received'\" [src]=\"activity.status === OpStatus.FAILED ? '../../../../assets/img/up-arrow-red.svg' : '../../../../assets/img/up-arrow.svg'\" style=\"transform: rotate(135deg)\" />\n          <div *ngSwitchDefault class=\"blank\"></div>\n        </ng-container>{{ printAmount() }}\n      </ng-container>\n      <ng-template #callEntrypoint>\n        <ng-container *ngIf=\"zeroSent(activity); else notZero\">\n          <div class=\"blank\"></div>\n        </ng-container>\n        <ng-template #notZero>\n          <img src=\"../../../../assets/img/up-arrow-black.svg\" style=\"transform: rotate(45deg)\" />\n        </ng-template>\n        {{ sentKind(activity) }}\n      </ng-template>\n    </div>\n    <span class=\"failed\" *ngIf=\"activity.status === OpStatus.FAILED\">Error</span>\n    <div class=\"updating-balances\" *ngIf=\"activity.status === OpStatus.HALF_CONFIRMED\">\n      <img class=\"spinner\" src=\"../../../../../assets/img/feeLoader.gif\">\n      <span>Updating balances</span>\n    </div>\n  </div>\n  <div class=\"flex-row bottom\">\n    <div class=\"flex-row address\"><img\n        *ngIf=\"!!getCounterparty(activity)?.lookupType && getCounterparty(activity)?.lookupType !== 5\"\n        [src]=\"getEventIcon()\" class=\"event-icon\" />\n      <div class=\"flex-row value\">{{ getAddressPrefix(getType()) }}&nbsp;{{getCounterparty(activity)?.name ||\n        getCounterparty(activity)?.address || ''}}</div>\n      <img class=\"copy\" src=\"../../../../assets/img/copy-icon.svg\"\n          (click)=\"copy(getCounterparty(activity)?.address)\" />\n    </div>\n    <span class=\"flex-row time\">\n      <img [src]=\"getEventStatusIcon()\" />\n      <a class=\"status\" *ngIf=\"activity.status !== OpStatus.UNCONFIRMED\" href=\"{{ explorerURL(activity.hash) }}\" target=\"_blank\">\n        <ng-container *ngIf=\"activity.status !== OpStatus.HALF_CONFIRMED; else halfConfirmed\">\n          {{ activity.timestamp | timeAgo:trigger }}\n        </ng-container>\n        <ng-template #halfConfirmed>\n          Confirmed\n        </ng-template>\n      </a>\n      <div class=\"status\" *ngIf=\"activity.status === OpStatus.UNCONFIRMED\">Unconfirmed</div>\n    </span>\n  </div>\n</div>","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { Account, Activity, OpStatus } from '../../../../../../services/wallet/wallet';\nimport { TimeAgoPipe } from '../../../../../../pipes/time-ago.pipe';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../../services/message/message.service';\nimport { ActivityService } from '../../../../../../services/activity/activity.service';\nimport { TokenService } from '../../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { LookupType } from '../../../../../../services/lookup/lookup.service';\nimport copy from 'copy-to-clipboard';\nimport { SubjectService } from '../../../../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/activity/event.component.scss']\n})\nexport class EventComponent implements OnInit, OnChanges, OnDestroy {\n  public OpStatus = OpStatus;\n  public LookupType = LookupType;\n  public fresh = undefined;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public timeAgoPipe: TimeAgoPipe,\n    private activityService: ActivityService,\n    public tokenService: TokenService,\n    private subjectService: SubjectService\n  ) {}\n  trigger = true;\n  @Input() activity: Activity;\n  @Input() account: Account;\n  ngOnInit(): void {\n    setInterval(() => {\n      this.trigger = !this.trigger;\n    }, 1000);\n    this.subscriptions.add(\n      this.subjectService.confirmedOp.subscribe((opHash) => {\n        if (opHash === this.activity.hash && this.fresh === undefined) {\n          this.fresh = true;\n          setTimeout(() => {\n            this.fresh = false;\n          }, 20000);\n        }\n      })\n    );\n  }\n  ngOnChanges(changes: SimpleChanges): void {}\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  getType(): string {\n    if (this.activity.type !== 'transaction') {\n      if (this.activity.type === 'delegation') {\n        if (this.activity.destination.address) {\n          return 'delegated';\n        } else {\n          return 'undelegated';\n        }\n      } else {\n        return this.activity.type;\n      }\n    } else {\n      let operationType = '';\n      if (this.activity.source.address === this.account.address) {\n        operationType = 'sent';\n      } else {\n        operationType = 'received';\n      }\n      return operationType;\n    }\n  }\n\n  explorerURL(hash: string): string {\n    const baseURL = CONSTANTS.BLOCK_EXPLORER_URL;\n    return `${baseURL}/${hash}`;\n  }\n  getCounterparty(transaction): any {\n    const c = this.activityService.getCounterparty(transaction, this.account);\n    if (!c.name) {\n      c.name = c.address ? `${c.address.slice(0, 7)}...${c.address.slice(-4)}` : '—';\n    }\n    c.name.trim();\n    return c;\n  }\n  getEventIcon(): string {\n    return `../../../../assets/img/${LookupType[this.getCounterparty(this.activity)?.lookupType].toLowerCase().replace('tezosdomains', 'domain')}-logo.svg`;\n  }\n  getEventStatusIcon(): string {\n    return this.fresh && this.activity.status === OpStatus.CONFIRMED\n      ? '../../../../assets/img/event-new.png'\n      : this.activity.status === OpStatus.CONFIRMED\n      ? '../../../../assets/img/event-confirmed.png'\n      : this.activity.status === OpStatus.UNCONFIRMED\n      ? '../../../../assets/img/event-unconfirmed.png'\n      : this.activity.status === OpStatus.FAILED\n      ? '../../../../assets/img/event-error.png'\n      : this.activity.status === OpStatus.HALF_CONFIRMED\n      ? '../../../../../assets/img/event-half-confirmed.png'\n      : '../../../../assets/img/event-unconfirmed.png';\n  }\n  printAmount(): string {\n    switch (this.getType()) {\n      case 'sent':\n        return this.tokenService.formatAmount(this.activity.tokenId, this.activity.amount.toString());\n      case 'received':\n        return this.tokenService.formatAmount(this.activity.tokenId, this.activity.amount.toString());\n      case 'delegated':\n        return 'Staked';\n      case 'undelegated':\n        return 'Unstaked';\n      case 'origination':\n        return this.tokenService.formatAmount(this.activity.tokenId, this.activity.amount.toString());\n      default:\n        return '';\n    }\n  }\n  sentKind(activity): string {\n    if (activity.entrypoint) {\n      if (activity.amount !== '0') {\n        return `${this.printAmount()}, Call ${activity.entrypoint}`;\n      }\n      return `Call ${activity.entrypoint}`;\n    }\n    return '0';\n  }\n  zeroSent(activity): boolean {\n    return this.sentKind(activity).length > 4 && activity.amount === '0';\n  }\n  receivedKind(activity): string {\n    return activity.tokenId && activity.source.address && activity.tokenId.split(':')[0] === activity.source.address ? 'Minted' : 'Received';\n  }\n  getAddressPrefix(type: string) {\n    switch (type.toLowerCase()) {\n      case 'sent':\n        return 'Sent to:';\n      case 'received':\n        return this.receivedKind(this.activity) + ' from:';\n      case 'delegated':\n        return 'To:';\n      case 'undelegated':\n        return 'To:';\n      case 'origination':\n        return 'Originated contract:';\n    }\n  }\n  copy(address: string): void {\n    copy(address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(address + ' ' + copyToClipboard, 5);\n  }\n}\n","<div class=\"selectable main-container\">\n  <div class=\"top-container-activity\">\n    <h1>Recent Activity</h1>\n    <div class=\"right\">\n      <a class=\"view-all\" href=\"{{ explorerURL(account.address) }}\" target=\"_blank\">View in Explorer</a>\n      <!-- <img class=\"button icon\" src=\"../../../../assets/img/info.svg\" /> -->\n    </div>\n  </div>\n  <div class=\"selectable\" id=\"operations-container\" *ngIf=\"this.translate.store.translations.en\">\n    <ng-container *ngIf=\"account.activities; else loading\">\n      <ng-container *ngIf=\"!account.activities.length\">\n        <div class=\"line\"><span>No activity yet</span></div>\n      </ng-container>\n      <ng-container *ngFor=\"let activity of account.activities | slice:0:10; trackBy: trackEvent\">\n        <app-event [activity]=\"activity\" [account]=\"account\"></app-event>\n      </ng-container>\n    </ng-container>\n    <ng-template #loading>Loading activity...</ng-template>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { TimeAgoPipe } from '../../../../../pipes/time-ago.pipe';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { CONSTANTS } from '../../../../../../environments/environment';\nimport { TokenService } from '../../../../../services/token/token.service';\n\n@Component({\n  selector: 'app-activity',\n  templateUrl: './activity.component.html',\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/cards/activity/activity.component.scss']\n})\nexport class ActivityComponent implements OnInit {\n  public currTimeStamp: number;\n  constructor(public translate: TranslateService, public messageService: MessageService, public timeAgoPipe: TimeAgoPipe, public tokenService: TokenService) {}\n  trigger = true;\n  @Input() activity: any;\n  @Input() account: Account;\n  ngOnInit(): void {}\n  explorerURL(hash: string): string {\n    const baseURL = CONSTANTS.BLOCK_EXPLORER_URL;\n    return `${baseURL}/${hash}`;\n  }\n\n  trackEvent(index: number, activity: any): string {\n    return activity.block + activity.hash;\n  }\n}\n","<div class=\"flex-row token\" (click)=\"viewToken(token)\">\n  <div class=\"dot\"></div>\n  <div class=\"wrapper\">\n    <app-asset class=\"asset\" (inView)=\"balanceChangeTimer()\" [assets]=\"token\" [size]=\"'small'\" [muted]=\"true\" [autoplay]=\"true\" [playsinline]=\"true\" [loop]=\"true\" [priorityList]=\"['thumbnailAsset', 'displayAsset']\"></app-asset>\n    <div *ngIf=\"Number.parseInt(token?.balance) > 1\" class=\"balance\">x{{\n      formatBalance(token) }}</div>\n  </div>\n  <div class=\"flex-column right\">\n    <div class=\"title\">\n      {{token?.name}}\n    </div>\n    <div *ngIf=\"token?.series\" class=\"series\">\n      {{ token?.series }}\n    </div>\n  </div>\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../../services/message/message.service';\nimport { TokenService } from '../../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { ModalComponent } from '../../../../../modals/modal.component';\nimport { TokenBalancesService } from '../../../../../../services/token-balances/token-balances.service';\nimport { DisplayLinkOption } from '../../../../../../interfaces';\nimport Big from 'big.js';\n\n@Component({\n  selector: 'app-nfts-token',\n  templateUrl: './token.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/nfts/token.component.scss']\n})\nexport class NftsTokenComponent implements OnInit, OnChanges {\n  DisplayLinkOption = DisplayLinkOption;\n  Number = Number;\n  @Input() token;\n  isNew = false;\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public tokenService: TokenService,\n    public tokenBalancesService: TokenBalancesService\n  ) {}\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes.token.previousValue?.balance > -1 &&\n      changes.token.currentValue?.balance > -1 &&\n      changes.token.currentValue?.balance != changes.token.previousValue?.balance\n    ) {\n      this.isNew = true;\n    }\n  }\n  viewToken(token): void {\n    ModalComponent.currentModel.next({ name: 'token-detail', data: token });\n  }\n  balanceChangeTimer(): void {\n    setTimeout(() => {\n      this.isNew = false;\n    }, 5000);\n  }\n  formatBalance(token): string {\n    return Big(token.balance)\n      .div(10 ** parseInt(token.decimals))\n      .toFixed();\n  }\n}\n","<form autocomplete=\"off\">\n  <div class=\"flex-row\" [id]=\"ecmpId\">\n    <div class=\"flex-row search-bar\" [class.active]=\"isActive\" [class.has-value]=\"hasValue\">\n      <img class=\"search-button\" src=\"assets/img/search.svg\" (click)=\"searchButtonClicked()\" />\n      <input #input name=\"none\" type=\"text\" [(ngModel)]=\"searchText\" [placeholder]=\"placeholderText\" (focus)=\"onFocus()\"\n        (keydown)=\"onKeydown($event)\" />\n      <div *ngIf=\"isActive && hasValue\" class=\"flex-row match-count\"><span>{{ matchCount + ' matches' }}</span></div>\n    </div>\n    <div *ngIf=\"!hasValue\" class=\"flex-row item-count\"><span>{{ '(' + itemCount + ')' }}</span></div>\n  </div>\n</form>","import { Component, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { DropdownComponent } from '../dropdown/dropdown.component';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search.component.html',\n  styleUrls: ['../../../../scss/components/ui/search-bar/search.component.scss']\n})\nexport class SearchBarComponent extends DropdownComponent implements OnInit, OnDestroy {\n  @ViewChild('input') input: ElementRef;\n  @Output() onInput = new EventEmitter();\n  @Input() itemCount = 0;\n  @Input() matchCount = 0;\n  inputUpdated = new Subject<any>();\n  filter = '.*';\n  isActive = false;\n  hasValue = false;\n  @Input() placeholder = '';\n  placeholderText = '';\n  searchText = '';\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(private subjectService: SubjectService) {\n    super();\n    this.subscriptions.add(\n      this.inputUpdated.pipe(debounceTime(150)).subscribe((e) => {\n        this.filter = !!e?.target.value ? `${e.target.value.replace(/(\\W)/g, '\\\\$1')}` : '';\n        if (!!e) {\n          this.onInput.emit(this.filter);\n        }\n        this.hasValue = !!this.filter;\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((_) => {\n        this.reset();\n      })\n    );\n  }\n  ngOnInit(): void {\n    this.placeholderText = this.placeholder;\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  onKeydown(e): void {\n    this.inputUpdated.next(e);\n  }\n  onFocus(): void {\n    this.isActive = true;\n    this.onInput.emit(this.filter);\n  }\n  searchButtonClicked(): void {\n    if (!this.isActive) {\n      this.input.nativeElement.focus();\n    }\n  }\n  @HostListener('document:click', ['$event'])\n  @HostListener('document:touchend', ['$event'])\n  onBlur(e): void {\n    if (!e.target.closest('#' + this.ecmpId) && this.isActive && !this.hasValue) {\n      this.isActive = false;\n      this.onInput.emit('');\n    }\n  }\n  reset(): void {\n    this.isActive = false;\n    this.filter = '';\n    this.searchText = '';\n    this.hasValue = false;\n    this.onInput.emit(this.filter);\n  }\n}\n","<app-search-bar *ngIf=\"tokens?.length > 12 && searchable\" [placeholder]=\"'Search'\"\n  [matchCount]=\"tokensToDisplay?.filtered.length || 0\" [itemCount]=\"tokensToDisplay?.raw.length || 0\"\n  (onInput)=\"updateFilter($event)\"></app-search-bar>\n<div class=\"scroll-wrapper\">\n  <div #body [style.display]=\"!isDisplaying ? 'none' : ''\" class=\"body\">\n    <ng-container *ngFor=\"let token of tokensToDisplay.loaded; trackBy:trackToken\">\n      <app-nfts-token class=\"token\" [token]=\"token\"></app-nfts-token>\n    </ng-container>\n    <ng-container *ngIf=\"filter !== '.*' && !tokensToDisplay.filtered.length\">\n      No Matches Found\n    </ng-container>\n  </div>\n</div>","import { AfterViewInit, Component, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../../services/message/message.service';\nimport { TokenService } from '../../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { TokenBalancesService } from '../../../../../../services/token-balances/token-balances.service';\nimport { DisplayLinkOption } from '../../../../../../interfaces';\nimport { Subject } from 'rxjs';\nimport { Token } from '../../../../../../services/wallet/wallet';\n\n@Component({\n  selector: 'app-nfts-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/nfts/body.component.scss']\n})\nexport class NftsBodyComponent implements OnInit, OnChanges, AfterViewInit {\n  DisplayLinkOption = DisplayLinkOption;\n  @ViewChild('body') body;\n  @Input() isDisplaying;\n  @Input() tokens;\n  @Input() searchable = false;\n  tokensToDisplay = { loaded: [], filtered: [], raw: [] };\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n  readonly chunkSize = 24;\n  sliceEnd = this.chunkSize;\n  inputUpdated = new Subject<any>();\n  filter = '.*';\n\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public tokenService: TokenService,\n    public tokenBalancesService: TokenBalancesService\n  ) {}\n  ngOnInit(): void {\n    this.refresh();\n  }\n  ngOnChanges(): void {\n    if (this.isDisplaying) {\n      this.refresh();\n    }\n  }\n  refresh(): void {\n    this.tokensToDisplay.raw = this.tokens;\n    this.tokensToDisplay.filtered = this.search(this.tokens);\n    this.tokensToDisplay.loaded = this.tokensToDisplay.filtered.slice(0, this.sliceEnd);\n  }\n  ngAfterViewInit(): void {\n    const cb = (e) => {\n      if (\n        this.body?.nativeElement?.scrollTop >= this.body?.nativeElement?.scrollHeight - this.body?.nativeElement?.clientHeight - 15 &&\n        (this.sliceEnd < this.tokensToDisplay.raw?.length ?? 0)\n      ) {\n        this.sliceEnd += this.chunkSize;\n        this.refresh();\n      }\n    };\n    this.body?.nativeElement.addEventListener('scroll', cb);\n    this.body?.nativeElement.addEventListener('touchmove', cb);\n  }\n  search(tokens): Token[] {\n    if (this.filter.length > 0 && this.filter !== '.*') {\n      return tokens.filter(\n        (t: any) =>\n          t.name.match(new RegExp(`.*${this.filter}.*`, 'i')) ||\n          (!isNaN(Number(this.filter)) && t.id.toString().match(new RegExp(`.*${parseInt(this.filter)}.*`, 'g')))\n      );\n    }\n    return tokens;\n  }\n  updateFilter(filter: string): void {\n    const prevFilter = this.filter;\n    this.filter = filter || '.*';\n    if (prevFilter !== this.filter) {\n      this.sliceEnd = this.chunkSize;\n      this.refresh();\n      this.body.nativeElement.scrollTo(0, 0);\n    }\n  }\n  trackToken(index: number, token: any): string | number {\n    return token?.contractAddress ? token?.contractAddress + ':' + token?.id : index;\n  }\n}\n","<div class=\"main-container\" *ngIf=\"displayTokenCard()\">\n  <div class=\"flex-row top-container-nfts\">\n    <div class=\"flex-row toggle\">\n      <h1 class=\"flex-row\" [class.selected]=\"!isDiscover\" (click)=\"isDiscover = false\">NFT<span> / Collectibles</span>\n      </h1>\n      <h1 class=\"flex-row\" [class.selected]=\"isDiscover\" (click)=\"isDiscover = true\">{{ 'Discover' }}</h1>\n    </div>\n    <div class=\"flex-row right\">\n      <ng-container *ngIf=\"this.nfts && Object.keys(this.nfts).length > 0 && !isDiscover\">\n        <span class=\"flex-row button icon-grey\" [class.selected]=\"filter === 'ALL'\" (click)=\"filter = 'ALL';\">ALL</span>\n        <span class=\"flex-row button icon-grey\" [class.selected]=\"filter !== 'ALL'\" (click)=\"filter = '';\">APP</span>\n      </ng-container>\n      <!-- <img class=\"button icon\" src=\"../../../../assets/img/filter.svg\" />\n      <img class=\"button icon\" src=\"../../../../assets/img/info.svg\" /> -->\n    </div>\n  </div>\n  <div class=\"flex-row-wrap nfts\" [class.d]=\"isDiscover\">\n    <!-- loop through contracts -->\n    <ng-container *ngIf=\"!nftsArray?.length && !isDiscover\"><span>There are no NFTs in this account</span>\n    </ng-container>\n    <ng-container *ngFor=\"let contract of nftsArray; trackBy:trackContract\">\n      <div class=\"flex-column collection\" [class.expanded]=\"filter === sanitizeKey(contract?.key)\"\n        [id]=\"sanitizeKey(contract?.key)\" [style.display]=\"!isDiscover && filter !== 'ALL' ? '' : 'none'\">\n        <div class=\"flex-row head\" (click)=\"toggleDropdown(sanitizeKey(contract?.key))\">\n          <div class=\"flex-row left\">\n            <app-asset class=\"nfts-head-thumbnail\" [assets]=\"{ thumbnailAsset:contract?.thumbnailUrl}\"></app-asset>\n            <div class=\"title\">\n              {{ contract?.name }}\n            </div>\n          </div>\n          <div class=\"flex-row right\">\n            <div class=\"count\">({{ contract?.tokens?.length }})</div>\n            <div class=\"flex-row button toggle\"><img src=\"../../../../assets/img/caret-left.svg\" /></div>\n          </div>\n        </div>\n        <div class=\"flex-column scroll\">\n          <app-nfts-body [isDisplaying]=\"filter === sanitizeKey(contract?.key)\" [tokens]=\"contract?.tokens\">\n          </app-nfts-body>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"flex-column collection scroll all\" [style.display]=\"!isDiscover && filter === 'ALL' ? '' : 'none'\">\n      <app-nfts-body class=\"all\" [isDisplaying]=\"!isDiscover && filter === 'ALL'\" [tokens]=\"tokens\" [searchable]=\"true\">\n      </app-nfts-body>\n    </div>\n    <ng-container *ngIf=\"isDiscover\">\n      <ng-container *ngFor=\"let contractAlias of contractAliases\">\n        <ng-container *ngIf=\"shouldDisplayLink(contractAlias?.shouldDisplayLink)\">\n          <a class=\"flex-column discover\" rel=\"noreferrer\" [href]=\"contractAlias?.link || '/'\" target=\"_blank\"\n            [style.display]=\"isDiscover ? '' : 'none'\">\n            <div class=\"flex-row top\">{{ getContractAlias(contractAlias?.category) || '' }}</div>\n            <div class=\"flex-column middle\" [class.zoom]=\"contractAlias?.zoomDiscoverImg\"\n              [style.backgroundColor]=\"contractAlias?.backgroundColor\">\n              <app-asset class=\"discover\" [class.zoom]=\"contractAlias?.zoomDiscoverImg\" [size]=\"'raw'\"\n                [assets]=\"{displayAsset: contractAlias.discoverUrl, thumbnailAsset: contractAlias.thumbnailUrl}\">\n              </app-asset>\n            </div>\n            <div class=\"flex-row bottom\">\n              <div class=\"flex-column left\">\n                <div class=\"title\">{{ contractAlias?.name || key }}</div>\n                <div class=\"description\">{{ contractAlias?.description }}</div>\n              </div>\n              <div class=\"flex-column right\">\n                <a class=\"link-to-app\">\n                  <button class=\"flex-row button\">GO <img src=\"assets/img/discover-right-angle.svg\" /></button>\n                </a>\n              </div>\n            </div>\n          </a>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { TorusWallet } from '../../../../../services/wallet/wallet';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { TokenService } from '../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../environments/environment';\nimport { TokenBalancesService } from '../../../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../../../services/subject/subject.service';\nimport { DisplayLinkOption } from '../../../../../interfaces';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-nfts',\n  templateUrl: './nfts.component.html',\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/cards/nfts/nfts.component.scss']\n})\nexport class NftsComponent implements OnInit, OnDestroy {\n  DisplayLinkOption = DisplayLinkOption;\n  Object = Object;\n  nfts = undefined;\n  nftsArray = [];\n  tokens = [];\n  isDiscover: boolean = false;\n  isInitLoad: boolean = true;\n  filter: string = 'APP';\n  contractAliases = Object.keys(CONSTANTS.CONTRACT_ALIASES).map((key: any) => ({ key, ...CONSTANTS.CONTRACT_ALIASES[key] }));\n  activeAddress: string = '';\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public tokenService: TokenService,\n    public tokenBalancesService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private walletService: WalletService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        const activeAddress = this.subjectService.activeAccount.getValue()?.address;\n        if (activeAddress !== this.activeAddress) {\n          this.activeAddress = activeAddress;\n          this.reset();\n        }\n        if (this.isInitLoad) {\n          if (!p?.nfts || !Object.keys(p.nfts)?.length) {\n            this.isDiscover = true;\n          } else {\n            this.isInitLoad = false;\n            this.isDiscover = false;\n          }\n        }\n        this.nfts = p?.nfts;\n        this.nftsArray = p?.nfts ? Object.keys(p.nfts).map((key: any) => ({ key, ...p.nfts[key] })) : [];\n        this.tokens = p?.nfts\n          ? Object.keys(p.nfts)\n              .map((key: any) => p.nfts[key]?.tokens)\n              .flat()\n          : [];\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.logout.subscribe((o) => {\n        if (o) {\n          this.reset();\n          this.activeAddress = '';\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        const activeAddress = activeAccount?.address;\n        if (activeAddress !== this.activeAddress) {\n          this.activeAddress = activeAddress;\n          this.reset();\n        }\n      })\n    );\n  }\n  @Input() activity: any;\n  @Input() account;\n  ngOnInit(): void {}\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  displayTokenCard(): boolean {\n    return this.nfts !== undefined;\n  }\n  toggleDropdown(sel): void {\n    if (this.filter === sel) {\n      this.filter = '';\n    } else {\n      this.filter = sel;\n      const c = document.querySelector('#' + sel) as HTMLElement;\n      if (window.innerWidth < 1024) {\n        setTimeout(() => {\n          document.body.scroll(0, c.offsetTop - 25);\n        }, 25);\n      }\n    }\n  }\n  shouldDisplayLink(option: DisplayLinkOption): boolean {\n    if (option === 0 || (option === 1 && this.walletService.wallet instanceof TorusWallet)) {\n      return true;\n    }\n    return false;\n  }\n  sanitizeKey(key: string): string {\n    return 'ku' + key?.replace(/ /g, '');\n  }\n\n  trackContract(index: number, contract: any): string | number {\n    return contract?.key ? contract.key : index;\n  }\n\n  getContractAlias(category): string {\n    return category?.join(' · ');\n  }\n  reset(): void {\n    this.nfts = undefined;\n    this.isDiscover = false;\n    this.tokens = [];\n    this.nftsArray = [];\n    this.isInitLoad = true;\n    this.filter = 'APP';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-basic-button',\n  templateUrl: './basic.component.html'\n})\nexport class BasicButtonComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<button *ngIf=\"symbol && !override; else detailButton\" class=\"flex-row button button-primary with-image\"\n  [class]=\"symbol === 'tez' ? 'tez' : ''\" (click)=\"prepareTransaction()\">\n  <svg *ngIf=\"symbol === 'tez'\" width=\"18\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\">\n    <path id=\"svg_1\"\n      d=\"m16.4439,9.50064c-0.764,0.764 -2.003,0.764 -2.767,0l-2.66,-2.659l0,9.231c0,1.105 -0.895,2 -2,2c-1.104,0 -2,-0.895 -2,-2l0,-9.254l-2.679,2.68c-0.767,0.767 -2.01,0.767 -2.777,0c-0.767,-0.767 -0.767,-2.01 0,-2.776l5.936,-5.936c0.037,-0.044 0.052,-0.099 0.093,-0.14c0.203,-0.203 0.558,-0.344 0.693,-0.439c0.716,-0.307 1.575,-0.176 2.16,0.409c0.101,0.101 0.152,0.227 0.227,0.342l5.774,5.774c0.765,0.764 0.765,2.004 0,2.768z\"\n      fill=\"rgb(255, 255, 255)\" fill-rule=\"evenodd\" />\n  </svg>\n  <img *ngIf=\"symbol !== 'tez'\" [src]=\"'../../../../assets/img/up-arrow.svg'\" />\n  <div class=\"tooltip\">\n    <div class=\"description\">Send {{ symbol }}</div>\n  </div>\n</button>\n<ng-template #detailButton>\n  <button class=\"button button-primary detail\" (click)=\"prepareTransaction()\">SEND</button>\n</ng-template>","import { Component, OnInit, Input } from '@angular/core';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { TokenService } from '../../../../../services/token/token.service';\nimport { SubjectService } from '../../../../../services/subject/subject.service';\nimport { BasicButtonComponent } from '../basic.component';\n\n@Component({\n  selector: 'app-send-button',\n  templateUrl: './send-button.component.html',\n  styleUrls: ['../../../../../../scss/components/ui/button/send.component.scss']\n})\nexport class SendButtonComponent extends BasicButtonComponent implements OnInit {\n  @Input() activeAccount: Account;\n  @Input() tokenTransfer: string;\n  @Input() symbol: string;\n  @Input() override = false;\n  asset = null;\n  constructor(public tokenService: TokenService, private subjectService: SubjectService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.asset = this.tokenService.getAsset(this.tokenTransfer);\n  }\n  prepareTransaction(): void {\n    this.subjectService.prepareTokenTransfer.next({\n      account: this.activeAccount,\n      tokenTransfer: this.tokenTransfer,\n      symbol: this.symbol\n    });\n  }\n}\n","<div class=\"flex-row balance\">\n  <div class=\"flex-row left\">\n    <app-asset class=\"asset\" [priorityList]=\"['thumbnailAsset', 'displayAsset', 'fallback']\" [assets]=\"token\" [class.sd]=\"token.name === 'tezos'\"\n      (click)=\"viewToken()\">\n    </app-asset>\n    <div class=\"flex-row title\" (click)=\"viewToken()\">{{token.name === 'tezos' ? 'Tezos' : token.symbol}}</div>\n    <div class=\"flex-column prices\">\n      <div class=\"price\">{{ token.name === 'tezos' ? (getBalance() | number: '1.0-' + (token?.decimals || 6) | removeComma) || '—' :\n        getBalance() }}</div>\n      <div class=\"price-usd\">{{ getBalanceFiat() ? '$' + (getBalanceFiat() | number:'1.2-2' | removeComma) : '—' }}\n      </div>\n    </div>\n  </div>\n  <div class=\"flex-row right\">\n    <ng-container *ngIf=\"token?.name === 'tezos'\">\n      <button *ngIf=\"this.account?.balanceXTZ\" class=\"flex-row button button-primary with-image buy\" (click)=\"buy()\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 5.00024V19.0002\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M5 12H19\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n        <div class=\"tooltip\">\n          <div class=\"description\">Get tez</div>\n        </div>\n      </button>\n      <button *ngIf=\"this.account?.balanceXTZ === 0\" class=\"flex-row button button-primary with-image buy tez\" (click)=\"buy()\">\n        <span style=\"text-transform: none;\">GET</span>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 5.00024V19.0002\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M5 12H19\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n        <div class=\"tooltip\" style=\"right: 0%;\">\n          <div class=\"description\">Get tez</div>\n        </div>\n      </button>\n    </ng-container>\n    <app-send-button *ngIf=\"token && this.account?.balanceXTZ !== 0\" [activeAccount]=\"account\"\n      [tokenTransfer]=\"token?.name === 'tezos' ? null : token?.contractAddress + ':' + token?.id\"\n      [symbol]=\"token?.name === 'tezos' ? 'tez' : token?.symbol\"></app-send-button>\n  </div>\n</div>","import { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { ModalComponent } from '../../../../../modals/modal.component';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { Big } from 'big.js';\nimport { RemoveCommaPipe } from '../../../../../../pipes/remove-comma.pipe';\nimport { SubjectService } from '../../../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-balance-token',\n  templateUrl: './balance-token.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/balances/balance-token.component.scss']\n})\nexport class BalanceTokenComponent implements OnInit {\n  @Input() token = null;\n  @Input() account;\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n\n  constructor(public removeCommaPipe: RemoveCommaPipe, private subjectService: SubjectService) {}\n  ngOnInit(): void {}\n\n  getBalance(): number | string {\n    return this.token?.name === 'tezos'\n      ? this.account?.balanceXTZ !== null\n        ? Big(this.account?.balanceXTZ).div(1000000).toFixed()\n        : undefined\n      : this.token?.balance;\n  }\n\n  getBalanceFiat(): number | undefined {\n    return this.token.name === 'tezos' ? this.account?.balanceUSD || undefined : this.token?.price && this.token.price >= 0.005 ? this.token.price : undefined;\n  }\n  viewToken(): void {\n    if (this.token?.name !== 'tezos') {\n      ModalComponent.currentModel.next({\n        name: 'token-detail',\n        data: this.token\n      });\n    }\n  }\n\n  buy() {\n    ModalComponent.currentModel.next({\n      name: 'buy',\n      data: undefined\n    });\n  }\n}\n","<div class=\"main-container\">\n  <div class=\"flex-row top-container-balances\">\n    <h1>Balances</h1>\n    <div class=\"flex-row button right\">\n      <button *ngIf=\"account?.isImplicit()\" class=\"swap-liquidity\" (click)=\"openSwap()\">Liquidity Baking</button>\n    </div>\n  </div>\n  <div class=\"scroll-wrapper\">\n    <app-balance-token [account]=\"account\" [token]=\"{name: 'tezos', fallback: 'assets/img/tezos-xtz-logo.svg'}\" class=\"tez no-box\"></app-balance-token>\n    <div *ngIf=\"!!this.tokenBalancesService?.balances?.length\" class=\"flex-column balances\">\n      <ng-container *ngFor=\"let balance of balances; let i = index; trackBy: trackToken\">\n        <app-balance-token [account]=\"account\" [token]=\"balance\" [class.first]=\"i === 0\"></app-balance-token>\n      </ng-container>\n    </div>\n    <div class=\"flex-row total-balances no-box\">\n      <div class=\"flex-row left\">\n        <h3>TOTAL VALUE:</h3>\n        <h1>{{ !!totalBalances && isFiat ? '$' + (totalBalances | number: '1.2-2' | removeComma) : '' }}{{ !!totalBalances && !isFiat ? (totalBalances | number: '1.0-6' | removeComma) + ' tez' : '' }}{{ !totalBalances ? '—' : '' }}</h1>\n      </div>\n      <div class=\"flex-row\" (click)=\"toggleTotalBalances()\">\n        <span class=\"fiat\" [class.selected]=\"isFiat\">\n          {{ 'usd' }}\n        </span>\n        <span class=\"sep\">&nbsp;{{ '|' }}&nbsp;</span>\n        <span class=\"tez\" [class.selected]=\"!isFiat\">\n          {{ 'tez' }}\n        </span>\n      </div>\n    </div>\n  </div>\n</div>","import { AfterViewChecked, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { CONSTANTS } from '../../../../../../environments/environment';\nimport { TokenBalancesService } from '../../../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../../../services/subject/subject.service';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Big } from 'big.js';\nimport { RemoveCommaPipe } from '../../../../../pipes/remove-comma.pipe';\nimport { ModalComponent } from '../../../../../components/modals/modal.component';\nimport { MessageService } from '../../../../../services/message/message.service';\n\n@Component({\n  selector: 'app-balances',\n  templateUrl: './balances.component.html',\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/cards/balances/balances.component.scss']\n})\nexport class BalancesComponent implements OnInit, AfterViewChecked, OnDestroy {\n  Object = Object;\n  @Input() account: Account;\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n  totalBalances: string | number = 0;\n  balances: any[];\n  isFiat = false;\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    public tokenBalancesService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private walletService: WalletService,\n    public removeCommaPipe: RemoveCommaPipe,\n    private messageService: MessageService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.pipe(filter((account: Account) => account?.address !== this.account?.address)).subscribe((account) => {\n        this.account = account;\n        this.balances = this.tokenBalancesService?.balances;\n        this.calcTotalBalances();\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        this.balances = p?.balances ?? this.tokenBalancesService?.balances;\n        this.calcTotalBalances();\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(() => {\n        this.balances = this.tokenBalancesService?.balances;\n        this.calcTotalBalances();\n      })\n    );\n  }\n  e(wrap) {\n    if (!!wrap) {\n      if (wrap.scrollTop < 1 || this.tokenBalancesService?.balances?.length <= 5) {\n        document.querySelector('.scroll-wrapper .tez').classList.add('no-box');\n        document.querySelector('.total-balances').classList.add('no-box');\n      } else {\n        document.querySelector('.scroll-wrapper .tez').classList.remove('no-box');\n        document.querySelector('.total-balances').classList.remove('no-box');\n      }\n\n      if (this.tokenBalancesService?.balances?.length > 4) {\n        wrap.style.overflowY = 'auto';\n        wrap.style.width = 'calc(100% - 2.675rem)';\n        wrap.style.padding = '0 0 0 2rem';\n      } else {\n        wrap.style.overflowY = '';\n        wrap.style.width = '';\n        wrap.style.padding = '';\n      }\n    }\n  }\n  ngOnInit(): void {\n    this.balances = this.tokenBalancesService?.balances;\n    this.calcTotalBalances();\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  ngAfterViewChecked(): void {\n    const wrap = document.querySelector('.scroll-wrapper .balances') as HTMLElement;\n    this.e(wrap);\n  }\n  trackToken(index: number, token: any): string | number {\n    return token?.contractAddress ? token.contractAddress + ':' + token?.id + ':' + token?.balance + ':' + token?.thumbnailAsset : index;\n  }\n\n  toggleTotalBalances(): void {\n    this.isFiat = !this.isFiat;\n    this.calcTotalBalances();\n  }\n  calcTotalBalances(): void {\n    this.totalBalances = this.isFiat\n      ? this.balances.reduce((prev, balance) => prev + parseFloat(balance?.price ?? 0), 0) + this.account?.balanceUSD\n      : this.balances.reduce((prev, balance) => prev + parseFloat(balance?.price ?? 0), 0) / this.walletService.wallet.XTZrate +\n        parseFloat(\n          Big(this.account?.balanceXTZ ?? 0)\n            .div(1000000)\n            .toFixed()\n        );\n  }\n  openSwap() {\n    this.messageService.startSpinner();\n    ModalComponent.currentModel.next({ name: 'swap-liquidity', data: null });\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"close()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <h1 class=\"title\">Token Info</h1>\n    </div>\n    <div class=\"flex-column token-info\">\n      <div class=\"flex-row-wrap data\">\n        <div class=\"flex-column wrapper\" [class]=\"imageExpanded ? 'expanded' : ''\">\n          <app-asset [style.display]=\"imageExpanded ? 'none' : ''\" class=\"flex-row button sd-only\"\n            [priorityList]=\"['displayAsset', 'thumbnailAsset']\"\n            [assets]=\"{thumbnailAsset: token?.thumbnailAsset, displayAsset: token?.displayAsset}\" [size]=\"'small'\"\n            (click)=\"expandImage()\" (loaded)=\"assetLoaded = true\" [autoplay]=\"true\" [muted]=\"true\" [loop]=\"true\"\n            [playsinline]=\"true\"></app-asset>\n          <app-asset [style.display]=\"!imageExpanded ? 'none' : ''\" class=\"flex-row button sd-only\"\n            [priorityList]=\"['artifactAsset', 'displayAsset', 'thumbnailAsset']\"\n            [assets]=\"{thumbnailAsset: token?.thumbnailAsset, displayAsset: token?.displayAsset, artifactAsset: token?.artifactAsset}\"\n            [size]=\"'raw'\" [poster]=\"token?.displayAsset\" [controls]=\"true\"></app-asset>\n          <img *ngIf=\"imageExpanded\" class=\"flex-row button close\" (click)=\"expandImage()\"\n            src=\"../../../../../assets/img/close-btn-x.png\" />\n          <img *ngIf=\"!imageExpanded && assetLoaded && !token.displayAsset?.mimeType?.startsWith('model/')\"\n            class=\"expand\" src=\"../../../../../assets/img/expand.png\" (click)=\"expandImage()\" />\n          <b *ngIf=\"!imageExpanded && token.artifactAsset?.mimeType?.startsWith('model/')\" class=\"expand icon-threed\"\n            (click)=\"expandImage()\">3D</b>\n        </div>\n        <div class=\"flex-column meta\">\n          <div class=\"flex-column top\">\n            <div *ngIf=\"token?.name\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                name\n              </div>\n              <div class=\"value\">\n                {{ token?.name }}\n              </div>\n            </div>\n            <div *ngIf=\"!isNFT && token?.symbol\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                symbol\n              </div>\n              <div class=\"value\">\n                {{ token?.symbol }}\n              </div>\n            </div>\n            <div *ngIf=\"!isNFT && !!token?.decimals\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                decimals\n              </div>\n              <div class=\"value\">\n                {{ token?.decimals }}\n              </div>\n            </div>\n            <!-- <div *ngIf=\"isNFT && !!tokenFiltered?.last_sale\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                Last Sale Price\n              </div>\n              <div class=\"value\">\n                {{ tokenFiltered.last_sale + ' tez' }}\n              </div>\n            </div> -->\n            <div *ngIf=\"token?.description\" class=\"flex-column key-value desc\">\n              <div class=\"key\">\n                description\n              </div>\n              <div class=\"value\" style=\"white-space: pre-line; overflow-wrap: break-word;\">\n                {{token?.description}}\n              </div>\n            </div>\n          </div>\n        </div>\n        <app-asset [style.height]=\"isAudio ? '' : '0px'\" class=\"flex-row audio minimal-controls\" [requires]=\"['audio']\"\n          [assets]=\"token\" [priorityList]=\"['artifactAsset']\" [size]=\"'raw'\" [autoplay]=\"true\" [muted]=\"true\"\n          [hideSpinner]=\"true\" [controls]=\"true\" (load)=\"isAudio = true\"></app-asset>\n      </div>\n      <span *ngIf=\"isNFT && token?.floorPrice\" class=\"floor-price\">Collection Floor Price: <span>{{ token?.floorPrice + ' tez' }}</span></span>\n      <ng-container *ngFor=\"let type of Object.keys(CONSTANTS.FEATURE_CONTRACTS)\">\n        <ng-container *ngFor=\"let feat of Object.keys(CONSTANTS.FEATURE_CONTRACTS[type])\">\n          <app-ui-toggle-advanced\n            *ngIf=\"CONSTANTS.FEATURE_CONTRACTS[type][feat]?.includes(token?.contractAddress + ':' + token?.id)\"\n            [class]=\"'feat ' + feat\" style=\"width: 100%; margin: 0 0 1em 0\" (stateChange)=\"toggleFeature(type, feat)\"\n            [text]=\"(feat + ' Mode').toUpperCase()\" [state]=\"theme === feat\" [default]=\"theme === feat\">\n          </app-ui-toggle-advanced>\n        </ng-container>\n      </ng-container>\n      <div *ngIf=\"tokenFiltered?.attributes?.length\" class=\"flex-column attr-more\">\n        <div class=\"flex-row button attr-info\" [class]=\"attrInfo ? 'open' : ''\" (click)=\"attrInfo = !attrInfo\">\n          <span>Attributes <span class=\"count\">&nbsp;{{ tokenFiltered?.attributes.length }}</span></span><img src=\"../../../assets/img/chevron-down.svg\" />\n        </div>\n        <div class=\"flex-row-wrap attributes\" [style.maxHeight]=\"attrInfo ? (4.5 * Object.keys(tokenFiltered?.attributes)?.length + 6) + 'em' : '0em'\"\n        [style.overflowY]=\"attrInfo ? 'auto' : 'hidden'\">\n          <ng-container *ngFor=\"let a of tokenFiltered.attributes\">\n            <div class=\"flex-column attr\">\n              <div class=\"name\">\n                {{ a.attribute.name }}\n              </div>\n              <div class=\"value\">\n                {{ a.attribute.value }}\n              </div>\n              <div *ngIf=\"!!a.attribute.freq\" class=\"freq\">\n                {{ a.attribute.freq || '-' }}\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n      <div *ngIf=\"!!token\" class=\"flex-row button more-info\" [class]=\"moreInfo ? 'open' : ''\" (click)=\"expand()\">\n        <span>{{ moreInfo ? 'LESS' : 'MORE' }} INFO</span><img src=\"../../../assets/img/chevron-down.svg\" />\n      </div>\n      <div *ngIf=\"!!token\" [style.maxHeight]=\"moreInfo ? (3.25 * Object.keys(tokenFiltered).length) + 'rem' : ''\"\n        [style.overflowY]=\"autoOverflow ? 'auto' : ''\" class=\"flex-column meta-more\">\n        <ng-container *ngFor=\"let key of Object.keys(tokenFiltered)\">\n          <div *ngIf=\"key === 'contractAddress'\" class=\"flex-column key-value\">\n            <div class=\"key\">\n              {{ 'CONTRACT (ID)' }}\n            </div>\n            <div class=\"value\">\n              {{ token[key] + ' ' + '(' + token['id'] + ')' }}\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <div *ngIf=\"!token?.isUnknownToken\" class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <app-send-button class=\"send\" [override]=\"true\" [activeAccount]=\"activeAccount\"\n          [tokenTransfer]=\"!token ? null : token['contractAddress']+':'+token['id']\"\n          [symbol]=\"!token ? 'tez' : token?.symbol\">\n        </app-send-button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ModalComponent } from '../../modal.component';\nimport { TokenBalancesService } from '../../../../services/token-balances/token-balances.service';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { CONSTANTS } from '../../../../../environments/environment';\nimport { UnlockableService } from '../../../../services/unlockable/unlockable.service';\nimport { ObjktService } from '../../../../services/indexer/objkt/objkt.service';\nimport { TokenService } from '../../../../services/token/token.service';\nimport Big from 'big.js';\n@Component({\n  selector: 'app-token-detail',\n  templateUrl: './token-detail.component.html',\n  styleUrls: ['../../../../../scss/components/modals/modal.scss']\n})\nexport class TokenDetail extends ModalComponent implements OnInit, OnDestroy {\n  Object = Object;\n  CONSTANTS = CONSTANTS;\n  token = null;\n  tokenFiltered: any = {};\n  activeAccount = null;\n  moreInfo = false;\n  attrInfo = false;\n  imageExpanded = false;\n  autoOverflow = false;\n  descOverflow = false;\n  isNFT = false;\n  assetLoaded = false;\n  isAudio = false;\n  name = 'token-detail';\n  readonly blacklistMeta = [\n    'name',\n    'kind',\n    'artifactAsset',\n    'displayAsset',\n    'thumbnailAsset',\n    'rawUrl',\n    'isTransferable',\n    'isBooleanAmount',\n    'balance',\n    'category',\n    'symbol',\n    'decimals',\n    'status',\n    'shouldPreferSymbol',\n    'price',\n    'formats',\n    'isUnknownToken'\n  ];\n\n  theme = '';\n\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    private subjectService: SubjectService,\n    private tokenBalancesService: TokenBalancesService,\n    private tokenService: TokenService,\n    private unlockableService: UnlockableService,\n    private objktService: ObjktService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.activeAccount = activeAccount;\n      })\n    );\n    for (let type of Object.keys(CONSTANTS.FEATURE_CONTRACTS)) {\n      for (let feat of Object.keys(CONSTANTS.FEATURE_CONTRACTS[type])) {\n        if (document.documentElement.classList.contains(feat)) {\n          this.theme = feat;\n        }\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  async open(data): Promise<void> {\n    this.token = data;\n    !!this.token\n      ? Object.keys(this.token)\n          .filter((key) => !this.blacklistMeta.includes(key))\n          .forEach((key) => (this.tokenFiltered[key] = this.token[key]))\n      : this.token;\n    this.isNFT = this.tokenBalancesService.isNFT(this.token);\n    this.descOverflow = this.token?.description && this.token?.description.length > 250 ? true : false;\n    this.objktService.resolveToken(this.token.contractAddress, this.token.id).then((d) => {\n      if (Object.keys(this.tokenFiltered).length === 0) {\n        return;\n      }\n      this.token.floorPrice = d?.floor_price ? Big(d.floor_price).div(1000000) : undefined;\n      d?.last_sale ? (d.last_sale = Big(d.last_sale).div(1000000)) : undefined;\n      this.tokenFiltered = { ...d, ...this.tokenFiltered };\n      this.tokenFiltered.attributes = this.tokenFiltered?.attributes?.sort((a, b) =>\n        a.attribute.name > b.attribute.name ? 1 : a.attribute.name < b.attribute.name ? -1 : 0\n      );\n      const size = d?.editions;\n      this.tokenFiltered.attributes = this.tokenFiltered?.attributes\n        ? this.tokenFiltered.attributes?.map((attr) => {\n            if (attr.attribute?.attribute_counts?.length) {\n              attr.attribute.freq = (attr.attribute?.attribute_counts[0].editions * 100) / size;\n              attr.attribute.freq = attr.attribute.freq === 0 ? undefined : attr.attribute.freq > 100 ? '—' : attr.attribute.freq.toFixed(2) + '%';\n            }\n            return attr;\n          })\n        : [];\n    });\n    super.open();\n  }\n\n  close(): void {\n    this.reset();\n    super.close();\n  }\n\n  expand(): void {\n    this.moreInfo = !this.moreInfo;\n    if (!this.autoOverflow) {\n      setTimeout(() => {\n        this.autoOverflow = !this.autoOverflow;\n      }, 160);\n    } else {\n      this.autoOverflow = !this.autoOverflow;\n    }\n  }\n\n  expandImage(): void {\n    this.imageExpanded = !this.imageExpanded;\n  }\n\n  async toggleFeature(type, feat): Promise<void> {\n    this.theme = this.unlockableService.toggleFeature(type, feat) ? feat : '';\n  }\n\n  reset(): void {\n    this.moreInfo = false;\n    this.attrInfo = false;\n    this.imageExpanded = false;\n    this.descOverflow = false;\n    this.assetLoaded = false;\n    this.isAudio = false;\n    this.tokenFiltered = {};\n  }\n}\n","<div class=\"flex-column wrapper\" *ngIf=\"account\">\n  <div class=\"grid\" [class.more-than-15]=\"moreThan15\">\n    <app-balances [account]=\"account\"></app-balances>\n    <app-nfts [account]=\"account\"></app-nfts>\n    <app-activity [account]=\"account\"></app-activity>\n  </div>\n</div>\n<app-token-detail></app-token-detail>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Account, Activity, ImplicitAccount } from '../../../../services/wallet/wallet';\nimport { TimeAgoPipe } from '../../../../pipes/time-ago.pipe';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../services/message/message.service';\nimport * as copy from 'copy-to-clipboard';\nimport { CONSTANTS } from '../../../../../environments/environment';\nimport { ActivityService } from '../../../../services/activity/activity.service';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-account-view',\n  templateUrl: './account-view.component.html',\n  styleUrls: ['../../../../../scss/components/views/logged-in/account-view/account-view.component.scss']\n})\nexport class AccountViewComponent implements OnInit, OnDestroy {\n  account: Account;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public timeAgoPipe: TimeAgoPipe,\n    private activityService: ActivityService,\n    public tokenService: TokenService,\n    private subjectService: SubjectService\n  ) {}\n  trigger = true;\n  @Input() activity: any;\n  moreThan15 = false;\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.account = activeAccount;\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        this.moreThan15 = Object.keys(p?.nfts ?? {})?.length > 15 ? true : false;\n      })\n    );\n    setInterval(() => (this.trigger = !this.trigger), 1000);\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  getType(transaction: Activity): string {\n    if (transaction.type !== 'transaction') {\n      if (transaction.type === 'delegation') {\n        if (transaction.destination.address) {\n          return 'delegated';\n        } else {\n          return 'undelegated';\n        }\n      } else {\n        return transaction.type;\n      }\n    } else {\n      let operationType = '';\n      if (transaction.source.address === this.account.address) {\n        operationType = 'sent';\n      } else {\n        operationType = 'received';\n      }\n      return operationType;\n    }\n  }\n\n  getCounterparty(transaction: any): string {\n    return this.activityService.getCounterparty(transaction, this.account);\n  }\n  copy(account: Account): void {\n    copy(account.address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(account.address + ' ' + copyToClipboard, 5);\n  }\n  explorerURL(hash: string): string {\n    const baseURL = CONSTANTS.BLOCK_EXPLORER_URL;\n    return `${baseURL}/${hash}`;\n  }\n  printAmount(activity: Activity): string {\n    return this.tokenService.formatAmount(activity.tokenId, activity.amount.toString());\n  }\n  sentKind(activity): string {\n    if (activity.entrypoint) {\n      return `Called ${activity.entrypoint}`;\n    }\n    return 'Sent';\n  }\n  zeroSent(activity): boolean {\n    return this.sentKind(activity).length > 4 && activity.amount === '0';\n  }\n  receivedKind(activity): string {\n    return activity.tokenId && activity.source.address && activity.tokenId.split(':')[0] === activity.source.address ? 'Minted' : 'Received';\n  }\n  displayTokenCard(): boolean {\n    return this.account instanceof ImplicitAccount || this.account?.tokens?.length > 0;\n  }\n}\n","<div class=\"flex-column settings\">\n  <a><button class=\"flex-row back\" [routerLink]=\"'/account/' + activeAccount?.address\"><img\n        src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n  <h3>Connect with dApps</h3>\n  <div class=\"seperator\"></div>\n  <div class=\"flex-column handler\">\n    <div>\n      <h4>Connect to dApps on <u>another device</u> by scanning a QR code.</h4>\n    </div>\n    <div class=\"scan-button\">\n      <app-qr-scanner></app-qr-scanner>\n    </div>\n  </div>\n  <ng-container *ngIf=\"walletConnectService?.wc2activated\">\n    <h3 style=\"height: 1.5rem\">Wallet Connect&nbsp;<span *ngIf=\"walletConnectService.active; else inactive\"\n        style=\"color: #57E964; font-size: 1.5rem\">⬤</span>\n      <ng-template #inactive>\n        <span style=\"color: red; font-size: 1.5rem\">⬤</span>\n        <button *ngIf=\"!recentlyRestartedWc2\" class=\"restart\" (click)=\"this.restart()\">Connect</button>\n      </ng-template>\n    </h3>\n    <div class=\"seperator\"></div>\n    <div style=\"margin-left: 1rem\">\n      <ng-container *ngIf=\"walletConnectService.client && walletConnectService.active\">\n        <ng-container *ngIf=\"walletConnectService.pairings.size\">\n          <h4>Pairings <span class=\"blue-click\"\n              (click)=\"walletConnectService.pairings.expanded = !walletConnectService.pairings.expanded\">&nbsp;{{\n              walletConnectService.pairings.expanded ? '&ndash;' : '+'}}&nbsp;</span>\n            <ng-container\n              *ngIf=\"walletConnectService.pairings.size\">({{walletConnectService.pairings.size}})</ng-container>\n          </h4>\n          <table *ngIf=\"walletConnectService.pairings.expanded\">\n            <tbody class=\"wc pairings\">\n              <ng-container *ngFor=\"let dapp of walletConnectService.pairings.dapp | keyvalue\">\n                <tr class=\"dapp\">\n                  <td>{{ dapp.key }}<ng-container *ngIf=\"dapp?.value?.p?.length > 1\">&nbsp;<span class=\"blue-click\"\n                        (click)=\"walletConnectService.pairings.dapp[dapp.key].expanded = !walletConnectService.pairings.dapp[dapp.key].expanded\">\n                        {{ dapp?.value?.expanded ? '&ndash;' : '+' }}\n                      </span>\n                      <ng-container *ngIf=\"walletConnectService.pairings?.dapp[dapp.key].p?.length > 1\">\n                        ({{walletConnectService.pairings.dapp[dapp.key].p.length}})</ng-container>\n                    </ng-container>\n                  </td>\n                  <td><img (click)=\"walletConnectService.deletePairings(dapp?.value?.p)\"\n                      src=\"../../../assets/img/wc_delete.svg\"></td>\n                </tr>\n                <ng-container *ngIf=\"dapp?.value?.expanded && dapp?.value?.p?.length > 1\">\n                  <tr *ngFor=\"let p of dapp?.value?.p | keyvalue: unsorted\">\n                    <td>&emsp;#{{ p.key }}</td>\n                    <td><img (click)=\"walletConnectService.deletePairings([p?.value])\"\n                        src=\"../../../assets/img/wc_delete.svg\"></td>\n                  </tr>\n                </ng-container>\n              </ng-container>\n            </tbody>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"walletConnectService.sessions.size\">\n          <h4>Sessions <span class=\"blue-click\"\n              (click)=\"walletConnectService.sessions.expanded = !walletConnectService.sessions.expanded\">&nbsp;{{\n              walletConnectService.sessions.expanded ? '&ndash;' : '+'}}&nbsp;</span>\n            <ng-container\n              *ngIf=\"walletConnectService.sessions.size\">({{walletConnectService.sessions.size}})</ng-container>\n          </h4>\n          <table *ngIf=\"walletConnectService.sessions.expanded\">\n            <tbody class=\"wc sessions\">\n              <ng-container *ngFor=\"let dapp of walletConnectService.sessions.dapp | keyvalue\">\n                <tr class=\"dapp\">\n                  <td>{{ dapp.key }}<ng-container *ngIf=\"dapp?.value?.s?.length > 1\">&nbsp;<span class=\"blue-click\"\n                        (click)=\"walletConnectService.sessions.dapp[dapp.key].expanded = !walletConnectService.sessions.dapp[dapp.key].expanded\">\n                        {{ dapp?.value?.expanded ? '&ndash;' : '+' }}\n                      </span>\n                      <ng-container *ngIf=\"walletConnectService.sessions?.dapp[dapp.key].s?.length > 1\">\n                        ({{walletConnectService.sessions.dapp[dapp.key].s.length}})</ng-container>\n                    </ng-container>\n                  </td>\n                  <td>\n                    <ng-container *ngIf=\"!(dapp?.value?.s?.length > 1)\">{{ dapp.value.s[0].address }}\n                    </ng-container>\n                  </td>\n                  <td>\n                    <img class=\"modify\" (click)=\"changeSession(dapp.value.s[0])\" src=\"../../../assets/img/wc_modify.svg\" *ngIf=\"!(dapp?.value?.s?.length > 1)\">\n                    <img (click)=\"walletConnectService.deleteSessions(dapp?.value?.s)\" src=\"../../../assets/img/wc_delete.svg\">\n                  </td>\n                </tr>\n                <ng-container *ngIf=\"dapp?.value?.expanded && dapp?.value?.s?.length > 1\">\n                  <tr *ngFor=\"let s of dapp?.value?.s | keyvalue: unsorted\">\n                    <td>&nbsp;&nbsp;&nbsp;&nbsp;#{{ s.key }}</td>\n                    <td>{{s?.value?.address}}</td>\n                    <td><img (click)=\"walletConnectService.deleteSessions([s?.value])\"\n                        src=\"../../../assets/img/wc_delete.svg\">\n                    </td>\n                  </tr>\n                </ng-container>\n              </ng-container>\n            </tbody>\n          </table>\n        </ng-container>\n      </ng-container>\n    </div>\n  </ng-container>\n  <h3>Peers</h3>\n  <div class=\"seperator\"></div>\n  <table *ngIf=\"beaconService.peers.length\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Relay server</th>\n        <th><span (click)=\"beaconService.removePeers()\">Remove&nbsp;all</span></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let peer of beaconService.peers; index as i\">\n        <td>{{ peer.name }}</td>\n        <td>{{ peer.relayServer }}</td>\n        <td (click)=\"beaconService.removePeer(i)\"><img (click)=\"beaconService.removePeer(i)\"\n            src=\"../../../assets/img/cross.svg\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <h3>Permissions</h3>\n  <div class=\"seperator\"></div>\n  <table *ngIf=\"beaconService.permissions.length\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Address</th>\n        <th><span (click)=\"beaconService.removePermissions()\">Remove&nbsp;all</span></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let permission of beaconService.permissions; index as i\"\n        [class.inactive]=\"!accountAvailable(permission.address)\">\n        <td>{{ permission.appMetadata.name }}</td>\n        <td>{{ formatAddress(permission.address) }}</td>\n        <td><img (click)=\"beaconService.removePermission(i)\" src=\"../../../assets/img/cross.svg\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <h3>Tokens</h3>\n  <div class=\"seperator\"></div>\n  <button class=\"rescan\" (click)=\"rescan()\">Rescan unknown tokens</button>\n  <button id=\"all\" class=\"rescan\" (click)=\"rescanAll()\">Clear all token metadata</button>\n  <button *ngIf=\"canRevealMnomonic()\" class=\"reveal-mnemonic\" (click)=\"revealMnemonic()\">Reveal Seed Words</button>\n</div>","import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\nimport { BeaconService } from '../../../../services/beacon/beacon.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { Router } from '@angular/router';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { Subscription } from 'rxjs';\nimport { CoordinatorService } from '../../../../services/coordinator/coordinator.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { ModalComponent } from '../../../../components/modals/modal.component';\nimport { HdWallet, LegacyWalletV3 } from '../../../../services/wallet/wallet';\nimport { WalletConnectService } from '../../../../services/wallet-connect/wallet-connect.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['../../../../../scss/components/views/logged-in/settings/settings.component.scss']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  implicitAccounts = [];\n  wideAccounts = false;\n  activeAccount = null;\n  recentlyRestartedWc2 = false;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public beaconService: BeaconService,\n    private messageService: MessageService,\n    private walletService: WalletService,\n    private router: Router,\n    private tokenService: TokenService,\n    private coordinatorService: CoordinatorService,\n    private subjectService: SubjectService,\n    public walletConnectService: WalletConnectService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.implicitAccounts = this.walletService.wallet.getImplicitAccounts();\n      this.beaconService.syncBeaconState();\n      this.onResize();\n    }\n\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.activeAccount = activeAccount;\n      })\n    );\n  }\n  ngOnDestroy(): void {}\n  accountAvailable(pkh: string): boolean {\n    const index = this.implicitAccounts.findIndex((impAcc: any) => impAcc.pkh === pkh);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n  @HostListener('window:resize')\n  onResize(): void {\n    this.wideAccounts = window.innerWidth > 600;\n  }\n  formatAddress(address: string): string {\n    if (this.wideAccounts) {\n      return address;\n    } else {\n      return address.slice(0, 6) + '...' + address.slice(-4);\n    }\n  }\n  rescan(): void {\n    this.tokenService.resetCounters();\n    this.messageService.add('Scanning for token metadata...');\n    this.coordinatorService.update(this.activeAccount.address);\n    this.router.navigate([`/account/${this.activeAccount.address}`]);\n  }\n  rescanAll(): void {\n    this.tokenService.resetAllMetadata();\n    this.messageService.add('Rescanning all token metadata...');\n    this.coordinatorService.update(this.activeAccount.address);\n    this.router.navigate([`/account/${this.activeAccount.address}`]);\n  }\n  revealMnemonic(): void {\n    ModalComponent.currentModel.next({ name: 'export-mnemonic', data: null });\n  }\n  canRevealMnomonic(): boolean {\n    return this.walletService.wallet && (this.walletService.wallet instanceof HdWallet || this.walletService.wallet instanceof LegacyWalletV3);\n  }\n  changeSession(session: any): void {\n    ModalComponent.currentModel.next({ name: 'session-select', data: { topic: session.topic, preSelectedAccountAddress: session.address } });\n  }\n  unsorted() {}\n  restart() {\n    this.recentlyRestartedWc2 = true;\n    this.walletConnectService.restart();\n    setTimeout(() => {\n      this.recentlyRestartedWc2 = false;\n    }, 3000);\n  }\n}\n","<div class=\"flex-column delegate-page\">\n  <div class=\"content\">\n    <div class=\"flex-column manual\">\n      <div class=\"flex-column delegate\">\n        <a [routerLink]=\"'/account/' + activeAccount?.address\"><button class=\"flex-row back\"><img\n              src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n        <h1>Staking</h1>\n        <div class=\"flex-row toolbar\"><span class=\"button blue\" (click)=\"toggleCustom()\">Enter Custom Baker</span><span\n            *ngIf=\"!delegates?.length\" class=\"button blue\" (click)=\"this.delegateService.getDelegates()\">Reload</span>\n        </div>\n        <ng-container *ngIf=\"isShowingCustom\">\n          <span>Address or domain of a registered baker</span>\n          <div class=\"custom\">\n            <input [(ngModel)]=\"customAddress\" placeholder=\"Custom baker address\" /><button class=\"button\" (click)=\"stake({address: customAddress})\">STAKE</button>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"flex-column list\">\n      <ng-container *ngFor=\"let delegate of delegates\">\n        <div class=\"flex-row delegate desktop\">\n          <img class=\"logo\" [src]=\"delegate.logo ? delegate.logo : ''\" />\n          <span class=\"name\">{{ delegate.name }}</span>\n          <span class=\"fee\">SPLIT:&nbsp;<b class=\"value\">{{ toPercent(delegate?.fee) }}</b></span>\n          <span class=\"freespace\">SPACE:&nbsp;<b class=\"value\">{{ round(delegate?.freeSpace) + ' tez' }}</b></span>\n          <span class=\"estROI\">EST REWARDS:&nbsp;<b class=\"value\">{{ toPercent(delegate?.estimatedRoi) }}</b></span>\n          <span class=\"accuracy\">ACCURACY:&nbsp;<b class=\"value\">{{ delegate?.payoutAccuracy }}</b></span>\n          <button *ngIf=\"delegate?.address !== activeAccount?.delegate\" class=\"button\" (click)=\"stake(delegate)\">STAKE</button>\n          <span class=\"current\" *ngIf=\"delegate?.address === activeAccount?.delegate\">CURRENT</span>\n        </div>\n        <div class=\"flex-row delegate mobile\">\n          <div class=\"flex-column props\">\n            <img class=\"logo\" [src]=\"delegate.logo ? delegate.logo : ''\" />\n            <span class=\"name\">{{ delegate.name }}</span>\n            <span class=\"fee\">SPLIT:&nbsp;<b class=\"value\">{{ toPercent(delegate?.fee) }}</b></span>\n            <span class=\"freespace\">SPACE:&nbsp;<b class=\"value\">{{ round(delegate?.freeSpace) + ' tez' }}</b></span>\n            <span class=\"estROI\">EST REWARDS:&nbsp;<b class=\"value\">{{ toPercent(delegate?.estimatedRoi) }}</b></span>\n          </div>\n          <button *ngIf=\"delegate?.address !== activeAccount?.delegate\" class=\"button\" (click)=\"stake(delegate)\">STAKE</button>\n          <span class=\"current\" *ngIf=\"delegate?.address === activeAccount?.delegate\">CURRENT</span>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { DelegateService } from '../../../../services/delegate/delegate.service';\nimport { ModalComponent } from '../../../modals/modal.component';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-delegate-page',\n  templateUrl: './delegate-page.component.html',\n  styleUrls: ['../../../../../scss/components/views/logged-in/delegate/delegate.component.scss']\n})\nexport class DelegatePageComponent implements OnInit, OnDestroy {\n  delegates;\n  activeAccount = null;\n  customAddress: string = '';\n  isShowingCustom = false;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    public delegateService: DelegateService,\n    public router: Router,\n    public walletService: WalletService,\n    public inputValidationService: InputValidationService,\n    private messageServcie: MessageService,\n    private subjectService: SubjectService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        if (this.activeAccount !== activeAccount) {\n          this.activeAccount = activeAccount;\n          this.subscriptions.add(\n            this.delegateService.delegates.pipe(take(1)).subscribe((d) => {\n              this.delegates = this.filter(d).sort((x, y) => (x.address === this.activeAccount?.delegate ? -1 : y === this.activeAccount?.delegate ? 1 : 0));\n            })\n          );\n        }\n      })\n    );\n\n    this.subscriptions.add(\n      this.delegateService.delegates.subscribe((d) => {\n        this.delegates = this.filter(d).sort((x, y) => (x.address === this.activeAccount?.delegate ? -1 : y === this.activeAccount?.delegate ? 1 : 0));\n      })\n    );\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  filter(delegates: any): any[] | null {\n    if (delegates?.length) {\n      const balanceXTZ = this.activeAccount ? Math.ceil(this.activeAccount.balanceXTZ / 1000000) : 0;\n      return delegates\n        .map((d) => {\n          try {\n            if (d.freeSpace > balanceXTZ && d.estimatedRoi > 0 && d.openForDelegation === true && d.minDelegation < balanceXTZ) {\n              return d;\n            }\n          } catch {\n            return null;\n          }\n          return null;\n        })\n        .filter((obj) => obj);\n    }\n    return [];\n  }\n  stake(delegate: any): void {\n    if (delegate.address === '' || this.inputValidationService.validDelegationAddress(delegate.address)) {\n      ModalComponent.currentModel.next({\n        name: 'delegate-confirm',\n        data: delegate\n      });\n    } else {\n      this.messageServcie.addError(`Invalid baker address: ${delegate?.address}`);\n    }\n  }\n\n  round(val): string {\n    return Math.round(Number(val)).toString();\n  }\n\n  toPercent(val): string {\n    return parseFloat((Number(val) * 100).toFixed(2)).toString() + '%';\n  }\n\n  toggleCustom(): void {\n    this.isShowingCustom = this.isShowingCustom ? false : true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccountViewComponent } from './account-view/account-view.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { DelegatePageComponent } from './delegate-page/delegate-page.component';\nimport { ActivateComponent } from '../start/activate/activate.component';\n\nconst routes: Routes = [\n  { path: ':address', component: AccountViewComponent },\n  { path: ':address/settings', component: SettingsComponent },\n  { path: ':address/stakers', component: DelegatePageComponent },\n  { path: 'activate', component: ActivateComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoggedInRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { SendComponent } from '../../misc/send/send.component';\nimport { ReceiveComponent } from '../../modals/receive/receive.component';\nimport { DelegateComponent } from '../../modals/delegate/delegate.component';\nimport { DelegatePageComponent } from './delegate-page/delegate-page.component';\nimport { ActivateComponent } from '../start/activate/activate.component';\nimport { NewImplicitComponent } from '../../modals/new-implicit/new-implicit.component';\nimport { UriHandlerComponent } from '../../misc/uri-handler/uri-handler.component';\nimport { PermissionRequestComponent } from '../../modals/permission-request/permission-request.component';\nimport { PermissionRequestDropdownComponent } from '../../ui/dropdown/permission-request/permission-request.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { QrScannerComponent } from '../../modals/qr-scanner/qr-scanner.component';\nimport { SignExprComponent } from '../../modals/sign-expr/sign-expr.component';\nimport { ConfirmSendComponent } from '../../modals/send/confirm/send-confirmation.component';\nimport { PrepareSendComponent } from '../../modals/send/prepare/prepare-send.component';\nimport { OriginateComponent } from '../../modals/originate/originate.component';\nimport { LoggedInComponent } from './logged-in.component';\nimport { LoggedInRoutingModule } from './logged-in-routing.module';\nimport { ConfirmSendEmbedComponent } from '../embedded/confirm-send/confirm-send.component';\nimport { SignExprEmbedComponent } from '../embedded/sign-expr/sign-expr.component';\nimport { AdvancedToggleComponent } from '../../ui/button/toggle/advanced/advanced.component';\nimport { PrepareSendDropdownComponent } from '../../ui/dropdown/prepare-send/prepare-send-dropdown.component';\nimport { AssetComponent } from '../../ui/asset/asset.component';\nimport { NftsBodyComponent } from './account-view/nfts/body/body.component';\nimport { NftsTokenComponent } from './account-view/nfts/token/token.component';\nimport { AccountListComponent } from '../../modals/account-list/list.component';\nimport { AccountListBodyComponent } from '../../modals/account-list/body/body.component';\nimport { ListComponent } from '../../ui/generic/list.component';\nimport { SearchBarComponent } from '../../ui/search/search.component';\nimport { RemoveCommaPipe } from '../../../pipes/remove-comma.pipe';\nimport { ExprTemplateComponent } from '../embedded/sign-expr/template/template.component';\nimport { QueueEmbedComponent } from '../embedded/queue/queue.component';\nimport { SwapLiquidityComponent } from '../../modals/swap-liquidity/swap-liquidity.component';\nimport { SwapLiquidityService } from '../../../services/swap-liquidity/swap-liquidity.service';\nimport { InfoComponent } from '../../modals/info/info.component';\nimport { ExportMnemonicComponent } from '../../modals/export-mnemonic/export-mnemonic.component';\nimport { SwapLiquidityConfirmComponent } from '../../modals/swap-liquidity/swap-liquidity-confirm.component';\nimport { ChartComponent } from '../../ui/chart/chart.component';\nimport { ChartService } from '../../../../app/services/chart/chart.service';\nimport { BuyComponent } from './account-view/buy/buy.component';\nimport { BuyModalComponent } from '../../modals/buy/buy.component';\nimport { SessionSelectComponent } from '../../modals/session-select/session-select.component';\nimport { SessionSelectDropdownComponent } from '../../ui/dropdown/session-select/session-select.component';\n\n@NgModule({\n  declarations: [\n    SendComponent,\n    ReceiveComponent,\n    DelegatePageComponent,\n    SwapLiquidityComponent,\n    ActivateComponent,\n    LoggedInComponent,\n    NewImplicitComponent,\n    UriHandlerComponent,\n    PermissionRequestComponent,\n    PermissionRequestDropdownComponent,\n    SettingsComponent,\n    QrScannerComponent,\n    SignExprComponent,\n    OriginateComponent,\n    ConfirmSendComponent,\n    PrepareSendComponent,\n    DelegateComponent,\n    AdvancedToggleComponent,\n    ConfirmSendEmbedComponent,\n    SignExprEmbedComponent,\n    QueueEmbedComponent,\n    PrepareSendDropdownComponent,\n    AssetComponent,\n    NftsBodyComponent,\n    NftsTokenComponent,\n    AccountListComponent,\n    AccountListBodyComponent,\n    ListComponent,\n    SearchBarComponent,\n    RemoveCommaPipe,\n    ExprTemplateComponent,\n    SwapLiquidityConfirmComponent,\n    InfoComponent,\n    RemoveCommaPipe,\n    ExportMnemonicComponent,\n    ChartComponent,\n    BuyComponent,\n    BuyModalComponent,\n    SessionSelectComponent,\n    SessionSelectDropdownComponent\n  ],\n  imports: [CommonModule, LoggedInRoutingModule, HttpClientModule, FormsModule],\n  exports: [\n    BuyComponent,\n    BuyModalComponent,\n    AdvancedToggleComponent,\n    SendComponent,\n    ConfirmSendEmbedComponent,\n    SignExprEmbedComponent,\n    QueueEmbedComponent,\n    AssetComponent,\n    NftsBodyComponent,\n    NftsTokenComponent,\n    PermissionRequestComponent,\n    PermissionRequestDropdownComponent,\n    SessionSelectComponent,\n    SessionSelectDropdownComponent,\n    ListComponent,\n    AccountListComponent,\n    AccountListBodyComponent,\n    SearchBarComponent,\n    RemoveCommaPipe,\n    ExprTemplateComponent,\n    InfoComponent,\n    ChartComponent\n  ],\n  providers: [SwapLiquidityService, ChartService, EstimateService, RemoveCommaPipe]\n})\nexport class LoggedInModule {}\n","<form autocomplete=\"off\">\n  <div class=\"flex-column card\">\n    <a routerLink=\"/import/\" [state]=\"{ option: 2 }\"><button class=\"flex-row back\"><img\n          src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n    <div class=\"flex-column body\">\n      <h1>\n        Activate a Fundraiser wallet\n      </h1>\n      <p class=\"description\">Wallets created during the fundraiser need to be activated. No private key is required for\n        the activation process.</p>\n      <span class=\"description\">Your public key hash</span>\n      <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"pkh\" [placeholder]=\"'tz1...'\">\n      <span class=\"description\">Your activation code</span>\n      <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"secret\" [placeholder]=\"'Code'\">\n      <button class=\"button next\" (click)=\"activate()\">Activate</button>\n      <span *ngIf=\"formInvalid\" class=\"description red\">\n        {{ formInvalid }}\n      </span>\n    </div>\n  </div>\n</form>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { OperationService } from '../../../../services/operation/operation.service';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-activate',\n  templateUrl: './activate.component.html',\n  styleUrls: ['../../../../../scss/components/views/start/login.component.scss']\n})\nexport class ActivateComponent implements OnInit, OnDestroy {\n  pkh: string;\n  secret: string;\n  formInvalid = '';\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    private messageService: MessageService,\n    private operationService: OperationService,\n    private inputValidationService: InputValidationService,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit(): void {}\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  activate(): void {\n    this.formInvalid = this.checkInput();\n    if (!this.formInvalid) {\n      const pkh = this.pkh;\n      const secret = this.secret;\n      this.pkh = '';\n      this.secret = '';\n      this.subscriptions.add(\n        this.operationService.activate(pkh, secret).subscribe(\n          (ans: any) => {\n            if (ans.success) {\n              if (ans.payload.opHash) {\n                this.subscriptions.add(\n                  this.translate.get('ACTIVATECOMPONENT.ACTIVATESUCCESS').subscribe(\n                    (res: string) => this.messageService.addSuccess(res) // 'Activation successfully broadcasted to the blockchain!'\n                  )\n                );\n              } else {\n                this.subscriptions.add(\n                  this.translate.get('ACTIVATECOMPONENT.RETRIEVEFAIL').subscribe(\n                    (res: string) => this.messageService.addWarning(res) // Could not retrieve an operation hash\n                  )\n                );\n              }\n            } else {\n              let errorMessage = '';\n              if (typeof ans.payload.msg === 'string') {\n                errorMessage = 'NodeError ' + ans.payload.msg;\n              } else {\n                errorMessage = 'NodeError ' + JSON.stringify(ans.payload.msg);\n              }\n              this.messageService.addError(errorMessage);\n              console.log(JSON.stringify(ans.payload.msg));\n            }\n          },\n          (err) => {\n            this.subscriptions.add(\n              this.translate.get('ACTIVATECOMPONENT.ACTIVATEFAIL').subscribe(\n                (res: string) => {\n                  let errorMessage = '';\n                  const activateFailed = res;\n                  if (typeof err.payload.msg === 'string') {\n                    errorMessage = activateFailed + ' ' + err.payload.msg;\n                  } else {\n                    errorMessage = activateFailed;\n                  }\n                  this.messageService.addError(errorMessage);\n                } // 'Failed to activate wallet!'\n              )\n            );\n            console.log(JSON.stringify(err));\n          }\n        )\n      );\n    }\n  }\n  checkInput(): string {\n    if (!this.inputValidationService.address(this.pkh)) {\n      return 'Invalid public key hash!';\n    } else if (!this.inputValidationService.code(this.secret)) {\n      return 'Invalid activation code!';\n    }\n    return '';\n  }\n}\n","import { Activity, Account as WalletAccount } from './services/wallet/wallet';\nimport { Asset, ContractType } from './services/token/token.service';\n\nexport { Activity };\n\nexport interface KeyPair {\n  sk: string | null;\n  pk: string | null;\n  pkh: string;\n}\nexport interface Wallet {\n  seed: null | string;\n  salt: null | string;\n  pk?: string;\n  encryptionVersion: number | null;\n  type: WalletType;\n  balance: Balance;\n  XTZrate: number | null;\n  accounts: Account[];\n  derivationPath?: string;\n}\nexport interface Account {\n  pkh: string | null;\n  delegate: string;\n  balance: Balance;\n  numberOfActivites: number;\n  activities: Activity[];\n}\nexport interface Balance {\n  balanceXTZ: number | null;\n  pendingXTZ: number | null;\n  balanceFiat: number | null;\n  pendingFiat: number | null;\n}\nexport enum WalletType {\n  LegacyWallet,\n  ViewOnlyWallet,\n  ObserverWallet,\n  LedgerWallet,\n  HdWallet\n}\nexport interface Baker {\n  baker_name: string;\n  image: string;\n  rolls: number;\n  identity: string;\n  vote: string;\n  vote2: string;\n  // vote: []\n}\nexport interface Vote {\n  voting_period: string;\n  period_kind: PeriodKind;\n  proposal_hash: string[];\n  proposal_alias: string[];\n  votes: number[];\n  operation: string[];\n}\nexport interface Period {\n  amendment: string;\n  period: number;\n  period_kind: string;\n  proposal_hash: string[];\n  proposal_alias: string[];\n  start_level: number;\n  end_level: number;\n  level: number;\n  progress: number;\n  remaining: number;\n}\nexport interface ParticipationPerPeriod {\n  proposal?: [\n    {\n      hash: string;\n      alias: string;\n      count: number;\n      votes: number;\n    }\n  ];\n  unused_count: number;\n  total_count: number;\n  unused_votes: number;\n  total_votes: number;\n}\nexport interface Ballot {\n  proposal: string;\n  nb_yay: number;\n  nb_nay: number;\n  nb_pass: number;\n  vote_yay: number;\n  vote_nay: number;\n  vote_pass: number;\n}\nexport enum PeriodKind {\n  Proposal,\n  Exploration,\n  Testing,\n  Promotion\n}\nexport interface DefaultTransactionParams {\n  gas: number;\n  storage: number;\n  fee: number;\n  burn: number;\n  reveal?: boolean;\n  customLimits?: {\n    gasLimit: number;\n    storageLimit: number;\n  }[];\n}\n\nexport enum DisplayLinkOption {\n  All,\n  DirectAuth,\n  None\n}\n\nexport interface OpLimits {\n  gas?: number;\n  storage?: number;\n}\n\nexport interface ExternalRequest {\n  operationRequest: any;\n  selectedAccount: WalletAccount;\n}\nexport interface Constants {\n  NAME: string;\n  TEZOS_DOMAIN: {\n    CONTRACT?: string; // deprecated?\n    TOP_DOMAINS: string[];\n  };\n  NETWORK: string;\n  MAINNET: boolean;\n  NODE_URL: string;\n  API_URL: string;\n  OBJKT_URL?: string;\n  BLOCK_EXPLORER_URL: string;\n  HARD_LIMITS: {\n    hard_gas_limit_per_operation: number;\n    hard_gas_limit_per_block: number;\n    hard_storage_limit_per_operation: number;\n  };\n  ASSETS: Record<string, ContractType>;\n  CONTRACT_OVERRIDES: Record<string, OpLimits>;\n  CONTRACT_ALIASES: Record<\n    string,\n    {\n      name?: string;\n      address: string[];\n      thumbnailUrl: Asset;\n      discoverUrl?: string;\n      zoomDiscoverImg?: boolean;\n      link?: string;\n      shouldDisplayLink: DisplayLinkOption;\n      category?: string[];\n      backgroundColor?: string;\n      description?: string;\n    }\n  >;\n  NFT_CONTRACT_OVERRIDES: string[];\n  FEATURE_CONTRACTS: {};\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/*\n    Informs users on most common errors\n    RPC errors doc: http://tezos.gitlab.io/mainnet/api/errors.html\n*/\n\n@Pipe({\n  name: 'errorHandling'\n})\nexport class ErrorHandlingPipe implements PipeTransform {\n  ERROR_LIST = [\n    {\n      msg: 'A fatal assertion failed',\n      id: 'proto.alpha.assertion'\n    },\n    {\n      msg: \"The block's proof-of-work stamp is insufficient\",\n      id: 'proto.alpha.baking.insufficient_proof_of_work'\n    },\n    {\n      msg: 'A block was not signed with the expected private key.',\n      id: 'proto.alpha.baking.invalid_block_signature'\n    },\n    {\n      msg: 'The gap of fitness is out of bounds',\n      id: 'proto.alpha.baking.invalid_fitness_gap'\n    },\n    {\n      msg: \"The block's signature is invalid\",\n      id: 'proto.alpha.baking.invalid_signature'\n    },\n    {\n      msg: 'The block timestamp is before the first slot for this baker at this level',\n      id: 'proto.alpha.baking.timestamp_too_early'\n    },\n    {\n      msg: 'The operation is signed by a delegate without endorsement rights.',\n      id: 'proto.alpha.baking.unexpected_endorsement'\n    },\n    {\n      msg: 'A double-baking evidence is inconsistent (two distinct delegates)',\n      id: 'proto.alpha.block.inconsistent_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is inconsistent (two distinct delegates)',\n      id: 'proto.alpha.block.inconsistent_double_endorsement_evidence'\n    },\n    {\n      msg: 'The block header has invalid commitment.',\n      id: 'proto.alpha.block.invalid_commitment'\n    },\n    {\n      msg: 'A double-baking evidence is inconsistent (two distinct level)',\n      id: 'proto.alpha.block.invalid_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is malformed',\n      id: 'proto.alpha.block.invalid_double_endorsement_evidence'\n    },\n    {\n      msg: 'A manager operation should not contain more than one revelation',\n      id: 'proto.alpha.block.multiple_revelation'\n    },\n    {\n      msg: 'A double-baking evidence is outdated.',\n      id: 'proto.alpha.block.outdated_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is outdated.',\n      id: 'proto.alpha.block.outdated_double_endorsement_evidence'\n    },\n    {\n      msg: 'A double-baking evidence is in the future',\n      id: 'proto.alpha.block.too_early_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is in the future',\n      id: 'proto.alpha.block.too_early_double_endorsement_evidence'\n    },\n    {\n      msg: 'A double-baking evidence is unrequired',\n      id: 'proto.alpha.block.unrequired_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is unrequired',\n      id: 'proto.alpha.block.unrequired_double_endorsement_evidence'\n    },\n    {\n      msg: 'Unexpected JSON object.',\n      id: 'proto.alpha.context.failed_to_decode_parameter'\n    },\n    {\n      msg: 'The protocol parameters are not valid JSON.',\n      id: 'proto.alpha.context.failed_to_parse_parameter'\n    },\n    {\n      msg: 'An error that should never happen unless something has been deleted or corrupted in the database.',\n      id: 'proto.alpha.context.storage_error'\n    },\n    {\n      msg: 'An operation tried to spend more tez than the account has',\n      id: 'proto.alpha.contract.balance_too_low'\n    },\n    {\n      msg: 'The storage fee is higher than the contract balance',\n      id: 'proto.alpha.contract.cannot_pay_storage_fee'\n    },\n    {\n      msg: 'An operation assumed a contract counter in the future',\n      id: 'proto.alpha.contract.counter_in_the_future'\n    },\n    {\n      msg: 'An operation assumed a contract counter in the past',\n      id: 'proto.alpha.contract.counter_in_the_past'\n    },\n    {\n      msg: 'Forbidden to credit 0ꜩ to a contract without code.',\n      id: 'proto.alpha.contract.empty_transaction'\n    },\n    {\n      msg: 'Unexpected contract storage error',\n      id: 'proto.alpha.contract.failure'\n    },\n    {\n      msg: 'A malformed contract notation was given to an RPC or in a script.',\n      id: 'proto.alpha.contract.invalid_contract_notation'\n    },\n    {\n      msg: 'Change is not enough to consume a roll.',\n      id: 'proto.alpha.contract.manager.consume_roll_change'\n    },\n    {\n      msg: 'A revealed manager public key is inconsistent with the announced hash',\n      id: 'proto.alpha.contract.manager.inconsistent_hash'\n    },\n    {\n      msg: 'A provided manager public key is different with the public key stored in the contract',\n      id: 'proto.alpha.contract.manager.inconsistent_public_key'\n    },\n    {\n      msg: 'Delegate has no roll.',\n      id: 'proto.alpha.contract.manager.no_roll_for_delegate'\n    },\n    {\n      msg: 'A snapshot of the rolls distribution does not exist for this cycle.',\n      id: 'proto.alpha.contract.manager.no_roll_snapshot_for_cycle'\n    },\n    {\n      msg: 'A contract cannot be delegated to an unregistered delegate',\n      id: 'proto.alpha.contract.manager.unregistered_delegate'\n    },\n    {\n      msg: 'A contract handle is not present in the context (either it never was or it has been destroyed)',\n      id: 'proto.alpha.contract.non_existing_contract'\n    },\n    {\n      msg: 'One tried to revealed twice a manager public key',\n      id: 'proto.alpha.contract.previously_revealed_key'\n    },\n    {\n      msg: 'One tried to apply a manager operation without revealing the manager public key',\n      id: 'proto.alpha.contract.unrevealed_key'\n    },\n    {\n      msg: 'An operation tried to spend tokens from an unspendable contract',\n      id: 'proto.alpha.contract.unspendable_contract'\n    },\n    {\n      msg: 'Useless delegate reactivation',\n      id: 'proto.alpha.delegate.already_active'\n    },\n    {\n      msg: 'Cannot freeze deposit when the balance is too low',\n      id: 'proto.alpha.delegate.balance_too_low_for_deposit'\n    },\n    {\n      msg: 'Cannot register a delegate when its implicit account is empty',\n      id: 'proto.alpha.delegate.empty_delegate_account'\n    },\n    {\n      msg: 'Tried to unregister a delegate',\n      id: 'proto.alpha.delegate.no_deletion'\n    },\n    {\n      msg: 'Contract already delegated to the given delegate',\n      id: 'proto.alpha.delegate.unchanged'\n    },\n    {\n      msg: 'Proposal lists cannot be empty.',\n      id: 'proto.alpha.empty_proposal'\n    },\n    {\n      msg: 'The sum of gas consumed by all the operations in the block exceeds the hard gas limit per block',\n      id: 'proto.alpha.gas_exhausted.block'\n    },\n    {\n      msg: 'Gas limit was not high enough to deserialize the transaction parameters or origination script code or initial storage, making the operation impossible to parse within the provided gas bounds.',\n      id: 'proto.alpha.gas_exhausted.init_deserialize'\n    },\n    {\n      msg: 'An operation tried to exceed the gas limit',\n      id: 'proto.alpha.gas_exhausted.operation'\n    },\n    {\n      msg: 'A transaction tried to exceed the hard limit on gas',\n      id: 'proto.alpha.gas_limit_too_high'\n    },\n    {\n      msg: 'No manager operations are allowed on an empty account. Make sure you have enough balance.',\n      id: 'proto.alpha.implicit.empty_implicit_contract'\n    },\n    {\n      msg: 'Emptying an implicit delegated account is not allowed.',\n      id: 'proto.alpha.implicit.empty_implicit_delegated_contract'\n    },\n    {\n      msg: 'The number of endorsements must be non-negative and at most the endosers_per_block constant.',\n      id: 'proto.alpha.incorrect_number_of_endorsements'\n    },\n    {\n      msg: 'Block priority must be non-negative.',\n      id: 'proto.alpha.incorrect_priority'\n    },\n    {\n      msg: 'An internal operation was emitted twice by a script',\n      id: 'proto.alpha.internal_operation_replay'\n    },\n    {\n      msg: 'A compile-time constant was invalid for its expected form.',\n      id: 'proto.alpha.invalidSyntacticConstantError'\n    },\n    {\n      msg: 'Negative multiple of periods are not allowed.',\n      id: 'proto.alpha.invalid_arg'\n    },\n    {\n      msg: 'Could not deserialize some piece of data from its binary representation',\n      id: 'proto.alpha.invalid_binary_format'\n    },\n    {\n      msg: 'Fitness representation should be exactly 8 bytes long.',\n      id: 'proto.alpha.invalid_fitness'\n    },\n    {\n      msg: 'Ballot provided for a proposal that is not the current one.',\n      id: 'proto.alpha.invalid_proposal'\n    },\n    {\n      msg: 'Period is negative.',\n      id: 'proto.alpha.malformed_period'\n    },\n    {\n      msg: 'Either no parameter was supplied to a contract with a non-unit parameter type, a non-unit parameter was passed to an account, or a parameter was supplied of the wrong type',\n      id: 'proto.alpha.michelson_v1.bad_contract_parameter'\n    },\n    {\n      msg: 'Unexpected stack at the end of a lambda or script.',\n      id: 'proto.alpha.michelson_v1.bad_return'\n    },\n    {\n      msg: 'The stack has an unexpected length or contents.',\n      id: 'proto.alpha.michelson_v1.bad_stack'\n    },\n    {\n      msg: 'The type of a stack item is unexpected (this error is always accompanied by a more precise one).',\n      id: 'proto.alpha.michelson_v1.bad_stack_item'\n    },\n    {\n      msg: 'The error was too big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_error'\n    },\n    {\n      msg: 'Argument of FAILWITH was too big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_failure'\n    },\n    {\n      msg: 'Execution trace with stacks was to big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_log'\n    },\n    {\n      msg: 'The returned storage was too big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_storage'\n    },\n    {\n      msg: 'A non comparable type was used in a place where only comparable types are accepted.',\n      id: 'proto.alpha.michelson_v1.comparable_type_expected'\n    },\n    {\n      msg: 'A deprecated instruction usage is disallowed in newly created contracts',\n      id: 'proto.alpha.michelson_v1.deprecated_instruction'\n    },\n    {\n      msg: 'Two entrypoints have the same name.',\n      id: 'proto.alpha.michelson_v1.duplicate_entrypoint'\n    },\n    {\n      msg: 'Map literals cannot contain duplicated keys',\n      id: 'proto.alpha.michelson_v1.duplicate_map_keys'\n    },\n    {\n      msg: 'When parsing script, a field was found more than once',\n      id: 'proto.alpha.michelson_v1.duplicate_script_field'\n    },\n    {\n      msg: 'Set literals cannot contain duplicate elements, but a duplicae was found while parsing.',\n      id: 'proto.alpha.michelson_v1.duplicate_set_values_in_literal'\n    },\n    {\n      msg: 'An entrypoint name exceeds the maximum length of 31 characters.',\n      id: 'proto.alpha.michelson_v1.entrypoint_name_too_long'\n    },\n    {\n      msg: 'There is non trivial garbage code after a FAIL instruction.',\n      id: 'proto.alpha.michelson_v1.fail_not_in_tail_position'\n    },\n    {\n      msg: 'The toplevel error thrown when trying to parse a type expression (always followed by more precise errors).',\n      id: 'proto.alpha.michelson_v1.ill_formed_type'\n    },\n    {\n      msg: 'The toplevel error thrown when trying to typecheck a contract code against given input, output and storage types (always followed by more precise errors).',\n      id: 'proto.alpha.michelson_v1.ill_typed_contract'\n    },\n    {\n      msg: 'The toplevel error thrown when trying to typecheck a data expression against a given type (always followed by more precise errors).',\n      id: 'proto.alpha.michelson_v1.ill_typed_data'\n    },\n    {\n      msg: 'The annotations on two types could not be merged',\n      id: 'proto.alpha.michelson_v1.inconsistent_annotations'\n    },\n    {\n      msg: 'The specified field does not match the field annotation in the type',\n      id: 'proto.alpha.michelson_v1.inconsistent_field_annotations'\n    },\n    {\n      msg: 'A stack was of an unexpected length (this error is always in the context of a located error).',\n      id: 'proto.alpha.michelson_v1.inconsistent_stack_lengths'\n    },\n    {\n      msg: 'The two types contain annotations that do not match',\n      id: 'proto.alpha.michelson_v1.inconsistent_type_annotations'\n    },\n    {\n      msg: 'This is the basic type clash error, that appears in several places where the equality of two types have to be proven, it is always accompanied with another error that provides more context.',\n      id: 'proto.alpha.michelson_v1.inconsistent_types'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was applied to an unsupported number of arguments.',\n      id: 'proto.alpha.michelson_v1.invalid_arity'\n    },\n    {\n      msg: 'A script or data expression references a big_map that does not exist or assumes a wrong type for an existing big_map.',\n      id: 'proto.alpha.michelson_v1.invalid_big_map'\n    },\n    {\n      msg: 'A data expression was invalid for its expected type.',\n      id: 'proto.alpha.michelson_v1.invalid_constant'\n    },\n    {\n      msg: 'A script or data expression references a contract that does not exist or assumes a wrong type for an existing contract.',\n      id: 'proto.alpha.michelson_v1.invalid_contract'\n    },\n    {\n      msg: 'In a script or data expression, an expression was of the wrong kind (for instance a string where only a primitive applications can appear).',\n      id: 'proto.alpha.michelson_v1.invalid_expression_kind'\n    },\n    {\n      msg: 'The body of an ITER instruction must result in the same stack type as before the ITER.',\n      id: 'proto.alpha.michelson_v1.invalid_iter_body'\n    },\n    {\n      msg: 'FAIL cannot be the only instruction in the body. The propper type of the return list cannot be inferred.',\n      id: 'proto.alpha.michelson_v1.invalid_map_block_fail'\n    },\n    {\n      msg: 'The body of a map block did not match the expected type',\n      id: 'proto.alpha.michelson_v1.invalid_map_body'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was unknown.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive'\n    },\n    {\n      msg: 'In a script or data expression, a primitive name is unknown or has a wrong case.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive_name'\n    },\n    {\n      msg: 'In a script or data expression, a primitive name is neither uppercase, lowercase or capitalized.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive_name_case'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was of the wrong namespace.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive_namespace'\n    },\n    {\n      msg: 'When parsing script, a field was expected, but not provided',\n      id: 'proto.alpha.michelson_v1.missing_script_field'\n    },\n    {\n      msg: 'An entrypoint was not found when calling a contract.',\n      id: 'proto.alpha.michelson_v1.no_such_entrypoint'\n    },\n    {\n      msg: 'Toplevel error for all runtime script errors',\n      id: 'proto.alpha.michelson_v1.runtime_error'\n    },\n    {\n      msg: 'A FAIL instruction was reached due to the detection of an overflow',\n      id: 'proto.alpha.michelson_v1.script_overflow'\n    },\n    {\n      msg: 'A FAILWITH instruction was reached',\n      id: 'proto.alpha.michelson_v1.script_rejected'\n    },\n    {\n      msg: 'A SELF instruction was encountered in a lambda expression.',\n      id: 'proto.alpha.michelson_v1.self_in_lambda'\n    },\n    {\n      msg: 'An instruction generated a type larger than the limit.',\n      id: 'proto.alpha.michelson_v1.type_too_large'\n    },\n    {\n      msg: 'A binary operation is called on operands of types over which it is not defined.',\n      id: 'proto.alpha.michelson_v1.undefined_binop'\n    },\n    {\n      msg: 'A unary operation is called on an operand of type over which it is not defined.',\n      id: 'proto.alpha.michelson_v1.undefined_unop'\n    },\n    {\n      msg: 'A node in the syntax tree was impropperly annotated',\n      id: 'proto.alpha.michelson_v1.unexpected_annotation'\n    },\n    {\n      msg: 'When parsing script, a big_map type was found in a position where it could end up stored inside a big_map, which is forbidden for now.',\n      id: 'proto.alpha.michelson_v1.unexpected_bigmap'\n    },\n    {\n      msg: 'When parsing script, a contract type was found in the storage or parameter field.',\n      id: 'proto.alpha.michelson_v1.unexpected_contract'\n    },\n    {\n      msg: 'When parsing script, an operation type was found in the storage or parameter field.',\n      id: 'proto.alpha.michelson_v1.unexpected_operation'\n    },\n    {\n      msg: 'Annotations of the same kind must be grouped',\n      id: 'proto.alpha.michelson_v1.ungrouped_annotations'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was unknown.',\n      id: 'proto.alpha.michelson_v1.unknown_primitive_name'\n    },\n    {\n      msg: 'At the join point at the end of two code branches the stacks have inconsistent lengths or contents.',\n      id: 'proto.alpha.michelson_v1.unmatched_branches'\n    },\n    {\n      msg: 'Map keys must be in strictly increasing order',\n      id: 'proto.alpha.michelson_v1.unordered_map_literal'\n    },\n    {\n      msg: 'Set values must be in strictly increasing order',\n      id: 'proto.alpha.michelson_v1.unordered_set_literal'\n    },\n    {\n      msg: 'An entrypoint in the contract is not reachable.',\n      id: 'proto.alpha.michelson_v1.unreachable_entrypoint'\n    },\n    {\n      msg: 'Duplicated revelation for a nonce.',\n      id: 'proto.alpha.nonce.previously_revealed'\n    },\n    {\n      msg: 'Nonce revelation happens before cycle end',\n      id: 'proto.alpha.nonce.too_early_revelation'\n    },\n    {\n      msg: 'Nonce revelation happens too late',\n      id: 'proto.alpha.nonce.too_late_revelation'\n    },\n    {\n      msg: 'The provided nonce is inconsistent with the committed nonce hash.',\n      id: 'proto.alpha.nonce.unexpected'\n    },\n    {\n      msg: 'The operation is ill-formed or for another protocol version',\n      id: 'proto.alpha.operation.cannot_parse'\n    },\n    {\n      msg: 'Two endorsements received from same delegate',\n      id: 'proto.alpha.operation.duplicate_endorsement'\n    },\n    {\n      msg: 'The given key and secret do not correspond to any existing preallocated contract',\n      id: 'proto.alpha.operation.invalid_activation'\n    },\n    {\n      msg: 'The level of an endorsement is inconsistent with the provided block hash.',\n      id: 'proto.alpha.operation.invalid_endorsement_level'\n    },\n    {\n      msg: 'The operation signature is ill-formed or has been made with the wrong public key',\n      id: 'proto.alpha.operation.invalid_signature'\n    },\n    {\n      msg: 'The operation is of a kind that must be signed, but the signature is missing',\n      id: 'proto.alpha.operation.missing_signature'\n    },\n    {\n      msg: 'The block being validated does not include the required minimum number of endorsements for this priority.',\n      id: 'proto.alpha.operation.not_enought_endorsements_for_priority'\n    },\n    {\n      msg: 'Trying to include an endorsement in a block that is not the successor of the endorsed one',\n      id: 'proto.alpha.operation.wrong_endorsement_predecessor'\n    },\n    {\n      msg: 'Trying to onclude a proposal or ballot meant for another voting period',\n      id: 'proto.alpha.operation.wrong_voting_period'\n    },\n    {\n      msg: 'The requested seed is not available',\n      id: 'proto.alpha.seed.unknown_seed'\n    },\n    {\n      msg: 'A script or one of its callee wrote more bytes than the operation said it would',\n      id: 'proto.alpha.storage_exhausted.operation'\n    },\n    {\n      msg: 'A transaction tried to exceed the hard limit on storage',\n      id: 'proto.alpha.storage_limit_too_high'\n    },\n    {\n      msg: 'An addition of two tez amounts overflowed',\n      id: 'proto.alpha.tez.addition_overflow'\n    },\n    {\n      msg: 'Multiplication of a tez amount by a non positive integer',\n      id: 'proto.alpha.tez.invalid_divisor'\n    },\n    {\n      msg: 'A multiplication of a tez amount by an integer overflowed',\n      id: 'proto.alpha.tez.multiplication_overflow'\n    },\n    {\n      msg: 'Multiplication of a tez amount by a negative integer',\n      id: 'proto.alpha.tez.negative_multiplicator'\n    },\n    {\n      msg: 'An subtraction of two tez amounts underflowed',\n      id: 'proto.alpha.tez.subtraction_underflow'\n    },\n    {\n      msg: 'Overflow when adding timestamps.',\n      id: 'proto.alpha.timestamp_add'\n    },\n    {\n      msg: 'Substracting timestamps resulted in negative period.',\n      id: 'proto.alpha.timestamp_sub'\n    },\n    {\n      msg: 'A transaction exceeded the hard limit of internal operations it can emit',\n      id: 'proto.alpha.too_many_internal_operations'\n    },\n    {\n      msg: 'The delegate reached the maximum number of allowed proposals.',\n      id: 'proto.alpha.too_many_proposals'\n    },\n    {\n      msg: 'The delegate provided for the ballot is not in the voting listings.',\n      id: 'proto.alpha.unauthorized_ballot'\n    },\n    {\n      msg: 'The delegate provided for the proposal is not in the voting listings.',\n      id: 'proto.alpha.unauthorized_proposal'\n    },\n    {\n      msg: 'An origination was attemped out of the scope of a manager operation',\n      id: 'proto.alpha.undefined_operation_nonce'\n    },\n    {\n      msg: 'Ballot recorded outside of a voting period.',\n      id: 'proto.alpha.unexpected_ballot'\n    },\n    {\n      msg: 'Level must be non-negative.',\n      id: 'proto.alpha.unexpected_level'\n    },\n    {\n      msg: 'Nonce length is incorrect.',\n      id: 'proto.alpha.unexpected_nonce_length'\n    },\n    {\n      msg: 'Proposal recorded outside of a proposal period.',\n      id: 'proto.alpha.unexpected_proposal'\n    },\n    {\n      msg: 'Block locator is invalid.',\n      id: 'node.bootstrap_pipeline.invalid_locator'\n    },\n    {\n      msg: 'Block locator is too short.',\n      id: 'node.bootstrap_pipeline.too_short_locator'\n    },\n    {\n      msg: 'IO error: connection with a peer is closed.',\n      id: 'node.p2p_io_scheduler.connection_closed'\n    },\n    {\n      msg: 'Fail to connect with a peer: a connection is already established.',\n      id: 'node.p2p_pool.connected'\n    },\n    {\n      msg: 'Connection was refused.',\n      id: 'node.p2p_pool.connection_refused'\n    },\n    {\n      msg: 'The peer identity you tried to connect is banned.',\n      id: 'node.p2p_pool.peer_banned'\n    },\n    {\n      msg: 'Fail to connect with a peer: a connection is already pending.',\n      id: 'node.p2p_pool.pending_connection'\n    },\n    {\n      msg: 'The address you tried to connect is banned.',\n      id: 'node.p2p_pool.point_banned'\n    },\n    {\n      msg: 'Node is in private mode.',\n      id: 'node.p2p_pool.private_mode'\n    },\n    {\n      msg: 'Connection to peer was rejected by us.',\n      id: 'node.p2p_pool.rejected'\n    },\n    {\n      msg: 'Too many connections.',\n      id: 'node.p2p_pool.too_many_connections'\n    },\n    {\n      msg: 'An error occurred while deciphering.',\n      id: 'node.p2p_socket.decipher_error'\n    },\n    {\n      msg: 'An error occurred while decoding.',\n      id: 'node.p2p_socket.decoding_error'\n    },\n    {\n      msg: 'An error occurred while encoding.',\n      id: 'node.p2p_socket.encoding_error'\n    },\n    {\n      msg: 'Rejected peer connection: invalid authentication.',\n      id: 'node.p2p_socket.invalid_auth'\n    },\n    {\n      msg: 'Size of chunks is not valid.',\n      id: 'node.p2p_socket.invalid_chunks_size'\n    },\n    {\n      msg: 'The size of the message to be written is invalid.',\n      id: 'node.p2p_socket.invalid_message_size'\n    },\n    {\n      msg: 'Remote peer is actually yourself.',\n      id: 'node.p2p_socket.myself'\n    },\n    {\n      msg: 'Remote peer cannot be authenticated: not enough proof of work.',\n      id: 'node.p2p_socket.not_enough_proof_of_work'\n    },\n    {\n      msg: 'Rejected peer connection: The peer rejected the socket connection by Nack with a list of alternative peers.',\n      id: 'node.p2p_socket.rejected_by_nack'\n    },\n    {\n      msg: 'Rejected peer connection: rejected socket connection as we have no common network protocol with the peer.',\n      id: 'node.p2p_socket.rejected_no_common_protocol'\n    },\n    {\n      msg: 'Rejected peer connection: rejected socket connection.',\n      id: 'node.p2p_socket.rejected_socket_connection'\n    },\n    {\n      msg: 'Rejecting peer connection with motive.',\n      id: 'node.p2p_socket.rejecting_incoming'\n    },\n    {\n      msg: \"Known invalid block found in the peer's chain\",\n      id: 'node.peer_validator.known_invalid'\n    },\n    {\n      msg: \"Unknown ancestor block found in the peer's chain\",\n      id: 'node.peer_validator.unknown_ancestor'\n    },\n    {\n      msg: 'The block was annotated with a time too far in the future.',\n      id: 'node.prevalidation.future_block_header'\n    },\n    {\n      msg: 'The operation size is bigger than allowed.',\n      id: 'node.prevalidation.oversized_operation'\n    },\n    {\n      msg: 'Raised when an operation has not been parsed correctly during prevalidation.',\n      id: 'node.prevalidation.parse_error'\n    },\n    {\n      msg: 'The prevalidation context is full.',\n      id: 'node.prevalidation.too_many_operations'\n    },\n    {\n      msg: 'Invalid protocol.',\n      id: 'node.protocol_validator.invalid_protocol'\n    },\n    {\n      msg: 'The data directory could not be read. This could be because it was generated with an old version of the tezos-node program. Deleting and regenerating this directory may fix the problem.',\n      id: 'node.state.bad_data_dir'\n    },\n    {\n      msg: 'When commiting the context of a block, the announced context hash was not the one computed at commit time.',\n      id: 'node.state.block.inconsistent_context_hash'\n    },\n    {\n      msg: 'The invalid block to be unmarked was not actually invalid.',\n      id: 'node.state.block_not_invalid'\n    },\n    {\n      msg: 'The chain identifier could not be found in the chain identifiers table.',\n      id: 'node.state.unknown_chain'\n    },\n    {\n      msg: 'The block belongs to a branch that is not compatible with the current checkpoint.',\n      id: 'node.validator.checkpoint_error'\n    },\n    {\n      msg: 'Attempted validation of a block from an inactive chain.',\n      id: 'node.validator.inactive_chain'\n    },\n    {\n      msg: 'Incorrect history mode switch.',\n      id: 'node_config_file.incorrect_history_mode_switch'\n    },\n    {\n      msg: 'Missing key in store',\n      id: 'raw_store.unknown'\n    },\n    {\n      msg: 'The provided list of operations is inconsistent with the block header.',\n      id: 'validator.inconsistent_operations_hash'\n    },\n    {\n      msg: 'Invalid block.',\n      id: 'validator.invalid_block'\n    },\n    {\n      msg: 'Missing test protocol when forking the test chain',\n      id: 'validator.missing_test_protocol'\n    },\n    {\n      msg: 'The protocol required for validating a block is missing.',\n      id: 'validator.unavailable_protocol'\n    },\n    {\n      msg: 'Failed to validate block using exteranl validation process.',\n      id: 'validator.validation_process_failed'\n    },\n    {\n      msg: 'An operation on a worker could not complete before it was shut down.',\n      id: 'worker.closed'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an annotation exceeded the maximum length (255).',\n      id: 'micheline.parse_error.annotation_exceeds_max_length'\n    },\n    {\n      msg: 'Tried to interpret an empty piece or Micheline source as a single expression.',\n      id: 'micheline.parse_error.empty_expression'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an extra semi colon or parenthesis was encountered.',\n      id: 'micheline.parse_error.extra_token'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a sequence of bytes that is not valid UTF-8 was encountered.',\n      id: 'micheline.parse_error.invalid_utf8_sequence'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an expression was not aligned with its siblings of the same mother application or sequence.',\n      id: 'micheline.parse_error.misaligned_node'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a number was not visually separated from its follower token, leading to misreadability.',\n      id: 'micheline.parse_error.missing_break_after_number'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, the length of a byte sequence (0x...) was not a multiple of two, leaving a trailing half byte.',\n      id: 'micheline.parse_error.odd_lengthed_bytes'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a parenthesis or a brace was unclosed.',\n      id: 'micheline.parse_error.unclosed_token'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an unexpected escape sequence was encountered in a string.',\n      id: 'micheline.parse_error.undefined_escape_sequence'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an unexpected character was encountered.',\n      id: 'micheline.parse_error.unexpected_character'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an unexpected token was encountered.',\n      id: 'micheline.parse_error.unexpected_token'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a commentX was not terminated.',\n      id: 'micheline.parse_error.unterminated_comment'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an integer was not terminated.',\n      id: 'micheline.parse_error.unterminated_integer'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a string was not terminated.',\n      id: 'micheline.parse_error.unterminated_string'\n    },\n    {\n      msg: 'Wrong hash given',\n      id: 'Bad_hash'\n    },\n    {\n      msg: 'The context checkout failed using a given hash',\n      id: 'Block_validator_process.failed_to_checkout_context'\n    },\n    {\n      msg: 'Cannot reconstruct',\n      id: 'CannotReconstruct'\n    },\n    {\n      msg: 'Cannot find context corresponding to hash',\n      id: 'Context_not_found'\n    },\n    {\n      msg: 'The imported block is not the expected one.',\n      id: 'InconsistentImportedBlock'\n    },\n    {\n      msg: 'The operations given do not match their hashes.',\n      id: 'InconsistentOperationHashes'\n    },\n    {\n      msg: 'The data provided by the snapshot is inconsistent',\n      id: 'Inconsistent_snapshot_data'\n    },\n    {\n      msg: 'Error while opening snapshot file',\n      id: 'Inconsistent_snapshot_file'\n    },\n    {\n      msg: 'Invalid specification of block to import',\n      id: 'InvalidBlockSpecification'\n    },\n    {\n      msg: 'The version of the snapshot to import is not valid',\n      id: 'Invalid_snapshot_version'\n    },\n    {\n      msg: 'Mandatory data missing while reaching end of snapshot file.',\n      id: 'Missing_snapshot_data'\n    },\n    {\n      msg: 'RPC lookup failed. Block has been pruned and requested data deleted.',\n      id: 'RPC_context.Gone'\n    },\n    {\n      msg: 'RPC lookup failed. No RPC exists at the URL or the RPC tried to access non-existent data.',\n      id: 'RPC_context.Not_found'\n    },\n    {\n      msg: 'Internal error while restoring the context',\n      id: 'Restore_context_failure'\n    },\n    {\n      msg: 'The imported snapshot is malformed.',\n      id: 'SnapshotImportFailure'\n    },\n    {\n      msg: 'Failed to read file',\n      id: 'System_read_error'\n    },\n    {\n      msg: 'The validator failed because of a system error',\n      id: 'Validator_process.system_error_while_validating'\n    },\n    {\n      msg: 'Cannot write in file for context dump',\n      id: 'Writing_error'\n    },\n    {\n      msg: 'The block to export in the snapshot is not valid.',\n      id: 'WrongBlockExport'\n    },\n    {\n      msg: 'Wrong protocol hash',\n      id: 'WrongProtocolHash'\n    },\n    {\n      msg: 'Snapshot exports is not compatible with the current configuration.',\n      id: 'WrongSnapshotExport'\n    },\n    {\n      msg: 'A fatal assertion failed',\n      id: 'assertion'\n    },\n    {\n      msg: 'A promise was unexpectedly canceled',\n      id: 'canceled'\n    },\n    {\n      msg: 'A key has been provided with an invalid uri.',\n      id: 'cli.key.invalid_uri'\n    },\n    {\n      msg: 'The signer produced an invalid signature',\n      id: 'cli.signature_mismatch'\n    },\n    {\n      msg: 'A key has been provided with an unregistered scheme (no corresponding plugin)',\n      id: 'cli.unregistered_key_scheme'\n    },\n    {\n      msg: 'The byte sequence references a multisig counter that does not match the one currently stored in the given multisig contract',\n      id: 'client.alpha.Bad deserialized counter'\n    },\n    {\n      msg: 'When trying to deserialise an action from a sequence of bytes, we got an expression that does not correspond to a known multisig action',\n      id: 'client.alpha.actionDeserialisation'\n    },\n    {\n      msg: 'When trying to deserialise an action from a sequence of bytes, we got an action for another multisig contract',\n      id: 'client.alpha.badDeserializedContract'\n    },\n    {\n      msg: 'invalid duration in -endorsement-delay',\n      id: 'client.alpha.badEndorsementDelayArg'\n    },\n    {\n      msg: 'invalid priority in -max-priority',\n      id: 'client.alpha.badMaxPriorityArg'\n    },\n    {\n      msg: 'invalid duration in -max-waiting-time',\n      id: 'client.alpha.badMaxWaitingTimeArg'\n    },\n    {\n      msg: 'invalid fee threshold in -fee-threshold',\n      id: 'client.alpha.badMinimalFeesArg'\n    },\n    {\n      msg: 'invalid number of levels in -preserved-levels',\n      id: 'client.alpha.badPreservedLevelsArg'\n    },\n    {\n      msg: 'Invalid ꜩ notation in parameter.',\n      id: 'client.alpha.badTezArg'\n    },\n    {\n      msg: 'When trying to deserialise an action from a sequence of bytes, we got an error',\n      id: 'client.alpha.bytesDeserialisation'\n    },\n    {\n      msg: 'A multisig command has referenced a scriptless smart contract instead of a multisig smart contract.',\n      id: 'client.alpha.contractHasNoScript'\n    },\n    {\n      msg: 'A multisig command has referenced a smart contract without storage instead of a multisig smart contract.',\n      id: 'client.alpha.contractHasNoStorage'\n    },\n    {\n      msg: 'A multisig command has referenced a smart contract whose storage is of a different shape than the expected one.',\n      id: 'client.alpha.contractHasUnexpectedStorage'\n    },\n    {\n      msg: 'Attempt to get the code of a contract failed because it has nocode. No scriptless contract should remain.',\n      id: 'client.alpha.contractWithoutCode'\n    },\n    {\n      msg: 'A signature was given for a multisig contract that matched none of the public keys of the contract signers',\n      id: 'client.alpha.invalidSignature'\n    },\n    {\n      msg: 'A wrong number of arguments was provided to a macro',\n      id: 'client.alpha.michelson.macros.bas_arity'\n    },\n    {\n      msg: 'An macro expects a sequence, but a sequence was not provided',\n      id: 'client.alpha.michelson.macros.sequence_expected'\n    },\n    {\n      msg: 'A macro had an annotation, but no annotation was permitted on this macro.',\n      id: 'client.alpha.michelson.macros.unexpected_annotation'\n    },\n    {\n      msg: 'A multisig threshold should be a positive number',\n      id: 'client.alpha.nonPositiveThreshold'\n    },\n    {\n      msg: 'A multisig command has referenced a smart contract whose script is not one of the known multisig contract scripts.',\n      id: 'client.alpha.notASupportedMultisigContract'\n    },\n    {\n      msg: 'To run an action on a multisig contract, you should provide at least as many signatures as indicated by the threshold stored in the multisig contract.',\n      id: 'client.alpha.notEnoughSignatures'\n    },\n    {\n      msg: 'The given threshold is higher than the number of keys, this would lead to a frozen multisig contract',\n      id: 'client.alpha.thresholdTooHigh'\n    },\n    {\n      msg: 'Cannot recover from a corrupted context.',\n      id: 'context.non_recoverable_context'\n    },\n    {\n      msg: '<gf>context_dump.read.cannot_open'\n    },\n    {\n      msg: '<gf>context_dump.read.suspicious'\n    },\n    {\n      msg: '<gf>context_dump.write.cannot_open'\n    },\n    {\n      msg: 'Exception safely wrapped in an error',\n      id: 'failure'\n    },\n    {\n      msg: 'Activation of an Internal Event SINK with an URI failed',\n      id: 'internal-event-activation-error'\n    },\n    {\n      msg: 'The raw context extraction depth argument must be positive.',\n      id: 'raw_context.invalid_depth'\n    },\n    {\n      msg: 'No protocol was registered with the requested hash.',\n      id: 'registered_protocol.unregistered_protocol'\n    },\n    {\n      msg: 'The fetch of a Operation_hash has been canceled',\n      id: 'requester.Operation_hash.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a Operation_hash has timed out',\n      id: 'requester.Operation_hash.fetch_timeout'\n    },\n    {\n      msg: 'Some Operation_hash is missing from the requester',\n      id: 'requester.Operation_hash.missing'\n    },\n    {\n      msg: 'The fetch of a Protocol_hash has been canceled',\n      id: 'requester.Protocol_hash.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a Protocol_hash has timed out',\n      id: 'requester.Protocol_hash.fetch_timeout'\n    },\n    {\n      msg: 'Some Protocol_hash is missing from the requester',\n      id: 'requester.Protocol_hash.missing'\n    },\n    {\n      msg: 'The fetch of a block_hash has been canceled',\n      id: 'requester.block_hash.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a block_hash has timed out',\n      id: 'requester.block_hash.fetch_timeout'\n    },\n    {\n      msg: 'Some block_hash is missing from the requester',\n      id: 'requester.block_hash.missing'\n    },\n    {\n      msg: 'The fetch of a operation_hashes has been canceled',\n      id: 'requester.operation_hashes.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a operation_hashes has timed out',\n      id: 'requester.operation_hashes.fetch_timeout'\n    },\n    {\n      msg: 'Some operation_hashes is missing from the requester',\n      id: 'requester.operation_hashes.missing'\n    },\n    {\n      msg: 'The fetch of a operations has been canceled',\n      id: 'requester.operations.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a operations has timed out',\n      id: 'requester.operations.fetch_timeout'\n    },\n    {\n      msg: 'Some operations is missing from the requester',\n      id: 'requester.operations.missing'\n    },\n    {\n      msg: 'Error while decoding a remote signer message',\n      id: 'signer.decoding_error'\n    },\n    {\n      msg: 'Error while encoding a remote signer message',\n      id: 'signer.encoding_error'\n    },\n    {\n      msg: 'Block not found',\n      id: 'state.block.contents_not_found'\n    },\n    {\n      msg: 'Block not found',\n      id: 'state.block.not_found'\n    },\n    {\n      msg: 'Unix System_info failure',\n      id: 'unix.system_info'\n    },\n    {\n      msg: 'An unhandled unix exception',\n      id: 'unix_error'\n    },\n    {\n      msg: 'Canceled',\n      id: 'utils.Canceled'\n    },\n    {\n      msg: 'Timeout',\n      id: 'utils.Timeout'\n    },\n    {\n      msg: 'Fee exceeded hard cap!',\n      id: 'TooHighFee'\n    },\n    {\n      msg: 'Node error: Timeout has occurred! Please try again later.',\n      id: 'Timeout has occurred'\n    }\n  ];\n  transform(errorId: string, withObj?: any, location?: number): any {\n    const protocol = errorId.match(/[0-9]{3}-P\\w{7}/g);\n    if (protocol && protocol[0]) {\n      errorId = errorId.replace(protocol[0], 'alpha');\n    }\n    let errorMessage = '';\n    const index = this.ERROR_LIST.findIndex((s) => s.id === errorId);\n    console.log('errorId', errorId);\n    if (errorId === 'proto.alpha.michelson_v1.script_rejected' && withObj) {\n      if (withObj.string) {\n        errorMessage = `${this.ERROR_LIST[index].msg} | ${withObj.string}`;\n      } else if (withObj?.int === '4' && location === 206) {\n        errorMessage = 'Tokens deposited is greater than maximum tokens deposited. Please retry in a while.';\n      } else {\n        let jsonWith = JSON.stringify(withObj);\n        if (jsonWith.length > 200) {\n          jsonWith = '[...]';\n          console.error('FAILWITH', withObj);\n        }\n        errorMessage = `${this.ERROR_LIST[index].msg} ${jsonWith}`;\n      }\n      console.log(withObj);\n    } else if (index !== -1) {\n      errorMessage = this.ERROR_LIST[index].msg;\n    } else {\n      if (errorId.indexOf('branch refused (Error:') !== -1 && errorId.indexOf('already used for contract') !== -1) {\n        errorMessage =\n          'Counter error: Another operation in mempool is blocking your operation. Wait for it to be included in a block or pruned from mempool (up to 60 minutes).';\n      } else {\n        if (errorId?.startsWith('Failed to parse the request body')) {\n          const lines = errorId.split('At /kind, unexpected string instead of ');\n          for (let line of lines) {\n            if (line.startsWith('reveal\\n  Unhandled error')) {\n              return line.replace('reveal\\n  ', '');\n            }\n          }\n        }\n        errorMessage = 'Unrecognized error: ' + errorId;\n      }\n    }\n    return errorMessage;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'removeComma'\n})\nexport class RemoveCommaPipe implements PipeTransform {\n  transform(value: string): string {\n    if (value !== undefined && value !== null) {\n      return value.replace(/,/g, '');\n    } else {\n      return '';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core'; // Multiple instances created ?\nimport * as timediff from 'timediff';\n\n@Pipe({\n  name: 'timeAgo',\n  pure: true // if false pipe will be called at each changes - necessary for translation - is there a better way?\n})\nexport class TimeAgoPipe implements PipeTransform {\n  constructor(private translate: TranslateService) {}\n  transform(timestamp: number): string {\n    const now = this.translate.instant('TIMEAGOPIPE.JUSTNOW');\n    const sec = this.translate.instant('TIMEAGOPIPE.SEC');\n    const secs = sec;\n    const mn = this.translate.instant('TIMEAGOPIPE.MINUTE');\n    const mns = mn;\n    const hr = this.translate.instant('TIMEAGOPIPE.HOUR');\n    const hrs = this.translate.instant('TIMEAGOPIPE.HOURS');\n    const day = this.translate.instant('TIMEAGOPIPE.DAY');\n    const days = this.translate.instant('TIMEAGOPIPE.DAYS');\n    const month = this.translate.instant('TIMEAGOPIPE.MONTH');\n    const months = this.translate.instant('TIMEAGOPIPE.MONTHS');\n    const year = this.translate.instant('TIMEAGOPIPE.YEAR');\n    const years = this.translate.instant('TIMEAGOPIPE.YEARS');\n\n    const timeNow = new Date().getTime();\n    const diff = timediff(timestamp, timeNow, 'YMDHmS');\n\n    const keys = Object.keys(diff);\n    let count = 0;\n    let output = '';\n\n    for (const key of keys) {\n      if (diff[key] || count) {\n        if (count) {\n          output = output + ' ';\n        }\n        switch (key) {\n          case 'years':\n            output = `${diff[key]}${diff[key] === 1 ? year : years}`;\n            break;\n          case 'months':\n            output = output + `${diff[key]}${diff[key] === 1 ? month : months}`;\n            break;\n          case 'days':\n            output = output + `${diff[key]}${diff[key] === 1 ? day : days}`;\n            break;\n          case 'hours':\n            output = output + `${diff[key]}${diff[key] === 1 ? hr : hrs}`;\n            break;\n          case 'minutes':\n            output = output + `${diff[key]}${diff[key] === 1 ? mn : mns}`;\n            break;\n          case 'seconds':\n            if (!diff.minutes && diff.seconds < 60) {\n              output = now;\n            } else if (diff.minutes < 2) {\n              output = output + `${diff[key]}${diff[key] === 1 ? sec : secs}`;\n            }\n            break;\n        }\n        if (count++) {\n          break;\n        }\n      }\n    }\n    return output;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet/wallet.service';\nimport { of, Observable, from as fromPromise } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\nimport { delay, takeUntil } from 'rxjs/operators';\nimport { Activity, Account, OpStatus } from '../wallet/wallet';\nimport { MessageService } from '../message/message.service';\nimport { LookupService } from '../lookup/lookup.service';\nimport { IndexerService } from '../indexer/indexer.service';\nimport { TokenService } from '../token/token.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { SubjectService } from '../subject/subject.service';\n\n@Injectable()\nexport class ActivityService {\n  readonly maxTransactions = 10;\n  public tokenBalanceUpdated = new BehaviorSubject(null);\n  constructor(\n    private walletService: WalletService,\n    private messageService: MessageService,\n    private lookupService: LookupService,\n    private indexerService: IndexerService,\n    private tokenService: TokenService,\n    private subjectService: SubjectService\n  ) {}\n  updateTransactions(pkh): Observable<any> {\n    try {\n      const account = this.walletService.wallet.getAccount(pkh);\n      return this.getTransactonsCounter(account).pipe(\n        flatMap((ans: any) => {\n          return of(ans);\n        })\n      );\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  getTransactonsCounter(account: Account): Observable<any> {\n    const knownTokenIds: string[] = this.tokenService.knownTokenIds();\n    return fromPromise(this.indexerService.accountInfo(account.address, knownTokenIds)).pipe(\n      flatMap((data) => {\n        const counter = data.counter;\n        const unknownTokenIds = data.unknownTokenIds ? data.unknownTokenIds : [];\n        this.tokenService.searchAllMetadata(unknownTokenIds);\n        this.tokenService.recheckMetadata(data?.tokens);\n        if (account.state !== counter) {\n          if (data.tokens) {\n            this.updateTokenBalances(account, data.tokens);\n          } else {\n            this.updateTokenBalances(account, []);\n          }\n          return this.getAllTransactions(account, counter);\n        } else {\n          if (!account.state) {\n            if (!account.activities || !account.tokens) {\n              if (!account.activities) {\n                account.activities = [];\n              }\n              if (!account.tokens) {\n                account.tokens = [];\n              }\n              this.updateTokenBalances(account, []);\n              this.walletService.storeWallet();\n            }\n          }\n          return of({\n            upToDate: true,\n            balance: data?.balance ? data.balance : 0\n          });\n        }\n      })\n    );\n  }\n  async updateTokenBalances(account, tokens) {\n    if (Array.isArray(tokens)) {\n      const idsWithBalance: string[] = [];\n      if (!tokens.length) {\n        account.updateTokenBalance('', '');\n      } else {\n        for (const token of tokens) {\n          idsWithBalance.push(token.tokenId);\n          account.updateTokenBalance(token.tokenId, token.balance.toString());\n        }\n        const currentTokenIds = account.getTokenBalances().map((token) => {\n          return token.tokenId;\n        });\n        for (const tokenId of currentTokenIds) {\n          if (!idsWithBalance.includes(tokenId)) {\n            account.updateTokenBalance(tokenId, '0');\n          }\n        }\n      }\n      this.tokenBalanceUpdated.next(true);\n      this.walletService.storeWallet();\n    }\n  }\n  getAllTransactions(account: Account, counter: string): Observable<any> {\n    const knownTokenIds: string[] = this.tokenService.knownTokenIds();\n    return fromPromise(this.indexerService.getOperations(account.address, knownTokenIds, this.walletService.wallet)).pipe(\n      flatMap((resp) => {\n        const operations = resp.operations;\n        this.tokenService.searchAllMetadata(resp.unknownTokenIds);\n        if (Array.isArray(operations)) {\n          const oldActivities = account.activities;\n          const unconfirmedOps = [];\n          if (oldActivities && oldActivities.length) {\n            for (let op of oldActivities) {\n              if (op.status === OpStatus.UNCONFIRMED || op.status === OpStatus.HALF_CONFIRMED) {\n                let save = true;\n                for (const opNew of operations) {\n                  if (opNew.hash === op.hash) {\n                    save = false;\n                    break;\n                  }\n                }\n                if (save) {\n                  unconfirmedOps.push(op);\n                }\n              }\n            }\n          }\n          account.activities = unconfirmedOps.concat(operations);\n          const oldState = account.state;\n          account.state = counter;\n          this.walletService.storeWallet();\n          if (oldState !== '') {\n            // Exclude inital loading\n            this.promptNewActivities(account, oldActivities, operations);\n          }\n          for (const activity of operations) {\n            const counterParty = this.getCounterparty(activity, account, false);\n            this.lookupService.check(counterParty);\n          }\n        }\n        return of({\n          upToDate: false\n        });\n      })\n    );\n  }\n  promptNewActivities(account: Account, oldActivities: Activity[], newActivities: Activity[]) {\n    for (const activity of newActivities) {\n      const index = oldActivities.findIndex((a) => a.hash === activity.hash && a.status === OpStatus.CONFIRMED);\n      if (index === -1) {\n        const now = new Date().getTime();\n        const timeDiff = now - (activity?.timestamp ? activity.timestamp : now);\n        if (timeDiff < 1800000) {\n          // 1/2 hour\n          if (activity.hash) {\n            setTimeout(() => {\n              this.subjectService.confirmedOp.next(activity.hash);\n            }, 0);\n          }\n          if (activity.type === 'transaction') {\n            if (account.address === activity.source.address) {\n              this.messageService.addSuccess(account.shortAddress() + ': Sent ' + this.tokenService.formatAmount(activity.tokenId, activity.amount.toString()));\n            }\n            if (account.address === activity.destination.address) {\n              const ref = activity.tokenId ? Date.now().toString() + activity.tokenId : '';\n              this.messageService.addSuccess(\n                (account.shortAddress() + ': Received ' + this.tokenService.formatAmount(activity.tokenId, activity.amount.toString())).replace(\n                  '[Unknown token]',\n                  'Token'\n                ),\n                undefined,\n                ref\n              );\n              if (activity.tokenId && this.tokenService.getAsset(activity.tokenId) === null) {\n                // unknown token\n                this.subjectService.metadataUpdated.pipe(takeUntil(of(true).pipe(delay(8000)))).subscribe((token: any) => {\n                  // unsub after 8s\n                  if (token?.contractAddress && token.id !== undefined) {\n                    const tokenId = token.contractAddress + ':' + token.id.toString();\n                    if (activity.tokenId === tokenId) {\n                      this.messageService.modify(\n                        account.shortAddress() + ': Received ' + this.tokenService.formatAmount(activity.tokenId, activity.amount.toString()),\n                        ref\n                      );\n                    }\n                  }\n                });\n              }\n            }\n          } else if (activity.type === 'delegation') {\n            this.messageService.addSuccess(account.shortAddress() + ': Delegate updated');\n          } else if (activity.type === 'origination') {\n            this.messageService.addSuccess(account.shortAddress() + ': Contract originated');\n          } else if (activity.type === 'activation') {\n            this.messageService.addSuccess(account.shortAddress() + ': Account activated');\n          }\n          const counter = this.getCounterparty(activity, account, false);\n          if (counter?.address) {\n            this.lookupService.check(counter.address, true);\n          }\n        }\n      }\n    }\n  }\n  getCounterparty(transaction: Activity, account: Account, withLookup = true): any {\n    let counterParty = { address: '' };\n    if (transaction.type === 'delegation') {\n      if (transaction.destination) {\n        counterParty = transaction.destination;\n      } else {\n        counterParty = { address: '' }; // User has undelegated\n      }\n    } else if (transaction.type === 'transaction') {\n      if (account.address === transaction.source.address) {\n        counterParty = transaction.destination; // to\n      } else {\n        counterParty = transaction.source; // from\n      }\n    } else if (transaction.type === 'origination') {\n      if (account.address === transaction.source.address) {\n        counterParty = transaction.destination ? transaction.destination : { address: '' };\n      } else {\n        counterParty = transaction.source;\n      }\n    } else {\n      counterParty = { address: '' };\n    }\n    if (withLookup) {\n      return this.lookupService.resolve(counterParty);\n    } else {\n      return counterParty;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet/wallet.service';\nimport { TzrateService } from '../tzrate/tzrate.service';\nimport { OperationService } from '../operation/operation.service';\nimport { Account } from '../wallet/wallet';\n\n@Injectable()\nexport class BalanceService {\n  constructor(private walletService: WalletService, private tzrateService: TzrateService, private operationService: OperationService) {}\n\n  getBalanceAll() {\n    for (const account of this.walletService.wallet.getAccounts()) {\n      this.getAccountBalance(account);\n    }\n  }\n  getAccountBalance(account: Account) {\n    console.log('for ' + account.address);\n    this.operationService.getBalance(account.address).subscribe((ans: any) => {\n      if (ans.success) {\n        this.updateAccountBalance(account, Number(ans.payload.balance));\n      } else {\n        console.log('Balance Error: ' + JSON.stringify(ans.payload.msg));\n      }\n    });\n  }\n  updateAccountBalance(account: Account, newBalance: number) {\n    if (account && (account.balanceXTZ === null || account.balanceXTZ === undefined || newBalance !== account.balanceXTZ)) {\n      account.balanceXTZ = newBalance;\n      this.updateTotalBalance();\n      this.tzrateService.updateFiatBalances();\n      this.walletService.storeWallet();\n    }\n  }\n  updateTotalBalance() {\n    let balance = 0;\n    let change = false;\n    for (const account of this.walletService.wallet.getAccounts()) {\n      if (!(account.balanceXTZ === null || account.balanceXTZ === undefined)) {\n        balance = balance + Number(account.balanceXTZ);\n        change = true;\n      }\n    }\n    if (change) {\n      this.walletService.wallet.totalBalanceXTZ = balance;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MessageService } from '../../services/message/message.service';\nimport {\n  WalletClient,\n  BeaconMessageType,\n  PermissionResponseInput,\n  SignPayloadResponseInput,\n  P2PPairingRequest,\n  BeaconErrorType,\n  BEACON_VERSION,\n  ErrorResponse,\n  getSenderId,\n  ExtendedP2PPairingResponse\n} from '@airgap/beacon-sdk';\nimport { Asset } from '../token/token.service';\nimport { TzktService } from '../indexer/tzkt/tzkt.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BeaconService {\n  client: WalletClient = null;\n  peers = [];\n  permissions = [];\n  constructor(private messageService: MessageService, private tzktService: TzktService) {}\n  preNotifyPairing(pairInfoJson: string) {\n    const pairInfo: P2PPairingRequest = JSON.parse(pairInfoJson);\n    if (this.isNewPairingRequest(pairInfo)) {\n      this.messageService.addBeaconWait(`Pairing with ${pairInfo.name}. Please wait!`);\n    }\n  }\n  isNewPairingRequest(pairInfo: P2PPairingRequest): boolean {\n    const peersJson = localStorage.getItem('beacon:communication-peers-wallet');\n    let newPublicKey = true;\n    if (peersJson) {\n      const peers = JSON.parse(peersJson);\n      if (peers && peers.length > 0 && pairInfo.publicKey) {\n        for (const peer of peers) {\n          if (peer.publicKey && peer.publicKey === pairInfo.publicKey) {\n            newPublicKey = false;\n            console.log('Existing public key found!');\n            break;\n          }\n        }\n      }\n    }\n    return newPublicKey;\n  }\n  async addPeer(pairInfoJson: string, force = true) {\n    const pairInfo = JSON.parse(pairInfoJson);\n    console.log('PairInfo', pairInfo);\n    await this.client.addPeer(pairInfo, force);\n    this.syncBeaconState();\n    this.messageService.removeBeaconMsg();\n  }\n  async syncBeaconState() {\n    this.peers = await this.getPeers();\n    this.permissions = await this.getPermissions();\n  }\n  async removePeers() {\n    while (this.peers.length > 0) {\n      await this.removePeer(0);\n    }\n  }\n  async removePeer(index: number) {\n    const pairInfo: P2PPairingRequest = this.peers[index];\n    const senderId = await getSenderId(pairInfo.publicKey);\n    const peerResponse: ExtendedP2PPairingResponse = {\n      ...pairInfo,\n      type: 'p2p-pairing-response',\n      senderId\n    };\n    await this.client.removePeer(peerResponse);\n    await this.client.removeAppMetadata(senderId);\n    this.syncBeaconState();\n  }\n  async removePermissions() {\n    await this.client.removeAllPermissions();\n    this.syncBeaconState();\n  }\n  async removePermission(index: number) {\n    await this.client.removePermission(this.permissions[index].accountIdentifier);\n    this.syncBeaconState();\n  }\n  async getPeers(): Promise<any> {\n    return await this.client.getPeers();\n  }\n  async getPermissions(): Promise<any> {\n    return await this.client.getPermissions();\n  }\n  async getAppMetadataList(): Promise<any> {\n    return await this.client.getAppMetadataList();\n  }\n  async rejectOnPermission(message: any) {\n    await this.respondWithError(BeaconErrorType.NOT_GRANTED_ERROR, message);\n  }\n  async rejectOnNetwork(message: any) {\n    await this.respondWithError(BeaconErrorType.NETWORK_NOT_SUPPORTED, message);\n  }\n  async rejectOnUserAbort(message: any) {\n    await this.respondWithError(BeaconErrorType.ABORTED_ERROR, message);\n  }\n  async rejectOnSourceAddress(message: any) {\n    await this.respondWithError(BeaconErrorType.NO_PRIVATE_KEY_FOUND_ERROR, message);\n  }\n  async rejectOnTooManyOps(message: any) {\n    await this.respondWithError(BeaconErrorType.TOO_MANY_OPERATIONS, message);\n  }\n  async rejectOnUnknown(message: any) {\n    await this.respondWithError(BeaconErrorType.UNKNOWN_ERROR, message);\n  }\n  async rejectOnParameters(message: any) {\n    await this.respondWithError(BeaconErrorType.PARAMETERS_INVALID_ERROR, message);\n  }\n  async rejectOnBroadcastError(message: any) {\n    await this.respondWithError(BeaconErrorType.BROADCAST_ERROR, message);\n  }\n  async respondWithError(errorType: BeaconErrorType, requestMessage: any) {\n    if (requestMessage) {\n      const response: ErrorResponse = {\n        type: BeaconMessageType.Error,\n        errorType,\n        version: BEACON_VERSION,\n        id: requestMessage.id,\n        senderId: await this.client.beaconId\n      };\n      await this.client.respond(response);\n    }\n  }\n  async approvePermissionRequest(message: any, publicKey: string) {\n    const response: PermissionResponseInput = {\n      type: BeaconMessageType.PermissionResponse,\n      network: message.network,\n      scopes: message.scopes,\n      id: message.id,\n      publicKey: publicKey\n    };\n    await this.client.respond(response);\n  }\n  async approveSignPayloadRequest(message: any, signature: string) {\n    const response: SignPayloadResponseInput = {\n      type: BeaconMessageType.SignPayloadResponse,\n      id: message.id,\n      signingType: message.signingType,\n      signature\n    };\n    await this.client.respond(response);\n  }\n  async responseSync() {\n    localStorage.setItem('beacon:request-response', 'true');\n    localStorage.removeItem('beacon:request-response');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ChartSeries } from '../../../app/components/ui/chart/chart.component';\nimport { SwapLiquidityService } from '../swap-liquidity/swap-liquidity.service';\n\nexport enum ChartTitle {\n  XTZtzBTC = 'XTZ/tzBTC',\n  tzBTCXTZ = 'tzBTC/XTZ',\n  totalValueLocked = 'Total Value Locked'\n}\n\nlet width, height, gradient;\nfunction getGradientBackground(ctx, chartArea) {\n  const style = getComputedStyle(document.body);\n  const theme = style.getPropertyValue('--theme').replace(/[ \\\"]/g, '');\n  const chartWidth = chartArea.right - chartArea.left;\n  const chartHeight = chartArea.bottom - chartArea.top;\n  if (gradient === null || width !== chartWidth || height !== chartHeight) {\n    width = chartWidth;\n    height = chartHeight;\n    gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n    if (theme === 'dark') {\n      gradient.addColorStop(1, '#383d7d');\n      gradient.addColorStop(0.5, '#2e304f');\n      gradient.addColorStop(0, '#2a2c3f');\n    } else {\n      gradient.addColorStop(1, '#c2c5fc');\n      gradient.addColorStop(0.5, '#e0e1fb');\n      gradient.addColorStop(0, '#e8eafb');\n    }\n  }\n\n  return gradient;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ChartService {\n  ChartTitle = ChartTitle;\n  stats = null;\n  constructor(private swapLiquidityService: SwapLiquidityService) {}\n\n  async fetchLBGraphData(series: ChartSeries = ChartSeries.day): Promise<{ labels: any[]; datasets: any[] }> {\n    let tzbtc = await this.fetchHistoricalQuotesByContract(this.swapLiquidityService.tzBTCContract + '_0', series);\n    let stats = (this.stats = !this.stats ? await this.fetchHistoricalStatsByContract(this.swapLiquidityService.lqdContract, series) : this.stats);\n    let interval = 1000 * 60 * 60 * 24;\n    const a = [];\n    const b = [];\n    const d = [];\n    const labels = [];\n    let now = new Date().getTime();\n    if (series === ChartSeries.month) {\n      interval = 1000 * 60 * 60 * 24;\n      tzbtc = tzbtc.slice(0, 32);\n      stats = stats.slice(0, 32);\n    } else if (series === ChartSeries.day) {\n      interval = 1000 * 60 * 60;\n      tzbtc = tzbtc.slice(0, 25);\n      stats = stats.slice(0, 25);\n    } else if (series === ChartSeries.week) {\n      interval = 1000 * 60 * 60 * 4;\n      tzbtc = tzbtc.slice(0, 7 * 24).filter((e, i) => i % 4 === 0);\n      stats = stats.slice(0, 7 * 24).filter((e, i) => i % 4 === 0);\n    } else if (series === ChartSeries.year) {\n      interval = 1000 * 60 * 60 * 24 * 31;\n      tzbtc = tzbtc.slice(0, 365).filter((e, i) => i % 31 === 0);\n      stats = stats.slice(0, 365).filter((e, i) => i % 31 === 0);\n    }\n    tzbtc = tzbtc.reverse();\n    stats = stats.reverse();\n    for (let i = 0; i < tzbtc.length; ++i) {\n      a.push(1 / parseFloat(tzbtc[i].close));\n      b.push(parseFloat(tzbtc[i].close));\n      if (stats[i]?.tvlUsd) {\n        d.push(parseFloat(stats[i].tvlUsd));\n      }\n      const c = new Date((now -= interval));\n      if (series === ChartSeries.month) {\n        labels.push(c.toLocaleString('en-US', { month: 'short' }) + ' ' + c.getDate());\n      } else if (series === ChartSeries.day) {\n        labels.push('' + c.getHours() + ':00');\n      } else if (series === ChartSeries.week) {\n        labels.push(c.toLocaleString('en-US', { month: 'short' }) + ' ' + c.getDate() + ' ' + (c.getHours() + 1) + ':00');\n      } else if (series === ChartSeries.year) {\n        labels.push(c.toLocaleString('en-US', { month: 'short' }) + ' ' + c.getDate());\n      }\n    }\n    const defaultDatasetValues = {\n      hidden: true,\n      backgroundColor: function (context) {\n        const chart = context.chart;\n        const { ctx, chartArea } = chart;\n\n        if (!chartArea) {\n          return null;\n        }\n        return getGradientBackground(ctx, chartArea);\n      },\n      borderColor: '#5963ff88',\n      borderRadius: 1,\n      borderWidth: 3,\n      pointBorderWidth: 0,\n      pointBackgroundColor: '#5963ff88',\n      pointBorderColor: '#5963ff88',\n      pointRadius: 0,\n      pointHoverBorderWidth: 6,\n      pointHoverColor: '#5963ff88',\n      pointHitRadius: 6,\n      fill: true\n    };\n    const datasets = [\n      {\n        label: ChartTitle.XTZtzBTC,\n        data: a,\n        ...defaultDatasetValues\n      },\n      {\n        label: ChartTitle.tzBTCXTZ,\n        data: b,\n        ...defaultDatasetValues\n      },\n      {\n        label: ChartTitle.totalValueLocked,\n        data: d,\n        ...defaultDatasetValues\n      }\n    ];\n    return { datasets, labels: labels.reverse() };\n  }\n\n  async fetchHistoricalQuotesByContract(\n    contract: string = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5',\n    series: ChartSeries = ChartSeries.day,\n    offset: number = 0\n  ): Promise<any> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    let req;\n    if (series === ChartSeries.month || series === ChartSeries.year) {\n      req = {\n        query: `{quotes1d(offset: ${offset} limit: 100 where: {exchangeId:{_eq: \"${this.swapLiquidityService.lqdContract}\"} tokenId: {_eq: \"${contract}\"}, close: {_is_null: false}}) { close }}`\n      };\n    } else if (series === ChartSeries.day || series === ChartSeries.week) {\n      req = {\n        query: `{quotes1h(offset: ${offset} limit: 100 where: {exchangeId:{_eq: \"${this.swapLiquidityService.lqdContract}\"} tokenId: {_eq: \"${contract}\"}, close: {_is_null: false}}) { close }}`\n      };\n    }\n    try {\n      let result = await (\n        await fetch(baseUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json();\n      if (series === ChartSeries.week) {\n        if (result.data?.quotes1h.length === 100) {\n          result = result?.data?.quotes1h;\n          offset += 100;\n          return result.concat(await this.fetchHistoricalQuotesByContract(this.swapLiquidityService.tzBTCContract + '_0', series, offset));\n        } else {\n          return result?.data?.quotes1h;\n        }\n      }\n      if (series === ChartSeries.month) {\n        return result?.data?.quotes1d;\n      } else if (series === ChartSeries.day) {\n        return result?.data?.quotes1h;\n      } else if (series === ChartSeries.year) {\n        if (result.data?.quotes1d.length === 100) {\n          result = result?.data?.quotes1d;\n          offset += 100;\n          return result.concat(await this.fetchHistoricalQuotesByContract(this.swapLiquidityService.tzBTCContract + '_0', series, offset));\n        } else {\n          return result?.data?.quotes1d;\n        }\n      }\n    } catch (e) {\n      return [];\n    }\n  }\n\n  async fetchHistoricalStatsByContract(\n    contract: string = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5',\n    series: string = 'day',\n    offset: number = 0\n  ): Promise<Array<any>> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    let req;\n    if (series === 'day') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    } else if (series === 'week') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    } else if (series === 'month') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    } else if (series === 'year') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    }\n    try {\n      let result = await (\n        await fetch(baseUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json();\n      if (series === ChartSeries.week) {\n        if (result.data?.stats1d.length === 100) {\n          result = result?.data?.stats1d;\n          offset += 100;\n          return result.concat(await this.fetchHistoricalStatsByContract(this.swapLiquidityService.tzBTCContract + '_0', series, offset));\n        } else {\n          return result?.data?.stats1d;\n        }\n      }\n      if (series === ChartSeries.month) {\n        return result?.data?.stats1d;\n      } else if (series === ChartSeries.day) {\n        return result?.data?.stats1d;\n      } else if (series === ChartSeries.year) {\n        return result?.data?.stats1d;\n      }\n    } catch {\n      return [];\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { WalletService } from '../../wallet/wallet.service';\nimport { Account, OpStatus } from '../../wallet/wallet';\nimport { ActivityService } from '../../activity/activity.service';\nimport { OperationService } from '../../operation/operation.service';\nimport { BalanceService } from '../../balance/balance.service';\nimport { DelegateService } from '../../delegate/delegate.service';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalService {\n  connection: any = null;\n  constructor(\n    private walletService: WalletService,\n    private activityService: ActivityService,\n    private operationService: OperationService,\n    private balanceService: BalanceService,\n    private delegateService: DelegateService\n  ) {}\n  async init() {\n    this.connection = new HubConnectionBuilder().withUrl(`${CONSTANTS.API_URL}/events`).build();\n    this.connection.on('operations', (msg) => {\n      for (const op of msg.data) {\n        if (op?.status === 'applied') {\n          console.log('%csignalR msg', 'color: green;', op);\n          const sender: string = op?.sender?.address ?? '';\n          const target: string = op?.target?.address ?? '';\n          const opHash: string = op?.hash ?? '';\n          const invoke: boolean = !!op?.parameter;\n          this.confirmStatus(opHash, sender, op.timestamp, invoke);\n          this.confirmStatus(opHash, target, op.timestamp, invoke);\n        }\n      }\n    });\n    this.connection.onclose(async () => {\n      await this.start();\n    });\n    this.start();\n  }\n  confirmStatus(opHash: string, address: string, timestamp: string, invoke: boolean) {\n    if (opHash && address && this.walletService.wallet) {\n      if (this.walletService.wallet) {\n        const account: Account = this.walletService.wallet.getAccount(address);\n        if (account) {\n          for (let i in account.activities) {\n            if (account.activities[i].hash === opHash && account.activities[i].status === OpStatus.UNCONFIRMED) {\n              account.activities[i].timestamp = new Date(timestamp).getTime();\n              if (invoke) {\n                account.activities[i].status = OpStatus.HALF_CONFIRMED;\n              } else {\n                account.activities[i].status = OpStatus.CONFIRMED;\n                this.activityService.promptNewActivities(account, [], [account.activities[i]]);\n                this.updateAccountData(address);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  updateAccountData(pkh: string) {\n    this.operationService.getAccount(pkh).subscribe((ans: any) => {\n      if (ans.success) {\n        this.balanceService.updateAccountBalance(this.walletService.wallet?.getAccount(pkh), Number(ans.payload.balance));\n        const acc = this.walletService.wallet?.getAccount(pkh);\n        this.delegateService.handleDelegateResponse(acc, ans.payload.delegate);\n      } else {\n      }\n    });\n  }\n\n  async start() {\n    try {\n      if (!!this.connection?.start) {\n        await this.connection?.start();\n        console.log('%cSignalR Connected!', 'color:green;');\n      } else {\n        setTimeout(() => {\n          this.start();\n        }, 5000);\n      }\n    } catch (err) {\n      console.log(err);\n      setTimeout(() => {\n        this.start();\n      }, 5000);\n    }\n  }\n\n  async subscribeToAccount(address: string) {\n    console.log('Listen to: ' + address);\n    try {\n      await this.connection.invoke('SubscribeToOperations', {\n        address,\n        types: 'transaction,delegation,origination'\n      });\n    } catch (e) {}\n  }\n  ngOnDestroy(): void {\n    try {\n      this.connection.stop();\n      console.log('%cSignalR Disconnected!', 'color:red;');\n    } catch (e) {}\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivityService } from '../activity/activity.service';\nimport { TzrateService } from '../tzrate/tzrate.service';\nimport { BalanceService } from '../balance/balance.service';\nimport { WalletService } from '../wallet/wallet.service';\nimport { DelegateService } from '../delegate/delegate.service';\nimport { OperationService } from '../operation/operation.service';\nimport { Account, OpStatus } from '../wallet/wallet';\nimport Big from 'big.js';\nimport { TokenService } from '../token/token.service';\nimport { LookupService } from '../lookup/lookup.service';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { SubjectService } from '../subject/subject.service';\nimport { interval } from 'rxjs';\nimport { SignalService } from '../indexer/signal/signal.service';\nimport { UnlockableService } from '../unlockable/unlockable.service';\nimport { DipDupService } from '../indexer/dipdup/dipdup.service';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nexport interface ScheduleData {\n  pkh: string;\n  state: State;\n  interval: any;\n  stateCounter: number;\n}\nenum State {\n  UpToDate,\n  Wait,\n  Updating\n}\n\n@Injectable()\nexport class CoordinatorService {\n  scheduler: Map<string, any> = new Map<string, any>(); // pkh + delay\n  defaultDelayActivity = CONSTANTS.MAINNET ? 30000 : 15000; // 30/15s\n  shortDelayActivity = 5000; // 5s\n  longDelayActivity = 120000; // 2m\n  defaultDelayPrice = 300000; // 5m\n  tzrateInterval: any;\n  accounts: Account[];\n  constructor(\n    private activityService: ActivityService,\n    private tzrateService: TzrateService,\n    private walletService: WalletService,\n    private balanceService: BalanceService,\n    private delegateService: DelegateService,\n    private operationService: OperationService,\n    private tokenService: TokenService,\n    private dipdupService: DipDupService,\n    private lookupService: LookupService,\n    private subjectService: SubjectService,\n    private signalService: SignalService,\n    private unlockableService: UnlockableService,\n    public router: Router,\n    private location: Location\n  ) {\n    this.subjectService.logout.subscribe((o) => {\n      if (!!o) {\n        this.stopAll();\n      }\n    });\n    this.subjectService.activeAccount.subscribe((activeAccount) => {\n      if (this.walletService.wallet) {\n        this.accounts = this.walletService.wallet.getAccounts();\n        this.accounts.forEach(({ address }) => {\n          if (address === activeAccount?.address) {\n            this.start(activeAccount.address, this.defaultDelayActivity);\n          } else {\n            this.start(address, this.longDelayActivity);\n          }\n        });\n        this.startXTZ();\n      }\n    });\n  }\n  startXTZ() {\n    if (!this.tzrateInterval) {\n      console.log('Start scheduler XTZ');\n      this.signalService.init();\n      const update = () => {\n        this.tzrateService.getTzrate();\n        this.dipdupService.fetchTokensMidPrice();\n        this.lookupService.recheckWalletAddresses(true);\n      };\n      this.tzrateInterval = interval(this.defaultDelayPrice).subscribe(() => update());\n      update();\n    }\n  }\n  async start(pkh: string, delay: number) {\n    this.unlockableService.restoreFeatures();\n    if (pkh && !this.scheduler.get(pkh)) {\n      this.accounts = this.walletService.wallet.getAccounts();\n      console.log('Start scheduler ' + this.scheduler.size + ' ' + pkh);\n      const scheduleData: ScheduleData = {\n        pkh: pkh,\n        state: State.UpToDate,\n        interval: interval(this.defaultDelayActivity).subscribe(() => this.update(pkh)),\n        stateCounter: 0\n      };\n      this.scheduler.set(pkh, scheduleData);\n      this.update(pkh);\n      this.updateAccountData(pkh);\n    } else if (pkh && this.scheduler.get(pkh)) {\n      this.setDelay(pkh, delay);\n    }\n  }\n  async boost(pkh: string, metadata: any = null) {\n    const path = this.location.path();\n    const embedded = path.startsWith('/embedded');\n    if (embedded) {\n      return;\n    }\n    // Expect action\n    console.log('boost ' + pkh);\n    if (this.walletService.addressExists(pkh)) {\n      if (metadata) {\n        this.addUnconfirmedOperations(pkh, metadata);\n      }\n      if (!this.scheduler.get(pkh)) {\n        await this.start(pkh, this.defaultDelayActivity);\n      }\n      this.signalService.subscribeToAccount(pkh);\n      if (this.scheduler.get(pkh).state !== State.Wait) {\n        this.changeState(pkh, State.Wait);\n        this.update(pkh);\n        const counter = this.scheduler.get(pkh).stateCounter;\n        setTimeout(() => {\n          // Failsafe\n          if (this.scheduler?.size && this.scheduler.get(pkh).stateCounter === counter) {\n            console.log('Timeout from wait state');\n            this.changeState(pkh, State.UpToDate);\n          }\n        }, 75000);\n      }\n    }\n  }\n  async update(pkh) {\n    this.setDelay(pkh, this.defaultDelayActivity);\n    this.activityService.updateTransactions(pkh).subscribe(\n      (ans: any) => {\n        switch (this.scheduler.get(pkh) ? this.scheduler.get(pkh).state : -1) {\n          case State.UpToDate: {\n            if (!ans.upToDate) {\n              this.changeState(pkh, State.Updating);\n            } else if (ans?.balance) {\n              const balance = this.walletService.wallet?.getAccount(pkh).balanceXTZ;\n              if (balance !== ans.balance) {\n                console.log('recheck balance');\n                this.updateAccountData(pkh);\n              }\n            }\n            break;\n          }\n          case State.Wait: {\n            if (!ans.upToDate) {\n              this.changeState(pkh, State.Updating);\n            } else {\n              this.setDelay(pkh, this.shortDelayActivity);\n            }\n            break;\n          }\n          case State.Updating: {\n            if (ans.upToDate) {\n              this.changeState(pkh, State.UpToDate);\n            } else {\n              this.setDelay(pkh, this.shortDelayActivity);\n            }\n            break;\n          }\n          default: {\n            console.log('No state found!');\n            break;\n          }\n        }\n        const acc = this.walletService.wallet?.getAccount(pkh);\n        if (acc?.activities?.length) {\n          const latestActivity = acc.activities[0];\n          if (latestActivity.status === OpStatus.UNCONFIRMED) {\n            const age = new Date().getTime() - new Date(latestActivity.timestamp).getTime();\n            if (age > 3600000) {\n              // 60m\n              acc.activities.shift();\n              this.walletService.storeWallet();\n            }\n          }\n        }\n      },\n      (err) => {\n        console.log('Error in update()');\n        console.error(err);\n      },\n      () => {\n        console.log(\n          `account[${this.accounts.findIndex((a) => a.address === pkh)}][${\n            typeof this.scheduler.get(pkh)?.state !== 'undefined' ? this.scheduler.get(pkh).state : '*'\n          }]: <<`\n        );\n      }\n    );\n  }\n  changeState(pkh: string, newState: State) {\n    const scheduleData: ScheduleData = this.scheduler.get(pkh);\n    scheduleData.state = newState;\n    if (newState === State.UpToDate || newState === State.Updating) {\n      this.updateAccountData(pkh);\n    }\n    if (newState === State.Wait || newState === State.Updating) {\n      scheduleData.interval.unsubscribe();\n      scheduleData.interval = interval(this.shortDelayActivity).subscribe(() => this.update(pkh));\n    }\n    scheduleData.stateCounter++;\n    this.scheduler.set(pkh, scheduleData);\n  }\n  setDelay(pkh: string, time: number) {\n    const scheduleData: ScheduleData = this.scheduler.get(pkh);\n    if (scheduleData.interval) {\n      scheduleData.interval.unsubscribe();\n    }\n    scheduleData.interval = interval(time).subscribe(() => this.update(pkh));\n    this.scheduler.set(pkh, scheduleData);\n  }\n  stopAll() {\n    if (this.walletService.wallet) {\n      if (this.accounts?.length) {\n        console.log('Stop all schedulers');\n        for (const account of this.accounts) {\n          this.stop(account.address);\n        }\n      }\n      if (this.tzrateInterval) {\n        this.tzrateInterval.unsubscribe();\n        this.tzrateInterval = null;\n      }\n    }\n  }\n  async stop(pkh) {\n    console.log('Stop scheduler ' + this.accounts.findIndex((a) => a.address === pkh));\n    if (this.scheduler.get(pkh)) {\n      this.scheduler.get(pkh).interval.unsubscribe();\n      this.scheduler.get(pkh).interval = null;\n      this.scheduler.delete(pkh);\n    }\n  }\n  updateAccountData(pkh: string) {\n    // Maybe also check for originations to account?\n    console.log('update account data for ' + pkh);\n    this.operationService.getAccount(pkh).subscribe((ans: any) => {\n      if (ans.success) {\n        this.balanceService.updateAccountBalance(this.walletService.wallet?.getAccount(pkh), Number(ans.payload.balance));\n        const acc = this.walletService.wallet?.getAccount(pkh);\n        this.delegateService.handleDelegateResponse(acc, ans.payload.delegate);\n      } else {\n        console.log('updateAccountData -> getAccount failed ', ans.payload.msg);\n      }\n    });\n  }\n  addUnconfirmedOperations(from: string, metadata: any) {\n    const account = this.walletService.wallet?.getAccount(from);\n    if (!account.activities) {\n      return;\n    }\n    if (metadata.transactions) {\n      console.log('Unconfirmed transactions:');\n      console.log(metadata.transactions);\n      const decimals =\n        metadata.tokenTransfer && this.tokenService.getAsset(metadata.tokenTransfer) ? this.tokenService.getAsset(metadata.tokenTransfer).decimals : 6;\n      for (const op of metadata.transactions) {\n        const transaction = {\n          type: 'transaction',\n          status: OpStatus.UNCONFIRMED,\n          amount: Big(op.amount)\n            .times(10 ** decimals)\n            .toString(),\n          fee: null,\n          source: { address: from },\n          destination: { address: op.destination },\n          hash: metadata.opHash,\n          block: null,\n          timestamp: new Date().getTime(),\n          tokenId: metadata.tokenTransfer ? metadata.tokenTransfer : undefined,\n          entrypoint: op.parameters?.entrypoint ? op.parameters.entrypoint : ''\n        };\n        account.activities.unshift(transaction);\n        const destinationAccount = this.walletService.wallet?.getAccount(op.destination);\n        if (account) {\n          destinationAccount.activities.unshift({ ...transaction });\n        }\n      }\n    } else if (metadata.delegate !== undefined) {\n      const delegation = {\n        type: 'delegation',\n        status: OpStatus.UNCONFIRMED,\n        amount: null,\n        fee: null,\n        source: { address: from },\n        destination: { address: metadata.delegate },\n        hash: metadata.opHash,\n        block: null,\n        timestamp: new Date().getTime()\n      };\n      account?.activities.unshift(delegation);\n    } else if (metadata.origination !== undefined) {\n      const origination = {\n        type: 'origination',\n        status: OpStatus.UNCONFIRMED,\n        amount: metadata.origination.balance,\n        fee: null,\n        source: { address: from },\n        destination: { address: metadata.kt1 },\n        hash: metadata.opHash,\n        block: null,\n        timestamp: new Date().getTime()\n      };\n      account?.activities.unshift(origination);\n    } else {\n      console.log('Unknown metadata', metadata);\n    }\n    this.walletService.storeWallet();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { OperationService } from '../operation/operation.service';\nimport { WalletService } from '../../services/wallet/wallet.service';\nimport { MessageService } from '../../services/message/message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeeplinkService {\n  private pairingJson = '';\n  constructor(private operationService: OperationService, private walletService: WalletService, private messageService: MessageService) {}\n  set(params: Params) {\n    console.log(params);\n    this.pairingJson = this.extractPairingJson(params);\n    if (this.pairingJson && !this.walletService.wallet) {\n      this.messageService.addWarning('Access your wallet to complete the pairing');\n    }\n    console.log(this.pairingJson);\n  }\n  extractPairingJson(params: Params): string {\n    if (params.type === 'tzip10' && params.data) {\n      try {\n        return this.operationService.b58cdecode(params.data, '').toString();\n      } catch (e) {\n        return '';\n      }\n    } else if (params?.uri && params.uri.startsWith('wc:')) {\n      return params.uri;\n    }\n    return '';\n  }\n  popPairingJson(): string {\n    const pairingJson = this.pairingJson;\n    this.pairingJson = '';\n    return pairingJson;\n  }\n  QRtoPairingJson(qrPayload: string): string {\n    if (qrPayload.length > 26 && qrPayload.slice(0, 26) === 'tezos://?type=tzip10&data=') {\n      qrPayload = qrPayload.slice(26);\n    }\n    try {\n      return this.operationService.b58cdecode(qrPayload, '').toString();\n    } catch {}\n    return '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet/wallet.service';\nimport { OperationService } from '../operation/operation.service';\nimport { Account } from '../wallet/wallet';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Injectable()\nexport class DelegateService {\n  public readonly bb = 'https://api.baking-bad.org/v2';\n  public delegates = new BehaviorSubject<any>([]);\n\n  constructor(private walletService: WalletService, private operationService: OperationService, public router: Router, private location: Location) {\n    const path = this.location.path();\n    const embedded = path.startsWith('/embedded');\n    if (!embedded) {\n      this.getDelegates();\n    }\n  }\n  getDelegate(account: Account) {\n    this.operationService.getDelegate(account.address).subscribe(\n      (data: any) => {\n        if (data.success) {\n          this.handleDelegateResponse(account, data.payload.delegate);\n        }\n      },\n      (err) => console.log(JSON.stringify(err))\n    );\n  }\n  handleDelegateResponse(account: Account, data: any) {\n    if (data) {\n      if (account.delegate !== data) {\n        account.delegate = data;\n        this.walletService.storeWallet();\n      } else {\n        console.log('delegate for ' + account.address + ' up to date');\n      }\n    } else {\n      if (account.delegate !== '') {\n        account.delegate = '';\n        this.walletService.storeWallet();\n      }\n    }\n  }\n  getDelegates(): void {\n    fetch(`${this.bb}/bakers`)\n      .then((response) => response.json())\n      .then((d) => this.delegates.next(d));\n  }\n\n  resolveDelegateByAddress(address: string): Promise<any> {\n    return new Promise((resolve) => {\n      this.delegates.pipe(take(1)).subscribe((d) => resolve(d?.find((d) => d?.address === address)));\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as pbkdf2 from 'pbkdf2';\nimport * as AES from 'aes-js';\nimport * as scrypt from 'scryptsy';\nimport * as cryptob from 'crypto-browserify';\nimport * as forge from 'node-forge';\ndeclare const Buffer;\n@Injectable()\nexport class EncryptionService {\n  constructor() {}\n  async encrypt(plaintext: any, password: string, version: number, salt: string = null): Promise<any> {\n    if (version === 1) {\n      throw new Error('Encryption version no longer supported');\n    } else if (version === 2) {\n      return this.encrypt_v2(plaintext, password);\n    } else if (version === 3) {\n      return this.encrypt_v2(plaintext, password, salt);\n    } else {\n      throw new Error('Unrecognized encryption format');\n    }\n  }\n  async decrypt(chiphertext: string, password: string, salt: string, version: number): Promise<any> {\n    if (version === 1) {\n      return this.decrypt_v1(chiphertext, password, salt);\n    } else if (version === 2 || version === 3) {\n      return this.decrypt_v2(chiphertext, password, salt);\n    } else {\n      throw new Error('Unrecognized encryption format');\n    }\n  }\n  // Version 1\n  async encrypt_v1(plaintext: any, password: string, salt: string): Promise<string> {\n    return new Promise((resolve) => {\n      try {\n        if (!password || !salt) {\n          throw new Error('Missing password or salt');\n        }\n        pbkdf2.pbkdf2(password, salt, 10000, 32, 'sha512', (err, key) => {\n          if (err) {\n            throw err;\n          }\n          const aesCtr = new AES.ModeOfOperation.ctr(key);\n          let chiphertext = aesCtr.encrypt(plaintext);\n          chiphertext = AES.utils.hex.fromBytes(chiphertext);\n          resolve(chiphertext);\n        });\n      } catch (e) {\n        console.warn(e);\n        resolve('');\n      }\n    });\n  }\n  async decrypt_v1(chiphertext: string, password: string, salt: string): Promise<any> {\n    return new Promise((resolve) => {\n      try {\n        if (!password || !salt) {\n          throw new Error('Missing password or salt');\n        }\n        pbkdf2.pbkdf2(password, salt, 10000, 32, 'sha512', (err, key) => {\n          if (err) {\n            throw err;\n          }\n          chiphertext = AES.utils.hex.toBytes(chiphertext);\n          const aesCtr = new AES.ModeOfOperation.ctr(key);\n          const plaintext = aesCtr.decrypt(chiphertext);\n          resolve(plaintext);\n        });\n      } catch (e) {\n        resolve('');\n      }\n    });\n  }\n  // Version 2\n  async encrypt_v2(plaintext: any, password: string, salt?: string): Promise<any> {\n    if (!password) {\n      throw new Error('Missing password');\n    }\n    let salty;\n    if (salt) {\n      salty = new Buffer(salt, 'hex');\n    } else {\n      salty = cryptob.randomBytes(16);\n    }\n    const key = await scrypt.async(password, salty, 65536, 8, 1, 32);\n    const cipher: any = forge.cipher.createCipher('AES-GCM', key.toString('binary'));\n    cipher.start({\n      iv: salty\n    });\n    const byteStringBuffer = forge.util.createBuffer(plaintext.toString('binary'), 'utf-8');\n    cipher.update(byteStringBuffer);\n    cipher.finish();\n    const chiphertext = cipher.output.toHex() + '==' + cipher.mode.tag.toHex();\n    return { chiphertext: chiphertext, iv: salty.toString('hex') };\n  }\n  async decrypt_v2(chipher: string, password: string, salt: string): Promise<string> {\n    try {\n      if (!password || !salt) {\n        throw new Error('Missing password or salt');\n      }\n      const parts = chipher.split('==');\n      const chiphertext = parts[0];\n      const tag = parts[1];\n      const key = await scrypt.async(password, new Buffer(salt, 'hex'), 65536, 8, 1, 32);\n      const decipher: any = forge.cipher.createDecipher('AES-GCM', key.toString('binary'));\n      decipher.start({\n        iv: new Buffer(salt, 'hex'),\n        tag: forge.util.createBuffer(new Buffer(tag, 'hex').toString('binary'), 'utf-8') // authentication tag from encryption\n      });\n      decipher.update(forge.util.createBuffer(new Buffer(chiphertext, 'hex').toString('binary'), 'utf-8'));\n      const pass = decipher.finish();\n      if (pass) {\n        return new Buffer(decipher.output.toHex(), 'hex');\n      } else {\n        return null;\n      }\n    } catch (err) {\n      return null;\n    }\n  }\n  shiftIV(salt: string, offset: number) {\n    if (!Number.isInteger(offset) || offset > 255 || offset < 1) {\n      throw new Error('Invalid offset for IV');\n    }\n    const buf = new Buffer(salt, 'hex');\n    buf[13] = (buf[13] + offset) % 256;\n    return buf.toString('hex');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { OperationService } from '../operation/operation.service';\nimport { flatMap, catchError } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { DefaultTransactionParams, OpLimits } from '../../interfaces';\nimport Big from 'big.js';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { InputValidationService } from '../input-validation/input-validation.service';\n\nconst httpOptions = { headers: { 'Content-Type': 'application/json' } };\n@Injectable()\nexport class EstimateService {\n  readonly costPerByte = '250';\n  readonly revealGasLimit = 1000;\n  readonly contractsOverride: Record<string, OpLimits>;\n  queue = [];\n  nodeURL = CONSTANTS.NODE_URL;\n  pkh: string;\n  pk: string;\n  hash: string;\n  chainId: string;\n  manager: string;\n  counter: number;\n  constructor(private http: HttpClient, private operationService: OperationService, private imputValidationService: InputValidationService) {\n    this.contractsOverride = CONSTANTS.CONTRACT_OVERRIDES;\n  }\n  init(hash: string, chainId: string, counter: number, manager: string, pk: string, pkh: string) {\n    this.hash = hash;\n    this.chainId = chainId;\n    this.counter = counter;\n    this.manager = manager;\n    this.pk = pk;\n    this.pkh = pkh;\n  }\n  async preLoadData(pkh: string, pk: string) {\n    this.pkh = pkh;\n    this.pk = pk;\n    const [head, counter, manager] = await Promise.all([this.operationService.getHeader().toPromise(), this.getCounter(pkh), this.getManager(pkh)]);\n    if (head && counter && (manager || manager === null)) {\n      this.init(head.hash, head.chain_id, counter, manager, pk, pkh);\n    }\n  }\n  public async estimateTransactions(transactions: any, from: string, tokenTransfer: string = '', callback) {\n    this.estimate(transactions, from, tokenTransfer, callback, false);\n  }\n  public async estimateOrigination(origination: any, from: string, callback) {\n    this.estimate([origination], from, '', callback, true);\n  }\n  private async estimate(transactions: any, from: string, tokenTransfer: string = '', callback, isOrigination: boolean) {\n    this.queue.push({ transactions, from, callback });\n    if (this.queue.length === 1) {\n      while (this.queue.length > 0) {\n        while (this.queue.length > 1) {\n          this.queue[0].callback(null);\n          this.queue.shift();\n        }\n        let retry = false;\n        for (let i = 0; i < 1 || (retry && i < 2); i++) {\n          await this._estimate(this.queue[0].transactions, this.queue[0].from, tokenTransfer, isOrigination)\n            .then((res) => {\n              this.queue[0].callback(res);\n            })\n            .catch(async (error) => {\n              if (error.message && error.message === 'An operation assumed a contract counter in the past' && !retry) {\n                console.log('Update counter');\n                await this.preLoadData(this.pkh, this.pk);\n                retry = true;\n              } else {\n                this.queue[0].callback({ error });\n              }\n            });\n        }\n        this.queue.shift();\n      }\n    }\n  }\n  private async _estimate(operations: any, from: string, tokenTransfer: string, isOrigination: boolean = false): Promise<any> {\n    if (!this.hash) {\n      return null;\n    }\n    const simulation = {\n      fee: 0,\n      gasLimit: Math.min(\n        CONSTANTS.HARD_LIMITS.hard_gas_limit_per_operation,\n        Math.floor(CONSTANTS.HARD_LIMITS.hard_gas_limit_per_block / (operations.length + 1))\n      ),\n      storageLimit: CONSTANTS.HARD_LIMITS.hard_storage_limit_per_operation\n    };\n    for (const tx of operations) {\n      console.log(tx);\n      if (!isOrigination) {\n        if (!tx.amount) {\n          tx.amount = 0;\n        }\n        if (tx.destination.slice(0, 3) !== 'KT1' && !tokenTransfer) {\n          tx.amount = 0.000001;\n        }\n      }\n      tx.gasLimit = simulation.gasLimit;\n      tx.storageLimit = simulation.storageLimit;\n    }\n    if (this.hash && this.counter && (this.manager || this.manager === null)) {\n      const op = isOrigination\n        ? this.operationService.createOriginationObject(this.hash, this.counter, this.manager, operations[0], simulation.fee, this.pk, this.pkh)\n        : this.operationService.createTransactionObject(\n            this.hash,\n            this.counter,\n            this.manager,\n            operations,\n            this.pkh,\n            this.pk,\n            from,\n            simulation.fee,\n            tokenTransfer\n          );\n      const result = await this.simulate(op)\n        .toPromise()\n        .catch((e) => {\n          console.warn(e);\n          return null;\n        });\n      if (result && result.contents) {\n        let reveal = false;\n        const limits = [];\n        for (const i in result.contents) {\n          if (result.contents[i].kind === 'reveal') {\n            reveal = true;\n          } else if (['transaction', 'origination'].includes(result.contents[i].kind) && result.contents[i].metadata.operation_result.status === 'applied') {\n            const index: number = Number(i) + (result.contents[0]?.kind === 'reveal' ? -1 : 0);\n            const opObj = index > -1 ? operations[index] : null;\n            const { gas, storage } = this.getOpUsage(result.contents[i], opObj);\n            limits.push({ gasLimit: gas, storageLimit: storage });\n          } else {\n            return null;\n          }\n        }\n        return await this.operationService\n          .localForge(op)\n          .pipe(\n            flatMap((fop) => {\n              const bytes = fop.length / 2 + 64;\n              const gas = this.totalGasLimit(limits);\n              const storage = this.totalStorageLimit(limits);\n              const dtp: DefaultTransactionParams = {\n                customLimits: limits,\n                fee: this.recommendFee(limits, reveal, bytes),\n                burn: this.burnFee(limits),\n                gas,\n                storage,\n                reveal\n              };\n              console.log(JSON.stringify(dtp));\n              return of(dtp);\n            })\n          )\n          .toPromise();\n      } else if (typeof result?.success === 'boolean' && result.success === false) {\n        console.log(result);\n        throw new Error(result.payload.msg);\n      }\n    }\n    return null;\n  }\n  getOpUsage(content: any, op: any): OpLimits {\n    let gasUsage = 0;\n    let burn = Big(0);\n    if (content.source && content.source === this.pkh) {\n      burn = burn.minus(content.amount ? content.amount : '0');\n      burn = burn.minus(content.fee ? content.fee : '0');\n      burn = burn.minus(content.balance ? content.balance : '0');\n    }\n    if (content.destination && content.destination === this.pkh) {\n      burn = burn.plus(content.amount ? content.amount : '0');\n    }\n    if (content.metadata.operation_result.balance_updates) {\n      for (const balanceUpdate of content.metadata.operation_result.balance_updates) {\n        if (balanceUpdate.contract === this.pkh) {\n          burn = burn.minus(balanceUpdate.change);\n        }\n      }\n    }\n    if (content.metadata.balance_updates) {\n      for (const balanceUpdate of content.metadata.balance_updates) {\n        if (balanceUpdate.contract === this.pkh) {\n          burn = burn.minus(balanceUpdate.change);\n        }\n      }\n    }\n    gasUsage += content.metadata.operation_result.consumed_milligas ? Math.ceil(Number(content.metadata.operation_result.consumed_milligas) / 1000) : 0;\n    if (content.metadata.internal_operation_results) {\n      for (const internalResult of content.metadata.internal_operation_results) {\n        if (internalResult.result) {\n          if (internalResult.result.consumed_milligas) {\n            gasUsage +=\n              internalResult.result && internalResult.result.consumed_milligas ? Math.ceil(Number(internalResult.result.consumed_milligas) / 1000) : 0;\n          }\n          if (internalResult.result.balance_updates) {\n            for (const balanceUpdate of internalResult.result.balance_updates) {\n              if (balanceUpdate.contract === this.pkh && balanceUpdate.change.slice(0, 1) === '-') {\n                burn = burn.minus(balanceUpdate.change);\n              }\n            }\n          }\n        }\n      }\n    }\n    const storageUsage = Math.round(burn / Number(this.costPerByte));\n    if (\n      gasUsage < 0 ||\n      gasUsage > CONSTANTS.HARD_LIMITS.hard_gas_limit_per_operation ||\n      storageUsage < 0 ||\n      storageUsage > CONSTANTS.HARD_LIMITS.hard_storage_limit_per_operation\n    ) {\n      throw new Error('InvalidUsageCalculation');\n    }\n    return this.getOpLimits(content, op, gasUsage, storageUsage);\n  }\n  /*\n    Need to be updated when fee market appear or default behavior for bakers changes\n  */\n  recommendFee(limits: any, reveal: boolean, bytes: number): number {\n    const minimalFee = 100;\n    const feePerByte = 1;\n    const feePerGasUnit = 0.1;\n    let gasUnits = 0;\n    let numberOfOperations = 0;\n    if (reveal) {\n      gasUnits += this.revealGasLimit;\n      numberOfOperations++;\n    }\n    for (const data of limits) {\n      gasUnits += data.gasLimit;\n      numberOfOperations++;\n    }\n    bytes += 10 * numberOfOperations; // add 10 extra bytes for variation in amount & fee\n    return Number(\n      Big(Math.ceil(minimalFee + feePerByte * bytes + feePerGasUnit * gasUnits))\n        .div(1000000)\n        .toString()\n    );\n  }\n  totalGasLimit(limits: any): number {\n    let totalGasLimit = 0;\n    for (const data of limits) {\n      totalGasLimit += data.gasLimit;\n    }\n    return totalGasLimit;\n  }\n  totalStorageLimit(limits: any): number {\n    let totalStorageLimit = 0;\n    for (const data of limits) {\n      totalStorageLimit += data.storageLimit;\n    }\n    return totalStorageLimit;\n  }\n  burnFee(limits: any): number {\n    let totalStorageLimit = Big(0);\n    for (const data of limits) {\n      totalStorageLimit = totalStorageLimit.plus(data.storageLimit);\n    }\n    return Number(Big(totalStorageLimit).times(this.costPerByte).div('1000000').toString());\n  }\n  simulate(op: any): Observable<any> {\n    op.signature = 'edsigtXomBKi5CTRf5cjATJWSyaRvhfYNHqSUGrn4SdbYRcGwQrUGjzEfQDTuqHhuA8b2d8NarZjz8TRf65WkpQmo423BtomS8Q';\n    return this.operationService\n      .postRpc('chains/main/blocks/head/helpers/scripts/run_operation', {\n        operation: op,\n        chain_id: this.chainId\n      })\n      .pipe(\n        flatMap((res) => {\n          this.operationService.checkApplied([res]);\n          return of(res);\n        })\n      )\n      .pipe(\n        catchError((err) => {\n          return this.operationService.errHandler(err);\n        })\n      );\n  }\n  private getOpLimits(content: any, op: any, gasUsage: number, storageUsage: number): OpLimits {\n    // check for hardcoded override\n    let limit: OpLimits = {};\n    const entrypoint = content?.parameters?.entrypoint;\n    const destination = content?.destination;\n    if (entrypoint && destination) {\n      const contractOverride: OpLimits = this.contractsOverride[`${destination}:${entrypoint}`];\n      if (contractOverride) {\n        limit = contractOverride;\n      }\n    }\n    // gas\n    if (!limit.gas) {\n      let gasRecommendation: number = 0;\n      if (op?.gasRecommendation) {\n        if (this.imputValidationService.gas(op.gasRecommendation)) {\n          gasRecommendation = Number(op.gasRecommendation);\n        } else if (this.imputValidationService.relativeLimit(op.gasRecommendation)) {\n          let percentage: number = Number(op.gasRecommendation.slice(1, -1));\n          percentage = Math.min(Math.max(percentage, 2), 900);\n          gasRecommendation = Math.round(gasUsage * (1 + percentage / 100));\n        }\n      }\n      const gasEstimation = Math.max(Math.ceil(gasUsage * 1.02), Math.round(gasUsage + 80));\n      limit.gas = Math.max(gasRecommendation, gasEstimation); // make sure dapps don't underestimate (ithaca side effect)\n    }\n    // storage\n    if (!limit.storage) {\n      let storageRecommendation: number = 0;\n      if (op?.storageRecommendation) {\n        if (this.imputValidationService.storage(op.storageRecommendation)) {\n          storageRecommendation = Number(op.storageRecommendation);\n        } else if (this.imputValidationService.relativeLimit(op.storageRecommendation)) {\n          const percentage: number = Number(op.storageRecommendation.slice(1, -1));\n          storageRecommendation = Math.round(storageUsage * (1 + percentage / 100));\n        }\n      }\n      const storageEstimation = Math.round(storageUsage);\n      limit.storage = Math.max(storageRecommendation, storageEstimation);\n    }\n    return limit;\n  }\n  private async getCounter(pkh: string): Promise<number> {\n    return this.operationService.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/counter`).toPromise();\n  }\n  private async getManager(pkh: string): Promise<string> {\n    return this.operationService.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/manager_key`).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SubjectService } from '../../subject/subject.service';\nimport { SwapLiquidityService } from '../../swap-liquidity/swap-liquidity.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DipDupService {\n  private readonly storeKey = 'dipdup';\n  private readonly maxTokensReturned = 1000;\n  public tokens = new Map<string, any>();\n  constructor(private subjectService: SubjectService) {\n    this.rehydrate();\n  }\n  async fetchTokensMidPrice(offset = 0): Promise<void> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    const req = {\n      query: `{\n            token(where: {} offset: ${offset}) {\n              exchanges(where: {_not: {name: {_eq: \"lb\"}}}) {\n                midPrice,\n                sharesTotal,\n                token {\n                  address,\n                  tokenId\n                }\n              }\n      }}`\n    };\n    const response = await (\n      await fetch(baseUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(req)\n      })\n    ).json();\n    if (response?.data?.token?.length) {\n      if (offset === 0) {\n        this.tokens = new Map<string, any>();\n      }\n      for (const t of response.data.token) {\n        const exchange = t.exchanges.reduce((p, c) =>\n          (!!c?.sharesTotal && !!p?.sharesTotal && Number(c.sharesTotal) > Number(p.sharesTotal)) || (c?.sharesTotal && !p?.sharesTotal) ? c : p\n        );\n        this.tokens.set(`${exchange.token.address}:${exchange.token.tokenId}`, Boolean(Number(exchange?.midPrice)) ? exchange?.midPrice : '0');\n      }\n    }\n    if (response?.data?.token?.length >= this.maxTokensReturned) {\n      this.fetchTokensMidPrice(offset + this.maxTokensReturned);\n    } else if (this.tokens.size) {\n      this.store();\n    }\n    return;\n  }\n  store() {\n    const obj = Object.fromEntries(this.tokens);\n    localStorage.setItem(\n      this.storeKey,\n      JSON.stringify({\n        midPrices: obj\n      })\n    );\n    this.subjectService.refreshTokens.next(null);\n  }\n  rehydrate() {\n    const json = localStorage.getItem(this.storeKey);\n    if (json) {\n      const parsed = JSON.parse(json);\n      if (parsed?.midPrices) {\n        for (const key of Object.keys(parsed.midPrices)) {\n          this.tokens.set(key, parsed.midPrices[key]);\n        }\n        this.subjectService.refreshTokens.next(null);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TzktService } from './tzkt/tzkt.service';\nimport { WalletObject } from '../wallet/wallet';\nimport { Asset } from '../token/token.service';\n\nexport interface Indexer {\n  getContractAddresses(pkh: string): Promise<any>;\n  accountInfo(address: string, knownTokenIds: string[], init: boolean): Promise<any>;\n  getOperations(address: string, knownTokenIds: string[], wallet: WalletObject): Promise<any>;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndexerService {\n  constructor(public tzktService: TzktService) {}\n  async isUsedAccount(address: string): Promise<boolean> {\n    return this.tzktService.isUsedAccount(address);\n  }\n  async getContractAddresses(address: string): Promise<any> {\n    return this.tzktService.getContractAddresses(address);\n  }\n  async accountInfo(address: string, knownTokenIds: string[] = []): Promise<any> {\n    return this.tzktService.accountInfo(address, knownTokenIds);\n  }\n  async getOperations(address: string, knownTokenIds: string[], wallet: WalletObject): Promise<any> {\n    return this.tzktService.getOperations(address, knownTokenIds, wallet);\n  }\n  async getTokenMetadata(contractAddress: string, id: string, skipTzkt = false): Promise<any> {\n    return this.tzktService.getTokenMetadata(contractAddress, id, skipTzkt);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { UtilsService } from '../../utils/utils.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObjktService {\n  private queue = [];\n  pending = false;\n  constructor(private utilsService: UtilsService) {}\n\n  async resolveToken(contractAddress, id) {\n    const req = {\n      query: `{\n        token(where: {fa_contract: {_eq: \"${contractAddress}\"}, token_id: {_eq: \"${id}\"}}) {\n          highest_offer\n          lowest_ask\n          metadata\n          name\n          attributes {\n            attribute {\n              name,\n              value,\n              attribute_counts(where: {fa_contract: {_eq: \"${contractAddress}\"}}) {\n                editions\n              }\n            }\n          }\n        }\n        event(\n          where: {token: {fa_contract: {_eq: \"${contractAddress}\"}, token_id: {_eq: \"${id}\"}}}\n          order_by: {level: asc, timestamp: desc}\n          limit: 1\n        ) {\n          price_xtz\n        }\n        fa(where: {contract: {_eq: \"${contractAddress}\"}}) {\n          editions\n          floor_price\n        }\n      }`\n    };\n    try {\n      const result = await (\n        await fetch(CONSTANTS.OBJKT_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json();\n      return {\n        ...result?.data?.token[0],\n        last_sale: result?.data?.event[0]?.price_xtz,\n        floor_price: result?.data?.fa[0]?.floor_price,\n        editions: result?.data?.fa[0]?.editions\n      };\n    } catch (e) {\n      console.error(e);\n      return undefined;\n    }\n  }\n  async resolveCollection(address): Promise<any> {\n    if (!CONSTANTS.MAINNET) {\n      return;\n    }\n    while (this.queue.length >= 500) {\n      // max 500 results per call\n      await this.utilsService.sleep(3000);\n    }\n    if (!this.pending) {\n      this.pending = true;\n      this.collect();\n    }\n    return new Promise((resolve, reject) => {\n      this.queue.push({ address, resolve, reject });\n    });\n  }\n\n  async collect() {\n    setTimeout(async () => {\n      this.pending = false;\n      const queue = this.queue;\n      this.queue = [];\n      const addresses = queue.map((q) => {\n        return q.address;\n      });\n      const items = await this.resolveCollections(addresses).catch((e) => {\n        for (const q of queue) {\n          q.reject(e);\n          throw e;\n        }\n      });\n      while (queue.length) {\n        const promise = queue.shift();\n        if (items[promise.address]?.name) {\n          promise.resolve(items[promise.address]);\n        } else {\n          promise.resolve(null);\n        }\n      }\n    }, 3000);\n  }\n\n  async resolveCollections(contractAddresses: string[]) {\n    const req = {\n      query: `{\n        fa(where: {contract: {_in: ${JSON.stringify(contractAddresses)}}}) {\n          contract\n          name\n          logo\n        }\n      }`\n    };\n    const _objkts = (\n      await (\n        await fetch(CONSTANTS.OBJKT_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json()\n    )?.data?.fa;\n    const objkts: any = {};\n    if (_objkts) {\n      for (const objkt of _objkts) {\n        objkts[objkt.contract] = { name: objkt.name, logo: objkt.logo };\n      }\n    }\n    console.log('resolveCollections', objkts);\n    return objkts;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CONSTANTS, MODEL_3D_WHITELIST } from '../../../../environments/environment';\nimport { Indexer } from '../indexer.service';\nimport * as cryptob from 'crypto-browserify';\nimport { WalletObject, Activity, OpStatus, Token } from '../../wallet/wallet';\nimport { TezosToolkit } from '@taquito/taquito';\nimport { Tzip12Module, tzip12 } from '@taquito/tzip12';\nimport { TezosStorageHandler } from '@taquito/tzip16';\nimport { Handler, IpfsHttpHandler, MetadataProvider } from '@taquito/tzip16';\nimport { SubjectService } from '../../subject/subject.service';\nimport Big from 'big.js';\n\ninterface TokenMetadata {\n  name: string;\n  tokenType: 'FA2' | 'FA1.2';\n  decimals: number;\n  symbol?: string;\n  description?: string;\n  artifactUri?: string;\n  displayUri?: string;\n  thumbnailUri?: string;\n  category?: string;\n  isTransferable?: boolean;\n  shouldPreferSymbol?: boolean;\n  isBooleanAmount?: boolean;\n  series?: string;\n  ttl?: number;\n  mintingTool: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TzktService implements Indexer {\n  tokenBalanceCache = {};\n  readonly TZKT_TOKEN_QUERY_SIZE: number = 10000;\n  Tezos: TezosToolkit;\n  constructor(private subjectService: SubjectService) {\n    this.Tezos = new TezosToolkit(CONSTANTS.NODE_URL);\n    const customHandlers = new Map<string, Handler>([\n      ['ipfs', new IpfsHttpHandler('cloudflare-ipfs.com')],\n      ['tezos-storage', new TezosStorageHandler()]\n    ]);\n    const customMetadataProvider = new MetadataProvider(customHandlers);\n    this.Tezos.addExtension(new Tzip12Module(customMetadataProvider));\n  }\n  async getContractAddresses(pkh: string): Promise<any> {\n    return fetch(`${CONSTANTS.API_URL}/operations/originations?contractManager=${pkh}`)\n      .then((response) => response.json())\n      .then((data) =>\n        data\n          .map((op: any) => {\n            return op?.status === 'applied' && op?.originatedContract?.kind === 'delegator_contract' ? op.originatedContract.address : '';\n          })\n          .filter((address: string) => address.length)\n      );\n  }\n\n  async getHashAndBlockByIds(transactionIds: number[]): Promise<any> {\n    if (!transactionIds?.length) {\n      return {};\n    }\n    return fetch(`${CONSTANTS.API_URL}/operations/transactions?id.in=${transactionIds.join(',')}`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((o) => {\n        let res = {};\n        for (let i = 0; i < o.length; i++) {\n          if (o[i]?.id && o[i].hash && o[i].block) {\n            res[`t${o[i].id}`] = { hash: o[i].hash, block: o[i].block };\n          }\n        }\n        return res;\n      });\n  }\n  async accountInfo(address: string, knownTokenIds: string[]): Promise<any> {\n    const unknownTokenIds = [];\n    const data = await (await fetch(`${CONSTANTS.API_URL}/accounts/${address}`)).json();\n    const tokenBalances = address.startsWith('tz') ? await this.getAllTokenBalances(address) : [];\n    if (data) {\n      if (tokenBalances?.length) {\n        for (const token of tokenBalances) {\n          if (!knownTokenIds.includes(token.tokenId)) {\n            unknownTokenIds.push(token.tokenId);\n          }\n        }\n      }\n      tokenBalances.sort(function (a: any, b: any) {\n        if (a.tokenId < b.tokenId) {\n          return -1;\n        } else {\n          return 1;\n        }\n      });\n      const payload: string = (data.balance ? data.balance : '') + (data.counter ? data.counter : '') + (tokenBalances ? JSON.stringify(tokenBalances) : '');\n      const input = Buffer.from(payload);\n      const hash = cryptob.createHash('sha512').update(input).digest('hex');\n      if (payload && payload !== '[]') {\n        const balance = data?.balance !== undefined ? data.balance : 0;\n        return { counter: hash, unknownTokenIds, tokens: tokenBalances, balance };\n      }\n    }\n    return { counter: '', tokens: tokenBalances };\n  }\n  async isUsedAccount(address: string): Promise<boolean> {\n    const accountInfo = await (await fetch(`${CONSTANTS.API_URL}/accounts/${address}`)).json();\n    return accountInfo && (accountInfo?.type === 'user' || accountInfo?.balance || accountInfo?.tokenBalancesCount);\n  }\n  async getOperations(address: string, knownTokenIds: string[], wallet: WalletObject): Promise<any> {\n    const ops = await fetch(`${CONSTANTS.API_URL}/accounts/${address}/operations?limit=20&type=delegation,origination,transaction`)\n      .then((response) => response.json())\n      .then((data) =>\n        data\n          .map((op) => {\n            if (!op.hasInternals || !wallet.getAccount(op.target.address)) {\n              const status: OpStatus = op.status === 'applied' ? OpStatus.CONFIRMED : OpStatus.FAILED;\n              let destination = { address: '' };\n              let amount = '0';\n              let entrypoint = '';\n              let opId = '';\n              switch (op.type) {\n                case 'transaction':\n                  if (address !== op.target.address && address !== op.sender.address) {\n                    return null;\n                  }\n                  destination = op.target;\n                  amount = op.amount.toString();\n                  entrypoint = this.extractEntrypoint(op);\n                  opId = op?.id ? `t${op.id}` : '';\n                  break;\n                case 'delegation':\n                  if (address !== op.sender.address) {\n                    return null;\n                  }\n                  destination = op.newDelegate ? op.newDelegate : { address: '' };\n                  amount = '0';\n                  opId = op?.id ? `d${op.id}` : '';\n                  break;\n                case 'origination':\n                  destination = op.originatedContract;\n                  if (op.contractBalance) {\n                    amount = op.contractBalance.toString();\n                  }\n                  opId = op?.id ? `o${op.id}` : '';\n                  break;\n                default:\n                  console.log(`Ignoring kind ${op.type}`);\n                  return null;\n              }\n              const activity: Activity = {\n                type: op.type,\n                block: op.block,\n                status,\n                amount,\n                source: op.sender,\n                destination,\n                hash: op.hash,\n                counter: op.counter,\n                timestamp: new Date(op.timestamp).getTime(),\n                entrypoint,\n                opId\n              };\n              return activity;\n            }\n          })\n          .filter((obj) => obj)\n      );\n    const unknownTokenIds: string[] = [];\n    const tokenTxs = await (await fetch(`${CONSTANTS.API_URL}/tokens/transfers?anyof.from.to=${address}&limit=20&offset=0&sort.desc=id`)).json();\n    const tokenArr = [];\n    const opIds = [];\n    for (let i = 0; i < tokenTxs.length; ++i) {\n      const tokenId = `${tokenTxs[i].token.contract.address}:${tokenTxs[i].token.tokenId}`;\n      if (tokenTxs[i].token.contract && tokenId) {\n        if (!knownTokenIds.includes(tokenId)) {\n          unknownTokenIds.push(tokenId);\n        }\n        const source: any = { address: tokenTxs[i].from?.address };\n        if (tokenTxs[i].from === '' && tokenTxs[i].token.contract) {\n          source.address = tokenTxs[i].contract.address;\n        }\n        if (tokenTxs[i].transactionId) {\n          opIds.push(tokenTxs[i].transactionId);\n        }\n        const activity: Activity = {\n          type: 'transaction',\n          block: '',\n          hash: '',\n          status: OpStatus.CONFIRMED,\n          amount: tokenTxs[i].amount,\n          tokenId,\n          source,\n          destination: { address: tokenTxs[i].to?.address ?? '' },\n          timestamp: new Date(tokenTxs[i].timestamp).getTime(),\n          opId: tokenTxs[i].transactionId ? `t${tokenTxs[i].transactionId}` : undefined\n        };\n        tokenArr.push(activity);\n      }\n    }\n    const extra = await this.getHashAndBlockByIds(opIds);\n    for (const token of tokenArr) {\n      if (extra[token?.opId]) {\n        token.block = extra[token?.opId].block;\n        token.hash = extra[token?.opId].hash;\n      }\n    }\n    let operations = tokenArr\n      .concat(ops)\n      .filter((op) => op?.entrypoint !== 'transfer' && op?.entrypoint !== 'claim')\n      .sort(function (a: any, b: any) {\n        if (b.timestamp === a.timestamp && a.opId && b.opId) {\n          return parseInt(new Big(b.opId.substring(1)).minus(a.opId.substring(1)).toString());\n        }\n        return b.timestamp - a.timestamp;\n      });\n    return { operations, unknownTokenIds };\n  }\n  private extractEntrypoint(op: any): string {\n    return op?.entrypoint ?? op?.parameter?.entrypoint ?? '';\n  }\n  async getTokenMetadata(contractAddress: string, id: string, skipTzkt: boolean): Promise<TokenMetadata> {\n    let meta;\n    let tokenType = 'FA2';\n    const tokenId = `${contractAddress}:${id}`;\n    if (this.tokenBalanceCache[tokenId]) {\n      meta = this.tokenBalanceCache[tokenId].token.metadata;\n      tokenType = this.tokenBalanceCache[tokenId].token.standard && this.tokenBalanceCache[tokenId].token.standard === 'fa1.2' ? 'FA1.2' : 'FA2';\n    }\n    if (meta) {\n      this.normalizeMetadata(meta, contractAddress, id);\n      this.filterMetadata(meta);\n    }\n    if (!(meta && (meta.name || meta.symbol) && !isNaN(meta.decimals) && meta.decimals >= 0) || skipTzkt) {\n      meta = null;\n    }\n    if (!meta) {\n      console.log('fallback on taquito', { contractAddress, id });\n      meta = await this.getTokenMetadataWithTaquito(contractAddress, id);\n      if (meta) {\n        this.normalizeMetadata(meta, contractAddress, id);\n        this.filterMetadata(meta);\n      }\n    }\n    if (!(meta && (meta.name || meta.symbol) && !isNaN(meta.decimals) && meta.decimals >= 0)) {\n      meta = null;\n    }\n    if (!meta) {\n      console.warn(`cannot find token_id ${id} for contract: ${contractAddress}`);\n      return null;\n    }\n    return { ...meta, tokenType };\n  }\n  async getTokenMetadataWithTaquito(contractAddress, id) {\n    const contract = await this.Tezos.contract.at(contractAddress, tzip12);\n    let metadata: any;\n    if (['KT1TnVQhjxeNvLutGvzwZvYtC7vKRpwPWhc6'].includes(contractAddress)) {\n      // nl hotfix\n      const contract = await this.Tezos.contract.at(contractAddress);\n      const storage: any = await contract.storage();\n      const parsed_uri = storage.token_metadata_uri.replace('{tokenId}', id);\n      const response = await (await fetch(parsed_uri)).json();\n      if (response) {\n        response.tokenId = id;\n        metadata = response;\n      }\n    } else {\n      metadata = await contract.tzip12().getTokenMetadata(Number(id));\n    }\n    return metadata;\n  }\n  async getAllTokenBalances(address: string): Promise<Array<Token>> {\n    const fetchToken = async (offset: number): Promise<Array<any>> => {\n      let res = await (\n        await fetch(`${CONSTANTS.API_URL}/tokens/balances?account=${address}&offset=${offset}&limit=${this.TZKT_TOKEN_QUERY_SIZE}&balance.ne=0`)\n      ).json();\n      if (res?.length) {\n        if (res.length === this.TZKT_TOKEN_QUERY_SIZE) {\n          // get more if limit reached\n          return [...res, ...(await fetchToken(offset + this.TZKT_TOKEN_QUERY_SIZE))];\n        } else {\n          return res;\n        }\n      } else {\n        return [];\n      }\n    };\n    let tzktTokensResponse = await fetchToken(0);\n    const tokenBalances: Token[] = [];\n    for (let i = 0; i < tzktTokensResponse.length; ++i) {\n      if (tzktTokensResponse[i]?.balance && tzktTokensResponse[i].token?.contract?.address && tzktTokensResponse[i].token?.tokenId !== undefined) {\n        const tokenId: string = `${tzktTokensResponse[i].token.contract.address}:${tzktTokensResponse[i].token.tokenId}`;\n        tokenBalances.push({ tokenId, balance: tzktTokensResponse[i].balance });\n        this.tokenBalanceCache[tokenId] = tzktTokensResponse[i];\n      }\n    }\n    return tokenBalances;\n  }\n  private filterMetadata(meta: any) {\n    const keys = [\n      { key: 'name', type: 'string' },\n      { key: 'balance', type: 'string' },\n      { key: 'symbol', type: 'string' },\n      { key: 'contractAddress', type: 'string' },\n      { key: 'id', type: 'string' },\n      { key: 'decimals', type: 'string' },\n      { key: 'description', type: 'string' },\n      { key: 'artifactUri', type: 'string', toAsset: true },\n      { key: 'displayUri', type: 'string', toAsset: true },\n      { key: 'thumbnailUri', type: 'string', toAsset: true },\n      { key: 'isTransferable', type: 'boolean' },\n      { key: 'shouldPreferSymbol', type: 'boolean' },\n      { key: 'isBooleanAmount', type: 'boolean' },\n      { key: 'series', type: 'string' },\n      { key: 'ttl', type: 'string' },\n      { key: 'mintingTool', type: 'string' }\n    ];\n    let metadata: any = {};\n    for (const a of keys) {\n      if (typeof meta[a.key] === a.type) {\n        if (a.toAsset) {\n          // extract mime type\n          if (meta?.formats?.length && Array.isArray(meta?.formats)) {\n            const index = meta.formats.findIndex((b) => b.uri === meta[a.key]);\n            if (index !== -1 && meta.formats[index].uri && meta.formats[index].mimeType) {\n              meta[a.key] = { uri: meta[a.key], mimeType: meta.formats[index].mimeType };\n            }\n          }\n          if (typeof meta[a.key] === 'string') {\n            meta[a.key] = { uri: meta[a.key], mimeType: 'unknown' };\n          }\n        }\n        metadata[a.key] = meta[a.key];\n      }\n    }\n    return metadata;\n  }\n  private normalizeMetadata(meta: any, contractAddress: string, id: string) {\n    mutableConvertObjectPropertiesSnakeToCamel(meta);\n    for (let key of Object.keys(meta)) {\n      if (typeof meta[key] === 'number') {\n        meta[key] = `${meta[key]}`;\n      }\n    }\n    this.handleMetadataExceptions(meta, contractAddress, id);\n    if (meta?.isTransferable && typeof meta?.isTransferable === 'string') {\n      meta.isTransferable = meta.isTransferable?.toLowerCase() === 'false' ? false : meta.isTransferable?.toLowerCase() === 'true' ? true : undefined;\n    }\n    if (meta?.shouldPreferSymbol && typeof meta?.shouldPreferSymbol === 'string') {\n      meta.shouldPreferSymbol =\n        meta.shouldPreferSymbol?.toLowerCase() === 'false' ? false : meta.shouldPreferSymbol?.toLowerCase() === 'true' ? true : undefined;\n    }\n    if (meta?.isBooleanAmount && typeof meta?.isBooleanAmount === 'string') {\n      meta.isBooleanAmount = meta.isBooleanAmount?.toLowerCase() === 'false' ? false : meta.isBooleanAmount?.toLowerCase() === 'true' ? true : undefined;\n    }\n  }\n  handleMetadataExceptions(meta: any, contractAddress: string, id: string) {\n    // hen\n    if (meta?.symbol === 'OBJKT') {\n      if (!meta.displayUri && meta.formats?.length) {\n        meta.displayUri = meta.formats[0].uri;\n      }\n      if (meta.displayUri && meta.thumbnailUri) {\n        delete meta.thumbnailUri;\n      }\n    }\n    if (['KT1NVvPsNDChrLRH5K2cy6Sc9r1uuUwdiZQd', 'KT1CAbPGHUWvkSA9bxMPkqSgabgsjtmRYEda'].includes(contractAddress) /* Dogami */ && meta?.formats) {\n      if (typeof meta.formats[0] === 'string') {\n        meta.formats = JSON.parse(meta.formats);\n      }\n    }\n    // fxHash\n    if (contractAddress === 'KT1U6EHmNxJTkvaWJ4ThczG4FSDaHC21ssvi' && meta?.artifactUri) {\n      delete meta.artifactUri;\n    }\n    // Plenty + HEH\n    if (!meta.displayUri && !meta.thumbnailUri && meta?.icon) {\n      meta.thumbnailUri = { uri: meta.icon, mimeType: 'unknown' };\n    }\n    if (\n      (contractAddress === 'KT1AWoUQAuUudqpc75cGukWufbfim3GRn8h6' /* Flex */ ||\n        contractAddress === 'KT1Lz7Jd6Sh1zUE66nDGS7hGnjwcyTBCiYbF' /* BV */ ||\n        contractAddress === 'KT1D1XtWFoQDPtuYzbkeRJhcDgH6CDem2FkZ' /* BV */ ||\n        contractAddress === 'KT1NVvPsNDChrLRH5K2cy6Sc9r1uuUwdiZQd') /* Dogami */ &&\n      meta?.formats?.length\n    ) {\n      meta.displayUri = meta.artifactUri = meta.formats?.find((f) => f?.mimeType?.startsWith('model/')) ?? meta.displayUri;\n    }\n    if (contractAddress === 'KT1NVvPsNDChrLRH5K2cy6Sc9r1uuUwdiZQd') {\n      // override wrong mimeType\n      meta.thumbnailUri = { uri: meta.thumbnailUri, mimeType: 'video/mp4' };\n    }\n    // Rarible\n    if (contractAddress === 'KT18pVpRXKPY2c4U2yFEGSH3ZnhB2kL8kwXS') {\n      meta.thumbnailUri = meta.displayUri = meta.formats[0].uri;\n    }\n  }\n  async getEntrypointMicheline(contract: string, entrypoint: string) {\n    return (await (await fetch(`${CONSTANTS.API_URL}/contracts/${contract}/entrypoints/${entrypoint}?micheline=true&json=false`)).json())?.michelineParameters;\n  }\n}\nexport function mutableConvertObjectPropertiesSnakeToCamel(data: Object) {\n  for (const key in data) {\n    if (key.charAt(0).toLowerCase() !== key.charAt(0)) {\n      data[key.charAt(0).toLowerCase() + key.slice(1)] = data[key];\n    }\n    if (key.indexOf('_') !== -1) {\n      const aryCamelKey = [];\n      for (let i = 0; i < key.length; i++) {\n        const char = key.charAt(i);\n        if (char === '_') {\n          aryCamelKey.push(key.charAt(i + 1).toUpperCase());\n          i++;\n        } else {\n          aryCamelKey.push(char);\n        }\n      }\n      const camelKey = aryCamelKey.join('');\n      if (!data.hasOwnProperty(camelKey)) {\n        data[camelKey] = data[key];\n        delete data[key];\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OperationService } from '../operation/operation.service';\nimport * as zxcvbn from 'zxcvbn';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { TranslateService } from '@ngx-translate/core';\nimport { valueDecoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { Uint8ArrayConsumer } from '@taquito/local-forging/dist/lib/uint8array-consumer';\nimport { utils } from '@tezos-core-tools/crypto-utils';\nimport * as bip39 from 'bip39';\n@Injectable()\nexport class InputValidationService {\n  constructor(private operationService: OperationService, private translate: TranslateService) {}\n  /*\n    Input validations\n  */\n  mnemonics(mnemonics: string): boolean {\n    return this.operationService.validMnemonic(mnemonics);\n  }\n  password(password: string): boolean {\n    return zxcvbn(password).score === 4;\n  }\n  passwordStrengthDisplay(password: string): string {\n    if (!password) {\n      return '';\n    }\n    switch (zxcvbn(password).score) {\n      case 0: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.CATASTROPHIC'); // 'Catastrophic!'\n      }\n      case 1: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.VERYWEAK'); // 'Very weak!'\n      }\n      case 2: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.WEAK'); // 'Weak!'\n      }\n      case 3: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.WEAK'); // 'Weak!'\n      }\n      case 4: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.STRONG'); // 'Strong!'\n      }\n      default: {\n        return '';\n      }\n    }\n  }\n  address(address: string): Boolean {\n    return this.operationService.validAddress(address);\n  }\n  validDelegationAddress(address: string): Boolean {\n    return this.operationService.validAddress(address) && address.slice(0, 3) !== 'tz4';\n  }\n  torusAccount(verifierId: string, loginType: string): Boolean {\n    switch (loginType) {\n      case 'google':\n        return this.email(verifierId);\n      case 'email':\n        return this.email(verifierId);\n      case 'reddit':\n        return this.redditAccount(verifierId);\n      case 'twitter':\n        return this.twitterAccount(verifierId);\n      case 'domain':\n        return this.tezosDomain(verifierId);\n      default:\n        return false;\n    }\n  }\n  redditAccount(username: string) {\n    // Letters, numbers, dashes, and underscores only\n    // Username must be between 3 and 20 characters\n    const re = /^[0-9a-zA-Z\\-\\_]{3,20}$/;\n    return re.test(username);\n  }\n  email(email: string): Boolean {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n  tezosDomain(domain: string) {\n    const a = domain.split('.');\n    // basic validation that is in the correct format\n    for (const sub of a) {\n      if (!sub.length) {\n        return false;\n      }\n    }\n    return a.length >= 2 && CONSTANTS.TEZOS_DOMAIN.TOP_DOMAINS.includes(a[a.length - 1]);\n  }\n  twitterAccount(username: string) {\n    // The only characters you can use are uppercase and lowercase letters, numbers, and the underscore character ( _ ).\n    const re = /^\\@{1}[0-9a-zA-Z\\_]{1,15}$/;\n    return re.test(username);\n  }\n  twitterId(id: string) {\n    const re = /^[0-9]+$/;\n    return re.test(id);\n  }\n  passphrase(passphrase: string): Boolean {\n    return true;\n  }\n  amount(amount: string, decimals: number = 6): Boolean {\n    const decimalsPart = decimals ? `(\\.[0-9]{1,${decimals}}){0,1}` : '';\n    const expr = new RegExp(`^(0|[1-9][0-9]*)${decimalsPart}$`, 'g');\n    if (amount === '' || amount === '0') {\n      // default value / zero\n      return true;\n    } else if (Number(amount) && amount.match(expr)) {\n      // Positive number\n      return true;\n    }\n    return false;\n  }\n  fee(fee: string): Boolean {\n    return this.amount(fee); // same as amount\n  }\n  gas(amount: string): Boolean {\n    if (amount === '' || amount === '0') {\n      // default value / zero\n      return true;\n    } else if (Number(amount) && 0 < Number(amount) && Number(amount) % 1 === 0) {\n      // Positive integer\n      return true;\n    } else {\n      return false;\n    }\n  }\n  storage(amount: string) {\n    return this.gas(amount);\n  }\n  relativeLimit(limit: string) {\n    if (limit?.length > 2 && limit.startsWith('+') && limit.endsWith('%')) {\n      return this.gas(limit.slice(1, -1));\n    }\n    return false;\n  }\n  code(code: string): Boolean {\n    if (code && code.length === 40 && code.match(/^[0-9a-f]*$/g)) {\n      // 40 hex chars\n      return true;\n    } else {\n      return false;\n    }\n  }\n  derivationPath(path: string): Boolean {\n    const m = path.match(/^44\\'\\/1729(\\'\\/[0-9]+)+\\'$/g);\n    if (m || path === \"44'/1729'\") {\n      return true;\n    }\n    return false;\n  }\n  hexString(hex: string): Boolean {\n    if (hex && hex.match(/^[a-f0-9]*$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  isMessageSigning(payload: string): boolean {\n    if (payload.match(/^0501[a-f0-9]{8}54657a6f73205369676e6564204d6573736167653a20[a-f0-9]*$/)) {\n      return true;\n    }\n    return false;\n  }\n  isMichelineExpr(hex: string) {\n    try {\n      if (!this.hexString(hex)) {\n        throw new Error('Not a hex string');\n      }\n      if (hex.slice(0, 2) !== '05') {\n        throw new Error('invalid prefix');\n      }\n      const parsedPayload = valueDecoder(Uint8ArrayConsumer.fromHexString(hex.slice(2)));\n      console.log('Parsed sign payload', parsedPayload);\n    } catch (e) {\n      console.warn(e.message ? 'Decoding: ' + e.message : e);\n      return false;\n    }\n    return true;\n  }\n  invalidMnemonic(words: string): string {\n    if (utils.validMnemonic(words)) {\n      return '';\n    }\n    // number of words\n    const wordCount = words?.split(' ').filter((w) => w?.length > 0).length;\n    if (![12, 15, 18, 21, 24].includes(wordCount)) {\n      let extra = '';\n      if (wordCount >= 11 && wordCount <= 25) {\n        const rest = (wordCount % 3) - 1;\n        extra = rest ? ', missing one word?' : ', one word too many?';\n      }\n      return `Invalid number of words: ${wordCount}${extra}`;\n    }\n    // words in wordlist\n    if (words?.split(' ')) {\n      for (let word of words?.split(' ').filter((w) => w?.length > 0)) {\n        const r = bip39.wordlists.english.filter((w) => w === word);\n        if (r.length === 0 && word) {\n          return `Invalid seed word: ${word}`;\n        }\n      }\n    }\n    // checksum\n    return 'Invalid checksum! Double-check the order of the seed words.';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OperationService } from '../../services/operation/operation.service';\nimport { TorusService } from '../../services/torus/torus.service';\nimport { WalletService } from '../../services/wallet/wallet.service';\nimport { InputValidationService } from '../../services/input-validation/input-validation.service';\nimport { TezosDomainsService } from '../../services/tezos-domains/tezos-domains.service';\n\nexport enum LookupType { // ordered in priority\n  AddressBook,\n  TezosDomains,\n  Google,\n  Reddit,\n  Twitter,\n  Alias\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LookupService {\n  public records: {\n    address: string;\n    data: { name: string; lookupType: LookupType }[];\n  }[] = [];\n  private pendingLookups: Record<string, number> = {};\n  constructor(\n    private operationService: OperationService,\n    private torusService: TorusService,\n    private walletService: WalletService,\n    private inputValidationService: InputValidationService,\n    private tezosDomainsService: TezosDomainsService\n  ) {\n    this.initCheck();\n  }\n  initCheck() {\n    if (!this.records.length && this.walletService.wallet && this.walletService.wallet.lookups.length) {\n      console.log('### Loading lookups from memory');\n      this.records = this.walletService.wallet.lookups;\n    }\n  }\n  add(address: string, name: string, lookupType: LookupType) {\n    console.log('#name ' + name, lookupType);\n    const { x, y } = this.index(address, lookupType);\n    if (x !== -1) {\n      if (y === -1) {\n        this.records[x].data.push({ name, lookupType });\n      } else if (lookupType === LookupType.TezosDomains) {\n        this.records[x].data[y] = { name, lookupType };\n      }\n    } else {\n      this.records.push({ address, data: [{ name, lookupType }] });\n    }\n    this.walletService.wallet.lookups = this.records;\n    this.walletService.storeWallet();\n  }\n  clear() {\n    this.records = [];\n    this.pendingLookups = {};\n  }\n  mark(address: string) {\n    const { x, y } = this.indexTop(address);\n    if (x === -1) {\n      this.records.push({ address, data: [] });\n    }\n    this.walletService.storeWallet();\n  }\n  async recheckWalletAddresses(force: boolean) {\n    console.log('lookup wallet addresses');\n    for (const address of this.walletService.wallet.getImplicitAccounts()) {\n      this.check(address, force);\n    }\n  }\n  async check(address: any, force: boolean = false) {\n    if (address?.address !== undefined) {\n      address = address.address;\n    }\n    if (typeof address !== 'string') {\n      return;\n    }\n    this.initCheck();\n    if (force) {\n      console.log('Forced recheck for: ' + address);\n    }\n    if (address && !this.pendingLookups[address]) {\n      const { x } = this.index(address, 0);\n      if (x === -1 || force) {\n        // DirectAuth - disabled\n        // if (address && address.slice(0, 3) === 'tz2') {\n        //   if (x === -1) {\n        //     this.pendingLookups[address]++;\n        //     this.torusLookup(address);\n        //   }\n        // }\n        // Tezos Domains\n        this.pendingLookups[address]++;\n        let domain = '';\n        try {\n          domain = await this.tezosDomainsService.getDomainFromAddress(address);\n        } catch (e) {\n          console.log(address, e);\n          this.pendingLookups[address]--;\n          return;\n        }\n        this.pendingLookups[address]--;\n        if (domain || domain === '') {\n          this.add(address, domain, LookupType.TezosDomains);\n        } else {\n          this.mark(address);\n        }\n      }\n    }\n  }\n  torusLookup(address: string) {\n    this.operationService.torusKeyLookup(address).subscribe(async (ans: any) => {\n      if (ans) {\n        if (ans.result && ans.result.Verifiers) {\n          const keys = Object.keys(ans.result.Verifiers);\n          const verifierMap = this.torusService.verifierMap;\n          for (const key of keys) {\n            if (key === verifierMap['google'].verifier) {\n              this.add(address, ans.result.Verifiers[verifierMap['google'].verifier][0], LookupType.Google);\n            } else if (key === verifierMap['reddit'].verifier) {\n              this.add(address, ans.result.Verifiers[verifierMap['reddit'].verifier][0], LookupType.Reddit);\n            } else if (key === verifierMap['twitter'].verifier) {\n              const verifierId = ans.result.Verifiers[verifierMap['twitter'].verifier][0];\n              const verifierArray = verifierId.split('|');\n              if (verifierArray[0] === 'twitter' && this.inputValidationService.twitterId(verifierArray[1])) {\n                const twitterId = verifierArray[1];\n                const { username } = await this.torusService.twitterLookup(undefined, twitterId);\n                if (username) {\n                  this.add(address, '@' + username, LookupType.Twitter);\n                }\n              }\n            } else {\n              console.log('Unhandled verifier result', ans);\n            }\n          }\n          this.pendingLookups[address]--;\n        } else if (!ans.noReveal) {\n          this.mark(address);\n        }\n      }\n    });\n  }\n  torusEntryExist(address: string): boolean {\n    const record = this.records[address];\n    if (record) {\n      for (const entry of record) {\n        if (entry.lookupType > 1) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  index(address: string, lookupType: LookupType) {\n    let [x, y] = Array(2).fill(-1);\n    for (let i = 0; i < this.records.length; i++) {\n      if (this.records[i].address === address) {\n        x = i;\n        for (let j = 0; j < this.records[i].data.length; j++) {\n          if (this.records[i].data[j].lookupType === lookupType) {\n            y = j;\n          }\n        }\n      }\n    }\n    return { x, y };\n  }\n  indexTop(address: string) {\n    let [x, y] = Array(2).fill(-1);\n    for (let i = 0; i < this.records.length; i++) {\n      if (this.records[i].address === address) {\n        x = i;\n        for (let j = 0; j < this.records[i].data.length; j++) {\n          if (this.records[i].data[j].lookupType < y || y === -1) {\n            if (this.records[i].data[j].lookupType !== LookupType.TezosDomains || this.records[i].data[j].name) {\n              // skip empty domain records\n              y = j;\n            }\n          }\n        }\n      }\n    }\n    return { x, y };\n  }\n  resolve(party: any): any {\n    this.initCheck();\n    const { x, y } = this.indexTop(party?.address);\n    if (x !== -1 && y !== -1) {\n      return {\n        name: this.records[x].data[y].name,\n        lookupType: this.records[x].data[y].lookupType,\n        address: party.address\n      };\n    } else if (party?.alias) {\n      this.add(party.address, party.alias, LookupType.Alias);\n      return this.resolve(party);\n    }\n    return { address: party?.address };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\n\n@Injectable()\nexport class MessageService {\n  spinnerOn = false;\n  spinnerText = '';\n  messages: any[] = [];\n  defaultTime = 10;\n  checked: Observable<boolean>;\n  beaconResponse = new Subject<boolean>();\n  readonly pairingCompleteMsg = 'Pairing complete! Waiting for permission request...';\n  add(message: string, seconds: number = this.defaultTime) {\n    const type = 'info';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000\n    });\n  }\n  addError(message: string, seconds: number = this.defaultTime) {\n    const type = 'danger';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000\n    });\n  }\n  addWarning(message: string, seconds: number = this.defaultTime) {\n    const type = 'warning';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000\n    });\n  }\n  addSuccess(message: string, seconds: number = this.defaultTime, ref: string = '') {\n    if (ref) {\n      console.log('ref set', ref);\n    }\n    const type = 'success';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000,\n      ref\n    });\n  }\n  modify(newMessage: string, ref: string) {\n    if (ref) {\n      for (const message of this.messages) {\n        if (message.ref === ref) {\n          message.msg = newMessage;\n        }\n      }\n    }\n  }\n  emailNotify(email: string, amount: string) {\n    console.log(email);\n    const type = 'success';\n    this.messages.push({\n      type: type,\n      timeout: 0,\n      msg: 'email',\n      email,\n      amount\n    });\n  }\n  redditNotify(username: string, amount: string) {\n    console.log(username);\n    const type = 'success';\n    this.messages.push({\n      type: type,\n      timeout: 0,\n      msg: 'Reddit',\n      username,\n      amount\n    });\n  }\n  twitterNotify(twitterId: string, handler: string, amount: string) {\n    console.log(twitterId);\n    const type = 'success';\n    this.messages.push({\n      type: type,\n      timeout: 0,\n      msg: 'Twitter',\n      twitterId,\n      handler,\n      amount\n    });\n  }\n  addBeaconWait(message: string) {\n    const type = 'info';\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: 30 * 1000,\n      loader: true\n    });\n  }\n  async removeBeaconMsg(delay = false) {\n    setTimeout(\n      () => {\n        for (let i = 0; i < this.messages.length; i++) {\n          if (this.messages[i].loader) {\n            this.messages.splice(i, 1);\n            this.addSuccess(this.pairingCompleteMsg, 10);\n            break;\n          } else if (this.messages[i].msg === this.pairingCompleteMsg) {\n            this.messages.splice(i, 1);\n            break;\n          }\n        }\n      },\n      delay ? 500 : 0\n    );\n  }\n  clear() {\n    this.messages = [];\n  }\n  async startSpinner(text: string = '') {\n    this.spinnerText = text;\n    this.spinnerOn = true;\n  }\n  async stopSpinner(): Promise<void> {\n    this.spinnerText = '';\n    this.spinnerOn = false;\n    return;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of, Observable, MonoTypeOperatorFunction, from as fromPromise, iif, throwError } from 'rxjs';\nimport { catchError, retryWhen, flatMap, timeout, delay as delayOperator, debounceTime, concatMap } from 'rxjs/operators';\nimport { Buffer } from 'buffer';\nimport { blake2b } from 'blakejs';\nimport { sign as naclSign } from 'tweetnacl';\nimport * as Bs58check from 'bs58check';\nimport * as bip39 from 'bip39';\nimport Big from 'big.js';\nimport { localForger } from '@taquito/local-forging';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { ErrorHandlingPipe } from '../../pipes/error-handling.pipe';\nimport * as elliptic from 'elliptic';\nimport { instantiateSecp256k1, hexToBin, binToHex } from '@bitauth/libauth';\nimport { TokenService } from '../token/token.service';\nimport { isEqual } from 'lodash';\n\nconst httpOptions = { headers: { 'Content-Type': 'application/json' } };\n\nexport interface KeyPair {\n  sk: string | null;\n  pk: string | null;\n  pkh: string;\n}\n@Injectable()\nexport class OperationService {\n  nodeURL = CONSTANTS.NODE_URL;\n  prefix = {\n    tz1: new Uint8Array([6, 161, 159]),\n    tz2: new Uint8Array([6, 161, 161]),\n    tz3: new Uint8Array([6, 161, 164]),\n    tz4: new Uint8Array([6, 161, 166]),\n    edpk: new Uint8Array([13, 15, 37, 217]),\n    sppk: new Uint8Array([3, 254, 226, 86]),\n    edsk: new Uint8Array([43, 246, 78, 7]),\n    spsk: new Uint8Array([17, 162, 224, 201]),\n    edsig: new Uint8Array([9, 245, 205, 134, 18]),\n    spsig: new Uint8Array([13, 115, 101, 19, 63]),\n    sig: new Uint8Array([4, 130, 43]),\n    o: new Uint8Array([5, 116]),\n    B: new Uint8Array([1, 52]),\n    TZ: new Uint8Array([3, 99, 29]),\n    KT: new Uint8Array([2, 90, 121])\n  };\n  microTez = new Big(1000000);\n  feeHardCap = 100; //tez\n  constructor(private http: HttpClient, private errorHandlingPipe: ErrorHandlingPipe, private tokenService: TokenService) {}\n  /*\n    Returns an observable for the activation of an ICO identity\n  */\n  activate(pkh: string, secret: string): Observable<any> {\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          const fop: any = {\n            branch: header.hash,\n            contents: [\n              {\n                kind: 'activate_account',\n                pkh: pkh,\n                secret: secret\n              }\n            ]\n          };\n          return this.postRpc('chains/main/blocks/head/helpers/forge/operations', fop).pipe(\n            flatMap((opbytes: any) => {\n              const sopbytes: string = opbytes + Array(129).join('0');\n              fop.protocol = header.protocol;\n              fop.signature = 'edsigtXomBKi5CTRf5cjATJWSyaRvhfYNHqSUGrn4SdbYRcGwQrUGjzEfQDTuqHhuA8b2d8NarZjz8TRf65WkpQmo423BtomS8Q';\n              return this.postRpc('chains/main/blocks/head/helpers/preapply/operations', [fop]).pipe(\n                flatMap((preApplyResult: any) => {\n                  console.log(JSON.stringify(preApplyResult));\n                  return this.postRpc('injection/operation', JSON.stringify(sopbytes)).pipe(\n                    flatMap((final: any) => {\n                      return this.opCheck(final);\n                    })\n                  );\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  opCheck(final: any, newPkh: string = null): Observable<any> {\n    if (typeof final === 'string' && final.length === 51) {\n      return of({\n        success: true,\n        payload: {\n          opHash: final,\n          newPkh: newPkh\n        }\n      });\n    } else {\n      return of({\n        success: false,\n        payload: {\n          opHash: null,\n          msg: final\n        }\n      });\n    }\n  }\n  /*\n    Returns an observable for the origination of new accounts.\n  */\n  originate(origination: any, fee: number = 0, keys: KeyPair): Observable<any> {\n    console.log(fee, origination);\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/counter`).pipe(\n            flatMap((actions: number) => {\n              return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/manager_key`).pipe(\n                flatMap((manager: any) => {\n                  if (fee > this.feeHardCap) {\n                    throw new Error('TooHighFee');\n                  }\n                  const counter: number = Number(actions);\n                  const fop = this.createOriginationObject(header.hash, counter, manager, origination, fee, keys.pk, keys.pkh);\n                  return this.operation(fop, header, keys, true);\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  createOriginationObject(hash: string, counter: number, manager: string, origination: any, fee: number, pk: string, pkh: string): any {\n    const fop: any = {\n      branch: hash,\n      contents: []\n    };\n    const gas_limit = origination.gasLimit.toString();\n    const storage_limit = origination.storageLimit.toString();\n    if (manager === null) {\n      // Reveal\n      fop.contents.push({\n        kind: 'reveal',\n        source: pkh,\n        fee: '0',\n        counter: (++counter).toString(),\n        gas_limit: '1000',\n        storage_limit: '0',\n        public_key: pk\n      });\n    }\n    fop.contents.push({\n      kind: 'origination',\n      source: pkh,\n      fee: this.microTez.times(fee).toString(),\n      counter: (++counter).toString(),\n      gas_limit,\n      storage_limit,\n      balance: this.microTez.times(origination.balance).toString(),\n      script: origination.script\n    });\n    return fop;\n  }\n  /*\n    Returns an observable for the transaction of tez.\n  */\n  transfer(from: string, transactions: any, fee: number, keys: KeyPair, tokenTransfer: string = ''): Observable<any> {\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/counter`).pipe(\n            flatMap((actions: any) => {\n              return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/manager_key`).pipe(\n                flatMap((manager: any) => {\n                  if (fee > this.feeHardCap) {\n                    throw new Error('TooHighFee');\n                  }\n                  const counter: number = Number(actions);\n                  const fop = this.createTransactionObject(header.hash, counter, manager, transactions, keys.pkh, keys.pk, from, fee, tokenTransfer);\n                  return this.operation(fop, header, keys);\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  createTransactionObject(\n    hash: string,\n    counter: number,\n    manager: string,\n    transactions: any,\n    pkh: string,\n    pk: string,\n    from: string,\n    fee: number,\n    tokenTransfer: string\n  ): any {\n    const fop: any = {\n      branch: hash,\n      contents: []\n    };\n    if (manager === null) {\n      // Reveal\n      fop.contents.push({\n        kind: 'reveal',\n        source: pkh,\n        fee: '0',\n        counter: (++counter).toString(),\n        gas_limit: '1000',\n        storage_limit: '0',\n        public_key: pk\n      });\n    }\n    for (let i = 0; i < transactions.length; i++) {\n      const currentFee = i === transactions.length - 1 ? this.microTez.times(fee).toString() : '0';\n      const gasLimit = transactions[i].gasLimit.toString();\n      const storageLimit = transactions[i].storageLimit.toString();\n      if (tokenTransfer) {\n        console.log('Invoke contract: ' + tokenTransfer);\n        let invocation: any;\n        const { kind, decimals, contractAddress, id } = this.tokenService.getAsset(tokenTransfer);\n        const txAmount = Big(10 ** decimals).times(transactions[i].amount);\n        if (!txAmount.mod(1).eq(0)) {\n          throw new Error(`the amount ${transactions[i].amount} is not within ${decimals} decimals`);\n        }\n        if (kind === 'FA1.2') {\n          invocation = this.getFA12Transaction(pkh, transactions[i].destination, txAmount.toFixed(0));\n        } else if (kind === 'FA2') {\n          invocation = this.getFA2Transaction(pkh, transactions[i].destination, txAmount.toFixed(0), id);\n        } else {\n          throw new Error('Unrecognized token kind');\n        }\n        fop.contents.push({\n          kind: 'transaction',\n          source: pkh,\n          fee: currentFee,\n          counter: (++counter).toString(),\n          gas_limit: gasLimit,\n          storage_limit: storageLimit,\n          amount: '0',\n          destination: contractAddress,\n          parameters: invocation\n        });\n      } else if (from.slice(0, 2) === 'tz') {\n        const transactionOp: any = {\n          kind: 'transaction',\n          source: from,\n          fee: currentFee,\n          counter: (++counter).toString(),\n          gas_limit: gasLimit,\n          storage_limit: storageLimit,\n          amount: this.microTez.times(transactions[i].amount).toString(),\n          destination: transactions[i].destination\n        };\n        if (transactions[i].parameters) {\n          transactionOp.parameters = transactions[i].parameters;\n        }\n        fop.contents.push(transactionOp);\n      } else if (from.slice(0, 2) === 'KT') {\n        if (transactions[i].parameters) {\n          throw new Error('Unsupported Operation');\n        }\n        if (transactions[i].destination.slice(0, 2) === 'tz') {\n          const managerTransaction = this.getContractPkhTransaction(transactions[i].destination, this.microTez.times(transactions[i].amount).toString());\n          fop.contents.push({\n            kind: 'transaction',\n            source: pkh,\n            fee: currentFee,\n            counter: (++counter).toString(),\n            gas_limit: gasLimit,\n            storage_limit: storageLimit,\n            amount: '0',\n            destination: from,\n            parameters: managerTransaction\n          });\n        } else if (transactions[i].destination.slice(0, 2) === 'KT') {\n          const managerTransaction = this.getContractKtTransaction(transactions[i].destination, this.microTez.times(transactions[i].amount).toString());\n          fop.contents.push({\n            kind: 'transaction',\n            source: pkh,\n            fee: currentFee,\n            counter: (++counter).toString(),\n            gas_limit: gasLimit,\n            storage_limit: storageLimit,\n            amount: '0',\n            destination: from,\n            parameters: managerTransaction\n          });\n        }\n      }\n    }\n    return fop;\n  }\n  /*\n    Returns an observable for the delegation of baking rights.\n  */\n  delegate(from: string, to: string, fee: number = 0, keys: KeyPair): Observable<any> {\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/counter`).pipe(\n            flatMap((actions: any) => {\n              return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/manager_key`).pipe(\n                flatMap((manager: any) => {\n                  if (fee > this.feeHardCap) {\n                    throw new Error('TooHighFee');\n                  }\n                  let counter: number = Number(actions);\n                  let delegationOp: any;\n                  if (from.slice(0, 2) === 'tz') {\n                    delegationOp = {\n                      kind: 'delegation',\n                      source: from,\n                      fee: this.microTez.times(fee).toString(),\n                      counter: (++counter).toString(),\n                      gas_limit: '1000',\n                      storage_limit: '0'\n                    };\n                    if (to !== '') {\n                      delegationOp.delegate = to;\n                    }\n                  } else if (from.slice(0, 2) === 'KT') {\n                    delegationOp = {\n                      kind: 'transaction',\n                      source: keys.pkh,\n                      fee: this.microTez.times(fee).toString(),\n                      counter: (++counter).toString(),\n                      gas_limit: '4380',\n                      storage_limit: '0',\n                      amount: '0',\n                      destination: from,\n                      parameters: to !== '' ? this.getContractDelegation(to) : this.getContractUnDelegation()\n                    };\n                  }\n                  const fop: any = {\n                    branch: header.hash,\n                    contents: [delegationOp]\n                  };\n                  if (manager === null) {\n                    fop.contents[1] = fop.contents[0];\n                    fop.contents[0] = {\n                      kind: 'reveal',\n                      source: keys.pkh,\n                      fee: '0',\n                      counter: counter.toString(),\n                      gas_limit: '1000',\n                      storage_limit: '0',\n                      public_key: keys.pk\n                    };\n                    fop.contents[1].counter = (Number(fop.contents[1].counter) + 1).toString();\n                  }\n                  return this.operation(fop, header, keys);\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  /*\n  Help function for operations\n  */\n  operation(fop: any, header: any, keys: KeyPair, origination: boolean = false): Observable<any> {\n    console.log('fop to send: ' + JSON.stringify(fop));\n    return this.postRpc('chains/main/blocks/head/helpers/forge/operations', fop).pipe(\n      flatMap((opbytes: any) => {\n        return this.localForge(fop).pipe(\n          flatMap((localOpbytes: string) => {\n            if (opbytes !== localOpbytes) {\n              throw new Error('ValidationError');\n            }\n            if (!keys.sk) {\n              fop.signature = 'edsigtXomBKi5CTRf5cjATJWSyaRvhfYNHqSUGrn4SdbYRcGwQrUGjzEfQDTuqHhuA8b2d8NarZjz8TRf65WkpQmo423BtomS8Q';\n              return this.postRpc('chains/main/blocks/head/helpers/scripts/run_operation', { operation: fop, chain_id: header.chain_id }).pipe(\n                flatMap((applied: any) => {\n                  console.log('applied: ' + JSON.stringify(applied));\n                  this.checkApplied([applied]);\n                  return of({\n                    success: true,\n                    payload: {\n                      unsignedOperation: opbytes\n                    }\n                  });\n                })\n              );\n            } else {\n              fop.protocol = header.protocol;\n              const signed = this.sign('03' + opbytes, keys.sk);\n              const sopbytes = signed.sbytes;\n              fop.signature = signed.edsig;\n              return this.postRpc('chains/main/blocks/head/helpers/preapply/operations', [fop]).pipe(\n                flatMap((applied: any) => {\n                  console.log('applied: ' + JSON.stringify(applied));\n                  this.checkApplied(applied);\n                  console.log('sop: ' + sopbytes);\n                  return this.postRpc('injection/operation', JSON.stringify(sopbytes))\n                    .pipe(timeout(30000))\n                    .pipe(\n                      flatMap((final: any) => {\n                        let newPkh = null;\n                        if (origination) {\n                          newPkh = applied[0].contents[fop.contents.length - 1].metadata.operation_result.originated_contracts[0];\n                        }\n                        return this.opCheck(final, newPkh);\n                      })\n                    );\n                })\n              );\n            }\n          })\n        );\n      })\n    );\n  }\n  /*\n    Broadcast a signed operation to the network\n  */\n  broadcast(sopbytes: string): Observable<any> {\n    console.log('Broadcast...');\n    const opbytes = sopbytes.slice(0, sopbytes.length - 128);\n    const edsig = this.sig2edsig(sopbytes.slice(sopbytes.length - 128));\n    return fromPromise(localForger.parse(opbytes))\n      .pipe(\n        flatMap((fop: any) => {\n          fop.signature = edsig;\n          return this.getHeader().pipe(\n            flatMap((header: any) => {\n              fop.protocol = header.protocol;\n              return this.postRpc('chains/main/blocks/head/helpers/preapply/operations', [fop]).pipe(\n                flatMap((parsed: any) => {\n                  let newPkh = null;\n                  for (let i = 0; i < parsed[0].contents.length; i++) {\n                    if (parsed[0].contents[i].kind === 'origination') {\n                      newPkh = parsed[0].contents[i].metadata.operation_result.originated_contracts[0];\n                    }\n                  }\n                  return this.postRpc('injection/operation', JSON.stringify(sopbytes)).pipe(\n                    flatMap((final: any) => {\n                      return this.opCheck(final, newPkh);\n                    })\n                  );\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  torusKeyLookup(tz2address: string): Observable<any> {\n    // Make it into Promise\n    // Zero padding\n    if (tz2address.length !== 36 || tz2address.slice(0, 3) !== 'tz2') {\n      throw new Error('InvalidTorusAddress');\n    }\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${tz2address}/manager_key`).pipe(\n      flatMap((manager: any) => {\n        if (manager === null) {\n          return of({ noReveal: true });\n        } else {\n          return fromPromise(this.decompress(manager)).pipe(\n            flatMap((pk: any) => {\n              const torusReq = {\n                jsonrpc: '2.0',\n                method: 'KeyLookupRequest',\n                id: 10,\n                params: {\n                  pub_key_X: pk.X,\n                  pub_key_Y: pk.Y\n                }\n              };\n              const url = CONSTANTS.NETWORK === 'mainnet' ? 'https://torus-19.torusnode.com/jrpc' : 'https://teal-15-1.torusnode.com/jrpc';\n              return this.http.post(url, JSON.stringify(torusReq), httpOptions).pipe(\n                flatMap((ans: any) => {\n                  try {\n                    if (ans.result.PublicKey.X === pk.X && ans.result.PublicKey.Y === pk.Y) {\n                      return of(ans);\n                    } else {\n                      return of(null);\n                    }\n                  } catch {\n                    return of(null);\n                  }\n                })\n              );\n            })\n          );\n        }\n      })\n    );\n  }\n  checkApplied(applied: any) {\n    let failed = false;\n    for (let i = 0; i < applied[0].contents.length; i++) {\n      if (applied[0].contents[i].metadata.operation_result.status !== 'applied') {\n        failed = true;\n        if (applied[0].contents[i].metadata.operation_result.errors) {\n          console.log('Error in operation_result');\n          throw applied[0].contents[i].metadata.operation_result.errors[applied[0].contents[i].metadata.operation_result.errors.length - 1];\n        } else if (applied[0].contents[i].metadata.internal_operation_results) {\n          for (const ior of applied[0].contents[i].metadata.internal_operation_results) {\n            if (ior?.result?.status === 'failed') {\n              console.log('Error in internal_operation_results', ior);\n              throw ior.result.errors[ior.result.errors.length - 1];\n            }\n          }\n        }\n      }\n    }\n    if (failed) {\n      console.error(applied);\n      throw new Error('Uncaught error in applied');\n    }\n  }\n  errHandler(error: any): Observable<any> {\n    console.log(error);\n    if (error.error && typeof error.error === 'string') {\n      // parsing errors\n      error = error.error;\n      const lines = error.split('\\n').map((line: string) => {\n        return line.trim();\n      });\n      if (lines?.length) {\n        for (const i in lines) {\n          if (lines[i].startsWith('At /') && !lines[i].startsWith('At /kind')) {\n            const n = Number(i) + 1;\n            if (lines[n]) {\n              error = `${lines[i]} ${lines[n]}`;\n            }\n          }\n        }\n      }\n    }\n    if (error.error && error.error[0]) {\n      error = error.error[0];\n    }\n    if (error.message) {\n      error = this.errorHandlingPipe.transform(error.message);\n    } else if (error.id) {\n      if (error.with) {\n        error = this.errorHandlingPipe.transform(error.id, error.with, error?.location);\n      } else if (error.id === 'failure' && error.msg) {\n        error = this.errorHandlingPipe.transform(error.msg);\n      } else {\n        error = this.errorHandlingPipe.transform(error.id);\n      }\n    } else if (error.statusText) {\n      error = error.statusText;\n    } else if (typeof error === 'string') {\n      error = this.errorHandlingPipe.transform(error);\n    } else {\n      console.warn('Error not categorized', error);\n      error = 'Unrecogized error';\n    }\n    return of({\n      success: false,\n      payload: {\n        msg: error\n      }\n    });\n  }\n  // Local forge with Taquito\n  localForge(operation: any): Observable<string> {\n    return fromPromise(localForger.forge(operation)).pipe(\n      flatMap((localForgedBytes: string) => {\n        return of(localForgedBytes);\n      })\n    );\n  }\n  getHeader(): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head~3/header`);\n  }\n  getBalance(pkh: string): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/balance`)\n      .pipe(\n        flatMap((balance: any) => {\n          return of({\n            success: true,\n            payload: {\n              balance: balance\n            }\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  getDelegate(pkh: string): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}`)\n      .pipe(\n        flatMap((contract: any) => {\n          let delegate = '';\n          if (contract.delegate) {\n            delegate = contract.delegate;\n          }\n          return of({\n            success: true,\n            payload: {\n              delegate: delegate\n            }\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  getVotingRights(): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/votes/listings`)\n      .pipe(\n        flatMap((listings: any) => {\n          return of({\n            success: true,\n            payload: listings\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  isRevealed(pkh: string): Observable<boolean> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/manager_key`)\n      .pipe(\n        flatMap((manager: any) => {\n          if (manager === null) {\n            return of(false);\n          } else {\n            return of(true);\n          }\n        })\n      )\n      .pipe(\n        catchError((err) => {\n          return of(true);\n        })\n      ); // conservative action\n  }\n  getManager(pkh: string): Observable<string> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/manager_key`).pipe(\n      flatMap((pk: string) => {\n        return of(pk ?? '');\n      })\n    );\n  }\n  getAccount(pkh: string): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}`)\n      .pipe(\n        flatMap((contract: any) => {\n          let delegate = '';\n          if (contract.delegate) {\n            delegate = contract.delegate;\n          }\n          return of({\n            success: true,\n            payload: {\n              balance: contract.balance,\n              manager: contract.manager,\n              delegate: delegate,\n              counter: contract.counter\n            }\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  getVerifiedOpBytes(operationLevel, operationHash, pkh, pk): Observable<string> {\n    return this.getRpc(`chains/main/blocks/${operationLevel}/operation_hashes`).pipe(\n      flatMap((opHashes: any) => {\n        const opIndex = opHashes[3].findIndex((a) => a === operationHash);\n        return this.getRpc(`chains/main/blocks/${operationLevel}/operations`).pipe(\n          flatMap((op: any) => {\n            let ans = '';\n            op = op[3][opIndex];\n            const sig = op.signature;\n            delete op.chain_id;\n            delete op.signature;\n            delete op.hash;\n            delete op.protocol;\n            for (let i = 0; i < op.contents.length; i++) {\n              delete op.contents[i].metadata;\n              if (op.contents[i].managerPubkey) {\n                // Fix for mainnet\n                op.contents[i].manager_pubkey = op.contents[i].managerPubkey;\n                delete op.contents[i].managerPubkey;\n              }\n            }\n            return this.postRpc('chains/main/blocks/head/helpers/forge/operations', op).pipe(\n              flatMap((opBytes: any) => {\n                if (this.pk2pkh(pk) === pkh) {\n                  if (this.verify(opBytes, sig, pk)) {\n                    ans = opBytes + this.buf2hex(this.b58cdecode(sig, this.prefix.sig));\n                  } else {\n                    throw new Error('InvalidSignature');\n                  }\n                } else {\n                  throw new Error('InvalidPublicKey');\n                }\n                return of(ans);\n              })\n            );\n          })\n        );\n      })\n    );\n  }\n  getConstants(): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/constants`);\n  }\n  seed2keyPair(seed: Buffer): KeyPair {\n    if (!seed) {\n      throw new Error('NullSeed');\n    }\n    const keyPair = naclSign.keyPair.fromSeed(seed);\n    return {\n      sk: this.b58cencode(keyPair.secretKey, this.prefix.edsk),\n      pk: this.b58cencode(keyPair.publicKey, this.prefix.edpk),\n      pkh: this.b58cencode(blake2b(keyPair.publicKey, null, 20), this.prefix.tz1)\n    };\n  }\n  mnemonic2seed(mnemonic: string, passphrase: string = '') {\n    if (!this.validMnemonic(mnemonic)) {\n      throw new Error('InvalidMnemonic');\n    }\n    return bip39.mnemonicToSeedSync(mnemonic, passphrase).slice(0, 32);\n  }\n  mnemonic2entropy(mnemonic: string, passphrase: string = '') {\n    if (!this.validMnemonic(mnemonic)) {\n      throw new Error('InvalidMnemonic');\n    }\n    return bip39.mnemonicToEntropy(mnemonic);\n  }\n  validMnemonic(mnemonic: string) {\n    return bip39.validateMnemonic(mnemonic);\n  }\n  validAddress(address: string) {\n    try {\n      this.b58cdecode(address, this.prefix.tz1);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  pk2pkh(pk: string): string {\n    if (pk.length === 54 && pk.slice(0, 4) === 'edpk') {\n      const pkDecoded = this.b58cdecode(pk, this.prefix.edpk);\n      return this.b58cencode(blake2b(pkDecoded, null, 20), this.prefix.tz1);\n    } else if (pk.length === 55 && pk.slice(0, 4) === 'sppk') {\n      const pkDecoded = this.b58cdecode(pk, this.prefix.edpk);\n      return this.b58cencode(blake2b(pkDecoded, null, 20), this.prefix.tz2);\n    }\n    throw new Error('Invalid public key');\n  }\n  spPrivKeyToKeyPair(secretKey: string) {\n    let sk;\n    if (secretKey.match(/^[0-9a-f]{64}$/g)) {\n      sk = this.b58cencode(this.hex2buf(secretKey), this.prefix.spsk);\n    } else if (secretKey.match(/^spsk[1-9a-km-zA-HJ-NP-Z]{50}$/g)) {\n      sk = secretKey;\n    } else {\n      throw new Error('Invalid private key');\n    }\n    const keyPair = new elliptic.ec('secp256k1').keyFromPrivate(new Uint8Array(this.b58cdecode(sk, this.prefix.spsk)));\n    const yArray = keyPair.getPublic().getY().toArray();\n    const prefixVal = yArray[yArray.length - 1] % 2 ? 3 : 2; // Y odd / even\n    const pad = new Array(32).fill(0); // Zero-padding\n    const publicKey = new Uint8Array([prefixVal].concat(pad.concat(keyPair.getPublic().getX().toArray()).slice(-32)));\n    const pk = this.b58cencode(publicKey, this.prefix.sppk);\n    if (yArray.length < 32 && prefixVal === 3 && this.isInvertedPk(pk)) {\n      return this.spPrivKeyToKeyPair(this.invertSpsk(sk));\n    }\n    const pkh = this.pk2pkh(pk);\n    return { sk, pk, pkh };\n  }\n  isInvertedPk(pk: string): boolean {\n    /*\n      Detect keys with flipped sign and correct them.\n    */\n    const invertedPks = [\n      'sppk7cqh7BbgUMFh4yh95mUwEeg5aBPG1MBK1YHN7b9geyygrUMZByr', // test variable\n      'sppk7bMTva1MwF7cXjrcfoj6XVfcYgjrVaR9JKP3JxvPB121Ji5ftHT',\n      'sppk7bLtXf9CAVZh5jjDACezPnuwHf9CgVoAneNXQFgHknNtCyE5k8A'\n    ];\n    return invertedPks.includes(pk);\n  }\n  invertSpsk(sk: string) {\n    const x = new Uint8Array([...new Uint8Array(32).fill(0), ...this.b58cdecode(sk, this.prefix.spsk)]).slice(-32);\n    const p = this.hex2buf('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141'.toLowerCase());\n    let inv = []; // p - x\n    let remainder = 0;\n    for (let i = 31; i >= 0; i--) {\n      let sub = p[i] - x[i] - remainder;\n      if (sub < 0) {\n        sub += 256;\n        remainder = 1;\n      } else {\n        remainder = 0;\n      }\n      inv.push(sub);\n    }\n    if (remainder) {\n      throw new Error('Invalid X');\n    }\n    inv = inv.reverse();\n    return this.buf2hex(inv);\n  }\n  spPointsToPkh(pubX: string, pubY: string): string {\n    const key = new elliptic.ec('secp256k1').keyFromPublic({\n      x: pubX,\n      y: pubY\n    });\n    const yArray = key.getPublic().getY().toArray();\n    const prefixVal = yArray[yArray.length - 1] % 2 ? 3 : 2;\n    const pad = new Array(32).fill(0);\n    let publicKey = new Uint8Array([prefixVal].concat(pad.concat(key.getPublic().getX().toArray()).slice(-32)));\n    let pk = this.b58cencode(publicKey, this.prefix.sppk);\n    if (yArray.length < 32 && prefixVal === 3 && this.isInvertedPk(pk)) {\n      publicKey = new Uint8Array([2].concat(pad.concat(key.getPublic().getX().toArray()).slice(-32)));\n      pk = this.b58cencode(publicKey, this.prefix.sppk);\n    }\n    const pkh = this.pk2pkh(pk);\n    return pkh;\n  }\n  async decompress(pk: string): Promise<any> {\n    const decodedPk = this.b58cdecode(pk, this.prefix.sppk);\n    const hexPk = this.buf2hex(decodedPk);\n    const secp256k1 = await instantiateSecp256k1();\n    const compressed = hexToBin(hexPk);\n    const uncompressed = secp256k1.uncompressPublicKey(compressed);\n    const xy = binToHex(uncompressed).slice(2);\n    return { X: xy.slice(0, 64), Y: xy.slice(64, 128) };\n  }\n  hex2pk(hex: string): string {\n    return this.b58cencode(this.hex2buf(hex.slice(2, 66)), this.prefix.edpk);\n  }\n  hex2buf(hex) {\n    return new Uint8Array(\n      hex.match(/[\\da-f]{2}/gi).map(function (h) {\n        return parseInt(h, 16);\n      })\n    );\n  }\n  buf2hex(buffer) {\n    const byteArray = new Uint8Array(buffer),\n      hexParts = [];\n    for (let i = 0; i < byteArray.length; i++) {\n      const hex = byteArray[i].toString(16);\n      const paddedHex = ('00' + hex).slice(-2);\n      hexParts.push(paddedHex);\n    }\n    return hexParts.join('');\n  }\n  b58cencode(payload: any, prefixx?: Uint8Array) {\n    const n = new Uint8Array(prefixx.length + payload.length);\n    n.set(prefixx);\n    n.set(payload, prefixx.length);\n    return Bs58check.encode(Buffer.from(this.buf2hex(n), 'hex'));\n  }\n  b58cdecode(enc, prefixx) {\n    let n = Bs58check.decode(enc);\n    n = n.slice(prefixx.length);\n    return n;\n  }\n  ledgerPreHash(opbytes: string): string {\n    return this.buf2hex(blake2b(this.hex2buf(opbytes), null, 32));\n  }\n  sign(bytes: string, sk: string): any {\n    if (!['03', '05', '80'].includes(bytes.slice(0, 2))) {\n      throw new Error('Invalid prefix');\n    }\n    if (sk.slice(0, 4) === 'spsk') {\n      const hash = blake2b(this.hex2buf(bytes), null, 32);\n      bytes = bytes.slice(2);\n      const key = new elliptic.ec('secp256k1').keyFromPrivate(new Uint8Array(this.b58cdecode(sk, this.prefix.spsk)));\n      let sig = key.sign(hash, { canonical: true });\n      const pad = new Array(32).fill(0);\n      const r = pad.concat(sig.r.toArray()).slice(-32);\n      const s = pad.concat(sig.s.toArray()).slice(-32);\n      sig = new Uint8Array(r.concat(s));\n      const spsig = this.b58cencode(sig, this.prefix.spsig);\n      const sbytes = bytes + this.buf2hex(sig);\n      return {\n        bytes: bytes,\n        sig: sig,\n        edsig: spsig,\n        sbytes: sbytes\n      };\n    } else {\n      const hash = blake2b(this.hex2buf(bytes), null, 32);\n      bytes = bytes.slice(2);\n      const sig = naclSign.detached(hash, this.b58cdecode(sk, this.prefix.edsk));\n      const edsig = this.b58cencode(sig, this.prefix.edsig);\n      const sbytes = bytes + this.buf2hex(sig);\n      return {\n        bytes: bytes,\n        sig: sig,\n        edsig: edsig,\n        sbytes: sbytes\n      };\n    }\n  }\n  hexsigToEdsig(hex: string): string {\n    return this.b58cencode(this.hex2buf(hex), this.prefix.edsig);\n  }\n  verify(bytes: string, sig: string, pk: string): Boolean {\n    console.log('bytes', bytes);\n    const hash = blake2b(this.hex2buf(bytes), null, 32);\n    const signature = this.b58cdecode(sig, this.prefix.edsig);\n    const publicKey = this.b58cdecode(pk, this.prefix.edpk);\n    return naclSign.detached.verify(signature, hash, publicKey);\n  }\n  sig2edsig(sig: string): any {\n    return this.b58cencode(this.hex2buf(sig), this.prefix.edsig);\n  }\n  decodeString(bytes: string): string {\n    return Buffer.from(this.hex2buf(bytes)).toString('utf-8');\n  }\n  zarithDecode(hex: string): any {\n    let count = 0;\n    let value = 0;\n    while (1) {\n      const byte = Number('0x' + hex.slice(0 + count * 2, 2 + count * 2));\n      value += (byte & 127) * 128 ** count;\n      count++;\n      if ((byte & 128) !== 128) {\n        break;\n      }\n    }\n    return {\n      value: value,\n      count: count\n    };\n  }\n  zarithDecodeInt(hex: string): any {\n    let count = 0;\n    let value = Big(0);\n    while (1) {\n      const byte = Number('0x' + hex.slice(0 + count * 2, 2 + count * 2));\n      if (count === 0) {\n        value = Big((byte & 63) * 128 ** count).add(value);\n      } else {\n        value = Big(((byte & 127) * 2) >> 1)\n          .times(64 * 128 ** (count - 1))\n          .add(value);\n      }\n      count++;\n      if ((byte & 128) !== 128) {\n        break;\n      }\n    }\n    return {\n      value: value,\n      count: count\n    };\n  }\n  getContractDelegation(pkh: string) {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        {\n          prim: 'NIL',\n          args: [{ prim: 'operation' }]\n        },\n        {\n          prim: 'PUSH',\n          args: [\n            { prim: 'key_hash' },\n            {\n              string: pkh\n            }\n          ]\n        },\n        { prim: 'SOME' },\n        { prim: 'SET_DELEGATE' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getContractUnDelegation() {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        {\n          prim: 'NIL',\n          args: [{ prim: 'operation' }]\n        },\n        {\n          prim: 'NONE',\n          args: [{ prim: 'key_hash' }]\n        },\n        { prim: 'SET_DELEGATE' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getContractPkhTransaction(to: string, amount: string) {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\n        {\n          prim: 'PUSH',\n          args: [\n            { prim: 'key_hash' },\n            {\n              string: to\n            }\n          ]\n        },\n        { prim: 'IMPLICIT_ACCOUNT' },\n        {\n          prim: 'PUSH',\n          args: [{ prim: 'mutez' }, { int: amount }]\n        },\n        { prim: 'UNIT' },\n        { prim: 'TRANSFER_TOKENS' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getContractKtTransaction(to: string, amount: string) {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\n        {\n          prim: 'PUSH',\n          args: [{ prim: 'address' }, { string: to }]\n        },\n        { prim: 'CONTRACT', args: [{ prim: 'unit' }] },\n        [\n          {\n            prim: 'IF_NONE',\n            args: [[[{ prim: 'UNIT' }, { prim: 'FAILWITH' }]], []]\n          }\n        ],\n        {\n          prim: 'PUSH',\n          args: [{ prim: 'mutez' }, { int: amount }]\n        },\n        { prim: 'UNIT' },\n        { prim: 'TRANSFER_TOKENS' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getManagerScript(pkh: string) {\n    let pkHex: string;\n    if (pkh.slice(0, 2) === 'tz') {\n      pkHex = '00' + this.buf2hex(this.b58cdecode(pkh, this.prefix.tz1));\n    } else {\n      pkHex = pkh;\n    }\n    return {\n      code: [\n        {\n          prim: 'parameter',\n          args: [\n            {\n              prim: 'or',\n              args: [\n                {\n                  prim: 'lambda',\n                  args: [\n                    {\n                      prim: 'unit'\n                    },\n                    {\n                      prim: 'list',\n                      args: [\n                        {\n                          prim: 'operation'\n                        }\n                      ]\n                    }\n                  ],\n                  annots: ['%do']\n                },\n                {\n                  prim: 'unit',\n                  annots: ['%default']\n                }\n              ]\n            }\n          ]\n        },\n        {\n          prim: 'storage',\n          args: [\n            {\n              prim: 'key_hash'\n            }\n          ]\n        },\n        {\n          prim: 'code',\n          args: [\n            [\n              [\n                [\n                  {\n                    prim: 'DUP'\n                  },\n                  {\n                    prim: 'CAR'\n                  },\n                  {\n                    prim: 'DIP',\n                    args: [\n                      [\n                        {\n                          prim: 'CDR'\n                        }\n                      ]\n                    ]\n                  }\n                ]\n              ],\n              {\n                prim: 'IF_LEFT',\n                args: [\n                  [\n                    {\n                      prim: 'PUSH',\n                      args: [\n                        {\n                          prim: 'mutez'\n                        },\n                        {\n                          int: '0'\n                        }\n                      ]\n                    },\n                    {\n                      prim: 'AMOUNT'\n                    },\n                    [\n                      [\n                        {\n                          prim: 'COMPARE'\n                        },\n                        {\n                          prim: 'EQ'\n                        }\n                      ],\n                      {\n                        prim: 'IF',\n                        args: [\n                          [],\n                          [\n                            [\n                              {\n                                prim: 'UNIT'\n                              },\n                              {\n                                prim: 'FAILWITH'\n                              }\n                            ]\n                          ]\n                        ]\n                      }\n                    ],\n                    [\n                      {\n                        prim: 'DIP',\n                        args: [\n                          [\n                            {\n                              prim: 'DUP'\n                            }\n                          ]\n                        ]\n                      },\n                      {\n                        prim: 'SWAP'\n                      }\n                    ],\n                    {\n                      prim: 'IMPLICIT_ACCOUNT'\n                    },\n                    {\n                      prim: 'ADDRESS'\n                    },\n                    {\n                      prim: 'SENDER'\n                    },\n                    [\n                      [\n                        {\n                          prim: 'COMPARE'\n                        },\n                        {\n                          prim: 'EQ'\n                        }\n                      ],\n                      {\n                        prim: 'IF',\n                        args: [\n                          [],\n                          [\n                            [\n                              {\n                                prim: 'UNIT'\n                              },\n                              {\n                                prim: 'FAILWITH'\n                              }\n                            ]\n                          ]\n                        ]\n                      }\n                    ],\n                    {\n                      prim: 'UNIT'\n                    },\n                    {\n                      prim: 'EXEC'\n                    },\n                    {\n                      prim: 'PAIR'\n                    }\n                  ],\n                  [\n                    {\n                      prim: 'DROP'\n                    },\n                    {\n                      prim: 'NIL',\n                      args: [\n                        {\n                          prim: 'operation'\n                        }\n                      ]\n                    },\n                    {\n                      prim: 'PAIR'\n                    }\n                  ]\n                ]\n              }\n            ]\n          ]\n        }\n      ],\n      storage: { bytes: pkHex }\n    };\n  }\n  getFA12Transaction(from: string, to: string, amount: string) {\n    return {\n      entrypoint: 'transfer',\n      value: {\n        args: [\n          {\n            string: from\n          },\n          {\n            args: [\n              {\n                string: to\n              },\n              {\n                int: amount\n              }\n            ],\n            prim: 'Pair'\n          }\n        ],\n        prim: 'Pair'\n      }\n    };\n  }\n  getFA2Transaction(from: string, to: string, amount: string, id: string) {\n    return {\n      entrypoint: 'transfer',\n      value: [\n        {\n          prim: 'Pair',\n          args: [\n            {\n              string: from\n            },\n            [\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    string: to\n                  },\n                  {\n                    prim: 'Pair',\n                    args: [\n                      {\n                        int: id.toString()\n                      },\n                      {\n                        int: amount\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          ]\n        }\n      ]\n    };\n  }\n  getApproveAmountParameters(from: string, amount: string) {\n    return {\n      entrypoint: 'approve',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            int: amount\n          }\n        ]\n      }\n    };\n  }\n  getRevokeAmountParameters(from: string) {\n    return {\n      entrypoint: 'approve',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            int: '0'\n          }\n        ]\n      }\n    };\n  }\n  getXTZToTokenParameters(from: string, minimum: string, expirationTime: string) {\n    return {\n      entrypoint: 'xtzToToken',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimum\n              },\n              {\n                string: expirationTime\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n  getTokenToXTZParameters(from: string, minimumToken: string, minimumXTZ: string, expirationTime: string) {\n    return {\n      entrypoint: 'tokenToXtz',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimumToken\n              },\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    int: minimumXTZ\n                  },\n                  {\n                    string: expirationTime\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n\n  getAddLiquidityParameters(from: string, minimumLqt: string, minimumToken: string, expirationTime: string) {\n    return {\n      entrypoint: 'addLiquidity',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimumLqt\n              },\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    int: minimumToken\n                  },\n                  {\n                    string: expirationTime\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n\n  getRemoveLiquidityParameters(from: string, lqtBurn: string, minXtzWithdrawn: string, minTokensWithdrawn: string, expirationTime: string) {\n    return {\n      entrypoint: 'removeLiquidity',\n\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: lqtBurn\n              },\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    int: minXtzWithdrawn\n                  },\n                  {\n                    prim: 'Pair',\n                    args: [\n                      {\n                        int: minTokensWithdrawn\n                      },\n                      {\n                        string: expirationTime\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n\n  getTezToTokenPaymentParameters(from: string, minimumToken: string) {\n    return {\n      entrypoint: 'tezToTokenPayment',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            int: minimumToken\n          },\n          {\n            string: from\n          }\n        ]\n      }\n    };\n  }\n\n  getTokenToTezPaymentParameters(from: string, minimumXtz: string, minimumToken: string) {\n    return {\n      entrypoint: 'tokenToTezPayment',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimumToken\n              },\n              {\n                int: minimumXtz\n              }\n            ]\n          },\n          {\n            string: from\n          }\n        ]\n      }\n    };\n  }\n\n  parseTokenTransfer(op: any): { tokenId: string; to: string; amount: string } {\n    const opJson = JSON.stringify(op.parameters);\n    const addresses = opJson.match(/\\{\\\"string\\\":\\\"[^\\\"]*/g)?.map((s) => {\n      return s.slice(11);\n    });\n    const amounts = opJson.match(/\\{\\\"int\\\":\\\"[^\\\"]*/g)?.map((i) => {\n      return i.slice(8);\n    });\n    if (!addresses || !amounts) {\n      return null;\n    }\n    if (addresses.length === 2) {\n      if (amounts.length === 1) {\n        const fa12ref = this.getFA12Transaction(addresses[0], addresses[1], amounts[0]);\n        if (isEqual(fa12ref, op.parameters)) {\n          return {\n            tokenId: `${op.destination}:0`,\n            to: addresses[1],\n            amount: amounts[0]\n          };\n        }\n      } else if (amounts.length === 2) {\n        const fa2ref = this.getFA2Transaction(addresses[0], addresses[1], amounts[1], String(amounts[0]));\n        if (isEqual(fa2ref, op.parameters)) {\n          return {\n            tokenId: `${op.destination}:${amounts[0]}`,\n            to: addresses[1],\n            amount: amounts[1]\n          };\n        }\n      }\n    }\n    return null;\n  }\n  postRpc(path: string, payload: any): Observable<any> {\n    return this.http.post(`${this.nodeURL}/${path}`, payload, httpOptions).pipe(this.retryPipeline(path));\n  }\n  getRpc(path: string): Observable<any> {\n    return this.http.get(`${this.nodeURL}/${path}`).pipe(this.retryPipeline(path));\n  }\n  private retryPipeline(path: string, retries: number = 3): MonoTypeOperatorFunction<unknown> {\n    const retryWithWarning = (i, e) => {\n      if (i < retries) {\n        console.warn(`Retry ${i + 1}: ${path}`, e);\n      }\n      return of(e).pipe(delayOperator(250));\n    };\n    return retryWhen((errors) =>\n      errors.pipe(concatMap((e, i) => iif(() => i >= retries || !(e?.name === 'HttpErrorResponse'), throwError(e), retryWithWarning(i, e))))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { TokenData } from '../token/token.service';\nimport { Account } from '../wallet/wallet';\n\ninterface PrepareTokenTransfer {\n  account: Account;\n  tokenTransfer: string;\n  symbol: string;\n}\nexport enum BuyProvider {\n  Coinbase = 0,\n  Transak,\n  MoonPay\n}\ninterface MetadataUpdated {\n  contractAddress: string;\n  id: string;\n  token: TokenData;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n  public activeAccount = new BehaviorSubject(null);\n  public walletUpdated = new BehaviorSubject(null);\n  public metadataUpdated: BehaviorSubject<MetadataUpdated>;\n  public refreshTokens: BehaviorSubject<null>;\n  public confirmedOp: Subject<string>;\n  public prepareTokenTransfer: Subject<PrepareTokenTransfer>;\n  public nftsUpdated: BehaviorSubject<any>;\n  public origin: BehaviorSubject<string>;\n  public beaconResponse: Subject<boolean>;\n  public logout: Subject<boolean>;\n  public buy: Subject<BuyProvider>;\n  public wc2: Subject<any>;\n  constructor() {\n    this.init();\n    this.logout.subscribe((o) => {\n      if (o) {\n        this.reset();\n      }\n    });\n  }\n  init() {\n    this.metadataUpdated = new BehaviorSubject<MetadataUpdated>(null);\n    this.refreshTokens = new BehaviorSubject<any>([]);\n    this.confirmedOp = new Subject<string>();\n    this.prepareTokenTransfer = new Subject<PrepareTokenTransfer>();\n    this.nftsUpdated = new BehaviorSubject<any>(undefined);\n    this.origin = new BehaviorSubject<string>(null);\n    this.beaconResponse = new Subject<boolean>();\n    this.logout = new Subject<boolean>();\n    this.buy = new Subject<BuyProvider>();\n    this.wc2 = new Subject<any>();\n  }\n  reset() {\n    this.metadataUpdated.next(null);\n    this.refreshTokens.next(null);\n    this.nftsUpdated.next(undefined);\n  }\n}\n","import Big from 'big.js';\n\nexport class Amount {\n  decimalPlaces: number = 6;\n  internalBigInt: Big = Big(0);\n  internalNormalised: number = 0;\n\n  constructor(c: any) {\n    if (c?.rpcAmount === undefined && c?.normalisedAmount === undefined) {\n      return;\n    }\n    this.decimalPlaces = c.decimalPlaces;\n    if (!!c?.rpcAmount) {\n      let multiplierIntValue = Math.round(Math.pow(10, this.decimalPlaces));\n      this.internalNormalised = parseFloat(Big(c.rpcAmount).div(multiplierIntValue).toString() || 0);\n      this.internalBigInt = Big(c.rpcAmount);\n    } else if (!!c?.normalisedAmount) {\n      let multiplierIntValue = Math.round(Math.pow(10, this.decimalPlaces));\n      this.internalNormalised = parseFloat(Big(c.normalisedAmount).toString() || 0);\n      this.internalBigInt = Big(c.normalisedAmount).times(multiplierIntValue);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport dexterCalculations from 'dexCalcs/dist/index-mobile.min';\nimport { Amount } from './classes/Amount';\nimport Big from 'big.js';\nimport { ChartSeries } from '../../../app/components/ui/chart/chart.component';\nimport { CONSTANTS } from '../../../environments/environment';\n@Injectable({ providedIn: 'root' })\nexport class SwapLiquidityService {\n  readonly lqdTokenContract = 'KT1AafHA1C1vk959wvHWBispY9Y2f3fxBUUo';\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  public storage = {};\n  public dipdupContracts = [];\n\n  constructor() {}\n\n  async fetchContracts(offset = 0): Promise<void> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    const req = {\n      query: `{dipdupContract(where: {}, offset: ${offset}) {address, name, typename, updatedAt, createdAt}}`\n    };\n    try {\n      const response = await (\n        await fetch(baseUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json();\n      if (response?.data?.dipdupContract?.length > 0) {\n        this.dipdupContracts.concat(response.data.dipdupContract);\n        await this.fetchContracts(offset + 100);\n      } else if (offset === 0) {\n        throw new Error();\n      }\n      return;\n    } catch (e) {\n      throw new Error();\n    }\n  }\n\n  async fetchStorage(contract): Promise<void> {\n    try {\n      return await fetch(`${CONSTANTS.API_URL}/contracts/${contract}/storage`)\n        .then((r) => r.json())\n        .then((r) => {\n          this.storage[contract] = {};\n          this.storage[contract].total_pool = r['lqtTotal'];\n          this.storage[contract].tez_pool = r['xtzPool'];\n          this.storage[contract].token_pool = r['tokenPool'];\n        });\n    } catch (e) {\n      throw new Error();\n    }\n  }\n\n  settings(dex: string): {\n    fee: string;\n    burn: string;\n    includeSubsidy: boolean;\n  } {\n    switch (dex) {\n      case 'liquidityBaking':\n        return { fee: '0.1', burn: '0.1', includeSubsidy: false };\n      case 'quipuswap':\n        return { fee: '0.3', burn: '0', includeSubsidy: false };\n      default:\n        return { fee: '0.3', burn: '0', includeSubsidy: false };\n    }\n  }\n\n  createPoolAmounts(): { xtzPool: Amount; tokenPool: Amount } {\n    const xtzPool = new Amount({\n      rpcAmount: parseFloat(this.storage[this.lqdContract]?.tez_pool),\n      decimalPlaces: 6\n    });\n    const tokenPool = new Amount({\n      rpcAmount: parseFloat(this.storage[this.lqdContract]?.token_pool),\n      decimalPlaces: 8\n    });\n    return { xtzPool, tokenPool };\n  }\n\n  calculateXtzToToken(xtzToSell, xtzPool, tokenPool, maxSlippage, dex): { expected; minimum; rate; impactDouble } {\n    const expected = this.xtzToTokenExpectedReturn(xtzToSell, xtzPool, tokenPool, dex);\n    const minimum = this.xtzToTokenMinimumReturn(expected, maxSlippage);\n    const rate = this.xtzToTokenExchangeRateDisplay(xtzToSell, xtzPool, tokenPool, dex);\n    const priceImpact = this.xtzToTokenPriceImpact(xtzToSell, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { expected, minimum, rate, impactDouble };\n  }\n\n  calculateXtzToTokenFromToken(tokenToSell, xtzPool, tokenPool, maxSlippage, dex): { xtz; token } {\n    const result = this.calculateTokenToXTZ(tokenToSell, xtzPool, tokenPool, maxSlippage, dex);\n    const expected = this.xtzToTokenExpectedReturn(result.expected, xtzPool, tokenPool, dex);\n    const minimum = this.xtzToTokenMinimumReturn(expected, maxSlippage);\n    const rate = this.xtzToTokenExchangeRateDisplay(result.expected, xtzPool, tokenPool, dex);\n    const priceImpact = this.xtzToTokenPriceImpact(result.expected, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { xtz: result, token: { expected, minimum, rate, impactDouble } };\n  }\n\n  calculateTokenToXTZ(tokenToSell, xtzPool, tokenPool, maxSlippage, dex): { expected; minimum; rate; impactDouble } {\n    const expected = this.tokenToXtzExpectedReturn(tokenToSell, xtzPool, tokenPool, dex);\n    const minimum = this.tokenToXtzMinimumReturn(expected, maxSlippage);\n    const rate = this.tokenToXtzExchangeRateDisplay(tokenToSell, xtzPool, tokenPool, dex);\n    const priceImpact = this.tokenToXtzPriceImpact(tokenToSell, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { expected, minimum, rate, impactDouble };\n  }\n\n  calculateTokenToXTZFromXTZ(xtzToSell, xtzPool, tokenPool, maxSlippage, dex): { xtz; token } {\n    const result = this.calculateXtzToToken(xtzToSell, xtzPool, tokenPool, maxSlippage, dex);\n    const expected = this.tokenToXtzExpectedReturn(result.expected, xtzPool, tokenPool, dex);\n    const minimum = this.tokenToXtzMinimumReturn(expected, maxSlippage);\n    const rate = this.tokenToXtzExchangeRateDisplay(result.expected, xtzPool, tokenPool, dex);\n    const priceImpact = this.tokenToXtzPriceImpact(result.expected, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { xtz: { expected, minimum, rate, impactDouble }, token: result };\n  }\n\n  calculateAddLiquidityXTZ(xtz, xtzPool, tokenPool, totalLiquidity, maxSlippage, dex): { liquidityExpected; liquidityMinimum; tokenRequired; exchangeRate } {\n    const tokenRequired = this.addLiquidityTokenRequired(xtz, xtzPool, tokenPool, dex);\n    const liquidityReturned = this.addLiquidityReturn(xtz, xtzPool, totalLiquidity, maxSlippage, dex);\n    const exchangeRate = this.xtzToTokenExchangeRateDisplay(xtz, xtzPool, tokenPool, dex);\n    return {\n      liquidityExpected: liquidityReturned?.expected,\n      liquidityMinimum: liquidityReturned?.minimum,\n      tokenRequired,\n      exchangeRate\n    };\n  }\n\n  calculateAddLiquidityToken(token, xtzPool, tokenPool, totalLiquidity, maxSlippage, dex): { liquidityExpected; liquidityMinimum; xtzRequired; exchangeRate } {\n    const xtzRequired = this.addLiquidityXtzRequired(token, xtzPool, tokenPool, dex);\n    const liquidityReturned = this.addLiquidityReturn(xtzRequired, xtzPool, totalLiquidity, maxSlippage, dex);\n    const exchangeRate = this.xtzToTokenExchangeRateDisplay(xtzRequired, xtzPool, tokenPool, dex);\n    return {\n      liquidityExpected: liquidityReturned?.expected,\n      liquidityMinimum: liquidityReturned?.minimum,\n      xtzRequired,\n      exchangeRate\n    };\n  }\n\n  calculateRemoveLiquidity(\n    liquidityBurned,\n    xtzPool,\n    tokenPool,\n    totalLiquidity,\n    maxSlippage,\n    dex\n  ): { xtzExpected; xtzMinimum; tokenExpected; tokenMinimum; exchangeRate } {\n    const xtzOut = this.removeLiquidityXtzReceived(liquidityBurned, totalLiquidity, xtzPool, maxSlippage, dex);\n    const tokenOut = this.removeLiquidityTokenReceived(liquidityBurned, totalLiquidity, tokenPool, maxSlippage);\n    const exchangeRate = this.xtzToTokenExchangeRateDisplay(xtzOut.expected, xtzPool, tokenPool, dex);\n\n    return {\n      xtzExpected: xtzOut?.expected,\n      xtzMinimum: xtzOut?.minimum,\n      tokenExpected: tokenOut?.expected,\n      tokenMinimum: tokenOut?.minimum,\n      exchangeRate\n    };\n  }\n\n  xtzToTokenExpectedReturn(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const xtz = xtzToSell.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n    const result = dexterCalculations.xtzToTokenTokenOutput(\n      xtz.toString(),\n      xPool.toString(),\n      tPool.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({\n      rpcAmount: result?.toString() || '0',\n      decimalPlaces: tokenPool.decimalPlaces\n    });\n  }\n\n  xtzToTokenMinimumReturn(tokenAmount: Amount, slippage: number): Amount {\n    const token = tokenAmount.internalBigInt;\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'xtzToTokenMinimumReturn' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n    const result = dexterCalculations.xtzToTokenMinimumTokenOutput(token.toString(), slippage);\n    return new Amount({\n      rpcAmount: result?.value?.toString() || '0',\n      decimalPlaces: tokenAmount.decimalPlaces\n    });\n  }\n\n  xtzToTokenRequiredXtzFor(tokenAmount: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const tokenRequired = tokenAmount.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.xtzToTokenXtzInput(\n      tokenRequired,\n      xtzPoolRpc,\n      tokenPoolRpc,\n      tokenAmount.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({ rpcAmount: result.toString() });\n  }\n\n  xtzToTokenExchangeRate(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const xtz = xtzToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.xtzToTokenExchangeRate(xtz, xtzPoolRpc, tokenPoolRpc, dex.fee.toString(), dex.burn.toString(), dex.includeSibsidy);\n    return parseFloat(result.toString());\n  }\n\n  xtzToTokenExchangeRateDisplay(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): string {\n    const xtz = xtzToSell.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n    const result = dexterCalculations.xtzToTokenExchangeRateForDisplay(\n      xtz.toString(),\n      xPool.toString(),\n      tPool.toString(),\n      tokenPool.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return result?.toString() ?? '0';\n  }\n\n  xtzToTokenPriceImpact(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const xtz = xtzToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.xtzToTokenPriceImpact(\n      xtz.toString(),\n      xtzPoolRpc.toString(),\n      tokenPoolRpc.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return parseFloat(result?.toString() ?? 0);\n  }\n\n  tokenToXtzExpectedReturn(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const token = tokenToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n    const result = dexterCalculations.tokenToXtzXtzOutput(\n      token.toString(),\n      xtzPoolRpc.toString(),\n      tokenPoolRpc.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({\n      rpcAmount: result?.toString() || '0',\n      decimalPlaces: 6\n    });\n  }\n\n  tokenToXtzMinimumReturn(xtzAmount: Amount, slippage: number): Amount {\n    const xtz = xtzAmount.internalBigInt;\n\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'tokenToXtzMinimumReturn' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const result = dexterCalculations.tokenToXtzMinimumXtzOutput(xtz.toString(), slippage);\n    return new Amount({\n      rpcAmount: result?.toString() || '0',\n      decimalPlaces: 6\n    });\n  }\n\n  tokenToXtzRequiredTokenFor(xtzAmount: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const xtzRequired = xtzAmount.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzTokenInput(\n      xtzRequired,\n      xPool,\n      tPool,\n      tokenPool.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({\n      rpcAmount: result.toString(),\n      decimalPlaces: tokenPool.decimalPlaces\n    });\n  }\n\n  tokenToXtzExchangeRate(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const token = tokenToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzExchangeRate(\n      token.toString(),\n      xtzPoolRpc,\n      tokenPoolRpc,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return parseFloat(result.toString());\n  }\n\n  tokenToXtzExchangeRateDisplay(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): string {\n    const token = tokenToSell.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzExchangeRateForDisplay(\n      token.toString(),\n      xPool.toString(),\n      tPool.toString(),\n      tokenPool.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return result?.toString() ?? '0';\n  }\n\n  tokenToXtzMarketRate(xtzPool: Amount, tokenPool: Amount): number {\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzMarketRate(xPool, tPool, tokenPool.decimalPlaces);\n    return parseFloat(parseFloat(result.toString()).toFixed(tokenPool.decimalPlaces));\n  }\n\n  tokenToXtzPriceImpact(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const token = tokenToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzPriceImpact(\n      token.toString(),\n      xtzPoolRpc.toString(),\n      tokenPoolRpc.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return parseFloat(result?.toString() ?? 0);\n  }\n\n  addLiquidityReturn(xtzToDeposit: Amount, xtzPool: Amount, totalLiquidity: Amount, slippage: number, dex): { expected: Amount; minimum: Amount } {\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'addLiquidityReturn' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const xtzIn = xtzToDeposit.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const totalLqt = totalLiquidity;\n\n    const result = dexterCalculations.addLiquidityLiquidityCreated(xtzIn.toString(), xPool.toString(), totalLqt.toString(), dex.includeSubsidy);\n    const expected = new Amount({\n      rpcAmount: result?.value ?? 0,\n      decimalPlaces: 0\n    });\n    const minimum = expected.internalNormalised - expected.internalNormalised * slippage;\n    const minAmount = new Amount({\n      normalisedAmount: minimum ?? 0,\n      decimalPlaces: 0\n    });\n    return { expected, minimum: minAmount };\n  }\n\n  addLiquidityTokenRequired(xtzToDeposit: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const xtzIn = xtzToDeposit.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.addLiquidityTokenIn(xtzIn.toString(), xPool.toString(), tPool.toString(), dex.includeSubsidy);\n    return new Amount({\n      rpcAmount: result?.toString() ?? '0',\n      decimalPlaces: tokenPool.decimalPlaces\n    });\n  }\n\n  addLiquidityXtzRequired(tokenToDeposit: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const tokenIn = tokenToDeposit.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.addLiquidityXtzIn(tokenIn.toString(), xPool.toString(), tPool.toString(), dex.includeSubsidy);\n    return new Amount({ rpcAmount: result?.toString() ?? '0', decimalPlaces: xtzPool.decimalPlaces });\n  }\n\n  removeLiquidityTokenReceived(liquidityBurned: Amount, totalLiquidity: Amount, tokenPool: Amount, slippage: number): { expected: Amount; minimum: Amount } {\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'removeLiquidityTokenReceived' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const lqtBurned = liquidityBurned.internalBigInt;\n    const tLqt = totalLiquidity;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.removeLiquidityTokenOut(lqtBurned.toString(), tLqt.toString(), tPool.toString());\n\n    if (!!Big(result?.value).toString()) {\n      const expected = new Amount({\n        rpcAmount: result?.value ?? 0,\n        decimalPlaces: 8\n      });\n      const minimum = expected.internalNormalised - expected.internalNormalised * slippage;\n      const minAmount = new Amount({\n        normalisedAmount: minimum,\n        decimalPlaces: 8\n      });\n      return { expected, minimum: minAmount };\n    } else {\n      return undefined;\n    }\n  }\n\n  removeLiquidityXtzReceived(liquidityBurned: Amount, totalLiquidity: Amount, xtzPool: Amount, slippage: number, dex): { expected: Amount; minimum: Amount } {\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'removeLiquidityXtzReceived' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const lqtBurned = liquidityBurned.internalBigInt;\n    const tLqt = totalLiquidity;\n    const xPool = xtzPool.internalBigInt;\n\n    const result = dexterCalculations.removeLiquidityXtzOut(lqtBurned.toString(), tLqt.toString(), xPool.toString(), dex.includeSubsidy);\n\n    if (!!Big(result?.value).toString()) {\n      const expected = new Amount({\n        rpcAmount: result?.value,\n        decimalPlaces: 6\n      });\n      const minimum = expected.internalNormalised - expected.internalNormalised * slippage;\n      const minAmount = new Amount({\n        normalisedAmount: minimum,\n        decimalPlaces: 6\n      });\n      return { expected, minimum: minAmount };\n    } else {\n      return undefined;\n    }\n  }\n  estimateLiquidityBakingAPY() {\n    return 'APY: ' + dexterCalculations.estimateLiquidityBakingAPY(this.storage[this.lqdContract]?.tez_pool).toFixed(2) + '%';\n  }\n}\n","// https://gitlab.com/tezos-domains/client\nimport { TezosToolkit } from '@taquito/taquito';\nimport { TaquitoTezosDomainsClient } from '@tezos-domains/taquito-client';\nimport { Tzip16Module } from '@taquito/tzip16';\nimport { Injectable } from '@angular/core';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { SupportedNetworkType } from '@tezos-domains/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TezosDomainsService {\n  private client: TaquitoTezosDomainsClient;\n  unsupportedNetwork = false;\n  private queue = [];\n  pending = false;\n  constructor() {\n    const tezosToolkit = new TezosToolkit(CONSTANTS.NODE_URL);\n    tezosToolkit.addExtension(new Tzip16Module());\n    const options = { caching: { enabled: false } };\n    try {\n      this.client = new TaquitoTezosDomainsClient({\n        tezos: tezosToolkit,\n        network: <SupportedNetworkType>CONSTANTS.NETWORK,\n        ...options\n      });\n    } catch (e) {\n      if (e?.message && e.message.includes('Supported built-in networks are:') && !CONSTANTS.MAINNET) {\n        console.error(e);\n        console.warn('Falling back on Ghostnet as network for Tezos Domains initialization');\n        this.unsupportedNetwork = true;\n        this.client = new TaquitoTezosDomainsClient({\n          tezos: tezosToolkit,\n          network: <SupportedNetworkType>'ghostnet',\n          ...options\n        });\n      } else {\n        throw e;\n      }\n    }\n  }\n  async getAddressFromDomain(domain: string) {\n    if (this.unsupportedNetwork) {\n      return { pkh: '' };\n    }\n    const address = await this.client.resolver.resolveNameToAddress(domain);\n    if (!address) {\n      return { pkh: '' };\n    }\n    return { pkh: address };\n  }\n  async getDomainFromAddress(address: string): Promise<string> {\n    if (!this.pending) {\n      this.pending = true;\n      this.collect();\n    }\n    return new Promise((resolve, reject) => {\n      this.queue.push({ address, resolve, reject });\n    });\n  }\n  async collect() {\n    setTimeout(async () => {\n      this.pending = false;\n      const queue = this.queue;\n      this.queue = [];\n      const addresses = queue.map((q) => {\n        return q.address;\n      });\n      const items = await this.getDomainFromAddresses(addresses).catch((e) => {\n        for (const q of queue) {\n          q.reject(e);\n          throw e;\n        }\n      });\n      while (queue.length) {\n        const promise = queue.shift();\n        if (items[promise.address]) {\n          promise.resolve(items[promise.address]);\n        } else {\n          promise.resolve('');\n        }\n      }\n    }, 100);\n  }\n  async getDomainFromAddresses(addresses: any) {\n    if (this.unsupportedNetwork) {\n      return {};\n    }\n    const baseUrl = CONSTANTS.MAINNET ? 'https://api.tezos.domains/graphql' : `https://${CONSTANTS.NETWORK}-api.tezos.domains/graphql`;\n    const req = {\n      query: `{reverseRecords(where: {address: {in: ${JSON.stringify(addresses)}}}) {items {address domain: domain {id, name}}}}`\n    };\n    const response = await (\n      await fetch(baseUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(req)\n      })\n    ).json();\n    const r = {};\n    if (response.data) {\n      for (const item of response.data.reverseRecords.items) {\n        if (item?.address && item?.domain?.name) {\n          r[item.address] = item.domain.name;\n        }\n      }\n    }\n    return r;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TokenResponseType, TokenService } from '../token/token.service';\nimport { ActivityService } from '../activity/activity.service';\nimport { WalletService } from '../wallet/wallet.service';\nimport { Account } from '../wallet/wallet';\nimport Big from 'big.js';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { decode } from 'blurhash';\nimport { combineLatest } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubjectService } from '../subject/subject.service';\nimport { DipDupService } from '../indexer/dipdup/dipdup.service';\n\ninterface TokenWithBalance extends TokenResponseType {\n  balance: string;\n  price: string;\n}\ninterface ContractWithImg {\n  name: string;\n  thumbnailUrl: string;\n  visitUrl: string;\n  tokens: TokenWithBalance[];\n  hidden?: boolean;\n}\ntype ContractsWithBalance = Record<string, ContractWithImg>;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenBalancesService {\n  xtzUsdRate: number;\n  balances: TokenWithBalance[] = [];\n  nfts: ContractsWithBalance = null;\n  activeAccount: Account = null;\n  _thumbnailsToCreate = [];\n  constructor(\n    private tokenService: TokenService,\n    private activityService: ActivityService,\n    private walletService: WalletService,\n    private subjectService: SubjectService,\n    private dipdupService: DipDupService\n  ) {\n    combineLatest([\n      this.subjectService.activeAccount,\n      this.subjectService.metadataUpdated,\n      this.activityService.tokenBalanceUpdated,\n      this.subjectService.refreshTokens\n    ])\n      .pipe(debounceTime(3))\n      .subscribe(([a, b, c]) => {\n        if (this.activeAccount !== a) {\n          this.activeAccount = a;\n        }\n        this.reload();\n      });\n    this.reload();\n    this.subjectService.logout.subscribe((o) => {\n      if (!!o) {\n        this.destroy();\n      }\n    });\n  }\n  destroy() {\n    this.balances = [];\n    this.nfts = null;\n  }\n  resolveAsset(token, balances, nfts) {\n    const asset: TokenResponseType = this.tokenService.getAsset(token.tokenId);\n    if (asset) {\n      if (this.isNFT(asset)) {\n        // token balance or NFT?\n        let contractAddress = asset.contractAddress;\n        if (asset?.contractAddress === 'KT1RJ6PbjHpwc3M5rw5s2Nbmefwbuwbdxton' && asset?.mintingTool === 'https://teia.art/mint') {\n          contractAddress = contractAddress + '@teia';\n        }\n        const contractAlias = this.getContractAlias(contractAddress) ?? contractAddress;\n        if (nfts[contractAlias] === undefined) {\n          const CONTRACT_ALIASES = CONSTANTS.CONTRACT_ALIASES[contractAlias as string];\n          if (!CONTRACT_ALIASES?.thumbnailUrl) {\n            if (this._thumbnailsToCreate.filter((obj) => obj.contractAlias === contractAlias).length === 0) {\n              this._thumbnailsToCreate.push({\n                contractAlias,\n                address: contractAddress\n              });\n            }\n          }\n          const name = CONTRACT_ALIASES?.name ? CONTRACT_ALIASES.name : this.tokenService.getContractName(contractAddress) ?? contractAlias;\n          nfts[contractAlias] = {\n            name,\n            thumbnailUrl: CONTRACT_ALIASES?.thumbnailUrl ?? this.tokenService.getContractLogo(contractAddress),\n            tokens: []\n          };\n          if (CONTRACT_ALIASES?.link) {\n            nfts[contractAlias].visitUrl = CONTRACT_ALIASES.link;\n          }\n        }\n        nfts[contractAlias].tokens.push({ ...asset, balance: token.balance });\n      } else if (!isNaN(asset.decimals)) {\n        const balance = Big(token.balance)\n          .div(10 ** asset.decimals)\n          .toFixed();\n        balances.push({ ...asset, balance });\n      }\n    } else {\n      if (nfts['unknown'] === undefined) {\n        const hidden = this.nfts !== null && this.nfts['unknown'] === undefined;\n        nfts['unknown'] = {\n          name: 'Unknown tokens',\n          thumbnailUrl: '../../../assets/img/unknown-token-grayscale.svg',\n          tokens: [],\n          hidden\n        };\n        if (hidden) {\n          setTimeout(() => {\n            if (this.nfts['unknown'] !== undefined) {\n              this.nfts['unknown'].hidden = false;\n            }\n          }, 10000);\n        }\n      }\n      const placeholder = this.tokenService.getPlaceholderToken(token.tokenId);\n      placeholder.name = `${placeholder.contractAddress.slice(0, 8)}... (${placeholder.id.toString()})`;\n      delete placeholder.decimals;\n      nfts['unknown'].tokens.push(placeholder);\n    }\n  }\n  reload() {\n    if (!this.activeAccount?.tokens) {\n      return;\n    }\n    const balances: TokenWithBalance[] = [];\n    const nfts: ContractsWithBalance = {};\n    for (let token of this.walletService.wallet.getAccount(this.activeAccount.address).tokens) {\n      if (token?.balance && token?.balance != '0') {\n        this.resolveAsset(token, balances, nfts);\n      }\n    }\n    this.balances = balances;\n    this.nfts = this.orderedNfts(nfts);\n    this.mergeMarket();\n\n    if (this._thumbnailsToCreate.length) {\n      this._thumbnailsToCreate.forEach(({ contractAlias, address }) => {\n        if (!this.nfts[contractAlias].thumbnailUrl) {\n          this.nfts[contractAlias].thumbnailUrl = this.getThumbnailUrl(address);\n        }\n      });\n      this._thumbnailsToCreate = [];\n    }\n    this.subjectService.nftsUpdated.next({ nfts: this.nfts, balances: this.balances });\n  }\n  orderedNfts(nfts: ContractsWithBalance): ContractsWithBalance {\n    const _nfts: ContractsWithBalance = {};\n    const aliases = Object.keys(CONSTANTS.CONTRACT_ALIASES);\n    for (let alias of aliases) {\n      if (nfts[alias]) {\n        _nfts[alias] = nfts[alias];\n        delete nfts[alias];\n      }\n    }\n    const keys = Object.keys(nfts);\n    for (let key of keys) {\n      if (key !== 'unknown') {\n        _nfts[key] = nfts[key];\n        delete nfts[key];\n      }\n    }\n    if (nfts['unknown']) {\n      // property last\n      _nfts['unknown'] = nfts['unknown'];\n      delete nfts['unknown'];\n    }\n    return _nfts;\n  }\n  getContractAlias(address: string) {\n    const keys = Object.keys(CONSTANTS.CONTRACT_ALIASES);\n    for (const key of keys) {\n      if (CONSTANTS.CONTRACT_ALIASES[key].address.includes(address)) {\n        return key;\n      }\n    }\n    return undefined;\n  }\n  getThumbnailUrl(address: string): string {\n    const pixels = decode(address.slice(0, 22), 5, 5);\n    const canvas = document.createElement('canvas');\n    canvas.width = canvas.height = 5;\n    const ctx = canvas.getContext('2d');\n    const imageData = ctx.createImageData(5, 5);\n    imageData.data.set(pixels);\n    ctx.putImageData(imageData, 0, 0);\n    return canvas.toDataURL();\n  }\n\n  isNFT(asset: TokenResponseType): boolean {\n    if (!asset) {\n      return false;\n    }\n    if (CONSTANTS.MAINNET) {\n      return (\n        (asset?.isBooleanAmount || asset?.decimals == 0) &&\n        !(\n          CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(`${asset.contractAddress}:${asset.id}`) ||\n          this.dipdupService.tokens.get(`${asset.contractAddress}:${asset.id}`)\n        )\n      );\n    } else {\n      return (asset?.isBooleanAmount || asset?.decimals == 0) && !CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(`${asset.contractAddress}`) ? true : false;\n    }\n  }\n  mergeMarket() {\n    Object.keys(this.balances).forEach((key) => {\n      let midPrice = undefined;\n      const tokenId: string = `${this.balances[key]?.contractAddress}:${this.balances[key]?.id}`;\n      if ((midPrice = this.dipdupService.tokens.get(tokenId))) {\n        this.balances[key].price = midPrice * parseFloat(this.balances[key].balance) * this.walletService.wallet.XTZrate;\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CONSTANTS, TRUSTED_TOKEN_CONTRACTS, BLACKLISTED_TOKEN_CONTRACTS } from '../../../environments/environment';\nimport { IndexerService } from '../indexer/indexer.service';\nimport Big from 'big.js';\nimport { SubjectService } from '../subject/subject.service';\nimport { filter } from 'rxjs/operators';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { ObjktService } from '../indexer/objkt/objkt.service';\nimport { DipDupService } from '../indexer/dipdup/dipdup.service';\n\nexport interface TokenResponseType {\n  contractAddress: string;\n  id: string;\n  decimals: number;\n  artifactAsset?: Asset;\n  displayAsset: Asset;\n  thumbnailAsset: Asset;\n  name: string;\n  symbol: string;\n  description: string;\n  category: string;\n  kind: string;\n  isTransferable?: boolean;\n  isBooleanAmount?: boolean;\n  shouldPreferSymbol?: boolean;\n  series?: string;\n  ttl?: number;\n  mintingTool?: string;\n  status: Status;\n  isUnknownToken?: boolean;\n}\nexport type Asset = string | CachedAsset;\nexport interface CachedAsset {\n  uri: string;\n  mimeType: string;\n}\n\nexport type ContractsType = Record<string, ContractType>;\nexport type ContractType = FA12 | FA2;\nexport interface TokensInterface {\n  category: string;\n  objkt?: {\n    name?: string;\n    logo?: string;\n    updated: number;\n  };\n}\nenum Status {\n  Rejected = -1,\n  Pending = 0,\n  Approved = 1\n}\nexport interface TokenData {\n  name: string;\n  symbol: string;\n  decimals: number;\n  description: string;\n  artifactAsset?: Asset;\n  displayAsset: Asset;\n  thumbnailAsset: Asset;\n  isTransferable?: boolean;\n  isBooleanAmount?: boolean;\n  shouldPreferSymbol?: boolean;\n  series?: string;\n  ttl?: number;\n  mintingTool?: string;\n  status: Status;\n}\nexport interface FA12 extends TokensInterface {\n  kind: 'FA1.2';\n  tokens: {\n    0: TokenData;\n  };\n}\nexport interface FA2 extends TokensInterface {\n  kind: 'FA2';\n  tokens: Record<number | string, TokenData>;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  readonly AUTO_DISCOVER: boolean = true;\n  readonly version: string = '1.0.15';\n  private contracts: ContractsType = {};\n  private exploredIds: Record<string, { firstCheck: number; lastCheck: number; counter: number }> = {};\n  private pendingSave = null;\n  readonly storeKey = 'tokenMetadata';\n  readonly unlockablesKey = 'unlockables';\n  queue = [];\n  workers = 0;\n  constructor(\n    public indexerService: IndexerService,\n    private subjectService: SubjectService,\n    private dipdupService: DipDupService,\n    private router: Router,\n    private objktService: ObjktService\n  ) {\n    this.contracts = JSON.parse(JSON.stringify(CONSTANTS.ASSETS));\n    this.loadMetadata();\n    this.saveMetadata();\n    this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n      if (r.url.indexOf('/account') === -1) {\n        document.documentElement.className = '';\n      }\n    });\n  }\n  getAsset(tokenId: string): TokenResponseType {\n    if (!tokenId || !tokenId.includes(':')) {\n      return null;\n    }\n    const tokenIdArray = tokenId.split(':');\n    let contractAddress: string = tokenIdArray[0];\n    const id: string = tokenIdArray[1] ? String(tokenIdArray[1]) : null;\n    const contract: ContractType = this.contracts[contractAddress];\n    if (id != null) {\n      if (contract) {\n        let token: TokenResponseType = contract.tokens[id];\n        if (!token) {\n          // check ranges\n          const ids = Object.keys(contract.tokens);\n          for (const idx of ids) {\n            if (idx.includes('-')) {\n              const span = idx.split('-');\n              if (span.length === 2 && !isNaN(Number(span[0])) && !isNaN(Number(span[1]))) {\n                const first = Big(span[0]);\n                const last = Big(span[1]);\n                if (first.gte(id) && last.lte(id)) {\n                  token = JSON.parse(JSON.stringify(contract.tokens[idx]));\n                  token.name = `${JSON.parse(JSON.stringify(contract.tokens[idx].name))} #${Big(id).minus(first).plus(1)}`;\n                  break;\n                }\n              }\n            }\n          }\n        }\n        if (token) {\n          if (token.status < 0) {\n            return {\n              kind: contract.kind,\n              category: contract.category,\n              id,\n              contractAddress,\n              ...token,\n              thumbnailAsset: '',\n              displayAsset: ''\n            };\n          }\n          return {\n            kind: contract.kind,\n            category: contract.category,\n            id,\n            contractAddress,\n            ...token\n          };\n        }\n      }\n    }\n    return null;\n  }\n  getContractName(contractAddress: string) {\n    return this.contracts[contractAddress]?.objkt?.name ?? null;\n  }\n  getContractLogo(contractAddress: string) {\n    return this.contracts[contractAddress]?.objkt?.logo ?? null;\n  }\n  getContractAddressFromAsset(uri: string) {\n    const contractAddresses = Object.keys(this.contracts);\n    for (const contractAddress of contractAddresses) {\n      const tokens = this.contracts[contractAddress].tokens;\n      for (const id in tokens) {\n        if (tokens[id]?.thumbnailAsset?.uri === uri || tokens[id]?.displayAsset?.uri === uri || tokens[id]?.artifactAsset?.uri === uri) {\n          return contractAddress;\n        }\n      }\n    }\n    return '';\n  }\n  isKnownTokenId(tokenId: string): boolean {\n    return this.getAsset(tokenId) !== null;\n  }\n  knownTokenIds(): string[] {\n    const tokenIds: string[] = [];\n    const contractKeys = Object.keys(this.contracts);\n    if (contractKeys) {\n      for (const contractKey of contractKeys) {\n        const tokenKeys = Object.keys(this.contracts[contractKey].tokens);\n        if (tokenKeys) {\n          for (const tokenKey of tokenKeys) {\n            tokenIds.push(`${contractKey}:${tokenKey}`);\n          }\n        }\n      }\n    }\n    return tokenIds;\n  }\n  isCategoryType(address, regex: RegExp): boolean {\n    return regex.test(this.contracts[address]?.category);\n  }\n  isKnownTokenContract(address: string): boolean {\n    return this.contracts[address] !== undefined;\n  }\n  addAsset(contractAddress: string, contract: ContractType) {\n    if (!this.contracts[contractAddress]) {\n      this.contracts[contractAddress] = contract;\n      this.checkContractData(contractAddress, contract);\n    } else {\n      const currentKeys = Object.keys(this.contracts[contractAddress].tokens);\n      const newKeys = Object.keys(contract.tokens);\n      for (const key of newKeys) {\n        if (!currentKeys.includes(key)) {\n          this.contracts[contractAddress].tokens[key] = contract.tokens[key];\n        } else if (JSON.stringify(contract.tokens[key]) !== JSON.stringify(this.contracts[contractAddress].tokens[key])) {\n          this.contracts[contractAddress].tokens[key] = contract.tokens[key];\n        }\n      }\n    }\n  }\n\n  async checkContractData(contractAddress: string, contract: ContractType) {\n    let check = false;\n    if (!contract.objkt) {\n      check = true;\n    } else if (contract?.objkt?.updated) {\n      const diff = Date.now() - contract.objkt.updated;\n      if (!contract?.objkt?.name) {\n        if (diff > 1000 * 60 * 60 * 24) {\n          check = true;\n        }\n      }\n    }\n    if (check) {\n      const _objkt = await this.objktService.resolveCollection(contractAddress);\n      const objkt: any = { updated: Date.now() };\n      if (_objkt?.name) {\n        objkt.name = _objkt.name;\n        if (_objkt.logo) {\n          objkt.logo = _objkt.logo;\n        }\n      }\n      this.contracts[contractAddress].objkt = objkt;\n      this._saveMetadata();\n      this.subjectService.metadataUpdated.next(null);\n    }\n  }\n  async searchAllMetadata(unknownTokenIds: any) {\n    if (unknownTokenIds.length) {\n      for (const tokenId of unknownTokenIds) {\n        this.searchMetadata(tokenId);\n      }\n    }\n  }\n  async recheckMetadata(tokens) {\n    if (tokens?.length) {\n      for (let token of tokens) {\n        const tokenObject = this.getAsset(token.tokenId);\n        if (tokenObject?.ttl) {\n          const exp = this.exploredIds[token.tokenId];\n          const now = new Date().getTime();\n          if (now - exp.lastCheck > tokenObject.ttl * 1000) {\n            console.log('recheck metadata for', token.tokenId);\n            this.exploredIds[token.tokenId].lastCheck = now;\n            this.exploredIds[token.tokenId].counter = ++exp.counter || 0;\n            this.saveMetadata();\n            if (!this.queue.includes(token.tokenId)) {\n              this.searchMetadata(token.tokenId, true);\n            }\n          }\n        }\n      }\n    }\n  }\n  private async searchMetadata(tokenId: string, force = false) {\n    if ((!this.isKnownTokenId(tokenId) && !this.queue.includes(tokenId) && this.explore(tokenId)) || force) {\n      this.queue.push(tokenId);\n      if (this.workers < 64) {\n        this.startWorker();\n      }\n    }\n  }\n  async startWorker() {\n    this.workers++;\n    while (this.queue.length) {\n      const tokenId = this.queue.shift();\n      try {\n        const a = tokenId.split(':');\n        const contractAddress = a[0];\n        const id = String(a[1]);\n        const recentDay = this.exploredIds[tokenId]?.lastCheck - this.exploredIds[tokenId]?.firstCheck < 1000 * 3600 * 24;\n        const skipTzkt = this.isKnownTokenId(tokenId) && this.exploredIds[tokenId]?.counter % 5 === 2 && recentDay;\n        const metadata = await this.indexerService.getTokenMetadata(contractAddress, id, skipTzkt);\n        this.handleMetadata(metadata, contractAddress, id);\n      } catch (e) {}\n    }\n    this.workers--;\n  }\n  handleMetadata(metadata: any, contractAddress: string, id: string) {\n    const tokenId = `${contractAddress}:${id}`;\n    if (metadata && (metadata.name || metadata.symbol) && !isNaN(metadata.decimals) && metadata.decimals >= 0) {\n      const contract: ContractType = {\n        kind: metadata.tokenType ? metadata.tokenType : 'FA2',\n        category: metadata.tokenCategory ? metadata.tokenCategory : '',\n        tokens: {}\n      };\n      const token: TokenData = {\n        name: metadata.name ? metadata.name : '',\n        symbol: metadata.symbol ? metadata.symbol : '',\n        decimals: Number(metadata.decimals),\n        description: metadata.description ? metadata.description : '',\n        artifactAsset: metadata.artifactUri ?? '',\n        displayAsset: metadata.displayUri ?? '',\n        thumbnailAsset: metadata.thumbnailUri ?? '',\n        isTransferable: metadata?.isTransferable === false ? metadata.isTransferable : true,\n        isBooleanAmount: metadata?.isBooleanAmount ? metadata.isBooleanAmount : false,\n        status:\n          TRUSTED_TOKEN_CONTRACTS.includes(contractAddress) || CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(tokenId) || this.dipdupService.tokens.get(tokenId)\n            ? 1\n            : 0\n      };\n      if (metadata?.ttl) {\n        token.ttl = Math.max(Number(metadata.ttl), 30);\n      }\n      if (metadata?.mintingTool) {\n        token.mintingTool = metadata.mintingTool;\n      }\n      if (metadata?.series) {\n        token.series = metadata.series;\n      }\n      if (CONSTANTS.ASSETS[contractAddress]?.tokens[id]) {\n        contract.tokens[id] = { ...token, ...CONSTANTS.ASSETS[contractAddress].tokens[id] };\n      } else {\n        contract.tokens[id] = token;\n      }\n      this.addAsset(contractAddress, contract);\n      this.saveMetadata();\n      this.subjectService.metadataUpdated.next({\n        contractAddress,\n        id,\n        token\n      });\n    }\n  }\n  explore(tokenId: string): boolean {\n    const now = new Date().getTime();\n    if (!this.exploredIds[tokenId]) {\n      this.exploredIds[tokenId] = {\n        firstCheck: now,\n        lastCheck: now,\n        counter: 0\n      };\n      this.saveMetadata();\n      return true;\n    } else {\n      const token = this.exploredIds[tokenId];\n      let t1 = 2 ** token.counter * 250;\n      t1 = t1 < 20000 ? 20000 : t1;\n      const t2 = now - token.lastCheck;\n      if (t1 > t2) {\n        return false;\n      }\n      this.exploredIds[tokenId].lastCheck = now;\n      this.exploredIds[tokenId].counter = ++token.counter;\n      this.saveMetadata();\n      return true;\n    }\n  }\n  private getCounter(tokenId: string) {\n    return this.exploredIds[tokenId].counter;\n  }\n  resetCounters() {\n    const ids = Object.keys(this.exploredIds);\n    if (ids) {\n      for (const id of ids) {\n        this.exploredIds[id].counter = 0;\n      }\n      this.saveMetadata(true);\n    }\n  }\n  resetAllMetadata() {\n    this.exploredIds = {};\n    this.contracts = JSON.parse(JSON.stringify(CONSTANTS.ASSETS));\n    this.saveMetadata(true);\n    this.loadMetadata();\n    this.subjectService.metadataUpdated.next(null);\n  }\n  searchTimeMs(tokenId: string) {\n    if (this.exploredIds[tokenId]) {\n      const token = this.exploredIds[tokenId];\n      return token.lastCheck - token.firstCheck;\n    }\n    return 0;\n  }\n  getPlaceholderToken(tokenId: string): TokenResponseType {\n    const tokenIdArray = tokenId.split(':');\n    const contractAddress: string = tokenIdArray[0];\n    const id: string = tokenIdArray[1] ? String(tokenIdArray[1]) : '';\n    return {\n      contractAddress,\n      id,\n      decimals: 0,\n      displayAsset: '',\n      thumbnailAsset: '',\n      name: '[Unknown token]',\n      symbol: '',\n      description: '',\n      category: '',\n      kind: 'FA2',\n      status: 0,\n      isUnknownToken: true\n    };\n  }\n  saveMetadata(force = false) {\n    if (force) {\n      this._saveMetadata();\n      return;\n    }\n    if (!this.pendingSave) {\n      this.pendingSave = setTimeout(() => {\n        this.pendingSave = null;\n        this._saveMetadata();\n      }, 1000);\n    }\n  }\n  private _saveMetadata() {\n    localStorage.setItem(\n      this.storeKey,\n      JSON.stringify({\n        contracts: this.contracts,\n        exploredIds: this.exploredIds,\n        version: this.version\n      })\n    );\n  }\n  loadMetadata(): any {\n    const metadataJson = localStorage.getItem(this.storeKey);\n    if (metadataJson) {\n      const metadata = JSON.parse(metadataJson);\n      if (metadata?.version === this.version) {\n        if (metadata?.contracts) {\n          const contractAddresses = Object.keys(metadata.contracts);\n          for (const address of contractAddresses) {\n            for (const id of Object.keys(metadata.contracts[address].tokens)) {\n              if (metadata.contracts[address].tokens[id]?.status === 0) {\n                if (\n                  TRUSTED_TOKEN_CONTRACTS.includes(address) ||\n                  CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(`${address}:${id}`) ||\n                  this.dipdupService.tokens.get(`${address}:${id}`)\n                ) {\n                  metadata.contracts[address].tokens[id].status = 1; // flip status if it have been marked as trusted\n                }\n                if (BLACKLISTED_TOKEN_CONTRACTS.includes(address)) {\n                  metadata.contracts[address].tokens[id].status = -1;\n                }\n              }\n            }\n            this.addAsset(address, metadata.contracts[address]);\n          }\n        }\n        if (metadata?.exploredIds) {\n          this.exploredIds = metadata.exploredIds;\n        }\n      } else if (metadata?.version === '1.0.14') {\n        // Clear hen metadata for new teia alias\n        try {\n          delete metadata.contracts['KT1RJ6PbjHpwc3M5rw5s2Nbmefwbuwbdxton'];\n          metadata.version = '1.0.15';\n          this.saveMetadata(true);\n          this.loadMetadata();\n        } catch (e) {\n          console.error(e);\n        }\n      } else {\n        // clear all metadata\n      }\n    }\n  }\n  formatAmount(tokenKey: string, amount: string, baseUnit = true): string {\n    if (!tokenKey) {\n      return `${Big(amount)\n        .div(10 ** (baseUnit ? 6 : 0))\n        .toFixed()} tez`;\n    } else {\n      const token = this.getAsset(tokenKey);\n      if (token) {\n        if ((!token.shouldPreferSymbol && token.name) || !token.symbol) {\n          if (token.isBooleanAmount) {\n            if (parseInt(amount) > 1) {\n              return `${amount} ${token.name}`;\n            }\n            return `${token.name}`;\n          } else {\n            return `${Big(amount)\n              .div(10 ** (baseUnit ? token.decimals : 0))\n              .toFixed()} ${token.name}`;\n          }\n        } else {\n          return `${Big(amount)\n            .div(10 ** (baseUnit ? token.decimals : 0))\n            .toFixed()} ${token.symbol}`;\n        }\n      } else {\n        return '[Unknown token]';\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport DirectWebSdk from 'customauth';\nimport NodeDetailManager, { TORUS_NETWORK } from '@toruslabs/fetch-node-details';\nimport TorusUtils from '@toruslabs/torus.js';\nimport { OperationService } from '../../services/operation/operation.service';\nimport { InputValidationService } from '../../services/input-validation/input-validation.service';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { MessageService } from '../message/message.service';\n\nconst GOOGLE = 'google';\nconst REDDIT = 'reddit';\nconst TWITTER = 'twitter';\nconst FACEBOOK = 'facebook';\nconst EMAIL = 'email';\nconst AUTH_DOMAIN = 'https://dev-0li4gssz.eu.auth0.com';\nconst AUTH_DOMAIN_MAINNET = 'https://kukai.eu.auth0.com';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TorusService {\n  torus: any = undefined;\n  nodeDetails: { torusNodeEndpoints: string[]; torusNodePub: any[] } = null;\n  public readonly verifierMap: any;\n  private readonly proxy: any;\n  verifierMaps = {\n    testnet: {\n      [GOOGLE]: {\n        name: 'Google',\n        typeOfLogin: 'google',\n        clientId: '952872982551-od475jfe3ach7dghacin634rbkcqhpll.apps.googleusercontent.com',\n        verifier: 'kukai-google',\n        subVerifier: 'web-kukai',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [REDDIT]: {\n        name: 'Reddit',\n        typeOfLogin: 'jwt',\n        clientId: '7xLcBa3xd4VTmlGbClU3qXeBZGta3OvM',\n        verifier: 'tezos-reddit-testnet',\n        subVerifier: 'web-kukai',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [TWITTER]: {\n        name: 'Twitter',\n        typeOfLogin: 'twitter',\n        clientId: 'vKFgnaYZzKLUnhxnX5xqTqeMcumdVTz1',\n        verifier: 'tezos-twitter-test',\n        caseSensitiveVerifierID: false,\n        lookups: true\n      },\n      [FACEBOOK]: {\n        name: 'Facebook',\n        typeOfLogin: 'facebook',\n        clientId: '213778980232619',\n        verifier: 'tezos-facebook-testnet',\n        caseSensitiveVerifierID: false\n      },\n      [EMAIL]: {\n        name: 'Email',\n        typeOfLogin: 'jwt',\n        clientId: 'L98HOmUY0hxLGX9k8AHEZxb1dj9Y3uZw',\n        verifier: 'kukai-google',\n        subVerifier: 'web-kukai-email',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      }\n    },\n    mainnet: {\n      [GOOGLE]: {\n        name: 'Google',\n        typeOfLogin: 'google',\n        clientId: '952872982551-49mfvktoios59oj2kmiknlltfq9pvi6c.apps.googleusercontent.com',\n        verifier: 'tezos-google',\n        subVerifier: 'kukai-web',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [REDDIT]: {\n        name: 'Reddit',\n        typeOfLogin: 'jwt',\n        clientId: 'zyQ9tnKfdg3VNyj6MGhZq4dHbBzbmEvl',\n        verifier: 'tezos-reddit',\n        subVerifier: 'web-kukai',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [TWITTER]: {\n        name: 'Twitter',\n        typeOfLogin: 'twitter',\n        clientId: '3aCoxh3pw8g8JeFsdlJNUGwdgtLwdwgE',\n        verifier: 'tezos-twitter',\n        caseSensitiveVerifierID: false,\n        lookups: true\n      },\n      [FACEBOOK]: {\n        name: 'Facebook',\n        typeOfLogin: 'facebook',\n        clientId: '523634882377310',\n        verifier: 'tezos-facebook',\n        caseSensitiveVerifierID: false\n      },\n      [EMAIL]: {\n        name: 'Email',\n        typeOfLogin: 'jwt',\n        clientId: 'LTg6fVsacafGmhv14TZlrWF1EavwQoDZ',\n        verifier: 'tezos-google',\n        subVerifier: 'web-kukai-email',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      }\n    }\n  };\n  verifierMapKeys: any;\n  constructor(private operationService: OperationService, private inputValidationService: InputValidationService, private messageService: MessageService) {\n    if (CONSTANTS.MAINNET) {\n      this.verifierMap = this.verifierMaps.mainnet;\n      this.proxy = {\n        address: NodeDetailManager.PROXY_ADDRESS_MAINNET,\n        network: TORUS_NETWORK.MAINNET\n      };\n    } else {\n      this.verifierMap = this.verifierMaps.testnet;\n      this.proxy = {\n        address: NodeDetailManager.PROXY_ADDRESS_TESTNET,\n        network: TORUS_NETWORK.TESTNET\n      };\n    }\n    this.verifierMapKeys = Object.keys(this.verifierMap);\n  }\n  async initTorus() {\n    if (this.torus === undefined) {\n      this.torus = null;\n      try {\n        const torusdirectsdk = new DirectWebSdk({\n          baseUrl: `${location.origin}/serviceworker`,\n          redirectToOpener: true,\n          enableLogging: !(this.proxy.network === 'mainnet'),\n          proxyContractAddress: this.proxy.address,\n          network: this.proxy.network\n        });\n        await torusdirectsdk.init({ skipSw: false });\n        this.torus = torusdirectsdk;\n      } catch (error) {\n        this.torus = undefined;\n        console.error(error, 'oninit caught');\n      }\n    }\n  }\n  async lookupPkh(selectedVerifier: string, verifierId: string): Promise<any> {\n    const fetchNodeDetails = new NodeDetailManager({\n      network: this.proxy.network,\n      proxyAddress: this.proxy.address\n    });\n    const torus = new TorusUtils();\n    let sanitizedVerifierId = verifierId;\n    if (!this.verifierMap[selectedVerifier].caseSensitiveVerifierID && selectedVerifier !== 'twitter') {\n      sanitizedVerifierId = sanitizedVerifierId.toLocaleLowerCase();\n    }\n    let twitterId = '';\n    if (selectedVerifier === 'twitter') {\n      const username = sanitizedVerifierId.replace('@', '');\n      const { id } = await this.twitterLookup(username);\n      if (this.inputValidationService.twitterId(id)) {\n        sanitizedVerifierId = `twitter|${id}`;\n        twitterId = id;\n      } else {\n        throw new Error('Twitter handle not found');\n      }\n    }\n    const verifier = this.verifierMap[selectedVerifier].verifier;\n    if (!this.nodeDetails) {\n      const { torusNodeEndpoints, torusNodePub, torusIndexes } = await fetchNodeDetails.getNodeDetails({ verifier, verifierId: sanitizedVerifierId });\n      this.nodeDetails = { torusNodeEndpoints, torusNodePub }; // Cache node details\n    }\n    const pk: any = await torus.getPublicAddress(\n      this.nodeDetails.torusNodeEndpoints,\n      this.nodeDetails.torusNodePub,\n      { verifier, verifierId: sanitizedVerifierId },\n      true\n    );\n    const pkh = this.operationService.spPointsToPkh(pk.X, pk.Y);\n    return { pkh, twitterId };\n  }\n  async twitterLookup(username?: string, id?: string) {\n    let req = {};\n    if ((id && username) || (!id && !username)) {\n      console.log({ username, id });\n      throw new Error('Invalid input');\n    } else if (id) {\n      req = { id };\n    } else {\n      req = { username: username.replace('@', '') };\n    }\n    return await fetch(`https://backend.kukai.network/twitter-lookup`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify(req)\n    }).then((ans) => {\n      return ans.json();\n    });\n  }\n  async loginTorus(selectedVerifier: string, verifierId = '', skipTorusKey = 0, checkIfNewKey = false): Promise<any> {\n    if (!CONSTANTS.MAINNET && document?.location?.host === 'localhost:4200' && !['google', 'twitter', 'email'].includes(selectedVerifier)) {\n      return this.mockLogin(selectedVerifier); // mock locally\n    }\n    try {\n      const jwtParams: any = this._loginToConnectionMap()[selectedVerifier] || {};\n      if (verifierId && selectedVerifier === GOOGLE) {\n        jwtParams.login_hint = verifierId;\n        console.log('login_hint: ' + verifierId);\n      }\n      if (verifierId && selectedVerifier === EMAIL) {\n        jwtParams.login_hint = verifierId;\n      }\n      const { typeOfLogin, clientId, verifier, aggregated } = this.verifierMap[selectedVerifier];\n      const loginDetails = aggregated\n        ? await this.torus.triggerAggregateLogin({\n            login_hint: verifierId,\n            aggregateVerifierType: 'single_id_verifier',\n            verifierIdentifier: verifier,\n            subVerifierDetailsArray: [\n              {\n                clientId,\n                typeOfLogin: typeOfLogin,\n                verifier: this.verifierMap[selectedVerifier].subVerifier,\n                jwtParams\n              }\n            ],\n            skipTorusKey,\n            checkIfNewKey\n          })\n        : await this.torus.triggerLogin({\n            verifier,\n            typeOfLogin,\n            clientId,\n            jwtParams,\n            skipTorusKey,\n            checkIfNewKey\n          });\n      if (aggregated) {\n        loginDetails.userInfo = loginDetails.userInfo[0];\n      }\n      if (selectedVerifier === FACEBOOK) {\n        console.log('Invalidating access token...');\n        fetch(`https://graph.facebook.com/me/permissions?access_token=${loginDetails.userInfo.accessToken}`, { method: 'DELETE', mode: 'cors' });\n      }\n      const keyPair = skipTorusKey && !loginDetails?.privateKey ? { pk: '', pkh: '' } : this.operationService.spPrivKeyToKeyPair(loginDetails.privateKey);\n      console.log('DirectAuth KeyPair', keyPair);\n      if (loginDetails?.existingPk) {\n        loginDetails.userInfo.preexistingPkh = this.operationService.spPointsToPkh(loginDetails.existingPk.X, loginDetails.existingPk.Y);\n        loginDetails.userInfo.isNewKey = !loginDetails?.existingPk;\n      }\n      if (loginDetails?.userInfo?.typeOfLogin === 'jwt') {\n        loginDetails.userInfo.typeOfLogin = selectedVerifier;\n      }\n      console.log('DirectAuth UserInfo', loginDetails.userInfo);\n      return { keyPair, userInfo: loginDetails.userInfo };\n    } catch (e) {\n      console.error(e, 'login caught');\n      return { keyPair: null, userInfo: null };\n    }\n  }\n  async getTorusKeyPair(selectedVerifier: string, verifierId: string): Promise<any> {\n    const { keyPair } = await this.loginTorus(selectedVerifier, verifierId);\n    return keyPair;\n  }\n  _loginToConnectionMap = () => {\n    return {\n      [TWITTER]: {\n        domain: CONSTANTS.MAINNET ? AUTH_DOMAIN_MAINNET : AUTH_DOMAIN\n      },\n      [FACEBOOK]: {\n        scope: 'public_profile email'\n      },\n      [REDDIT]: {\n        domain: CONSTANTS.MAINNET ? AUTH_DOMAIN_MAINNET : AUTH_DOMAIN,\n        connection: 'Reddit',\n        verifierIdField: 'name',\n        isVerifierIdCaseSensitive: false\n      },\n      [EMAIL]: {\n        domain: CONSTANTS.MAINNET ? AUTH_DOMAIN_MAINNET : AUTH_DOMAIN,\n        connection: '',\n        verifierIdField: 'name',\n        isVerifierCaseSensitive: false\n      }\n    };\n  };\n  private async mockLogin(typeOfLogin: string): Promise<any> {\n    const keyPair = {\n      sk: 'spsk1VfCfhixtzGvUSKDre6jwyGbXFm6aoeLGnxeVLCouueZmkgtJF',\n      pk: 'sppk7cZsZeBApsFgYEdWuSwj92YCWkJxMmBfkN3FeKRmEB7Lk5pmDrT',\n      pkh: 'tz2WKg52VqnYXH52TZbSVjT4hcc8YGVKi7Pd'\n    };\n    const userInfo = {\n      typeOfLogin,\n      verifierId: typeOfLogin !== 'google' ? 'MockUser' : 'mock@user.com',\n      name: typeOfLogin !== 'twitter' ? 'Mock User' : '@MockUser'\n    };\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({ keyPair, userInfo });\n      }, 1000);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { WalletService } from '../wallet/wallet.service';\nimport { CONSTANTS } from '../../../environments/environment';\n\n@Injectable()\nexport class TzrateService {\n  public apiUrl = 'https://api.coingecko.com/api/v3/simple/price?ids=tezos&vs_currencies=usd';\n  constructor(private http: HttpClient, private walletService: WalletService) {}\n\n  getTzrate() {\n    if (CONSTANTS.MAINNET) {\n      this.http.get(this.apiUrl).subscribe(\n        (price: any) => {\n          this.walletService.wallet.XTZrate = price.tezos.usd;\n          this.updateFiatBalances();\n        },\n        (err) => console.log('Failed to get xtz price: ' + JSON.stringify(err))\n      );\n    } else {\n      this.walletService.wallet.XTZrate = 0;\n      this.updateFiatBalances();\n    }\n  }\n  updateFiatBalances() {\n    const accounts = this.walletService.wallet.getAccounts();\n    let tot = 0;\n    let change = false;\n    for (const account of accounts) {\n      if (account.balanceXTZ !== null) {\n        account.balanceUSD = Number((account.balanceXTZ / 1000000) * this.walletService.wallet.XTZrate);\n        tot += account.balanceUSD;\n        change = true;\n      }\n    }\n    if (change) {\n      this.walletService.wallet.totalBalanceUSD = Number(tot);\n      this.walletService.storeWallet();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IndexerService } from '../indexer/indexer.service';\nimport { filter } from 'rxjs/operators';\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnlockableService {\n  readonly settingsKey = 'settings';\n  unlockables: any;\n  queue = [];\n  workers = 0;\n  constructor(public indexerService: IndexerService, private router: Router) {\n    this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n      if (r.url.indexOf('/account') === -1) {\n        document.documentElement.className = '';\n      }\n    });\n  }\n\n  toggleFeature(type, feat): boolean {\n    this.unlockables = localStorage.getItem(this.settingsKey);\n    if (this.unlockables) {\n      try {\n        this.unlockables = JSON.parse(this.unlockables);\n        this.unlockables[type] = this.unlockables[type] === feat ? '' : feat;\n        localStorage.setItem(this.settingsKey, JSON.stringify(this.unlockables));\n        if (this.unlockables[type]) {\n          document.documentElement.classList.add(feat);\n        } else {\n          document.documentElement.classList.remove(feat);\n        }\n        return this.unlockables[type];\n      } catch (e) {\n        return false;\n      }\n    } else {\n      this.unlockables = {};\n      this.unlockables[type] = feat;\n      localStorage.setItem(this.settingsKey, JSON.stringify(this.unlockables));\n      document.documentElement.classList.add(feat);\n      return true;\n    }\n  }\n  restoreFeatures() {\n    this.unlockables = localStorage.getItem(this.settingsKey);\n    if (this.unlockables) {\n      try {\n        this.unlockables = JSON.parse(this.unlockables);\n        for (let feat of Object.keys(this.unlockables)) {\n          if (!!this.unlockables[feat]) {\n            document.documentElement.classList.add(this.unlockables[feat]);\n          }\n        }\n      } catch (e) {}\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n  constructor() {}\n  async sleep(ms: number) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { BroadcastChannel } from 'broadcast-channel';\nexport enum MessageKind {\n  Initialized = 'wc_initialized'\n}\nexport type Message = {\n  kind: MessageKind.Initialized;\n  payload: number;\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class BcService {\n  channel: BroadcastChannel<Message>;\n  subject: any = {\n    wc_initialized: new Subject<any>(),\n    test: new Subject<any>(),\n    all: new Subject<Message>()\n  };\n  constructor() {\n    this.channel = new BroadcastChannel('tab-sync');\n    this.channel.onmessage = (msg) => this.handleMessage(msg);\n  }\n  private handleMessage(msg: Message) {\n    console.log('bc-message', msg);\n    if (!this.subject[msg.kind]) {\n      throw new Error('Invalid MessageKind: ' + msg?.kind);\n    }\n    this.subject[msg?.kind].next(msg.payload);\n    this.subject.all.next(msg);\n  }\n  public broadcast(message: Message) {\n    console.log('broadcast', message);\n    this.channel.postMessage(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport Client, { ENGINE_RPC_OPTS, SignClient } from '@walletconnect/sign-client';\nimport { SignClientTypes, PairingTypes, SessionTypes, ISession } from '@walletconnect/types';\n// https://github.com/WalletConnect/walletconnect-monorepo/blob/bc6f6632b7c665d868bcd59669281c1ead2dd31a/packages/utils/src/errors.ts#L10\nimport { ErrorResponse, formatJsonRpcResult, formatJsonRpcRequest, formatJsonRpcError, getErrorByCode, getError } from '@walletconnect/jsonrpc-utils';\nimport { getSdkError } from '@walletconnect/utils';\nimport { CONSTANTS, environment } from '../../../environments/environment';\nimport { SubjectService } from '../subject/subject.service';\nimport { OperationService } from '../operation/operation.service';\nimport { BcService, MessageKind } from '../bc/bc.service';\nimport { WalletService } from '../wallet/wallet.service';\n\ninterface Pairings {\n  expanded: boolean;\n  size: number;\n  dapp: Record<string, DPairings>;\n}\ninterface DPairings {\n  expanded: boolean;\n  p: DPairing[];\n}\ninterface DPairing {\n  name: string;\n  topic: string;\n  expiry: number;\n}\ninterface Sessions {\n  expanded: boolean;\n  size: number;\n  dapp: Record<string, DSessions>;\n}\ninterface DSessions {\n  expanded: boolean;\n  s: DSession[];\n}\ninterface DSession {\n  name: string;\n  address: string;\n  topic: string;\n  expiry: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class WalletConnectService {\n  readonly supportedMethods = ['tezos_send', 'tezos_sign', 'tezos_getAccounts'];\n  readonly supportedEvents = [];\n  wc2activated = false;\n  client: Client;\n  active = false;\n  delayedPairing: any;\n  sessions: Sessions = { expanded: false, size: 0, dapp: {} };\n  pairings: Pairings = { expanded: false, size: 0, dapp: {} };\n  display: {\n    pairing: Record<string, { offset: number; expanded: boolean }>;\n    session: Record<string, { offset: number; expanded: boolean }>;\n    pairingsExpanded: boolean;\n    sessionsExpanded: boolean;\n  } = { pairing: {}, session: {}, pairingsExpanded: false, sessionsExpanded: false };\n  constructor(\n    private subjectService: SubjectService,\n    private operationService: OperationService,\n    private bcService: BcService,\n    private walletService: WalletService\n  ) {\n    (async () => {\n      this.wc2activated = !!localStorage.getItem('wc2-activated');\n      if (this.wc2activated) {\n        await this.init();\n      }\n    })();\n    const self = this;\n    window.addEventListener('beforeunload', function (e) {\n      if (self.wc2activated) {\n        self.bcService.broadcast({ kind: MessageKind.Initialized, payload: self.active ? 0 : 2 });\n      }\n    });\n  }\n  async init() {\n    this.client = await this.createClient();\n    this.active = true;\n    this.bcService.broadcast({ kind: MessageKind.Initialized, payload: 1 });\n    this.subscribeToEvents();\n    if (this.delayedPairing) {\n      await this.delayedPairing();\n    }\n    this.refresh();\n  }\n  async createClient() {\n    const opts: SignClientTypes.Options = {\n      projectId: '97f804b46f0db632c52af0556586a5f3',\n      relayUrl: 'wss://relay.walletconnect.com',\n      logger: 'warn', //'debug',\n      metadata: {\n        name: 'Kukai Wallet',\n        description: 'Manage your digital assets and seamlessly connect with experiences and apps on Tezos.',\n        url: 'https://wallet.kukai.app',\n        icons: []\n      }\n    };\n    return Client.init(opts);\n  }\n  subscribeToEvents() {\n    this.client.on('session_proposal', (data) => this.proposalHandler(data));\n    this.bcService.subject[MessageKind.Initialized].subscribe((payload) => {\n      switch (payload) {\n        case 0: // Tab with active wc2 connection closed => restart transport in all tabs to get a new active wc2 connection\n          this.restart();\n          break;\n        case 1: // Another tab flag itself as active => make sure this tab is flagged as inactive\n          this.active = false;\n          this.removeListeners();\n          break;\n        case 2: // Tab with inactive wc2 connection closed => restart transport as hotfix for bug that can occur with 3 or more Kukai tabs open\n          if (this.active) this.restart();\n          break;\n      }\n    });\n    this.client.on('session_request', (data) => this.requestHandler(data));\n    this.client.on('session_delete', (data) => {\n      console.log('delete', data);\n      this.refresh();\n      setTimeout(() => {\n        this.refresh();\n      }, 100);\n    });\n    this.client.on('session_expire', (data) => {\n      console.log('expire', data);\n      this.refresh();\n      setTimeout(() => {\n        this.refresh();\n      }, 100);\n    });\n    this.client.core.pairing.events.on('pairing_delete', (data) => {\n      console.log('delete', data);\n      this.refresh();\n      setTimeout(() => {\n        this.refresh();\n      }, 100);\n    });\n    this.client.core.pairing.events.on('pairing_expire', (data) => {\n      console.log('expire', data);\n      this.refresh();\n      setTimeout(() => {\n        this.refresh();\n      }, 100);\n    });\n    // this.client.core.heartbeat.events.on('heartbeat_pulse', (data) => {\n    //   console.log('heartbeat', data);\n    // })\n    const unhandledSignClientEvents: SignClientTypes.Event[] = [\n      'session_update',\n      'session_extend',\n      'session_ping',\n      //'session_delete',\n      //'session_expire',\n      //'pairing_delete',\n      //'session_request',\n      'session_event',\n      'proposal_expire'\n    ];\n    const unhandledPairingEvents: string[] = ['pairing_ping'];\n    for (const event of unhandledSignClientEvents) {\n      this.client.on(event, (data: any) => console.log(event, data));\n    }\n    for (const event of unhandledPairingEvents) {\n      this.client.core.pairing.events.on(event, (data: any) => console.log(event, data));\n    }\n    /*\n    session_extend: \"session_extend\",\n    pairing_ping: \"pairing_ping\",\n    session_expire: \"session_expire\",\n    pairing_delete: \"pairing_delete\",\n    pairing_expire: \"pairing_expire\",\n    proposal_expire: \"proposal_expire\",\n    */\n  }\n  async proposalHandler(data) {\n    const message: any = {\n      id: data.id,\n      version: 0,\n      type: 'permission_request',\n      appMetadata: {\n        name: data?.params?.proposer?.metadata?.name,\n        icon: data?.params?.proposer?.metadata?.icons[0]\n      },\n      wcData: data\n    };\n    if (data.params.requiredNamespaces.tezos.chains.includes(`tezos:${CONSTANTS.NETWORK}`)) {\n      message.network = { type: CONSTANTS.NETWORK };\n    } else {\n      console.log(data.params.requiredNamespaces.tezos.chains);\n      throw new Error('wrong network');\n    }\n    message.scopes = { methods: data.params.requiredNamespaces.tezos.methods, events: data.params.requiredNamespaces.tezos.events };\n    this.subjectService.wc2.next(message);\n    console.log('proposal', data);\n  }\n  async approvePairing(request: any, publicKey: string) {\n    const data = request.wcData;\n    console.log('data', data);\n    const namespaces: SessionTypes.Namespaces = {};\n    const address = this.operationService.pk2pkh(publicKey);\n    const accounts: string[] = [`tezos:${CONSTANTS.NETWORK}:${address}`];\n    const methods = data.params.requiredNamespaces?.tezos?.methods\n      ?.filter((method) => this.supportedMethods.includes(method))\n      .concat(data.params.optionalNamespaces?.tezos?.methods?.filter((method) => this.supportedMethods.includes(method)))\n      .filter((m) => m);\n    const events = data.params.requiredNamespaces?.tezos?.events\n      ?.filter((event) => this.supportedEvents.includes(event))\n      .concat(data.params.optionalNamespaces?.tezos?.events?.filter((event) => this.supportedEvents.includes(event)))\n      .filter((e) => e);\n    namespaces.tezos = {\n      accounts,\n      methods,\n      events\n    };\n    const { topic, acknowledged } = await this.client.approve({\n      id: data.id,\n      relayProtocol: data.params.relays[0].protocol,\n      namespaces\n    });\n    this.refresh();\n    await acknowledged();\n    this.refresh();\n  }\n  async opResponse(request: any, hash: string, success: boolean) {\n    const data = request.wcData;\n    const result = formatJsonRpcResult(data.id, hash);\n    const error = formatJsonRpcError(data.id, getSdkError('USER_REJECTED').message);\n    await this.client.respond({\n      topic: data.topic,\n      response: success ? result : error\n    });\n  }\n  async rejectPairing(request: any) {\n    const data = request.wcData;\n    await this.client.reject({\n      id: data.id,\n      reason: getSdkError('USER_REJECTED')\n    });\n  }\n  private async requestHandler(data: any) {\n    console.log('requestHandler', data);\n    const session = this.client.session.get(data.topic);\n    const allowedAccounts = session?.namespaces?.tezos?.accounts || [];\n    const allowedMethods = session.namespaces.tezos.methods || [];\n    const account = `${data.params.chainId}:${data.params.request.params.account}`;\n    const method = data.params.request.method;\n    if (!allowedMethods.includes(method)) {\n      throw new Error(`Method not allowed: ${method}`);\n    }\n    if (!allowedAccounts.includes(account) && !['tezos_getAccounts'].includes(method)) {\n      throw new Error(`Account not allowed: ${account}`);\n    }\n    switch (method) {\n      case 'tezos_send':\n        this.subjectService.wc2.next({\n          type: 'operation_request',\n          version: 0,\n          sourceAddress: data.params.request.params.account,\n          operationDetails: data.params.request.params.operations,\n          network: { type: data.params.chainId.split(':')[1] },\n          wcData: data\n        });\n        break;\n      case 'tezos_sign':\n        this.subjectService.wc2.next({\n          type: 'sign_payload_request',\n          version: 0,\n          sourceAddress: data.params.request.params.account,\n          signingType: 'raw',\n          payload: data.params.request.params.payload,\n          wcData: data\n        });\n        break;\n      case 'tezos_getAccounts':\n        try {\n          const session = this.client.session.get(data.topic);\n          const accounts: { algo: string; address: string; pubkey: string }[] = session.namespaces.tezos.accounts.map((account) => {\n            const address: string = account.split(':')[2];\n            const impAcc = this.walletService.wallet.getImplicitAccount(address);\n            if (!impAcc) {\n              throw new Error('User is not logged in with the requested account');\n            }\n            const algo: string = address.startsWith('tz1') ? 'ed25519' : address.startsWith('tz2') ? 'secp256k1' : 'unknown';\n            const pubkey = impAcc.pk;\n            return { algo, address, pubkey };\n          });\n          await this.client.respond({\n            topic: data.topic,\n            response: formatJsonRpcResult(data.id, accounts)\n          });\n        } catch (e) {\n          console.error(e.message);\n          const error = formatJsonRpcError(data.id, getSdkError('USER_REJECTED').message);\n          await this.client.respond({\n            topic: data.topic,\n            response: error\n          });\n        }\n        break;\n      default:\n        console.warn('Unhandled request');\n    }\n    this.client.extend({ topic: data.topic });\n    this.refresh();\n  }\n  async pair(pairingString: string) {\n    if (!this.client) {\n      if (!this.wc2activated) {\n        localStorage.setItem('wc2-activated', JSON.stringify(true));\n        this.wc2activated = true;\n        console.log('Wallet Connect 2 activated');\n        this.init();\n      }\n      await new Promise((resolve, reject) => {\n        this.delayedPairing = resolve;\n      });\n    }\n    const paired = await this.client.pair({ uri: pairingString });\n    console.log('paired', paired);\n  }\n  refresh() {\n    const sessionsList: DSession[] = this.client.session\n      .getAll()\n      .map((session) => {\n        if (session?.acknowledged && this.client.core.crypto.keychain.has(session?.topic)) {\n          const accountAddress = session?.namespaces?.tezos?.accounts[0].split(':')[2];\n          return { name: session?.peer?.metadata?.name, address: accountAddress, topic: session.topic, expiry: session.expiry };\n        }\n      })\n      .filter((s) => s);\n    const _sessions: Sessions = { expanded: this.sessions.expanded, size: sessionsList.length, dapp: {} };\n    for (const dSession of sessionsList) {\n      if (_sessions.dapp[dSession['name']]) {\n        _sessions.dapp[dSession['name']].s.push(dSession);\n      } else {\n        const expanded = this.sessions.dapp[dSession['name']]?.expanded ?? false;\n        _sessions.dapp[dSession['name']] = { expanded, s: [dSession] };\n      }\n    }\n    this.sessions = _sessions;\n    const pairingsList: DPairing[] = this.client.core.pairing\n      .getPairings()\n      .map((pairing) => {\n        if (pairing.active && this.client.core.crypto.keychain.has(pairing?.topic)) {\n          return { name: pairing?.peerMetadata?.name, topic: pairing.topic, expiry: pairing.expiry };\n        }\n      })\n      .filter((p) => p);\n    const _pairings: Pairings = { expanded: this.pairings.expanded, size: pairingsList.length, dapp: {} };\n    for (const dPairing of pairingsList) {\n      if (_pairings.dapp[dPairing['name']]) {\n        _pairings.dapp[dPairing['name']].p.push(dPairing);\n      } else {\n        const expanded = this.pairings.dapp[dPairing['name']]?.expanded ?? false;\n        _pairings.dapp[dPairing['name']] = { expanded, p: [dPairing] };\n      }\n    }\n    this.pairings = _pairings;\n    console.log('pairings/sessions', { pairings: this.pairings, sessions: this.sessions });\n  }\n  public async updateSession(topic: string, newAddress: string) {\n    const session = this.client.session.get(topic);\n    let namespaces = session.namespaces;\n    let acc = namespaces.tezos.accounts[0].split(':');\n    acc[2] = newAddress;\n    namespaces.tezos.accounts[0] = acc.join(':');\n    const { acknowledged } = await this.client.update({ topic, namespaces });\n    this.refresh();\n    await acknowledged();\n    console.log('session update acknowledged');\n  }\n  public async deleteSession(topic: string) {\n    await this.delete(topic);\n  }\n  public async deletePairing(topic: string) {\n    await this.delete(topic);\n  }\n  public async delete(topic: string) {\n    try {\n      await this.disconnect(topic);\n    } catch (e) {\n      console.error(e);\n      this.refresh();\n    }\n  }\n  public async deletePairings(pairings) {\n    for (const pairing of pairings) {\n      try {\n        await this.deletePairing(pairing.topic);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    this.refresh();\n  }\n  public async deleteSessions(sessions) {\n    for (const session of sessions) {\n      try {\n        await this.deleteSession(session.topic);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    this.refresh();\n  }\n  private async disconnect(topic: string) {\n    console.log('delete', topic);\n    try {\n      await this.client.disconnect({\n        topic,\n        reason: getSdkError('USER_DISCONNECTED')\n      });\n    } catch (e) {\n      console.error(e);\n      console.log(this.pairings, this.sessions);\n    }\n    this.refresh();\n  }\n  async restart() {\n    console.time('restart');\n    await this.removeListeners();\n    await this.init();\n    this.active = true;\n    console.timeEnd('restart');\n  }\n  private async removeListeners(path = []) {\n    const isObject = (val) => val && typeof val === 'object' && !Array.isArray(val);\n    let obj: any = this.client;\n    path.forEach((prop) => {\n      obj = obj[prop];\n    });\n    if (isObject(obj)) {\n      if (obj?.events?.eventNames()?.length) {\n        for (const key of obj.events.eventNames()) {\n          await obj.events.removeAllListeners(key as any);\n        }\n      }\n      Object.keys(obj).forEach((key: string) => {\n        if (!path.includes(key)) {\n          this.removeListeners([...path, key]);\n        }\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { KeyPair, WalletType, Activity } from './../../interfaces';\nimport {\n  WalletObject,\n  HdWallet,\n  FullWallet,\n  LegacyWalletV1,\n  LegacyWalletV2,\n  LegacyWalletV3,\n  ImplicitAccount,\n  LedgerWallet,\n  TorusWallet,\n  EmbeddedTorusWallet,\n  OriginatedAccount,\n  WatchWallet\n} from './wallet';\nimport { EncryptionService } from '../encryption/encryption.service';\nimport { OperationService } from '../operation/operation.service';\nimport { TorusService } from '../torus/torus.service';\nimport { utils, hd } from '@tezos-core-tools/crypto-utils';\nimport { BehaviorSubject } from 'rxjs';\nimport { SubjectService } from '../subject/subject.service';\n\n@Injectable()\nexport class WalletService {\n  storeKey = 'kukai-wallet';\n  storageId = 0;\n  wallet: WalletObject;\n\n  constructor(\n    private encryptionService: EncryptionService,\n    private operationService: OperationService,\n    private torusService: TorusService,\n    private subjectService: SubjectService\n  ) {}\n  /*\n    Wallet creation\n  */\n  createNewWallet(): string {\n    return utils.generateMnemonic(24);\n  }\n  async createEncryptedWallet(mnemonic: string, password: string, passphrase: string = '', hdSeed: boolean): Promise<any> {\n    const seed = utils.mnemonicToSeed(mnemonic, passphrase, hdSeed);\n    const entropy: Buffer = Buffer.from(utils.mnemonicToEntropy(mnemonic));\n    let keyPair: KeyPair;\n    if (!hdSeed) {\n      keyPair = this.operationService.seed2keyPair(seed);\n    } else {\n      keyPair = hd.keyPairFromAccountIndex(seed, 0);\n    }\n    const encrypted = await this.encryptionService.encrypt(seed, password, 3);\n    const encryptedSeed: string = encrypted.chiphertext;\n    const iv: string = encrypted.iv;\n    /*\n      Warning: Make sure to never reuse IV for AES-GCM\n    */\n    const iv2: string = this.encryptionService.shiftIV(iv, 1);\n    const encryptedEntropy: string = (await this.encryptionService.encrypt(entropy, password, 3, iv2)).chiphertext;\n    return {\n      data: this.exportKeyStoreInit(hdSeed ? WalletType.HdWallet : WalletType.LegacyWallet, encryptedSeed, encryptedEntropy, iv),\n      pkh: keyPair.pkh,\n      pk: keyPair.pk,\n      seed: seed\n    };\n  }\n  async getKeys(pwd: string, pkh?: string): Promise<KeyPair> {\n    let seed;\n    if (this.wallet instanceof LegacyWalletV1) {\n      seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, pwd, this.wallet.salt, 1);\n    } else if (this.wallet instanceof LegacyWalletV2) {\n      seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, pwd, this.wallet.IV, 2);\n    } else if (this.wallet instanceof LegacyWalletV3 || this.wallet instanceof HdWallet) {\n      seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, pwd, this.wallet.IV, 3);\n    } else if (this.wallet instanceof LedgerWallet) {\n      const keyPair: KeyPair = {\n        sk: null,\n        pk: this.wallet.implicitAccounts[0].pk,\n        pkh: this.wallet.implicitAccounts[0].pkh\n      };\n      return keyPair;\n    } else if (this.wallet instanceof EmbeddedTorusWallet && this.wallet?.sk) {\n      return this.operationService.spPrivKeyToKeyPair(this.wallet.sk);\n    } else if (this.wallet instanceof TorusWallet || (this.wallet instanceof EmbeddedTorusWallet && !this.wallet?.sk)) {\n      const keyPair = await this.torusService.getTorusKeyPair(this.wallet.verifier, this.wallet.id);\n      if (this.wallet.getImplicitAccount(keyPair.pkh)) {\n        return keyPair;\n      } else {\n        throw new Error('Signed with wrong account');\n      }\n      return null;\n    } else {\n      return null;\n    }\n    if (!seed) {\n      return null;\n    }\n    if (this.wallet instanceof HdWallet) {\n      if (!pkh) {\n        throw new Error('No pkh provided');\n      }\n      const account = this.wallet.getImplicitAccount(pkh);\n      if (!account.derivationPath) {\n        throw new Error('No derivationPath found');\n      }\n      return hd.seedToKeyPair(seed, account.derivationPath);\n    } else if (this.wallet instanceof LegacyWalletV1) {\n      const keyPair = this.operationService.seed2keyPair(seed);\n      if (!keyPair.pkh || !pkh || keyPair.pkh !== pkh) {\n        return null;\n      } else {\n        return keyPair;\n      }\n    } else {\n      return this.operationService.seed2keyPair(seed);\n    }\n  }\n  async revealMnemonicPhrase(pwd: string): Promise<string> {\n    if (this.wallet && (this.wallet instanceof HdWallet || this.wallet instanceof LegacyWalletV3)) {\n      const iv = this.encryptionService.shiftIV(this.wallet.IV, 1);\n      const entropy = await this.encryptionService.decrypt(this.wallet.encryptedEntropy, pwd, iv, 3);\n      if (entropy) {\n        return utils.entropyToMnemonic(entropy);\n      } else {\n        console.log('Invalid password');\n      }\n    }\n    return '';\n  }\n  addImplicitAccount(pk: string, derivationPath?: string | number) {\n    let pkh;\n    console.log(pk);\n    if (pk && pk.slice(0, 4) === 'sppk') {\n      pkh = this.operationService.pk2pkh(pk);\n    } else {\n      pkh = utils.pkToPkh(pk);\n    }\n    if (pkh) {\n      this.wallet.implicitAccounts.push(new ImplicitAccount(pkh, pk, typeof derivationPath === 'number' ? `44'/1729'/${derivationPath}'/0'` : derivationPath));\n      console.log('Adding new implicit account...');\n      console.log(this.wallet.implicitAccounts[this.wallet.implicitAccounts.length - 1]);\n      this.storeWallet();\n    }\n  }\n  addOriginatedAccount(kt: string, manager: string) {\n    const implicitAccount = this.wallet.getImplicitAccount(manager);\n    if (implicitAccount) {\n      const origAcc = new OriginatedAccount(kt, implicitAccount.pkh, implicitAccount.pk);\n      implicitAccount.originatedAccounts.push(origAcc);\n      this.storeWallet();\n    } else {\n      console.warn(`Manager address $(manager) not found`);\n    }\n  }\n  /*addUnusedAccount(account: any) {\n    if (this.wallet instanceof HdWallet) {\n      this.wallet.unusedAccounts.push(account);\n    }\n  }*/\n  addressExists(address: string): boolean {\n    return this.wallet?.getAccounts().findIndex((a) => a.address === address) !== -1;\n  }\n  async incrementAccountIndex(password: string): Promise<string> {\n    if (this.wallet instanceof HdWallet) {\n      const seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, password, this.wallet.IV, 3);\n      if (seed) {\n        const keyPair: KeyPair = hd.seedToKeyPair(seed, `44'/1729'/${this.wallet.index}'/0'`);\n        this.addImplicitAccount(keyPair.pk, this.wallet.index);\n        this.wallet.index++;\n        this.storeWallet();\n        return keyPair.pkh;\n      } else {\n        return ''; // Wrong pwd\n      }\n    }\n  }\n  /*\n    Clear wallet data from browser\n  */\n  clearWallet(instanceId: string = '') {\n    this.wallet = null;\n    this.storageId = 0;\n    if (instanceId) {\n      sessionStorage.removeItem(instanceId);\n    } else {\n      localStorage.removeItem(this.storeKey);\n    }\n  }\n  /*\n  Used to decide wallet type\n  */\n  isFullWallet(): boolean {\n    return this.wallet instanceof FullWallet;\n  }\n  isViewOnlyWallet(): boolean {\n    return false;\n  }\n  isObserverWallet(): boolean {\n    return false;\n  }\n  isLedgerWallet(): boolean {\n    return this.wallet instanceof LedgerWallet;\n  }\n  isHdWallet(): boolean {\n    return this.wallet instanceof HdWallet;\n  }\n  isTorusWallet(): boolean {\n    return this.wallet instanceof TorusWallet;\n  }\n  isEmbeddedTorusWallet(): boolean {\n    return this.wallet instanceof EmbeddedTorusWallet;\n  }\n  isWatchWallet(): boolean {\n    return this.wallet instanceof WatchWallet;\n  }\n  isPwdWallet(): boolean {\n    return !this.isTorusWallet() && !this.isLedgerWallet() && !this.isWatchWallet();\n  }\n  exportKeyStoreInit(walletType: WalletType, encryptedSeed: string, encryptedEntropy: string, iv: string) {\n    const data: any = {\n      provider: 'Kukai',\n      version: 3.0,\n      walletType,\n      encryptedSeed,\n      encryptedEntropy,\n      iv\n    };\n    return data;\n  }\n  /*\n    Read and write to localStorage\n  */\n  initStorage(instanceId: string = '') {\n    this.storageId = Date.now();\n    if (instanceId) {\n      sessionStorage.setItem(instanceId, JSON.stringify({ localStorageId: this.storageId }));\n    } else {\n      localStorage.setItem(this.storeKey, JSON.stringify({ localStorageId: this.storageId }));\n    }\n  }\n  storeWallet() {\n    const localStorageId = this.getLocalStorageId();\n    if (this.storageId && localStorageId && this.storageId === localStorageId) {\n      let type = 'unknown';\n      if (this.wallet instanceof HdWallet) {\n        type = 'HdWallet';\n      } else if (this.wallet instanceof LegacyWalletV1) {\n        type = 'LegacyWalletV1';\n      } else if (this.wallet instanceof LegacyWalletV2) {\n        type = 'LegacyWalletV2';\n      } else if (this.wallet instanceof LegacyWalletV3) {\n        type = 'LegacyWalletV3';\n      } else if (this.wallet instanceof LedgerWallet) {\n        type = 'LedgerWallet';\n      } else if (this.wallet instanceof EmbeddedTorusWallet) {\n        type = 'EmbeddedTorusWallet';\n      } else if (this.wallet instanceof TorusWallet) {\n        type = 'TorusWallet';\n      } else if (this.wallet instanceof WatchWallet) {\n        type = 'WatchWallet';\n      }\n      this.getStorage().setItem(\n        this.wallet instanceof EmbeddedTorusWallet ? this.wallet.instanceId : this.storeKey,\n        JSON.stringify({\n          type,\n          localStorageId: this.storageId,\n          data: this.wallet\n        })\n      );\n    } else {\n      console.log('Outdated storage id');\n    }\n    this.subjectService.walletUpdated.next(null);\n  }\n  getLocalStorageId() {\n    const walletData = this.wallet instanceof EmbeddedTorusWallet ? sessionStorage.getItem(this.wallet.instanceId) : localStorage.getItem(this.storeKey);\n    if (walletData) {\n      const parsed = JSON.parse(walletData);\n      if (parsed && parsed.localStorageId) {\n        return parsed.localStorageId;\n      }\n    }\n    return 0;\n  }\n\n  loadStoredWallet(instanceId = '') {\n    const walletData = instanceId ? sessionStorage.getItem(instanceId) : localStorage.getItem(this.storeKey);\n    if (walletData && walletData !== 'undefined') {\n      const parsedWalletData = JSON.parse(walletData);\n      console.log(parsedWalletData);\n      if (parsedWalletData.type && parsedWalletData.data && parsedWalletData.localStorageId) {\n        this.storageId = parsedWalletData.localStorageId;\n        const wd = parsedWalletData.data;\n        this.deserializeStoredWallet(wd, parsedWalletData.type);\n      } else {\n        console.log('couldnt load a wallet');\n        this.clearWallet(instanceId);\n      }\n    } else {\n      console.log('couldnt load a wallet');\n      this.clearWallet(instanceId);\n    }\n  }\n  deserializeStoredWallet(wd: any, type: string) {\n    switch (type) {\n      case 'HdWallet':\n        this.wallet = new HdWallet(wd.IV, wd.encryptedSeed, wd.encryptedEntropy);\n        if (this.wallet instanceof HdWallet) {\n          this.wallet.index = wd.index;\n        }\n        break;\n      case 'LegacyWalletV1':\n        this.wallet = new LegacyWalletV1(wd.salt, wd.encryptedSeed);\n        break;\n      case 'LegacyWalletV2':\n        this.wallet = new LegacyWalletV2(wd.IV, wd.encryptedSeed);\n        break;\n      case 'LegacyWalletV3':\n        this.wallet = new LegacyWalletV3(wd.IV, wd.encryptedSeed, wd.encryptedEntropy);\n        break;\n      case 'LedgerWallet':\n        this.wallet = new LedgerWallet();\n        break;\n      case 'TorusWallet':\n        this.wallet = new TorusWallet(wd.verifier, wd.id, wd.name);\n        this.torusService.initTorus();\n        break;\n      case 'EmbeddedTorusWallet':\n        this.wallet = new EmbeddedTorusWallet(wd.verifier, wd.id, wd.name, wd.origin, wd.sk, wd.instanceId);\n        this.torusService.initTorus();\n        break;\n      case 'WatchWallet':\n        this.wallet = new WatchWallet();\n      default:\n    }\n    this.wallet.XTZrate = wd.XTZrate;\n    this.wallet.totalBalanceUSD = wd.totalBalanceUSD;\n    this.wallet.totalBalanceXTZ = wd.totalBalanceXTZ;\n    if (wd.lookups) {\n      this.wallet.lookups = wd.lookups;\n    }\n    for (const implicit of wd.implicitAccounts) {\n      const impAcc: ImplicitAccount = new ImplicitAccount(implicit.pkh, implicit.pk, implicit.derivationPath ? implicit.derivationPath : null);\n      impAcc.balanceUSD = implicit.balanceUSD;\n      impAcc.balanceXTZ = implicit.balanceXTZ;\n      impAcc.delegate = implicit.delegate;\n      impAcc.state = implicit.state;\n      impAcc.activities = implicit.activities;\n      if (implicit.tokens) {\n        impAcc.tokens = implicit.tokens;\n      }\n      for (const originated of implicit.originatedAccounts) {\n        const origAcc = new OriginatedAccount(originated.address, impAcc.pkh, impAcc.pk);\n        origAcc.balanceUSD = originated.balanceUSD;\n        origAcc.balanceXTZ = originated.balanceXTZ;\n        origAcc.delegate = originated.delegate;\n        origAcc.state = originated.state;\n        origAcc.activities = originated.activities;\n        impAcc.originatedAccounts.push(origAcc);\n      }\n      this.wallet.implicitAccounts.push(impAcc);\n    }\n  }\n  private getStorage() {\n    return this.isEmbeddedTorusWallet() ? sessionStorage : localStorage;\n  }\n}\n","export type WalletObject = LegacyWalletV1 | LegacyWalletV2 | LegacyWalletV3 | LedgerWallet | HdWallet | TorusWallet | WatchWallet;\n\nexport class Wallet {\n  totalBalanceXTZ: number | null;\n  totalBalanceUSD: number | null;\n  XTZrate: number | null;\n  implicitAccounts: ImplicitAccount[];\n  lookups: any[];\n  constructor() {\n    this.totalBalanceXTZ = null;\n    this.totalBalanceUSD = null;\n    this.XTZrate = null;\n    this.implicitAccounts = [];\n    this.lookups = [];\n  }\n  getAccounts(): Account[] {\n    const accounts: Account[] = [];\n    if (this.implicitAccounts.length) {\n      for (const implicitAccount of this.implicitAccounts) {\n        accounts.push(implicitAccount);\n        if (implicitAccount.originatedAccounts.length) {\n          for (const originatedAccount of implicitAccount.originatedAccounts) {\n            accounts.push(originatedAccount);\n          }\n        }\n      }\n    }\n    return accounts;\n  }\n  getImplicitAccounts(): ImplicitAccount[] {\n    return this.implicitAccounts;\n  }\n  getAccount(address: string): Account {\n    if (this.implicitAccounts.length) {\n      for (const implicitAccount of this.implicitAccounts) {\n        if (implicitAccount.address === address) {\n          return implicitAccount;\n        }\n        if (implicitAccount.originatedAccounts.length) {\n          for (const originatedAccount of implicitAccount.originatedAccounts) {\n            if (originatedAccount.address === address) {\n              return originatedAccount;\n            }\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getImplicitAccount(pkh: string): ImplicitAccount {\n    if (this.implicitAccounts.length) {\n      for (const implicitAccount of this.implicitAccounts) {\n        if (implicitAccount.pkh === pkh) {\n          return implicitAccount;\n        }\n      }\n    }\n    return null;\n  }\n}\n\nexport class FullWallet extends Wallet {\n  encryptedSeed: string;\n  constructor(encryptedSeed: string) {\n    super();\n    this.encryptedSeed = encryptedSeed;\n  }\n}\n\nexport class LegacyWalletV1 extends FullWallet {\n  salt: string;\n  constructor(salt: string, encrypedSeed: string) {\n    super(encrypedSeed);\n    this.salt = salt;\n  }\n}\n\nexport class LegacyWalletV2 extends FullWallet {\n  IV: string;\n  constructor(IV: string, encryptedSeed: string) {\n    super(encryptedSeed);\n    this.IV = IV;\n  }\n}\n\nexport class LegacyWalletV3 extends FullWallet {\n  encryptedEntropy: string;\n  IV: string;\n  constructor(IV: string, encryptedSeed: string, encryptedEntropy: string) {\n    super(encryptedSeed);\n    this.IV = IV;\n    this.encryptedEntropy = encryptedEntropy;\n  }\n}\n\nexport class HdWallet extends FullWallet {\n  encryptedEntropy: string;\n  IV: string;\n  index: number;\n  constructor(IV: string, encryptedSeed: string, encryptedEntropy: string) {\n    super(encryptedSeed);\n    this.encryptedEntropy = encryptedEntropy;\n    this.IV = IV;\n    this.index = 0;\n  }\n}\n\nexport class TorusWallet extends Wallet {\n  verifier: string;\n  id: string;\n  name: string;\n  constructor(verifier: string, id: string, name: string) {\n    super();\n    this.verifier = verifier;\n    this.id = id;\n    this.name = name;\n  }\n  displayName() {\n    if (['twitter', 'facebook'].includes(this.verifier)) {\n      return this.name;\n    }\n    return this.id;\n  }\n}\nexport class EmbeddedTorusWallet extends TorusWallet {\n  origin: string;\n  sk: string;\n  instanceId: string;\n  constructor(verifier: string, id: string, name: string, origin: string, sk: string, instanceId: string) {\n    super(verifier, id, name);\n    this.origin = origin;\n    this.sk = sk;\n    this.instanceId = instanceId;\n  }\n}\nexport class LedgerWallet extends Wallet {\n  constructor() {\n    super();\n  }\n}\n\nexport class WatchWallet extends Wallet {\n  constructor() {\n    super();\n  }\n}\n\n// Accounts\n\nexport abstract class Account {\n  balanceXTZ: number | null;\n  balanceUSD: number | null;\n  delegate: string;\n  state: string;\n  activities: Activity[] | null;\n  tokens: Token[] | null;\n  pkh: string;\n  pk: string;\n  address: string;\n  constructor(pkh: string, pk: string, address: string) {\n    this.balanceXTZ = null;\n    this.balanceUSD = null;\n    this.activities = null;\n    this.tokens = null;\n    this.delegate = '';\n    this.state = '';\n    this.pkh = pkh;\n    this.pk = pk;\n    this.address = address;\n  }\n  public abstract isImplicit(): boolean;\n  shortAddress(): string {\n    return this.address.slice(0, 7) + '...' + this.address.slice(-4);\n  }\n  getTokenBalance(tokenId: string): string {\n    if (this.tokens?.length) {\n      for (const token of this.tokens) {\n        if (tokenId === token.tokenId) {\n          return token.balance;\n        }\n      }\n    }\n    return '';\n  }\n  getTokenBalances(): Token[] {\n    return this.tokens ?? [];\n  }\n  updateTokenBalance(tokenId: string, balance: string) {\n    if (!this.tokens || !tokenId) {\n      this.tokens = [];\n    }\n    if (tokenId && this.tokens.length) {\n      for (let i = 0; i < this.tokens.length; i++) {\n        if (tokenId === this.tokens[i].tokenId) {\n          if (this.tokens[i].balance !== balance) {\n            if (balance === '0' || (balance && balance.slice(0, 1) === '-')) {\n              this.tokens.splice(i, 1);\n            } else {\n              this.tokens[i].balance = balance;\n            }\n          }\n          return;\n        }\n      }\n    }\n    if (tokenId.length > 37 && balance && balance !== '0' && balance.slice(0, 1) !== '-') {\n      this.tokens.unshift({ tokenId, balance });\n    }\n  }\n}\n\nexport class ImplicitAccount extends Account {\n  originatedAccounts: OriginatedAccount[];\n  derivationPath?: string;\n  constructor(pkh: string, pk: string, derivationPath?: string) {\n    super(pkh, pk, pkh);\n    this.originatedAccounts = [];\n    if (derivationPath) {\n      this.derivationPath = derivationPath;\n    }\n  }\n  isImplicit(): boolean {\n    return true;\n  }\n}\n\nexport class OriginatedAccount extends Account {\n  constructor(ktAddress: string, managerPkh: string, managerPk: string) {\n    super(managerPkh, managerPk, ktAddress);\n  }\n  isImplicit(): boolean {\n    return false;\n  }\n}\n\nexport enum OpStatus {\n  FAILED = -1,\n  UNCONFIRMED = 0,\n  HALF_CONFIRMED = 0.5, // confirmed but not indexed fully yet\n  CONFIRMED = 1\n}\nexport class Activity {\n  type: string;\n  block: string;\n  status: OpStatus;\n  amount: string;\n  source: {\n    address: string;\n    alias?: string;\n  };\n  destination: {\n    address: string;\n    alias?: string;\n  };\n  fee?: string;\n  hash: string;\n  counter?: number;\n  timestamp: number | null;\n  tokenId?: string;\n  entrypoint?: string;\n  opId?: string;\n}\nexport class Token {\n  tokenId: string;\n  balance: string;\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\nimport { Constants, DisplayLinkOption } from '../app/interfaces';\n\nexport const environment = {\n  production: false\n};\nconst _CONSTANTS: Constants = {\n  NETWORK: 'ghostnet',\n  NAME: 'Testnet / Ghostnet',\n  TEZOS_DOMAIN: {\n    CONTRACT: 'KT1WffvKqRGaPtVWYR1ZkG2GQY42B7a8x3kk',\n    TOP_DOMAINS: ['ith']\n  },\n  MAINNET: false,\n  NODE_URL: 'https://ghostnet.ecadinfra.com',\n  API_URL: 'https://api.ghostnet.tzkt.io/v1',\n  BLOCK_EXPLORER_URL: 'https://ghostnet.tzkt.io',\n  HARD_LIMITS: {\n    hard_gas_limit_per_operation: 1040000,\n    hard_gas_limit_per_block: 2600000,\n    hard_storage_limit_per_operation: 60000\n  },\n  CONTRACT_ALIASES: {\n    EmergentsTCG: {\n      name: 'Emergents TCG',\n      address: ['KT1AWS8nWonvfG5xt86KPb1JxrYx2TYE6KvL'],\n      thumbnailUrl: 'assets/img/alias/emergents.svg',\n      discoverUrl: 'assets/img/alias/emergents-discover.png',\n      link: 'https://minterpop.com/emergentstcg',\n      shouldDisplayLink: DisplayLinkOption.All,\n      category: ['games', 'collectibles'],\n      zoomDiscoverImg: true,\n      description: 'A next-gen superhero trading card game'\n    }\n  },\n  ASSETS: {},\n  NFT_CONTRACT_OVERRIDES: [],\n  CONTRACT_OVERRIDES: {},\n  FEATURE_CONTRACTS: {}\n};\nconst _TRUSTED_TOKEN_CONTRACTS = [];\nconst _BLACKLISTED_TOKEN_CONTRACTS = [];\nconst _MODEL_3D_WHITELIST = [];\n\nexport const CONSTANTS = JSON.parse(JSON.stringify(_CONSTANTS));\nexport const TRUSTED_TOKEN_CONTRACTS = JSON.parse(JSON.stringify(_TRUSTED_TOKEN_CONTRACTS));\nexport const BLACKLISTED_TOKEN_CONTRACTS = JSON.parse(JSON.stringify(_BLACKLISTED_TOKEN_CONTRACTS));\nexport const MODEL_3D_WHITELIST = JSON.parse(JSON.stringify(_MODEL_3D_WHITELIST));\n","import { Constants } from './../app/interfaces';\nimport {\n  CONSTANTS as _CONSTANTS,\n  TRUSTED_TOKEN_CONTRACTS as _TTC,\n  BLACKLISTED_TOKEN_CONTRACTS as _BLTC,\n  MODEL_3D_WHITELIST as _M3DW\n} from './environment.ghostnet';\n\nexport const environment = {\n  production: false\n};\nexport const CONSTANTS: Constants = _CONSTANTS;\nexport const TRUSTED_TOKEN_CONTRACTS = _TTC;\nexport const BLACKLISTED_TOKEN_CONTRACTS = _BLTC;\nexport const MODEL_3D_WHITELIST = _M3DW;\n","import { Injectable } from '@angular/core';\nimport { KeyPair, WalletType } from './../../interfaces';\nimport { WalletService } from '../wallet/wallet.service';\nimport { CoordinatorService } from '../coordinator/coordinator.service';\nimport { LegacyWalletV1, LegacyWalletV2, LegacyWalletV3, HdWallet, LedgerWallet, TorusWallet, EmbeddedTorusWallet, WatchWallet } from '../wallet/wallet';\nimport { hd, utils } from '@tezos-core-tools/crypto-utils';\nimport { EncryptionService } from '../encryption/encryption.service';\nimport { TorusService } from '../torus/torus.service';\nimport { IndexerService } from '../indexer/indexer.service';\nimport { OperationService } from '../operation/operation.service';\n\n@Injectable()\nexport class ImportService {\n  constructor(\n    private walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private indexerService: IndexerService,\n    private encryptionService: EncryptionService,\n    private torusService: TorusService,\n    private operationService: OperationService\n  ) {}\n  pwdRequired(json: string) {\n    const walletData = JSON.parse(json);\n    if (walletData.provider !== 'Kukai') {\n      throw new Error(`Unsupported wallet format`);\n    }\n    if (walletData.walletType === WalletType.LegacyWallet || walletData.walletType === WalletType.HdWallet) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  async importWalletFromJson(json: any, pwd: string): Promise<boolean> {\n    // From file\n    let seed;\n    let walletData;\n    try {\n      walletData = JSON.parse(json);\n      if (walletData.walletType === WalletType.HdWallet && walletData.version === 3) {\n        //hd\n        seed = await this.encryptionService.decrypt(walletData.encryptedSeed, pwd, walletData.iv, 3);\n      } else if (walletData.walletType === WalletType.LegacyWallet) {\n        if (walletData.version === 1) {\n          console.log('v1');\n          seed = await this.encryptionService.decrypt(walletData.encryptedSeed, pwd, walletData.pkh.slice(3, 19), 1);\n          if (utils.seedToKeyPair(seed).pkh !== walletData.pkh) {\n            seed = '';\n          }\n        } else if (walletData.version === 2 || walletData.version === 3) {\n          seed = await this.encryptionService.decrypt(walletData.encryptedSeed, pwd, walletData.iv, walletData.version);\n        }\n      }\n    } catch (e) {\n      console.error(e);\n      throw new Error('Failed to decrypt keystore file');\n    }\n    if (seed) {\n      return this.importWalletFromObject(walletData, seed).then(\n        (ans) => {\n          return ans;\n        },\n        (e) => {\n          console.error(e);\n          throw new Error('Failed to fetch account(s). Please check your connection.');\n        }\n      );\n    } else {\n      throw new Error('Wrong password');\n    }\n  }\n  async importWalletFromObject(data: any, seed: any): Promise<boolean> {\n    this.coordinatorService.stopAll();\n    if (data.walletType === WalletType.HdWallet && data.version === 3) {\n      // HD\n      this.walletService.wallet = new HdWallet(data.iv, data.encryptedSeed, data.encryptedEntropy);\n    } else if (data.walletType === WalletType.LegacyWallet) {\n      if (data.version === 3) {\n        this.walletService.wallet = new LegacyWalletV3(data.iv, data.encryptedSeed, data.encryptedEntropy);\n      } else if (data.version === 2) {\n        this.walletService.wallet = new LegacyWalletV2(data.iv, data.encryptedSeed);\n      } else if (data.version === 1) {\n        this.walletService.wallet = new LegacyWalletV1(data.pkh.slice(3, 19), data.encryptedSeed);\n      } else {\n        throw new Error('Unsupported wallet file');\n      }\n    } else {\n      throw new Error('Unsupported wallet file');\n    }\n    let keys: KeyPair;\n    if (seed.length === 32) {\n      keys = utils.seedToKeyPair(seed);\n    } else if (seed.length === 64) {\n      keys = hd.keyPairFromAccountIndex(seed, 0);\n    } else {\n      throw new Error('Invalid seed length');\n    }\n    this.walletService.initStorage();\n    if (this.walletService.wallet instanceof HdWallet) {\n      let index = 0;\n      let isUsedAccount: boolean = true;\n      while (isUsedAccount) {\n        keys = hd.keyPairFromAccountIndex(seed, index);\n        isUsedAccount = await this.indexerService.isUsedAccount(keys.pkh);\n        if (isUsedAccount || index === 0) {\n          this.walletService.addImplicitAccount(keys.pk, index++);\n          await this.findContracts(keys.pkh);\n        }\n      }\n      this.walletService.wallet.index = index;\n    } else {\n      this.walletService.addImplicitAccount(keys.pk);\n      await this.findContracts(keys.pkh);\n    }\n    return true;\n  }\n\n  async importWalletFromPk(pk: string, derivationPath: string, verifierDetails: any = null, sk: string = '', instanceId: string = ''): Promise<boolean> {\n    this.coordinatorService.stopAll();\n    if (derivationPath) {\n      return this.ledgerImport(pk, derivationPath);\n    } else if (verifierDetails) {\n      return this.torusImport(pk, verifierDetails, sk, instanceId);\n    }\n  }\n  async watch(pkh: string) {\n    if (this.operationService.validAddress(pkh)) {\n      const pk = await this.operationService.getManager(pkh).toPromise();\n      if (pk) {\n        this.walletService.initStorage();\n        this.walletService.wallet = new WatchWallet();\n        this.walletService.addImplicitAccount(pk);\n        this.findContracts(this.walletService.wallet.implicitAccounts[0].pkh);\n      } else {\n        console.error('Public key not found');\n      }\n    }\n  }\n  async ledgerImport(pk: string, derivationPath: string) {\n    try {\n      this.walletService.initStorage();\n      this.walletService.wallet = new LedgerWallet();\n      this.walletService.addImplicitAccount(pk, derivationPath);\n      await this.findContracts(this.walletService.wallet.implicitAccounts[0].pkh);\n      return true;\n    } catch (err) {\n      console.warn(err);\n      this.walletService.clearWallet();\n      return false;\n    }\n  }\n  async torusImport(pk: string, verifierDetails: any, sk: string = '', instanceId: string = '') {\n    try {\n      if (verifierDetails.embedded) {\n        this.walletService.initStorage(instanceId);\n        this.walletService.wallet = new EmbeddedTorusWallet(\n          verifierDetails.verifier,\n          verifierDetails.id,\n          verifierDetails.name,\n          verifierDetails.origin,\n          sk,\n          instanceId\n        );\n      } else {\n        this.walletService.initStorage();\n        this.walletService.wallet = new TorusWallet(verifierDetails.verifier, verifierDetails.id, verifierDetails.name);\n      }\n      if (verifierDetails.verifier === 'twitter') {\n        this.updateTwitterName(verifierDetails.id);\n      }\n      if (pk || !verifierDetails?.embedded) {\n        this.walletService.addImplicitAccount(pk);\n      } else {\n        this.walletService.storeWallet();\n      }\n      return true;\n    } catch (err) {\n      console.warn(err);\n      this.walletService.clearWallet(instanceId);\n      return false;\n    }\n  }\n  async updateTwitterName(verifierId: string) {\n    const twitterId = verifierId.split('|')[1];\n    const { username } = await this.torusService.twitterLookup(undefined, twitterId);\n    if (username && this.walletService.wallet instanceof TorusWallet) {\n      this.walletService.wallet.name = '@' + username;\n    }\n  }\n  async findContracts(pkh: string) {\n    const addresses = await this.indexerService.getContractAddresses(pkh);\n    for (const KT of addresses) {\n      console.log('Found KT: ' + KT);\n      this.walletService.addOriginatedAccount(KT, pkh);\n    }\n    this.walletService.storeWallet();\n  }\n}\n","<div class=\"flex-row\" id=\"wrapper\">\n  <div class=\"flex-column left\">\n    <div class=\"flex-column top\">\n      <h1><ng-container *ngIf=\"isMobile\">&nbsp;</ng-container>A Secure Home&nbsp;<br />for your Digital Assets</h1>\n      <h3>Manage your digital assets and seamlessly&nbsp;<br *ngIf=\"!isMobile\" />connect with experiences and apps on Tezos.</h3>\n    </div>\n    <div class=\"flex-column login\">\n      <span>Sign in with social:</span>\n      <div class=\"flex-row social\">\n        <button class=\"flex-row google\" (click)=\"torusLogin('google')\"><img\n            src=\"../../../assets/img/google-logo.svg\">&nbsp;<span>CONTINUE WITH\n            GOOGLE</span></button>\n        <div class=\"flex-row torus\">\n          <img class=\"facebook\" src=\"../../../assets/img/facebook-logo.svg\" (click)=\"torusLogin('facebook')\">\n          <img class=\"twitter\" src=\"../../../assets//img/twitter-logo.svg\" (click)=\"torusLogin('twitter')\">\n          <img class=\"reddit\" src=\"../../../assets/img/reddit-logo.svg\" (click)=\"torusLogin('reddit')\">\n          <img class=\"email\" src=\"../../../assets/img/email-logo-start.svg\" (click)=\"torusLogin('email')\">\n        </div>\n      </div>\n    </div>\n    <div class=\"flex-column bottom\">\n      <img src=\"../../../assets/img/landing-hero.png\" id=\"bg-mobile\">\n      <div id=\"ribbon-mobile\"></div>\n    </div>\n  </div>\n  <div class=\"flex-column right\">\n    <img src=\"../../../assets/img/landing-hero.png\" id=\"bg\">\n    <div id=\"ribbon\"></div>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { ActivatedRoute } from '@angular/router';\nimport 'rxjs/add/operator/filter';\nimport { TorusService } from '../../../services/torus/torus.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ImportService } from '../../../services/import/import.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['../../../../scss/components/views/start/start.component.scss']\n})\nexport class StartComponent implements OnInit, OnDestroy {\n  isMobile = false;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private walletService: WalletService,\n    public translate: TranslateService,\n    public torusService: TorusService,\n    private importService: ImportService,\n    private messageService: MessageService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this.subscriptions.add(\n      this.route.queryParams.subscribe(async (params) => {\n        if (params?.devtool === 'watch') {\n          const address = prompt('Enter watch address');\n          if (address) {\n            try {\n              await this.importService.watch(address);\n              this.messageService.startSpinner();\n              this.router.navigate([`/account/${address}`]);\n            } finally {\n              this.messageService.stopSpinner();\n            }\n          }\n        }\n      })\n    );\n    if (!this.walletService.wallet) {\n      this.torusService.initTorus();\n    }\n\n    const e = () => {\n      this.isMobile = !!parseInt(getComputedStyle(document.documentElement).getPropertyValue('--is-mobile'));\n    };\n    window.addEventListener('resize', e);\n    e();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  async torusLogin(verifier: string, verifierId = ''): Promise<void> {\n    this.messageService.startSpinner('Loading wallet...');\n    // const { keyPair, userInfo } = await this.mockLogin();\n    const { keyPair, userInfo } = await this.torusService.loginTorus(verifier).catch(async (e) => await this.messageService.stopSpinner());\n    console.log('login done');\n    if (keyPair) {\n      await this.importService\n        .importWalletFromPk(keyPair.pk, '', {\n          verifier: userInfo.typeOfLogin,\n          id: userInfo.verifierId,\n          name: userInfo.name\n        })\n        .then((success: boolean) => {\n          if (success) {\n            console.log('success');\n            this.router.navigate([`/account/`]);\n            this.messageService.stopSpinner();\n          } else {\n            this.messageService.addError('Torus import failed');\n            this.messageService.stopSpinner();\n          }\n        });\n    } else {\n      await this.messageService.stopSpinner();\n    }\n  }\n\n  private async mockLogin(): Promise<any> {\n    const keyPair = {\n      sk: 'spsk1VfCfhixtzGvUSKDre6jwyGbXFm6aoeLGnxeVLCouueZmkgtJF',\n      pk: 'sppk7cZsZeBApsFgYEdWuSwj92YCWkJxMmBfkN3FeKRmEB7Lk5pmDrT',\n      pkh: 'tz2WKg52VqnYXH52TZbSVjT4hcc8YGVKi7Pd'\n    };\n    const userInfo = {\n      typeOfLogin: 'google',\n      verifierId: 'mock.user@gmail.com',\n      name: 'Mock User'\n    };\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({ keyPair, userInfo });\n      }, 2000);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { saveAs } from 'file-saver';\n\n@Injectable()\nexport class ExportService {\n  constructor() {}\n  downloadWallet(data: any) {\n    const blob = new Blob([JSON.stringify(data, null, 4)], {\n      type: 'application/json'\n    });\n    let filename = 'wallet.tez';\n    if (data.walletType === 1) {\n      filename = 'view-only_wallet.tez';\n    } else if (data.walletType === 2) {\n      filename = 'observer_wallet.tez';\n    } else if (data.walletType === 3) {\n      filename = 'ledger_wallet.tez';\n    } else if (data.walletType === 4) {\n      filename = 'hd-wallet.tez';\n    }\n    saveAs(blob, filename);\n  }\n\n  downloadOperationData(hex: string, signed: boolean) {\n    const data = {\n      hex: hex,\n      signed: signed\n    };\n    let filename;\n    if (signed) {\n      filename = 'signed.tzop';\n    } else {\n      filename = 'unsigned.tzop';\n    }\n    const blob = new Blob([JSON.stringify(data, null, 4)], {\n      type: 'application/json'\n    });\n    saveAs(blob, filename);\n  }\n}\n","<form autocomplete=\"off\">\n  <div class=\"flex-column card\">\n    <a routerLink=\"/\"><button class=\"flex-row back\"><img\n          src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n    <div *ngIf=\"activePanel==1\" class=\"flex-column body\">\n      <h1>Back up your seed</h1>\n      <p class=\"description\">When you create a new wallet, new Tezos Recovery (Seed) Words are generated.<br />Your seed\n        words are\n        the\n        master key of your wallet accounts and any value they hold.</p>\n      <div class=\"whitebox\" (mouseout)=\"mouseOut($event)\" (touchstart)=\"$event.stopPropagation(); this.hideBlur = true;\"\n        (touchend)=\"checkSelection($event)\" (click)=\"$event.stopPropagation()\" (mouseup)=\"checkSelection($event)\">\n        {{ MNEMONIC.string }}<div *ngIf=\"!hideBlur\" class=\"flex-row seed-blur\"\n          (click)=\"$event.stopPropagation(); this.hideBlur = true;\">\n          <span>CLICK HERE TO REVEAL YOUR SEED WORDS</span>\n        </div>\n      </div>\n      <p class=\"description red\">\n        <span *ngIf=\"isSelectedMnemonic\" style=\"margin-top: -4rem\" class=\"warning red\">\n          WARNING: Copying the seed words to your clipboard can result in sensitive leakage. The clipboard is a shared\n          resource that can be monitored by other web pages or browser extensions.<br />\n        </span> Be sure sure to back it up (seed words), write it down, and keep it incredibly safe.\n      </p>\n      <button class=\"button next\" (click)=\"verifyView()\">Next</button>\n    </div>\n    <div *ngIf=\"activePanel==2\" class=\"flex-column body\">\n      <h1>Verify your seed</h1>\n      <p class=\"description\">{{ MNEMONIC.verify.length ? 'Fill in the ' + formatVerifyDescription(MNEMONIC.verify[0] +\n        1)\n        + ' to verify\n        your seed backup' : 'Recovery Words (seed) have been verified' }}</p>\n      <progress max=\"{{ MNEMONIC.wordsToVerify }}\"\n        value=\"{{ MNEMONIC.wordsToVerify - MNEMONIC.verify.length }}\"></progress>\n      <div *ngIf=\"MNEMONIC.verify.length\" class=\"flex-row word-verify\">\n        <div class=\"flex-column word-hint\">\n          <span class=\"word-index\">{{ indexFormat(MNEMONIC.verify[0] - 1) }}</span>\n          <span class=\"word-value\"><b>{{ valueFormat(MNEMONIC.verify[0] - 1) }}</b></span>\n        </div>\n        <div class=\"flex-column word-input\">\n          <span class=\"word-index\">\n            <ng-container *ngIf=\"MNEMONIC.verify.length\">Word {{ MNEMONIC.verify[0] + 1 }}</ng-container>\n          </span>\n          <input id=\"wordInput\" class=\"text\" name=\"none\" type=\"text\" (input)=\"checkWord()\" (change)=\"checkWord()\"\n            [(ngModel)]=\"wordInput\" [disabled]=\"!MNEMONIC.verify.length\" autofocus>\n        </div>\n        <div class=\"flex-column word-hint\">\n          <span class=\"word-index\">{{ indexFormat(MNEMONIC.verify[0] + 1) }}</span>\n          <span class=\"word-value\"><b>{{ valueFormat(MNEMONIC.verify[0] + 1) }}</b></span>\n        </div>\n      </div>\n      <button *ngIf=\"!MNEMONIC.verify.length\" class=\"button next\" (click)=\"pwdView()\">Next</button>\n    </div>\n    <div *ngIf=\"activePanel==3\" class=\"flex-column body\">\n      <h1>Set a password</h1>\n      <p class=\"description bold blue\">This password will be used to create an encrypted keystore file.</p>\n      <p class=\"description\">When performing operations that need to be signed with your\n        secret key, this password will be required</p>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.PASSWORD' | translate }}\" class=\"text\"\n        autocomplete=\"new-password\" [(ngModel)]=\"pwd1\" (keyup)=\"calcStrength()\">\n      <small class=\"strength\"> {{ 'NEWWALLETCOMPONENT.PASSWORDSTRENGTH' | translate }} — <b\n          [style.color]=\"pwdStrength === 'Catastrophic!' ? 'darkred' : pwdStrength === 'Very weak!' ? 'red' : pwdStrength === 'Weak!' ? 'orange' : pwdStrength === 'Strong!' ? 'green' : 'red'\">{{\n          pwdStrength }}</b></small>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.CONFIRMPASSWORD' | translate }}\" class=\"text\"\n        autocomplete=\"new-password\" [(ngModel)]=\"pwd2\" (keydown.enter)=\"encryptWallet($event)\">\n      <button class=\"button next\" [style.visibility]=\"!pwd1 ? 'hidden' : ''\" (click)=\"encryptWallet($event)\">Next</button>\n    </div>\n    <div *ngIf=\"activePanel==4\" class=\"flex-column body\">\n      <h1>Wallet created!</h1>\n      <p class=\"description bold\">Your wallet is now set up and ready to be used.</p>\n      <p class=\"description\">Download your encrypted keystore file and import it when you want to access your wallet.\n      </p>\n      <div class=\"whitebox final\">\n        <p class=\"description bold pkh\">Your public account address:<br />{{ getPkh() }}</p>\n      </div>\n      <button class=\"button next\" (click)=\"download()\">Download</button>\n      <button class=\"button next\" [style.visibility]=\"!ekfDownloaded ? 'hidden' : ''\" (click)=\"done()\">Open\n        Wallet</button>\n    </div>\n    <span class=\"flex-row step-counter\">\n      <ng-container *ngFor=\"let _ of [1, 2, 3, 4]\">\n        <div class=\"dot\" [class]=\"_ === activePanel ? 'selected' : ''\"></div>\n      </ng-container>\n    </span>\n  </div>\n</form>","import { Component, OnInit, Input, HostBinding } from '@angular/core';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { ExportService } from '../../../../../services/export/export.service';\nimport { ImportService } from '../../../../../services/import/import.service';\nimport { InputValidationService } from '../../../../../services/input-validation/input-validation.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-wallet',\n  templateUrl: './new-wallet.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/login.component.scss']\n})\nexport class NewWalletComponent implements OnInit {\n  wordInput: string;\n  @HostBinding('class.tacos') showTacos = false;\n  @Input() pwd1 = '';\n  @Input() pwd2 = '';\n  @Input() userMnemonic = '';\n  hideBlur = false;\n  isSelectedMnemonic = false;\n  pwdStrength = '';\n  ekfDownloaded = false;\n  activePanel = 0;\n  data: any;\n  seed: any;\n  pkh: string;\n  pk: string;\n  MNEMONIC: {\n    string: string;\n    array: string[];\n    verify: number[];\n    wordsToVerify: number;\n  };\n  longClickTs = 0;\n  constructor(\n    private translate: TranslateService,\n    private walletService: WalletService,\n    private messageService: MessageService,\n    private exportService: ExportService,\n    private importService: ImportService,\n    private inputValidationService: InputValidationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.generateSeed();\n  }\n  generateSeed(): void {\n    const mnemonic = this.walletService.createNewWallet();\n    this.MNEMONIC = {\n      string: mnemonic,\n      array: mnemonic.split(' '),\n      verify: [],\n      wordsToVerify: 5\n    };\n    // shuffle\n    const mnemonicLength = this.MNEMONIC.array.length;\n    while (this.MNEMONIC.verify.length < this.MNEMONIC.wordsToVerify) {\n      const index = Math.floor(Math.random() * Math.floor(mnemonicLength));\n      if (!this.MNEMONIC.verify.includes(index)) {\n        this.MNEMONIC.verify.push(index);\n      }\n    }\n    this.MNEMONIC.verify.sort((a, b) => a - b);\n    this.activePanel++;\n  }\n  checkWord(): void {\n    this.wordInput = this.wordInput.toLowerCase().trim();\n    if (this.wordInput === this.MNEMONIC.array[this.MNEMONIC.verify[0]]) {\n      this.MNEMONIC.verify.shift();\n      this.wordInput = '';\n    }\n    if (!this.MNEMONIC.verify) {\n      // Remove focus from input box\n      document.getElementById('wordInput').blur();\n    }\n  }\n  formatVerifyDescription(index: number): string {\n    if (this.MNEMONIC.verify.length === 0) {\n      return 'Seed backup has been verified!';\n    }\n    switch (index) {\n      case 1:\n      case 21:\n        return `${index}st word`;\n      case 2:\n      case 22:\n        return `${index}nd word`;\n      case 3:\n      case 23:\n        return `${index}rd word`;\n      default:\n        return `${index}th word`;\n    }\n  }\n  indexFormat(index: number): string {\n    if (this.MNEMONIC.verify.length === 0) {\n      return '';\n    } else if (index < 0 || index >= this.MNEMONIC.array.length) {\n      return '';\n    } else {\n      return 'Word ' + (index + 1);\n    }\n  }\n  valueFormat(index: number): string {\n    if (this.MNEMONIC.verify.length === 0) {\n      return '';\n    } else if (index < 0 || index > this.MNEMONIC.array.length) {\n      return '';\n    } else {\n      return this.MNEMONIC.array[index];\n    }\n  }\n  verifyView(): void {\n    if (this.MNEMONIC.verify.length) {\n      this.activePanel++;\n    } else {\n      throw new Error('Unexpected verify array');\n    }\n  }\n  pwdView(): void {\n    this.activePanel++;\n    this.userMnemonic = '';\n  }\n\n  mnemonicMatch(): boolean {\n    return this.MNEMONIC.string === this.userMnemonic;\n  }\n  async encryptWallet(e: Event): Promise<boolean> {\n    e.preventDefault();\n    if (this.validPwd()) {\n      this.messageService.startSpinner('Encrypting wallet...');\n      const pwd = this.pwd1;\n      this.pwd1 = '';\n      this.pwd2 = '';\n      const ans = await this.walletService.createEncryptedWallet(this.MNEMONIC.string, pwd, '', true);\n      this.seed = ans.seed;\n      this.data = ans.data;\n      this.pkh = ans.pkh;\n      this.pk = ans.pk;\n      this.MNEMONIC.string = '';\n      this.MNEMONIC.array = [];\n      this.MNEMONIC.verify = [];\n      this.activePanel++;\n      this.messageService.stopSpinner();\n      if (document.body.offsetWidth >= 480) {\n        this.showTacos = true;\n      }\n    }\n    return false;\n  }\n  validPwd(): boolean {\n    if (!this.inputValidationService.password(this.pwd1)) {\n      this.messageService.addWarning(this.translate.instant('MNEMONICIMPORTCOMPONENT.PASSWORDWEAK'), 5);\n      return false;\n    } else if (this.pwd1 !== this.pwd2) {\n      this.messageService.addWarning(this.translate.instant('MNEMONICIMPORTCOMPONENT.NOMATCHPASSWORDS'), 5);\n      return false;\n    } else {\n      return true;\n    }\n  }\n  calcStrength(): void {\n    this.pwdStrength = this.inputValidationService.passwordStrengthDisplay(this.pwd1);\n  }\n  async done(): Promise<void> {\n    const seed = this.seed;\n    this.seed = null;\n    await this.importService.importWalletFromObject(this.data, seed);\n    this.walletService.storeWallet();\n    this.data = null;\n    this.messageService.addSuccess('Your new wallet is now set up and ready to use!');\n    this.router.navigate([`/account/`]);\n  }\n  export(): string {\n    return JSON.stringify(this.data);\n  }\n  getPkh(): string {\n    return this.pkh;\n  }\n  download(): void {\n    this.exportService.downloadWallet(this.data);\n    this.ekfDownloaded = true;\n  }\n  mouseOut(e): void {\n    e.stopPropagation();\n    this.hideBlur = false;\n    window.getSelection()?.removeAllRanges();\n  }\n  checkSelection(ev): void {\n    ev.stopPropagation();\n    if (this.isTextSelected()) {\n      this.isSelectedMnemonic = true;\n    }\n  }\n  private isTextSelected(): boolean {\n    let selection: Selection;\n    if (window.getSelection) {\n      selection = window.getSelection();\n    } else if (document.getSelection) {\n      selection = document.getSelection();\n    } else return false;\n    return !selection?.isCollapsed;\n  }\n}\n","<div class=\"flex-column card\">\n  <a routerLink=\"/\"><button class=\"flex-row back\"><img src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n  <div *ngIf=\"activePanel === 0\" class=\"flex-column body\">\n    <h1>Import wallet</h1>\n    <div class=\"flex-row import-options\">\n      <span [class.selected]=\"importOption===0\" (click)=\"reset(); importOption = 0\">Keystore File</span>\n      <span [class.selected]=\"importOption===1\" (click)=\"reset(); importOption = 1\">Seed Words</span>\n      <span [class.selected]=\"importOption===2\" (click)=\"reset(); importOption = 2\">Fundraiser</span>\n    </div>\n    <ng-container *ngIf=\"importOption === 0\">\n      <form autocomplete=\"off\">\n        <p class=\"description\">\n          Import your wallet from an encrypted keystore file (<span style=\"text-transform: lowercase;\">.tez</span>)\n        </p>\n        <input #keyStore name=\"none\" type=\"file\" (change)=\"handleFileInput($event.target.files)\"\n          accept=\".tez{{ firefox ? ', application/json' : '' }}\" id=\"file\" name=\"file\">\n        <div class=\"flex-row button input-file-wrapper\">\n          <label for=\"file\" class=\"flex-row button input-file\" [class.loaded]=\"walletJson\"\n            (click)=\"keyStore?.nativeElement?.click();\">\n            <ng-container *ngIf=\"!walletJson\"><span class=\"b\">Browse</span><img\n                src=\"../../../../../assets/img/import-plus.png\" /></ng-container>\n            <ng-container *ngIf=\"walletJson\">\n              <div class=\"flex-row body\"><img src=\"../../../../../assets/img/lock.png\" />&nbsp;&nbsp;<span\n                  class=\"flex-row filename\">{{\n                  fileName\n                  }}</span>\n              </div>\n              <span class=\"b\">Browse</span>\n            </ng-container>\n          </label>\n        </div>\n        <input *ngIf=\"walletJson\" name=\"none\" type=\"password\" class=\"text\" autocomplete=\"current-password\"\n          (keydown.enter)='!messageService.spinnerOn ? checkImportPwd() : null' id=\"pwd\" [(ngModel)]=\"pwd\" placeholder=\"Password\">\n        <button class=\"button next\" [style.visibility]=\"!walletJson ? 'hidden' : ''\"\n          (click)='!messageService.spinnerOn ? checkImportPwd() : null'>Import</button>\n      </form>\n    </ng-container>\n    <ng-container *ngIf=\"importOption > 0\">\n      <form autocomplete=\"off\">\n        <p class=\"description faucet\" *ngIf=\"importOption === 2\"><span>Please make sure to first <a\n              routerLink=\"/activate\">activate</a> your fundraiser wallet.</span></p>\n        <span class=\"description label\">RECOVERY (SEED) WORDS <span style=\"color: #98a0ab\">12-24 WORDS</span></span>\n        <textarea name=\"none\" class=\"text seed-word\" [(ngModel)]=\"mnemonic\" autocomplete=\"off\" spellcheck=\"false\"\n          [placeholder]=\"'Seed Words (required)'\" (keydown)=\"seedWordKeydown($event)\"></textarea>\n      </form>\n      <ng-container *ngIf=\"importOption === 1\">\n        <app-ui-toggle-advanced style=\"width: 13rem;\" [default]=\"false\" (stateChange)=\"advancedForm = $event\">\n        </app-ui-toggle-advanced>\n        <br /><br />\n        <form autocomplete=\"off\" *ngIf=\"advancedForm\" class=\"flex-row-wrap import-option-1\">\n          <div class=\"flex-column\">\n            <span class=\"label\"><b>If your seed words are protected by a passphrase, it needs to be entered\n                here</b></span>\n            <input name=\"none\" class=\"text\" type=\"password\" name=\"passphrase\" autocomplete=\"one-time-code\"\n              [(ngModel)]=\"passphrase\" [placeholder]=\"'Passphrase (optional)'\" readonly=\"true\"\n              (click)=\"clickPassword($event)\" (blur)=\"blurPassword($event)\">\n          </div>\n          <div class=\"flex-column\">\n            <span class=\"label\"><b>Provide the public key hash<br /> to verify your passphrase is correct</b></span>\n            <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"pkh\" [placeholder]=\"'tz1... (recommended)'\">\n          </div>\n          <div class=\"flex-row radios\" *ngIf=\"importOption === 1\">\n            <div class=\"flex-row\">\n              <input name=\"none\" (change)=\"hdImport = !hdImport\" type=\"radio\" name=\"walletType\" value=\"hd\" checked>\n              <span>HD wallet</span>\n            </div>\n            <div class=\"flex-row\">\n              <input name=\"none\" (change)=\"hdImport = !hdImport\" type=\"radio\" name=\"walletType\" value=\"legacy\">\n              <span>Legacy wallet</span>\n            </div>\n          </div>\n        </form>\n      </ng-container>\n      <ng-container *ngIf=\"importOption === 2\">\n        <form autocomplete=\"off\">\n          <span class=\"label\">The email used during the fundraiser</span>\n          <input name=\"none\" class=\"text\" type=\"text\" [(ngModel)]=\"email\" [placeholder]=\"'Email (required)'\">\n          <span class=\"label\">The password you chose during the fundraiser</span>\n          <input name=\"none\" class=\"text\" type=\"password\" name=\"tge-password\" autocomplete=\"one-time-code\"\n            [(ngModel)]=\"password\" [placeholder]=\"'Password (required)'\" readonly=\"true\" (click)=\"clickPassword($event)\"\n            (blur)=\"blurPassword($event)\">\n          <span class=\"label\">Provide the public key hash to verify your email and password are correct</span>\n          <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"pkh\" [placeholder]=\"'tz1... (recomended)'\">\n        </form>\n      </ng-container>\n      <button class=\"button next\" (click)=\"retrieve()\">Import</button>\n    </ng-container>\n  </div>\n  <div *ngIf=\"activePanel==1\" class=\"flex-column body\">\n    <form autocomplete=\"off\">\n      <h1>Set a password</h1>\n      <p class=\"description bold blue\">This password will be used to create an encrypted keystore file.</p>\n      <p class=\"description\">When performing operations that need to be signed with your\n        secret key, this password will be required</p>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.PASSWORD' | translate }}\" class=\"text\"\n        autocomplete=\"new-password\" [(ngModel)]=\"pwd1\" (keyup)=\"calcStrength()\">\n      <small class=\"strength\"> {{ 'NEWWALLETCOMPONENT.PASSWORDSTRENGTH' | translate }} — <b\n          [style.color]=\"pwdStrength === 'Catastrophic!' ? 'darkred' : pwdStrength === 'Very weak!' ? 'red' : pwdStrength === 'Weak!' ? 'orange' : pwdStrength === 'Strong!' ? 'green' : 'red'\">{{\n          pwdStrength }}</b></small>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.CONFIRMPASSWORD' | translate }}\"\n        class=\"text\" autocomplete=\"new-password\" [(ngModel)]=\"pwd2\">\n      <button class=\"button next\" [style.visibility]=\"!pwd1 ? 'hidden' : ''\" (click)=\"setPwd()\">Next</button>\n    </form>\n  </div>\n  <div *ngIf=\"activePanel==2\" class=\"flex-column body\">\n    <h1>Wallet created!</h1>\n    <p class=\"description bold\">Your wallet is now set up and ready to be used.</p>\n    <p class=\"description\">Download your encrypted keystore file and import it when you want to access your wallet.\n    </p>\n    <div class=\"whitebox final\">\n      <p class=\"description bold pkh\">Your public account address:<br />{{ showPkh() }}</p>\n    </div>\n    <button class=\"button next\" (click)=\"download()\">Download</button>\n    <button class=\"button next\" [style.visibility]=\"!Downloaded ? 'hidden' : ''\" (click)=\"done()\">Open Wallet</button>\n  </div>\n</div>","import { Component, OnInit, HostBinding, Input, OnDestroy, AfterViewInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core'; // Multiple instances created ?\nimport { ImportService } from '../../../../../services/import/import.service';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { ExportService } from '../../../../../services/export/export.service';\nimport { InputValidationService } from '../../../../../services/input-validation/input-validation.service';\nimport { utils, hd } from '@tezos-core-tools/crypto-utils';\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport * as bip39 from 'bip39';\n\n@Component({\n  selector: 'app-mnemonic-import-wallet',\n  templateUrl: './mnemonic-import.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/login.component.scss']\n})\nexport class MnemonicImportComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.tacos') showTacos = false;\n  @Input('keyStore') keyStore;\n  MIN_PWD_LENGTH = 9;\n  mnemonic: string;\n  email: string;\n  password: string;\n  passphrase: string;\n  pkh: string;\n  importOption = 0;\n  activePanel = 0;\n  hdImport = true;\n  wallet: any;\n  walletJson: string;\n  pwd = '';\n  pwd1: string;\n  pwd2: string;\n  pwdStrength = '';\n  Downloaded = false;\n  fileName = '';\n  showWrongFileUploadMsg: false;\n  browser = 'unknown';\n  advancedForm = false;\n  bip39Wordlist = bip39.wordlists.english;\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private translate: TranslateService,\n    private importService: ImportService,\n    private router: Router,\n    private messageService: MessageService,\n    private walletService: WalletService,\n    private exportService: ExportService,\n    private inputValidationService: InputValidationService\n  ) {\n    this.subscriptions.add(\n      this.router.events.pipe(filter((e) => e instanceof NavigationEnd && e.url.startsWith('/import'))).subscribe(() => {\n        const navigation = this.router.getCurrentNavigation();\n        this.importOption = navigation.extras?.state?.option ? navigation.extras.state.option : 0;\n      })\n    );\n  }\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    document.documentElement.addEventListener('dragover', this.allowDrop.bind(this));\n    document.documentElement.addEventListener('drop', this.handleFileDragAndDrop.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  clickPassword(e): void {\n    e.target.removeAttribute('readonly');\n    e.target.focus();\n  }\n\n  blurPassword(e): void {\n    e.target.setAttribute('readonly', true);\n  }\n\n  retrieve(): void {\n    if (this.mnemonic) {\n      this.mnemonic = this.mnemonic\n        .toLowerCase()\n        .replace(/(\\r\\n|\\n|\\r)/gm, ' ') // replace \\n\n        .replace(/[^a-z| ]/gm, '') // remove forbidden characters\n        .replace(/\\s+/g, ' ') // remove extra whitespaces\n        .trim();\n    }\n    if (this.importOption === 2) {\n      this.passphrase = this.email + this.password;\n    }\n    const invalidMnemonic = this.inputValidationService.invalidMnemonic(this.mnemonic);\n    if (invalidMnemonic) {\n      this.messageService.addWarning(invalidMnemonic, 10);\n    } else if (this.importOption === 2 && !this.inputValidationService.email(this.email)) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDEMAIL').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Invalid email!'\n        )\n      );\n    } else if (this.importOption === 2 && !this.password) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDPASSWORD').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Invalid password!'\n        )\n      );\n    } else if (!this.inputValidationService.passphrase(this.passphrase)) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDPASSPHRASE').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Invalid passphrase!'\n        )\n      );\n    } else if (this.pkh && !this.inputValidationService.address(this.pkh)) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDPKH').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Invalid public key hash!'\n        )\n      );\n    } else {\n      let pkh = '';\n      if (this.pkh) {\n        if (this.importOption === 1 && this.hdImport) {\n          pkh = hd.keyPairFromAccountIndex(utils.mnemonicToSeed(this.mnemonic, this.passphrase, true), 0).pkh;\n        } else {\n          pkh = utils.seedToKeyPair(utils.mnemonicToSeed(this.mnemonic, this.passphrase, false)).pkh;\n        }\n      }\n      if (this.pkh && pkh !== this.pkh) {\n        if (this.importOption === 2) {\n          this.subscriptions.add(\n            this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDEMAILPASSWORD').subscribe((res: string) => this.messageService.addWarning(res, 5))\n          );\n        } else {\n          this.subscriptions.add(\n            this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDPASSPHRASE').subscribe((res: string) => this.messageService.addWarning(res, 5))\n          );\n        }\n      } else {\n        this.activePanel++;\n      }\n    }\n  }\n  async setPwd(): Promise<void> {\n    if (this.validPwd()) {\n      const password = this.pwd1;\n      this.pwd1 = '';\n      this.pwd2 = '';\n      await this.messageService.startSpinner('Encrypting wallet...');\n      try {\n        this.wallet = await this.walletService.createEncryptedWallet(this.mnemonic, password, this.passphrase, this.importOption === 1 && this.hdImport);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n      this.mnemonic = '';\n      this.passphrase = '';\n      this.email = '';\n      this.password = '';\n      this.activePanel++;\n    }\n  }\n\n  validPwd(): boolean {\n    if (!this.inputValidationService.password(this.pwd1)) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.PASSWORDWEAK').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Password is too weak!'\n        )\n      );\n      return false;\n    } else if (this.pwd1 !== this.pwd2) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.NOMATCHPASSWORDS').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // Passwords don't match!\n        )\n      );\n      return false;\n    } else {\n      return true;\n    }\n  }\n  calcStrength(): void {\n    this.pwdStrength = this.inputValidationService.passwordStrengthDisplay(this.pwd1);\n  }\n  export(): string {\n    return JSON.stringify(this.wallet.data);\n  }\n  showPkh(): string {\n    return this.wallet.pkh;\n  }\n  download(): void {\n    this.exportService.downloadWallet(this.wallet.data);\n    this.Downloaded = true;\n  }\n  async done(): Promise<void> {\n    await this.messageService.startSpinner('Loading wallet...');\n    try {\n      await this.importService.importWalletFromObject(this.wallet.data, this.wallet.seed);\n    } finally {\n      this.messageService.stopSpinner();\n    }\n    this.wallet = null;\n    this.router.navigate([`/account/`]);\n    this.subscriptions.add(this.translate.get('MNEMONICIMPORTCOMPONENT.WALLETREADY').subscribe((res: string) => this.messageService.addSuccess(res)));\n  }\n  /* Keystore handling */\n  importPreCheck(keyFile: string): void {\n    this.typeCheckFile(keyFile);\n    if (this.importService.pwdRequired(keyFile)) {\n      this.walletJson = keyFile;\n    } else {\n      throw new Error('Unsupported wallet file');\n    }\n  }\n  typeCheckFile(keyFile: string): void {\n    const obj = JSON.parse(keyFile);\n    // Required\n    try {\n      if (typeof obj.provider !== 'string') {\n        throw new Error('provider not a string!');\n      }\n      if (typeof obj.version !== 'number') {\n        throw new Error('version not a number!');\n      }\n      if (typeof obj.walletType !== 'number') {\n        throw new Error('walletType not a number!');\n      }\n      // Optional\n      if (obj.encryptedSeed && typeof obj.encryptedSeed !== 'string') {\n        throw new Error('encryptedSeed not a string!');\n      }\n      if (obj.pkh && typeof obj.pkh !== 'string') {\n        throw new Error('pkh not a string!');\n      }\n      if (obj.iv && typeof obj.iv !== 'string') {\n        throw new Error('iv not a string!');\n      }\n      if (obj.pk && typeof obj.pk !== 'string') {\n        throw new Error('pk not a string!');\n      }\n      if (obj.encryptedEntropy && typeof obj.encryptedEntropy !== 'string') {\n        throw new Error('encryptedEntropy not a string!');\n      }\n    } catch (e) {\n      this.messageService.addError(e);\n      throw e;\n    }\n  }\n  async checkImportPwd(): Promise<void> {\n    if (!this.walletJson) {\n      this.messageService.addWarning('No keystore file imported', 5);\n    } else if (this.pwd) {\n      await this.messageService.startSpinner('Importing wallet...');\n      try {\n        await this.import(this.walletJson, this.pwd);\n        this.pwd = '';\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    } else {\n      this.messageService.addWarning('No password provided', 5);\n    }\n  }\n  async import(keyFile: string, pwd: string): Promise<void> {\n    this.typeCheckFile(keyFile);\n    await this.importService\n      .importWalletFromJson(keyFile, pwd)\n      .then((success: boolean) => {\n        if (success) {\n          this.router.navigate(['/account/']);\n        } else {\n          console.log(success);\n          this.messageService.addError('Something went wrong');\n        }\n      })\n      .catch((e) => {\n        this.messageService.addError(e);\n        this.walletService.clearWallet();\n        this.messageService.stopSpinner();\n      });\n  }\n  allowDrop(e): void {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n  handleFileDragAndDrop(e): void {\n    e.preventDefault();\n    this.handleFileInput(e.dataTransfer.files);\n  }\n  handleFileInput(files: FileList): boolean {\n    let fileToUpload = files.item(0);\n    if (!fileToUpload) {\n      return false;\n    } else if (!this.validateFile(fileToUpload.name)) {\n      let fileNotSupported = '';\n      this.subscriptions.add(this.translate.get('IMPORTCOMPONENT.FILENOTSUPPORTED').subscribe((res: string) => (fileNotSupported = res)));\n      this.messageService.add(fileNotSupported);\n\n      console.log('Selected file format is not supported');\n      fileToUpload = null;\n      this.walletJson = null;\n      return false;\n    } else {\n      const reader = new FileReader();\n      reader.readAsText(fileToUpload);\n      reader.onload = () => {\n        if (typeof reader.result === 'string') {\n          try {\n            this.importPreCheck(reader.result);\n          } catch (e) {\n            this.messageService.addError(e, 5);\n            this.walletJson = null;\n          }\n          if (this.walletJson) {\n            this.fileName = fileToUpload.name;\n          }\n        } else {\n          this.walletJson = null;\n          throw new Error('Not a string import');\n        }\n      };\n    }\n  }\n  validateFile(name: string): boolean {\n    const ext = name.substring(name.lastIndexOf('.') + 1);\n    if (ext.toLowerCase() === 'tez' || ext.toLowerCase() === 'json') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  seedWordKeydown(e): boolean {\n    if (\n      !((e.keyCode >= 65 && e.keyCode <= 90) || [8, 9, 13, 32, 37, 38, 39, 40, 46].includes(e.keyCode)) ||\n      (e.keyCode === 32 &&\n        e.target.value?.slice(-1) === ' ' &&\n        e.target?.selectionStart === e.target?.selectionEnd &&\n        e.target?.selectionStart === e.target?.value.length)\n    ) {\n      return false;\n    }\n\n    let word = '';\n    let words = [];\n    let wordPos = -1;\n    let charPos = -1;\n    if (e.metaKey === false && e.ctrlKey === false && e.keyCode >= 65 && e.keyCode <= 90) {\n      const first = e.target.value.slice(0, e.target.selectionStart) + (e.target.selectionStart === e.target.selectionEnd ? e.key : '');\n      const second = e.target.value.slice(e.target.selectionStart);\n      const firstSplit = first.split(' ');\n      words = (first + second).split(' ');\n      wordPos = firstSplit.length - 1;\n      word = words[wordPos];\n      let n = -1;\n      firstSplit.pop();\n      firstSplit.forEach((item) => {\n        n += item.length;\n        n++;\n      });\n      charPos = e.target.selectionStart - 1 - n;\n    } else {\n      words = e.target.value.split(' ');\n    }\n    if (e.metaKey === false && e.ctrlKey === false && e.keyCode >= 65 && e.keyCode <= 90) {\n      if (e.target.selectionStart !== e.target.selectionEnd) {\n        if (e.target.value[e.target.selectionStart] === e.key) {\n          const selection = e.target.value.slice(e.target.selectionStart, e.target.selectionEnd);\n          if (selection.includes(' ')) {\n            return true;\n          }\n          ++e.target.selectionStart;\n          if (e.target.selectionStart === e.target.selectionEnd && words.length < 24) {\n            e.target.value = e.target.value.slice(0, e.target.selectionStart) + ' ' + e.target.value.slice(e.target.selectionStart);\n            this.mnemonic = e.target.value;\n          }\n          e.target.setAttribute('data-selection-start', e.target.selectionStart);\n          e.target.setAttribute('data-selection-end', e.target.selectionEnd);\n          return false;\n        } else {\n          return true;\n        }\n      }\n      if (word) {\n        const r = this.bip39Wordlist.filter((w) => w.startsWith(word));\n        // only suggest word if added char is in the end of current word\n        if (r.length === 1 && (e.target.selectionEnd !== e.target.selectionStart || charPos + 1 === word.length)) {\n          words = words.map((w) => (w === word ? r[0] : w));\n          const offset = r[0].length - word.length;\n          let selStart = e.target.selectionStart;\n          e.target.value = words.join(' ');\n          if (offset === 0 && words.length < 24 && wordPos === words.length - 1) {\n            e.target.value = e.target.value + ' ';\n            selStart++;\n          }\n          this.mnemonic = e.target.value;\n          e.target.selectionStart = selStart + 1;\n          e.target.selectionEnd = e.target.selectionStart + offset;\n          e.target.setAttribute('data-selection-start', e.target.selectionStart);\n          e.target.setAttribute('data-selection-end', e.target.selectionEnd);\n          return false;\n        }\n      }\n    } else if (\n      [9, 13, 32].includes(e.keyCode) &&\n      e.target.selectionStart !== e.target.selectionEnd &&\n      Number(e.target.getAttribute('data-selection-start')) === e.target.selectionStart &&\n      Number(e.target.getAttribute('data-selection-end')) === e.target.selectionEnd\n    ) {\n      let selEnd = e.target.selectionEnd;\n      const words = e.target.value?.split(' ');\n      if (e.target.value.length === selEnd && words?.length < 24) {\n        e.target.value += ' ';\n        selEnd += 1;\n      }\n      this.mnemonic = e.target.value;\n      e.target.selectionStart = e.target.selectionEnd = selEnd;\n      e.target.setAttribute('data-selection-start', e.target.selectionStart);\n      e.target.setAttribute('data-selection-end', e.target.selectionStart);\n      return false;\n    } else if (e.keyCode === 9) {\n      return false;\n    } else if (e.keyCode === 8) {\n      e.target.setAttribute('data-selection-start', e.target.selectionStart);\n      e.target.setAttribute('data-selection-end', e.target.selectionStart);\n    }\n    return true;\n  }\n\n  reset(): void {\n    this.advancedForm = false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport 'babel-polyfill';\nimport TransportU2F from '@ledgerhq/hw-transport-u2f';\nimport TransportWebHID from '@ledgerhq/hw-transport-webhid';\nimport Tezos from '@obsidiansystems/hw-app-xtz';\nimport { OperationService } from '../operation/operation.service';\nimport { MessageService } from '../message/message.service';\n\n@Injectable()\nexport class LedgerService {\n  transport: any;\n  constructor(private operationService: OperationService, private messageService: MessageService) {}\n  async setTransport() {\n    if (!this.transport) {\n      console.log('Trying to use WebHID for transport...');\n      try {\n        this.transport = await TransportWebHID.create();\n        console.log('Transport is now set to use WebHID!');\n      } catch (e) {\n        this.transport = null;\n        console.warn(\"Couldn't set WebHID as transport!\");\n        console.error(e);\n      }\n    }\n    if (!this.transport) {\n      try {\n        this.transport = await TransportU2F.create();\n        console.warn('Transport is now set to use U2F!');\n      } catch (e) {\n        this.transport = null;\n        console.log(\"Couldn't set U2F as transport!\");\n        console.error(e);\n      }\n    }\n  }\n  async transportCheck() {\n    if (!this.transport) {\n      await this.setTransport();\n    }\n    if (!this.transport) {\n      this.messageService.addError('Failed to set transport. Please make sure your browser supports WebHID or U2F');\n      throw new Error('NO_TRANSPORT_FOUND');\n    }\n  }\n  async getPublicAddress(path: string) {\n    await this.transportCheck();\n    const xtz = new Tezos(this.transport);\n    const result = await xtz\n      .getAddress(path, true)\n      .then((res) => {\n        return this.sanitize(res, true);\n      })\n      .catch((e) => {\n        if (e.message) {\n          this.messageService.addError(e.message);\n        } else {\n          this.messageService.addError(e);\n        }\n        throw e;\n      });\n    const pk = this.operationService.hex2pk(result.publicKey);\n    return pk;\n  }\n  async signOperation(op: string, path: string) {\n    if (!['03', '05'].includes(op.slice(0, 2))) {\n      throw new Error('Invalid prefix');\n    }\n    await this.transportCheck();\n    const xtz = new Tezos(this.transport);\n    console.log('op', op);\n    const result = await xtz\n      .signOperation(path, op)\n      .then((res) => {\n        return this.sanitize(res, false);\n      })\n      .catch((e) => {\n        console.warn(e);\n        this.messageService.addError(e, 0);\n        return null;\n      });\n    console.log(JSON.stringify(result));\n    if (result?.signature) {\n      return result.signature;\n    } else {\n      return null;\n    }\n  }\n  async signHash(hash: string, path: string) {\n    if (hash.length !== 64) {\n      throw new Error('Invalid hash!');\n    }\n    await this.transportCheck();\n    const xtz = new Tezos(this.transport);\n    const result = await xtz\n      .signHash(path, hash)\n      .then((res) => {\n        return this.sanitize(res, false);\n      })\n      .catch((e) => {\n        console.warn(e);\n        this.messageService.addError(e, 0);\n        return null;\n      });\n    console.log(JSON.stringify(result));\n    if (result?.signature) {\n      return result.signature;\n    } else {\n      return null;\n    }\n  }\n  private sanitize(res: any, getPk: boolean) {\n    res = JSON.parse(JSON.stringify(res));\n    if (getPk && typeof res?.publicKey !== 'string') {\n      throw Error('Invalid pk');\n    }\n    if (!getPk && typeof res?.signature !== 'string') {\n      throw Error('Invalid signature');\n    }\n    return res;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LedgerService } from '../../../../../services/ledger/ledger.service';\nimport { ImportService } from '../../../../../services/import/import.service';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { InputValidationService } from '../../../../../services/input-validation/input-validation.service';\nimport { utils } from '@tezos-core-tools/crypto-utils';\n\n@Component({\n  selector: 'app-connect-ledger',\n  templateUrl: './connect-ledger.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/login.component.scss']\n})\nexport class ConnectLedgerComponent implements OnInit {\n  activePanel = 0;\n  defaultPath = \"44'/1729'/0'/0'\";\n  defaultText = 'Default derivation path';\n  path: string;\n  pendingLedgerConfirmation = false;\n  isHDDerivationPathCustom = false;\n  browser = 'unknown';\n\n  constructor(\n    private router: Router,\n    private ledgerService: LedgerService,\n    private importService: ImportService,\n    private messageService: MessageService,\n    private inputValidationService: InputValidationService\n  ) {}\n\n  ngOnInit(): void {\n    this.path = this.defaultText;\n    this.checkBrowser();\n  }\n  checkBrowser(): void {\n    try {\n      if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n        this.browser = 'firefox';\n      } else if ((navigator as any)?.userAgentData?.brands?.some((b) => b.brand === 'Google Chrome' || 'Chromium')) {\n        this.browser = 'chromium';\n      } else if ((navigator as any)?.userAgent.toLowerCase().indexOf('safari') > -1 && navigator.platform.indexOf('Mac') === -1) {\n        this.browser = 'safari';\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n  async getPk(): Promise<void> {\n    const path: string = this.path.replace(this.defaultText, this.defaultPath);\n    if (this.inputValidationService.derivationPath(path)) {\n      this.pendingLedgerConfirmation = true;\n      try {\n        this.messageService.startSpinner('Waiting for Ledger confirmation...');\n        const pk = await this.ledgerService.getPublicAddress(path);\n        console.log('getPK => ' + pk);\n        await this.importFromPk(pk, path);\n      } catch (e) {\n        throw e;\n      } finally {\n        this.pendingLedgerConfirmation = false;\n        this.messageService.stopSpinner();\n      }\n    } else {\n      this.messageService.addWarning('Invalid derivation path');\n    }\n  }\n  async importFromPk(pk: string, path: string): Promise<void> {\n    if (utils.validPublicKey(pk)) {\n      if (await this.importService.importWalletFromPk(pk, path)) {\n        this.router.navigate([`/account/`]);\n      } else {\n        this.messageService.addError('Failed to import Ledger wallet');\n      }\n    } else {\n      this.messageService.addError('Not a valid public key');\n    }\n  }\n  setDefaultPath(v): void {\n    if (this.isHDDerivationPathCustom) {\n      this.path = this.defaultText;\n    } else {\n      this.path = this.defaultPath;\n    }\n    this.isHDDerivationPathCustom = v;\n  }\n}\n","<form autocomplete=\"off\">\n  <div class=\"flex-column card\">\n    <a routerLink=\"/\"><button class=\"flex-row back\"><img\n          src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n    <div class=\"flex-column body\">\n      <h1>Connect your Ledger</h1>\n      <p class=\"description\">Keep the private keys safely on your Ledger device and use Kukai to access the Tezos\n        blockchain.</p>\n      <p class=\"description\">You need to open the Tezos Wallet app on your Ledger device and set the derivation path.\n      </p>\n      <input name=\"none\" type=\"text\" class=\"text\" [disabled]=\"!isHDDerivationPathCustom\" [(ngModel)]=\"path\"\n        value=\"'44\\'/1729\\'/0\\'/0\\''\">\n      <app-ui-toggle-advanced style=\"width: 24rem;\" [default]=\"false\" [text]=\"'Use custom HD derivation path:'\"\n        (stateChange)=\"setDefaultPath($event)\"></app-ui-toggle-advanced>\n      <br /><br /><br />\n      <button class=\"button next\" (click)=\"getPk()\" [disabled]=\"browser === 'safari'\">{{ browser !== 'safari' ?\n        'Connect' : 'Ledger support with Safari is currently unavailable' }}</button>\n    </div>\n  </div>\n</form>","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '404.component.html',\n  styleUrls: ['../../../../scss/components/views/error/error.scss']\n})\nexport class P404Component {\n  constructor() {}\n}\n","<div id=\"error\" class=\"flex-column\">\n  <h1>404</h1>\n  <h4>Oops! You're lost.</h4>\n  <p>The page you are looking for was not found.</p>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '500.component.html',\n  styleUrls: ['../../../../scss/components/views/error/error.scss']\n})\nexport class P500Component {\n  constructor() {}\n}\n","<div id=\"error\" class=\"flex-column\">\n  <h1>500</h1>\n  <h4>Houston, we have a problem!</h4>\n  <p>The page you are looking for is temporarily unavailable.</p>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/agreement/terms-of-use/terms-of-use.component.scss']\n})\nexport class PrivacyPolicyComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n  getHostName(): string {\n    return location.hostname;\n  }\n}\n","<div class=\"legal\">\n  <H1>Privacy Policy</H1>\n  <H5>Introduction</H5>\n  <p>Kukai Digital Wallet (“hereinafter Kukai, collectively encompassing {{getHostName()}}) is committed to ensuring the\n    privacy of all our users. We take our duty to process your personal data very seriously. This policy represents our\n    commitment to your right to privacy, giving you a clear explanation about how we use your information and your\n    rights over that information.</p>\n\n  <p>It’s possible to use {{getHostName()}} (“hereinafter website”) without submitting any personal information.</p>\n\n  <H5>Scope of Privacy Policy</H5>\n  <p>This privacy policy applies only to your use of our Tezos digital wallet, Kukai. Our website may contain links to\n    other websites, which are not hosted by Kukai. Please note that we have no control over how your data is collected,\n    stored, or used by other websites and we advise you to check the privacy policies of any such websites before\n    providing any data to them.</p>\n\n  <H5>What types of information do we collect and how?</H5>\n  <p>Kukai does not keep, process, or store any user data, however some services that Kukai relies on may store some\n    user data. Kukai uses Cloudflare services, which collects anonymized website traffic data.</p>\n\n  <p>Data protection laws require us to have a legal justification to process your personal information. Please note,\n    that to use Kukai digital wallet, no personal information is needed to use or access our website or to use our\n    digital wallet. Once again, Kukai does not store user data on any servers.</p>\n\n  <p>Please note, our website and forum may contain links to other websites which are not hosted by Kukai. Please note\n    that we have no control over how your data is collected, stored, or used by other websites and we advise you to\n    check the privacy policies of any such websites before providing any data to them.</p>\n\n  <H5>Legal obligation</H5>\n  <p>As Kukai does not keep, maintain, or process any personal information, Kukai will attempt to fulfill any legal\n    obligations placed upon us, through a lawfully valid legal order by a court of competent jurisdiction.</p>\n\n  <H5>Jurisdiction</H5>\n  <p>Our website is under Swedish jurisdiction and is subject to Swedish laws (which would negate the above retention\n    rules), and similar. Furthermore, our service providers could also be subject to similar orders without our\n    knowledge.</p>\n\n  <p>We take appropriate security measures to ensure that your digital wallet is secured, accurate and up to date.\n    However the transmission of information over the Internet is never completely secure, so while we do our best to\n    protect any information, however, we cannot guarantee the security of information transmitted to our website.</p>\n\n  <H5>Retention Period For Data</H5>\n  <p>We do not hold, store, maintain, or use any personal information as no personal information is needed to use our\n    digital wallet.</p>\n\n  <H5>Access to and your rights over your personal information and removal of User data:</H5>\n  <p>We do not hold, store, use, or maintain any personal user information. For a User to delete any data from the use\n    of our digital wallet please follow the following instructions: </p>\n\n  <p>Log out from the app to remove all user data from the browser cache.</p>\n\n  <p>For more information please see: <a href=\"https://www.tezos.help/kukai-data-removal/index.html\">https://www.tezos.help/kukai-data-removal/index.html</a></p>\n\n  <H5>Complaints</H5>\n  <p>If you wish to lodge a complaint about our handling of your personal data please get in touch with us on the\n    details above with the details of your complaint at contact@kukai.app. We aim to respond to all complaints within 14\n    working days. All legal requests will be reviewed by our legal department and appropriate action will be taken. If\n    you have a legal request, please contact us at: legal@kukai.app.</p>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-terms-of-use',\n  templateUrl: './terms-of-use.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/agreement/terms-of-use/terms-of-use.component.scss']\n})\nexport class TermsOfUseComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"legal\">\n  <H1>TERMS OF USE</H1>\n  <p><i>Last Updated: June 30, 2020</i></p>\n  <p class=\"notice\">IMPORTANT NOTICE: THIS AGREEMENT IS SUBJECT TO BINDING ARBITRATION AND A WAIVER OF CLASS ACTION RIGHTS AS DETAILED\n    IN SECTION 13. PLEASE READ THE AGREEMENT CAREFULLY.</p>\n\n  <H4>1. Acceptance of terms</H4>\n  <p>Kukai Wallet (hereinafter “Kukai,” “we,” “us,” or “our”) provides a platform for managing Tezos accounts, and\n    allowing ordinary websites and applications to interact with the blockchain network, while keeping the user in\n    control over what transactions they approve, through our website located at https://kukai.app/ (the “Site”), which\n    includes text, images, audio, code and other materials (collectively, the “Content”) and all of the features, and\n    services provided. The Site and any other features, tools, materials, or other services offered from time to time by\n    Kukai Wallet are referred to here as the “Services.” Please read these Terms of Use (the “Terms”) carefully before\n    using the Services. By using or otherwise accessing the Services, or clicking to accept or agree to these Terms\n    where that option is made available, you (1) accept and agree to these Terms, (2) consent to the collection, use,\n    disclosure and other handling of information as described in our Privacy Policy and (3) agree to any additional\n    terms, rules and conditions of participation issued by Kukai Wallet from time to time. If you do not agree to any of\n    the Terms, then you may not access or use the Content or Services.</p>\n\n  <H4>2. Modification of Terms of Use</H4>\n  <p>Except for Section 13, providing for arbitration and waiver of class action rights, Kukai Wallet reserves the\n    right, at its sole discretion, to modify or replace the Terms at any time without notice. We will always try to\n    provide advance notice, however, we reserve the right to modify or replace the Terms at our discretion. The most\n    current version of these Terms will be posted on our Site. You shall be responsible for reviewing and becoming\n    familiar with any such modifications. Use of the Services by you after any modification to the Terms constitutes\n    your acceptance of the Terms as modified.</p>\n\n  <H4>3. Eligibility</H4>\n  <p>You hereby represent and warrant that you are fully able and competent to enter into the terms, conditions,\n    obligations, affirmations, representations and warranties set forth in these Terms and to abide by and comply with\n    these Terms.</p>\n\n  <p>Kukai Wallet is a global platform and by accessing the Content or Services, you are representing and warranting\n    that you are of the legal age of majority in your jurisdiction as is required to access such Services and Content\n    and enter into arrangements as provided by the Services. You further represent that you are otherwise legally\n    permitted to use the service in your jurisdiction including owning cryptographic tokens of value, and interacting\n    with the Services or Content in any way. You further represent you are responsible for ensuring compliance with the\n    laws of your jurisdiction and acknowledge that Kukai Wallet is not liable for your compliance with such laws.</p>\n\n  <p>In addition, you represent to us that you and your financial institutions, or any party that owns or controls you\n    or your financial institutions, are (1) not subject to sanctions or otherwise designated on any list of prohibited\n    or restricted parties, including but not limited to the lists maintained by the United Nations Security Council, the\n    U.S. Government (e.g., the Specially Designated Nationals List and Foreign Sanctions Evaders List of the U.S.\n    Department of Treasury and the Entity List of the U.S. Department of Commerce), the European Union or its Member\n    States, or other applicable government authority and (2) not located in any country to which the United States has\n    embargoed goods or has otherwise applied any sanctions.</p>\n\n  <H4>4. Account Password and Security</H4>\n  <p>When setting up an account within Kukai Wallet, you will be responsible for keeping your own account secrets, which\n    may be a word seed phrase, an account file, or other locally stored secret information. Kukai Wallet encrypts this\n    information locally with a password you provide, that we never send to our servers. You agree to (a) never use the\n    same password for Kukai Wallet that you have ever used outside of this service, (b) keep your secret information and\n    password confidential and do not share them with anyone else and (c) immediately notify Kukai Wallet of any\n    unauthorized use of your account or breach of security. Kukai Wallet cannot and will not be liable for any loss or\n    damage arising from your failure to comply with this section.\n\n  <H4>5. DISCLAIMERS- RISKS</H4>\n\n  <H5>5.1. Warranty Disclaimer</H5>\n  <p>You expressly understand and agree that your use of the Services is at your sole risk. The Services (including the\n    Site and the Content) are provided on an “as is” and “as available” basis, without warranties of any kind, either\n    express or implied, including, without limitation, implied warranties of merchantability, fitness for a particular\n    purpose or non-infringement. You acknowledge that Kukai Wallet has no control over, and no duty to take any action\n    regarding: which users gain access to or use the Services; what effects the Content may have on you; how you may\n    interpret or use the Content; or what actions you may take as a result of having been exposed to the Content. You\n    release Kukai Wallet from any and all liability for you having acquired or not acquired Content through the\n    Services. Kukai Wallet makes no representations concerning any Content contained in or accessed through the\n    Services, and Kukai Wallet will not be responsible or liable for the accuracy, copyright compliance, legality or\n    decency of material contained in or accessed through the Services.</p>\n\n  <p>We do not represent or warrant that access to the Services will be continuous, uninterrupted, timely or secure. You\n    acknowledge and accept that the Services (a) may contain bugs, errors and defects, (b) may function improperly or be\n    subject to periods of downtime and unavailability, (c) may result in total or partial loss or corruption of data and\n    (d) may be modified at any time, including through the release of subsequent versions, all with or without notice to\n    you.</p>\n\n  <p>You acknowledge that Kukai Wallet is not responsible for transferring, safeguarding, or maintaining your private\n    keys or any digital currency associated therewith. If you lose, mishandle or have stolen associated digital currency\n    private keys, you acknowledge that you may not be able to recover associated digital currency, and that Kukai Wallet\n    is not responsible for such loss. You acknowledge that Kukai Wallet is not responsible for any loss, damage or\n    liability arising from your failure to comply with the terms hereunder.</p>\n\n  <H5>5.2 Sophistication and Risk of Cryptographic Systems</H5>\n  <p>By utilizing the Services or interacting with the Content or platform in any way, you represent that you understand\n    the inherent risks associated with cryptographic systems; and warrant that you have an understanding of the usage\n    and intricacies of the native cryptographic token Tezos (xtz), smart contract based tokens, and blockchain-based\n    software systems.</p>\n\n  <H5>5.3 Risk of Regulatory Actions in One or More Jurisdictions</H5>\n  <p>Kukai Wallet and any supported cryptographic token and blockchain could be impacted by one or more regulatory\n    inquiries or regulatory action, which could impede or limit the ability of Kukai Wallet to continue to develop, or\n    which could impede or limit your ability to access or use the Services or the underlying blockchain network.</p>\n\n  <H5>5.4 Risk of Weaknesses or Exploits in the Field of Cryptography</H5>\n  <p>You acknowledge and understand that Cryptography is a progressing field. Advances in code cracking or technical\n    advances such as the development of quantum computers may present risks to cryptocurrencies and Services of Content,\n    which could result in the theft or loss of your cryptographic tokens or property. To the extent possible, Kukai\n    Wallet intends to update the protocol underlying Services to account for any advances in cryptography and to\n    incorporate additional security measures, but does not guarantee or otherwise represent full security of the system.\n    By using the Services or accessing Content, you acknowledge these inherent risks.</p>\n\n  <H5>5.5 Volatility of Cryptocurrencies</H5>\n  <p>You understand that Tezos and other blockchain technologies and associated cryptographic tokens are highly volatile\n    due to many factors including but not limited to adoption, speculation, technology and security risks. You also\n    acknowledge that the cost of transacting on such technologies is variable and may increase at any time causing\n    impact to any activities taking place on the blockchain network. You acknowledge these risks and agree that Kukai\n    Wallet cannot be held liable for such fluctuations or increased costs.</p>\n\n  <H5>5.6 Application Security</H5>\n  <p>You further acknowledge that blockchain applications are code subject to flaws and acknowledge that you are solely\n    responsible for evaluating any code provided by the Services or Content and the trustworthiness of any third-party\n    websites, products, smart-contracts, or Content you access or use through the Services. You further expressly\n    acknowledge and represent that blockchain applications can be written maliciously or negligently, that Kukai Wallet\n    cannot be held liable for your interaction with such applications and that such applications may cause the loss of\n    property or even identity. This warning and others later provided by Kukai Wallet in no way evidence or represent an\n    on-going duty to alert you to all of the potential risks of utilizing the Services or Content. The code to Kukai\n    Wallet can be found at: https://github.com/kukai-wallet/kukai.</p>\n\n  <H4>6. Indemnity</H4>\n  <p>You agree to release and to indemnify, defend and hold harmless Kukai Wallet and its principles, subsidiaries,\n    affiliates and agencies, as well as the officers, directors, employees, shareholders and representatives of any of\n    the foregoing entities, from and against any and all losses, liabilities, expenses, damages, costs (including\n    attorneys’ fees and court costs) claims or actions of any kind whatsoever arising or resulting from your use of the\n    Services, your violation of these Terms, and any of your acts or omissions that implicate publicity rights,\n    defamation or invasion of privacy, and privacy laws. Kukai Wallet reserves the right, at its own expense, to assume\n    exclusive defense and control of any matter otherwise subject to indemnification by you and, in such case, you agree\n    to cooperate with Kukai Wallet in the defense of such matter.</p>\n\n  <H4>7. Limitation on Liability</H4>\n  <p>YOU ACKNOWLEDGE AND AGREE THAT YOU ASSUME FULL RESPONSIBILITY FOR YOUR USE OF THE SITE AND THE SERVICES. YOU\n    ACKNOWLEDGE AND AGREE THAT ANY INFORMATION YOU SEND OR RECEIVE DURING YOUR USE OF THE SITE AND THE SERVICES MAY NOT\n    BE SECURE AND MAY BE INTERCEPTED OR LATER ACQUIRED BY UNAUTHORIZED PARTIES. YOU ACKNOWLEDGE AND AGREE THAT YOUR USE\n    OF THE SITE AND THE SERVICES IS AT YOUR OWN RISK. RECOGNIZING SUCH, YOU UNDERSTAND AND AGREE THAT, TO THE FULLEST\n    EXTENT PERMITTED BY APPLICABLE LAW, NEITHER KUKAI WALLET NOR ITS SUPPLIERS OR LICENSORS WILL BE LIABLE TO YOU FOR\n    ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY OR OTHER DAMAGES OF ANY KIND,\n    INCLUDING WITHOUT LIMITATION DAMAGES FOR LOSS OF PROFITS, GOODWILL, USE, DATA OR OTHER TANGIBLE OR INTANGIBLE LOSSES\n    OR ANY OTHER DAMAGES BASED ON CONTRACT, TORT, STRICT LIABILITY OR ANY OTHER THEORY (EVEN IF KUKAI WALLET HAD BEEN\n    ADVISED OF THE POSSIBILITY OF SUCH DAMAGES), RESULTING FROM THE SITE OR SERVICES; THE USE OR THE INABILITY TO USE\n    THE SITE OR THE SERVICES; UNAUTHORIZED ACCESS TO OR ALTERATION OF YOUR TRANSMISSIONS OR DATA; STATEMENTS OR CONDUCT\n    OF ANY THIRD PARTY ON THE SITE OR THE SERVICES; ANY ACTIONS WE TAKE OR FAIL TO TAKE AS A RESULT OF COMMUNICATIONS\n    YOU SEND TO US; HUMAN ERRORS; TECHNICAL MALFUNCTIONS; FAILURES, INCLUDING PUBLIC UTILITY OR TELEPHONE OUTAGES;\n    OMISSIONS, INTERRUPTIONS, LATENCY, DELETIONS OR DEFECTS OF ANY DEVICE OR NETWORK, PROVIDERS, OR SOFTWARE (INCLUDING,\n    BUT NOT LIMITED TO, THOSE THAT DO NOT PERMIT PARTICIPATION IN THE SERVICES); ANY INJURY OR DAMAGE TO COMPUTER\n    EQUIPMENT; INABILITY TO FULLY ACCESS THE SITE OR THE SERVICES OR ANY OTHER WEBSITE; THEFT, TAMPERING, DESTRUCTION,\n    OR UNAUTHORIZED ACCESS TO, IMAGES OR OTHER CONTENT OF ANY KIND; DATA THAT IS PROCESSED LATE OR INCORRECTLY OR IS\n    INCOMPLETE OR LOST; TYPOGRAPHICAL, PRINTING OR OTHER ERRORS, OR ANY COMBINATION THEREOF; OR ANY OTHER MATTER\n    RELATING TO THE SITE OR ANY OTHER ASPECT OF THE SERVICES.</p>\n\n  <p>SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF CERTAIN WARRANTIES OR THE LIMITATION OR EXCLUSION OF LIABILITY FOR\n    INCIDENTAL OR CONSEQUENTIAL DAMAGES. ACCORDINGLY, SOME OF THE ABOVE LIMITATIONS MAY NOT APPLY TO YOU.</p>\n\n  <H4>8. Intellectual Property</H4>\n  <H5>8.1 Our Proprietary Rights</H5>\n  <p>All title, ownership and intellectual property rights in and to the Services are owned by Kukai Wallet or its\n    licensors. You acknowledge and agree that the Services contains proprietary and confidential information that is\n    protected by applicable intellectual property and other laws. Except as expressly authorized by Kukai Wallet, you\n    agree not to copy, modify, rent, lease, loan, sell, distribute, perform, display or create derivative works based on\n    the Site, or the Services, in whole or in part.</p>\n\n  <H5>8.2 Limited License</H5>\n  <p>We grant you limited, non-exclusive, revocable permission to make use of the Site, and the Services (collectively\n    referred to as, “Access”). This Access shall remain in effect until and unless terminated by you or us. You promise\n    and agree that you will not redistribute or transfer the Services.</p>\n\n  <p>The Kukai Wallet software application, including without limitation the Site, and the Services, are not sold or\n    transferred to you, and Kukai Wallet and its licensors retain ownership of all copies of the software applications\n    even after installation on your personal computers, mobile handsets, tablets, wearable devices, speakers and/or\n    other devices (“Devices”).</p>\n\n  <p>All Kukai Wallet trademarks, service marks, trade names, logos, domain names, and any other features of the Kukai\n    Wallet brand (“Kukai Wallet Brand Features”) are the sole property of Kukai Wallet or its licensors. The Terms do\n    not grant you any rights to use any Kukai Wallet Brand Features whether for commercial or non-commercial use.</p>\n\n  <p>You agree to abide by our user guidelines and not to use the Services or any part thereof in any manner not\n    expressly permitted by the Terms. Except for the rights expressly granted to you in the Terms, Kukai Wallet grants\n    no right, title, or interest to you in the Site or the Services.</p>\n\n  <p>Third party software (for example, open source software libraries) included in the Services are made available to\n    you under the relevant third party software library’s license terms.</p>\n\n  <p>Notwithstanding anything herein to the contrary, nothing in the Terms entitles you to copy, modify, fork, merge,\n    combine with another program or create a derivative work of the Services, including without limitation the Site.</p>\n\n  <H4>9. Links</H4>\n  <p>The Services provide, or third parties may provide, links to other World Wide Web or accessible sites, applications\n    or resources. Because Kukai Wallet has no control over such sites, applications and resources, you acknowledge and\n    agree that Kukai Wallet is not responsible for the availability of such external sites, applications or resources,\n    and does not endorse and is not responsible or liable for any content, advertising, products or other materials on\n    or available from such sites or resources. You further acknowledge and agree that Kukai Wallet shall not be\n    responsible or liable, directly or indirectly, for any damage or loss caused or alleged to be caused by or in\n    connection with use of or reliance on any such content, goods or services available on or through any such site or\n    resource.</p>\n\n  <H4>10. Termination and Suspension</H4>\n  <p>Kukai Wallet may terminate or suspend all or part of the Services and your Kukai Wallet access immediately, without\n    prior notice or liability, if you breach any of the terms or conditions of the Terms. Upon termination of your\n    access, your right to use the Services will immediately cease.</p>\n\n  <p>The following provisions of the Terms survive any termination of these Terms: INDEMNITY; WARRANTY DISCLAIMERS;\n    LIMITATION ON LIABILITY; OUR PROPRIETARY RIGHTS; LINKS; TERMINATION; NO THIRD PARTY BENEFICIARIES; BINDING\n    ARBITRATION AND CLASS ACTION WAIVER; GENERAL INFORMATION.</p>\n\n  <H4>11. No Third Party Beneficiaries</H4>\n  <p>You agree that, except as otherwise expressly provided in these Terms, there shall be no third party beneficiaries\n    to the Terms.</p>\n\n  <H4>12. Notice and Procedure For Making Claims of Copyright Infringement</H4>\n  <p>If you believe that your copyright or the copyright of a person on whose behalf you are authorized to act has been\n    infringed, please provide Kukai Wallet’s Copyright Agent a written Notice containing the following information:</p>\n\n  <p>- an electronic or physical signature of the person authorized to act on behalf of the owner of the copyright or\n    other intellectual property interest;\n    <BR>- a description of the copyrighted work or other intellectual property that you claim has been infringed;\n    <BR>- a description of where the material that you claim is infringing is located on the Services;\n    your address, telephone number, and email address;\n    <BR>- a statement by you that you have a good faith belief that the disputed use is not authorized by the copyright\n    owner, its agent, or the law;\n    <BR>- a statement by you, made under penalty of perjury, that the above information in your Notice is accurate and\n    that you are the copyright or intellectual property owner or authorized to act on the copyright or intellectual\n    property owner’s behalf.</p>\n\n  <p>Kukai Wallet’s Copyright Agent can be reached at:</p>\n\n  <p>Email: legal@kukai.app</p>\n\n  <H4>13. Binding Arbitration and Class Action Waiver</H4>\n\n  <p>PLEASE READ THIS SECTION CAREFULLY – IT MAY SIGNIFICANTLY AFFECT YOUR LEGAL RIGHTS, INCLUDING YOUR RIGHT TO FILE A\n    LAWSUIT IN COURT</p>\n\n  <H5>13.1 Initial Dispute Resolution</H5>\n\n  <p>The parties shall use their best efforts to engage directly to settle any dispute, claim, question, or disagreement\n    and engage in good faith negotiations which shall be a condition to either party initiating a lawsuit or\n    arbitration.</p>\n\n  <H5>13.2 Binding Arbitration</H5>\n\n  <p>If the parties do not reach an agreed upon solution within a period of 30 days from the time informal dispute\n    resolution under the Initial Dispute Resolution provision begins, then either party may initiate arbitration as the\n    sole means to resolve all claims, subject to the terms set forth below. Specifically, all claims arising out of or\n    relating to these Terms (including their formation, performance and breach), the parties’ relationship with each\n    other and/or your use of the Services shall be finally settled by binding arbitration administered by the American\n    Arbitration Association in accordance with the provisions of its Commercial Arbitration Rules and the supplementary\n    procedures for consumer related disputes of the American Arbitration Association (the “AAA”), excluding any rules or\n    procedures governing or permitting class actions.</p>\n\n  <p>The arbitrator, and not any federal, state or local court or agency, shall have exclusive authority to resolve all\n    disputes arising out of or relating to the interpretation, applicability, enforceability or formation of these\n    Terms, including, but not limited to any claim that all or any part of these Terms are void or voidable, or whether\n    a claim is subject to arbitration. The arbitrator shall be empowered to grant whatever relief would be available in\n    a court under law or in equity. The arbitrator’s award shall be written, and binding on the parties and may be\n    entered as a judgment in any court of competent jurisdiction.</p>\n\n  <p>The parties understand that, absent this mandatory provision, they would have the right to sue in court and have a\n    jury trial. They further understand that, in some instances, the costs of arbitration could exceed the costs of\n    litigation and the right to discovery may be more limited in arbitration than in court.</p>\n\n  <H5>13.3 Location</H5>\n\n  <p>Binding arbitration shall take place in Louisiana. You agree to submit to the personal jurisdiction of any federal\n    or state court in Orleans Parish, Louisiana, in order to compel arbitration, to stay proceedings pending\n    arbitration, or to confirm, modify, vacate or enter judgment on the award entered by the arbitrator.</p>\n\n  <H5>13.4 Class Action Waiver</H5>\n\n  <p>The parties further agree that any arbitration shall be conducted in their individual capacities only and not as a\n    class action or other representative action, and the parties expressly waive their right to file a class action or\n    seek relief on a class basis. YOU AND KUKAI WALLET AGREE THAT EACH MAY BRING CLAIMS AGAINST THE OTHER ONLY IN YOUR\n    OR ITS INDIVIDUAL CAPACITY, AND NOT AS A PLAINTIFF OR CLASS MEMBER IN ANY PURPORTED CLASS OR REPRESENTATIVE\n    PROCEEDING. If any court or arbitrator determines that the class action waiver set forth in this paragraph is void\n    or unenforceable for any reason or that an arbitration can proceed on a class basis, then the arbitration provision\n    set forth above shall be deemed null and void in its entirety and the parties shall be deemed to have not agreed to\n    arbitrate disputes.</p>\n\n  <H5>13.5 Exception - Litigation of Intellectual Property and Small Claims Court Claims</H5>\n\n  <p>Notwithstanding the parties’ decision to resolve all disputes through arbitration, either party may bring an action\n    in state or federal court to protect its intellectual property rights (“intellectual property rights” means patents,\n    copyrights, moral rights, trademarks, and trade secrets, but not privacy or publicity rights). Either party may also\n    seek relief in a small claims court for disputes or claims within the scope of that court’s jurisdiction.</p>\n\n  <H5>13.6 Choice of Law</H5>\n\n  <p>The Terms and the relationship between you and Kukai Wallet shall be governed by the laws of the State of Louisiana\n    without regard to conflict of law provisions.</p>\n\n  <H4>14. GENERAL INFORMATION</H4>\n\n  <H5>14.1 Entire Agreement</H5>\n\n  <p>These Terms (and any additional terms, rules and conditions of participation that Kukai Wallet may post on the\n    Services) constitute the entire agreement between you and Kukai Wallet with respect to the Services and supersedes\n    any prior agreements, oral or written, between you and Kukai Wallet. In the event of a conflict between these Terms\n    and the additional terms, rules and conditions of participation, the latter will prevail over the Terms to the\n    extent of the conflict.</p>\n\n  <H5>14.2 Waiver and Severability of Terms</H5>\n\n  <p>The failure of Kukai Wallet to exercise or enforce any right or provision of the Terms shall not constitute a\n    waiver of such right or provision. If any provision of the Terms is found by an arbitrator or court of competent\n    jurisdiction to be invalid, the parties nevertheless agree that the arbitrator or court should endeavor to give\n    effect to the parties’ intentions as reflected in the provision, and the other provisions of the Terms remain in\n    full force and effect.</p>\n\n  <H5>14.3 Statute of Limitations</H5>\n\n  <p>You agree that regardless of any statute or law to the contrary, any claim or cause of action arising out of or\n    related to the use of the Services or the Terms must be filed within one (1) year after such claim or cause of\n    action arose or be forever barred.</p>\n\n  <H5>14.4 Section Titles</H5>\n\n  <p>The section titles in the Terms are for convenience only and have no legal or contractual effect.</p>\n\n  <H5>14.5 Communications</H5>\n\n  <p>Users with questions, complaints or claims with respect to the Services may contact us using the relevant contact\n    information set forth above or email us at: contact@kukai.app</p>\n</div>","import { Injectable } from '@angular/core';\nimport { KeyPair } from '../../interfaces';\nimport { WalletService } from '../wallet/wallet.service';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { Parser } from '@taquito/michel-codec';\nimport { valueEncoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { OperationService } from '../operation/operation.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmbeddedAuthService {\n  constructor(private walletService: WalletService, private operationService: OperationService) {}\n  async authenticate(authReq: any, origin: string, keyPair: KeyPair = null): Promise<{ message: string; signature: string }> {\n    if (!origin) {\n      throw new Error('NO_DOMAIN_FOUND');\n    } else if ((!this.walletService?.wallet || !this.walletService.isEmbeddedTorusWallet()) && !keyPair) {\n      throw new Error('NO_WALLET_FOUND');\n    }\n    if (!keyPair) {\n      keyPair = await this.walletService.getKeys('', this.walletService.wallet.implicitAccounts[0].pkh).catch((e) => {\n        throw new Error('NO_KEYS_FOUND');\n      });\n    }\n    const authMessage: string = this.createAuthMessage(authReq?.id, authReq?.nonce, origin, keyPair.pk, keyPair.pkh);\n    const signature = this.signMessage(authMessage, keyPair.sk);\n    return { message: authMessage, signature };\n  }\n  async signExprSilent(hexExpr: string): Promise<string> {\n    const keyPair = await this.walletService.getKeys('', this.walletService.wallet.implicitAccounts[0].pkh).catch((e) => {\n      throw new Error('NO_KEYS_FOUND');\n    });\n    const signature: string = this.operationService.sign(hexExpr, keyPair.sk).edsig;\n    return signature;\n  }\n  private createAuthMessage(requestId: string = '', nonce: string = '', domain: string, publicKey: string, address: string): string {\n    if (typeof requestId !== 'string') {\n      throw new Error('INVALID_REQUEST_ID');\n    } else if (typeof nonce !== 'string') {\n      throw new Error('INVALID_NONCE');\n    }\n    const authPayload: any = {\n      requestId,\n      purpose: 'authentication',\n      currentTime: Math.floor(Date.now() / 1000).toString(), // UNIX timestamp\n      nonce,\n      network: this._network(),\n      publicKey,\n      address,\n      domain\n    };\n    if (!requestId) {\n      delete authPayload.requestId;\n    }\n    if (!nonce) {\n      delete authPayload.nonce;\n    }\n    return `Tezos Signed Message: ${JSON.stringify(authPayload)}`;\n  }\n  _network(): string {\n    return CONSTANTS.NETWORK;\n  }\n  private signMessage(message: string, sk: string): string {\n    const parser = new Parser();\n    const expr = parser.parseMichelineExpression(`\"${message.replace(/\"/g, '\\\\\"')}\"`);\n    const hexMessage = `05${valueEncoder(expr)}`;\n    const signature: string = this.operationService.sign(hexMessage, sk).edsig;\n    return signature;\n  }\n}\n","import { Account } from '../../../services/wallet/wallet';\nimport { Template } from 'kukai-embed';\nexport interface PrepareRequest {\n  account: Account;\n  tokenTransfer: string;\n  symbol: string;\n}\nexport interface TemplateRequest {\n  template: Template;\n  ops?: FullyPreparedTransaction[];\n  partialOps?: PartiallyPreparedTransaction[];\n  fee?: TemplateFee;\n}\nexport interface TemplateFee {\n  network: string;\n  storage: string;\n  total: string;\n}\n\nexport interface ConfirmSwapRequest {\n  account: Account;\n  transactions: FullyPreparedTransaction[];\n  externalReq: boolean;\n}\n\nexport enum LqdEntrypoints {\n  addLiquidity = 'addLiquidity',\n  removeLiquidity = 'removeLiquidity',\n  xtzToToken = 'xtzToToken',\n  tokenToXtz = 'tokenToXtz'\n}\n\nexport interface ConfirmRequest {\n  account: Account;\n  tokenTransfer: string;\n  transactions: FullyPreparedTransaction[];\n  externalReq: boolean;\n}\nexport interface PartiallyPreparedTransaction {\n  kind: 'transaction';\n  amount: string;\n  destination: string;\n  parameters?: any;\n  meta?: {\n    alias: string;\n    verifier: string;\n    twitterId?: string;\n  };\n  gasRecommendation?: string;\n  storageRecommendation?: string;\n}\nexport interface FullyPreparedTransaction extends PartiallyPreparedTransaction {\n  fee: string;\n  gasLimit: string;\n  storageLimit: string;\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"flex-row content\">\n    <div class=\"flex-column liquidity-baking\">\n      <div class=\"flex-row main-container\">\n        <div class=\"flex-column right\" [class.expanded]=\"advancedForm\" [class.loaded]=\"chartInit\" [class.expanded-00]=\"moreInfo && mode === Mode.swap\" [class.expanded-01]=\"advancedForm && mode === Mode.swap\" [class.expanded-10]=\"moreInfo && advancedForm && mode === Mode.swap\" [class.expanded-11]=\"mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-100]=\"moreInfo && mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-101]=\"advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-110]=\"moreInfo && advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-111]=\"mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\" [class.expanded-1000]=\"moreInfo && mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\" [class.expanded-1001]=\"advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\" [class.expanded-1010]=\"moreInfo && advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\">\n          <app-ui-chart #leftChart class=\"popout\" [design]=\"'default'\" [type]=\"'line'\" [units]=\"units\" [datas]=\"chartDatas\"\n            [attributes]=\"attributes\" (drawn)=\"chartInit = true;\"></app-ui-chart>\n            <div class=\"filler\" [style.display]=\"chartInit ? '' : 'none'\"></div>\n        </div>\n        <div class=\"flex-column left\" [class.expanded]=\"advancedForm\">\n          <div class=\"flex-column top\">\n            <div class=\"flex-row container-toggle\">\n              <button [class.active]=\"mode === Mode.swap\" (click)=\"toggleMode(Mode.swap)\">SWAP</button>\n              <button [class.active]=\"mode === Mode.liquidity\" (click)=\"toggleMode(Mode.liquidity)\">LIQUIDITY</button>\n            </div>\n            <div class=\"flex-row button close\" (click)=\"close()\"><img class=\"x\"\n                src=\"../../../../../assets/img/close-btn-x.png\" />\n            </div>\n          </div>\n          <app-ui-chart #miniChart class=\"popout-mini\" [design]=\"'mini'\" [type]=\"'line'\" [units]=\"units\"\n            [data]=\"chartData\" [datas]=\"chartDatas\" [attributes]=\"attributes\">\n          </app-ui-chart>\n          <ng-container *ngIf=\"mode === Mode.liquidity\">\n            <form autocomplete=\"off\">\n              <div class=\"flex-column container-toggle-secondary\">\n                <div class=\"flex-row buttons\">\n                  <button [class.active]=\"entrypoint === LqdEntrypoints.addLiquidity\" (click)=\"toggleDirection(0)\">\n                    ADD\n                  </button>\n                  <button [class.active]=\"entrypoint === LqdEntrypoints.removeLiquidity\" (click)=\"toggleDirection(1)\">\n                    REMOVE\n                  </button>\n                </div>\n              </div>\n              <div class=\"flex-column container-inputs\" [class.liquidity]=\"entrypoint === LqdEntrypoints.addLiquidity\">\n                <div class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRaw\" [placeholder]=\"'0'\" value=\"\"\n                        (paste)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\"\n                        (input)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ entrypoint === LqdEntrypoints.addLiquidity ? 'XTZ' : 'SIRS' }}</span>\n                      <img\n                        [src]=\"entrypoint === LqdEntrypoints.addLiquidity ? 'assets/img/tezos-xtz-logo.svg' : 'assets/img/tokens/sirius.png'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">{{ entrypoint === LqdEntrypoints.addLiquidity ? 'Add' : 'Remove' }}</div>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.removeLiquidity\" class=\"hint\" (click)=\"updateMaxAmount('qtyRaw')\">Balance: <span class=\"max\">{{lqdBalance}}</span></span>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.addLiquidity\" class=\"hint\">Balance: {{xtzBalance}}</span>\n                </div>\n                <div *ngIf=\"entrypoint === LqdEntrypoints.addLiquidity\" class=\"seperator files add\">\n                  <span class=\"img-wrap\"><img\n                      [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-plus.svg'\" /></span>\n                </div>\n                <div *ngIf=\"entrypoint === LqdEntrypoints.addLiquidity\" class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRawOut\" placeholder=\"0\" [value]=\"qtyRawOut\"\n                        (input)=\"sanitizeNumberInput($event, 8, 'qtyRawOut')\"\n                        (paste)=\"sanitizeNumberInput($event, 8, 'qtyRawOut')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ 'tzBTC' }}</span>\n                      <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">Add</div>\n                  <span class=\"hint\" (click)=\"updateMaxAmount('qtyRawOut')\">Balance: <span class=\"max\">{{ tzBTCBalance\n                      }}</span></span>\n                </div>\n              </div>\n            </form>\n          </ng-container>\n          <ng-container *ngIf=\"mode === Mode.swap\">\n            <form autocomplete=\"off\">\n              <div class=\"flex-column container-inputs\">\n                <div class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRaw\" [placeholder]=\"'0'\" value=\"\"\n                        (paste)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\"\n                        (input)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ entrypoint === LqdEntrypoints.xtzToToken ? 'XTZ' : 'tzBTC' }}</span>\n                      <img\n                        [src]=\"entrypoint === LqdEntrypoints.xtzToToken ? 'assets/img/tezos-xtz-logo.svg' : 'assets/img/tokens/tzbtc.png'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">From</div>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.xtzToToken\" class=\"hint\">Balance: {{ xtzBalance}}</span>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.tokenToXtz\" class=\"hint\" (click)=\"updateMaxAmount('qtyRaw')\">Balance: <span class=\"max\">{{tzBTCBalance}}</span></span>\n                </div>\n                <div class=\"seperator files add\" (click)=\"toggleDirection()\">\n                  <span class=\"img-wrap\"><img\n                      [src]=\"simSemaphore ? 'assets/img/feeLoader.gif' : 'assets/img/swap.svg'\" /></span>\n                </div>\n                <div class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRawOut\" [placeholder]=\"'0'\"\n                        (paste)=\"sanitizeNumberInput($event, qtyOut.decimalPlaces, 'qtyRawOut')\"\n                        (input)=\"sanitizeNumberInput($event, qtyOut.decimalPlaces, 'qtyRawOut')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ entrypoint === LqdEntrypoints.xtzToToken ? 'tzBTC' : 'XTZ' }}</span>\n                      <img\n                        [src]=\"entrypoint === LqdEntrypoints.xtzToToken ? 'assets/img/tokens/tzbtc.png' : 'assets/img/tezos-xtz-logo.svg'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">Expected</div>\n                      <span *ngIf=\"entrypoint === LqdEntrypoints.tokenToXtz\" class=\"hint\">Balance: {{ xtzBalance }}</span>\n                      <span *ngIf=\"entrypoint === LqdEntrypoints.xtzToToken\" class=\"hint\">Balance: {{ tzBTCBalance }}</span>\n                </div>\n              </div>\n            </form>\n          </ng-container>\n          <div *ngIf=\"expectedRate\" class=\"flex-row item expected-rate\">\n            <span class=\"flex-row key\">Exchange Rate:</span>\n            <span class=\"value\">{{ expectedRate }}</span>\n          </div>\n          <div class=\"flex-column more-info-toggle\" [class.expanded]=\"moreInfo\">\n            <div class=\"flex-row item\" (click)=\"moreInfo = !moreInfo\">\n              <span class=\"value\">{{ 'View Details' }} <span *ngIf=\"impactDouble >= 0.04\" class=\"price-impact\">Price\n                  Impact {{ impactDouble | percent:'1.2-2' }}</span></span>\n              <div class=\"flex-row\"><img src=\"assets/img/chevron-down.svg\"></div>\n            </div>\n          </div>\n          <div *ngIf=\"moreInfo\" class=\"more-info-body\"\n            [class.expanded]=\"moreInfo\">\n            <div class=\"flex-row item\">\n              <span class=\"flex-row key\">Price Impact:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The impact your transaction is expected to make on the exchange rate. The size of your swap relative to the size of the pool determines the impact. Note: This impact is what you are accepting in addition to the slippage.\n                </div>\n              </span>\n              <span class=\"value\" [class.warning]=\"impactDouble > 0.04\">{{impactDouble > 0.005 ? (impactDouble | percent:'1.2-2') : \"<0.5%\"}}</span>\n            </div>\n            <div *ngIf=\"(LqdEntrypoints.xtzToToken === entrypoint)\" class=\"flex-row item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span>\n              <span class=\"value\">{{(minimumToken?.internalNormalised | number:'1.2-8') || 0}} tzBTC</span>\n            </div>\n            <div *ngIf=\"(LqdEntrypoints.tokenToXtz === entrypoint)\" class=\"flex-row item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span>\n              <span class=\"value\">{{(minimumXtz?.internalNormalised | number:'1.6-6') || 0}} XTZ</span>\n            </div>\n            <div\n              *ngIf=\"(LqdEntrypoints.removeLiquidity === entrypoint)\"\n              class=\"item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span><br />\n              <span class=\"value\">{{(minimumXtz?.internalNormalised | number:'1.6-6') || 0}} XTZ + {{\n                (minimumToken?.internalNormalised | number:'1.2-8') || 0}} tzBTC</span>\n            </div>\n            <div *ngIf=\"(LqdEntrypoints.addLiquidity === entrypoint)\" class=\"flex-row item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span>\n              <span class=\"value\">{{(minimumLqd?.internalNormalised | number:'1.0-0') || 0}} SIRS</span>\n            </div>\n            <div class=\"flex-column slippage\">\n              <span class=\"flex-row label\">Slippage&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  Your transaction will not complete if the exchange rate changes unfavorably by more than this slippage percentage. The slippage does not include the Price Impact, when swapping you are accepting both the Price Impact % and the Slippage %.\n                </div>\n              </span>\n              <div class=\"flex-row inputs\">\n                <button [class.active]=\"slippage === 0.005\" (click)=\"slippage = 0.005; update()\">\n                  0.5%\n                </button>\n                <button [class.active]=\"slippage === 0.01\" (click)=\"slippage = 0.01; update()\">\n                  1%\n                </button>\n                <button [class.active]=\"slippage === 0.03\" (click)=\"slippage = 0.03; update()\">\n                  3%\n                </button>\n                <form autocomplete=\"off\">\n                  <input inputmode=\"decimal\" [class.active]=\"slippage !== 0.03 && slippage !== 0.01 && slippage !== 0.005\"\n                    (input)=\"customSlippage($event)\" (focus)=\"customSlippageFocus($event)\" (blur)=\"customSlippageBlur($event)\"\n                    [placeholder]=\"slippage * 100\" value=\"\" />\n                  <span class=\"placeholder-secondary\">%</span>\n                </form>\n              </div>\n            </div>\n          </div>\n          <div class=\"flex-column more-info-toggle\" [class.expanded]=\"advancedForm\">\n            <div class=\"flex-row item\" (click)=\"advancedForm = !advancedForm\">\n              <span class=\"value\">{{ 'Advanced' }}</span>\n              <div class=\"flex-row\"><img src=\"assets/img/chevron-down.svg\"></div>\n            </div>\n          </div>\n          <form *ngIf=\"advancedForm\" autocomplete=\"off\" class=\"more-info-body\" [class.expanded]=\"advancedForm\">\n            <div class=\"flex-row\">\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Gas limit</label>\n                <input inputmode=\"decimal\" type=\"text\" class=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\"\n                  (paste)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\"\n                  placeholder={{this.defaultTransactionParams.gas.toString()}} [value]=\"customGasLimit\">\n              </div>\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Fee</label>\n                <input inputmode=\"decimal\" type=\"text\" (input)=\"sanitizeNumberInput($event, 6, 'customFee')\"\n                  (paste)=\"sanitizeNumberInput($event, 6, 'customFee')\" class=\"text\"\n                  placeholder={{this.defaultTransactionParams.fee.toString()}} [value]=\"customFee\">\n              </div>\n            </div>\n            <div class=\"flex-row\">\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Storage limit</label>\n                <input inputmode=\"decimal\" type=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\"\n                  (paste)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\" class=\"text\"\n                  placeholder={{this.defaultTransactionParams.storage.toString()}} [value]=\"customStorageLimit\">\n              </div>\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Max Storage cost</label>\n                <input inputmode=\"decimal\" type=\"text\" class=\"text read-only\" [value]=\"burnAmount() ? burnAmount() : '0 tez'\" tabindex=-1\n                  readonly>\n              </div>\n            </div>\n          </form>\n          <div class=\"flex-column bottom\">\n            <div class=\"seperator\"></div>\n            <span class=\"form-validity error\">{{ formInvalid || latestSimError }}</span>\n            <button class=\"confirm\" [disabled]=\"formInvalid || latestSimError\" (click)=\"preview()\">Preview</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FullyPreparedTransaction, PartiallyPreparedTransaction, LqdEntrypoints } from '../../misc/send/interfaces';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { TezosDomainsService } from '../../../services/tezos-domains/tezos-domains.service';\nimport { TokenBalancesService } from '../../../services/token-balances/token-balances.service';\nimport { TokenService } from '../../../services/token/token.service';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { SwapLiquidityService } from '../../../services/swap-liquidity/swap-liquidity.service';\nimport { Amount } from '../../../services/swap-liquidity/classes/Amount';\nimport { ModalComponent } from '../modal.component';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { DefaultTransactionParams } from '../../../interfaces';\nimport Big from 'big.js';\nimport { Account } from '../../../services/wallet/wallet';\nimport assert from 'assert';\nimport { TranslateService } from '@ngx-translate/core';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { TorusService } from '../../../services/torus/torus.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { take } from 'rxjs/operators';\nimport { ChartComponent, ChartSeries } from '../../ui/chart/chart.component';\nimport { ChartData } from 'chart.js';\nimport { ChartService, ChartTitle } from '../../../services/chart/chart.service';\n\nenum Mode {\n  swap = 'swap',\n  liquidity = 'liquidity'\n}\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n\n@Component({\n  selector: 'app-swap-liquidity',\n  templateUrl: './swap-liquidity.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class SwapLiquidityComponent extends ModalComponent {\n  @ViewChild('leftChart') leftChart: ChartComponent;\n  @ViewChild('miniChart') miniChart: ChartComponent;\n  @Output() prepareResponse = new EventEmitter();\n  LqdEntrypoints = LqdEntrypoints;\n  Mode = Mode;\n  Object = Object;\n  mode = Mode.swap;\n  entrypoint: string = LqdEntrypoints.xtzToToken;\n  advancedForm = false;\n\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n\n  readonly lqdTokenContract = 'KT1AafHA1C1vk959wvHWBispY9Y2f3fxBUUo';\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  readonly costPerByte: string = this.estimateService.costPerByte;\n\n  moreInfo = false;\n\n  formInvalid = '';\n  latestSimError = '';\n\n  customFee = '';\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  minimumLqd: Amount = null;\n  minimumXtz: Amount = null;\n  minimumToken: Amount = null;\n  xtzRequired: Amount = null;\n  expectedRate: string;\n  impactDouble: number;\n  qty: Amount = new Amount({\n    normalisedAmount: '',\n    decimalPlaces: 6\n  });\n  qtyRaw = '';\n  qtyOut: Amount = new Amount({\n    normalisedAmount: '',\n    decimalPlaces: 8\n  });\n  qtyRawOut = '';\n  slippage = 0.005;\n\n  xtzBalance = '0';\n  lqdBalance = '0';\n  tzBTCBalance = '0';\n\n  activeAccount = null;\n  transactions: PartiallyPreparedTransaction[] = [];\n\n  balances: any[];\n  name = 'swap-liquidity';\n\n  private subscriptions: Subscription = new Subscription();\n  simSemaphore = 0;\n\n  tooltipValue: string = '--';\n  titleColor = '#333';\n  series = 'day';\n  units = 'tzBTC';\n  attributes: any = {};\n  chartData: ChartData;\n  chartDatas: Array<ChartData> = [];\n  chartOptions = null;\n  popoutOptions: any;\n  chartInit = false;\n\n  constructor(\n    public tokenService: TokenService,\n    public walletService: WalletService,\n    private estimateService: EstimateService,\n    public tezosDomainService: TezosDomainsService,\n    public tokenBalancesService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private swapLiquidityService: SwapLiquidityService,\n    private operationService: OperationService,\n    public torusService: TorusService,\n    private translate: TranslateService,\n    public tezosDomains: TezosDomainsService,\n    private inputValidationService: InputValidationService,\n    private messageService: MessageService,\n    private chartService: ChartService\n  ) {\n    super();\n    const setTokenBalances = () => {\n      this.xtzBalance = Big(this.activeAccount?.balanceXTZ ?? 0)\n        .div(10 ** 6)\n        .toString();\n      this.lqdBalance = this.balances.find((b) => b.contractAddress === this.lqdTokenContract && b.id == 0)?.balance ?? '0';\n      this.tzBTCBalance = this.balances.find((b) => b.contractAddress === this.tzBTCContract && b.id == 0)?.balance ?? '0';\n    };\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        if (!!activeAccount) {\n          this.activeAccount = activeAccount;\n          this.balances = this.tokenBalancesService?.balances;\n          setTokenBalances();\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        this.balances = p?.balances ?? this.tokenBalancesService?.balances;\n        setTokenBalances();\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(() => {\n        this.balances = this.tokenBalancesService?.balances;\n        setTokenBalances();\n      })\n    );\n  }\n\n  async initChartsMobile(): Promise<void> {\n    Promise.all([\n      this.chartService.fetchLBGraphData(ChartSeries.day),\n      this.chartService.fetchLBGraphData(ChartSeries.week),\n      this.chartService.fetchLBGraphData(ChartSeries.month),\n      this.chartService.fetchLBGraphData(ChartSeries.year)\n    ]).then((arr) => {\n      this.chartDatas[ChartSeries.day] = arr[0];\n      this.chartDatas[ChartSeries.week] = arr[1];\n      this.chartDatas[ChartSeries.month] = arr[2];\n      this.chartDatas[ChartSeries.year] = arr[3];\n      //prevents race cond\n      if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n        this.leftChart?.toggleSet(ChartTitle.XTZtzBTC);\n        this.miniChart?.toggleSet(ChartTitle.XTZtzBTC);\n      } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n        this.leftChart?.toggleSet(ChartTitle.tzBTCXTZ);\n        this.miniChart?.toggleSet(ChartTitle.tzBTCXTZ);\n      } else if (this.entrypoint === LqdEntrypoints.addLiquidity || this.entrypoint === LqdEntrypoints.removeLiquidity) {\n        this.leftChart?.toggleSet(ChartTitle.totalValueLocked);\n        this.miniChart?.toggleSet(ChartTitle.totalValueLocked);\n      }\n      this.leftChart?.toggleSeries(ChartSeries.day);\n      this.miniChart?.toggleSeries(ChartSeries.week);\n    });\n  }\n\n  async initChartsDesktop(): Promise<void> {\n    Promise.all([\n      this.chartService.fetchLBGraphData(ChartSeries.day),\n      this.chartService.fetchLBGraphData(ChartSeries.week),\n      this.chartService.fetchLBGraphData(ChartSeries.month),\n      this.chartService.fetchLBGraphData(ChartSeries.year)\n    ]).then((arr) => {\n      this.chartDatas[ChartSeries.day] = arr[0];\n      this.chartDatas[ChartSeries.week] = arr[1];\n      this.chartDatas[ChartSeries.month] = arr[2];\n      this.chartDatas[ChartSeries.year] = arr[3];\n      //prevents race cond\n      if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n        this.leftChart?.toggleSet(ChartTitle.XTZtzBTC);\n        this.leftChart?.toggleSeries(ChartSeries.day);\n      } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n        this.leftChart?.toggleSet(ChartTitle.tzBTCXTZ);\n        this.leftChart?.toggleSeries(ChartSeries.day);\n      } else if (this.entrypoint === LqdEntrypoints.addLiquidity || this.entrypoint === LqdEntrypoints.removeLiquidity) {\n        this.leftChart?.toggleSet(ChartTitle.totalValueLocked);\n        this.leftChart?.toggleSeries(ChartSeries.month);\n      }\n    });\n  }\n\n  async initCharts(): Promise<void> {\n    const isMobile = document.documentElement.style.getPropertyValue('--is-mobile');\n    const style = getComputedStyle(document.body);\n    this.titleColor = style.getPropertyValue('--base-font-color');\n    if (isMobile === '1') {\n      await this.initChartsMobile();\n    } else {\n      await this.initChartsDesktop();\n    }\n  }\n\n  birthExchangeRate(): void {\n    let qty = new Amount({\n      normalisedAmount: 1,\n      decimalPlaces: 6\n    });\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const rate = this.swapLiquidityService.xtzToTokenExchangeRateDisplay(qty, xtzPool, tokenPool, this.swapLiquidityService.settings('liquidityBaking'));\n    this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(rate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n  }\n\n  async init(): Promise<boolean> {\n    this.qtyRaw = '';\n    this.qty = new Amount({\n      normalisedAmount: 0,\n      decimalPlaces: 6\n    });\n    this.balances = this.tokenBalancesService?.balances;\n    const r = await this.hydratePools();\n    this.attributes = { APY: this.swapLiquidityService.estimateLiquidityBakingAPY() };\n    this.initCharts();\n    this.birthExchangeRate();\n    return r;\n  }\n\n  async open(): Promise<void> {\n    this.subjectService.activeAccount.pipe(take(1)).subscribe(async (activeAccount) => {\n      this.activeAccount = activeAccount;\n      await this.estimateService.preLoadData(this.activeAccount.pkh, this.activeAccount.pk);\n      if (await this.init()) {\n        super.open();\n      }\n      this.messageService.stopSpinner();\n    });\n  }\n\n  close(): void {\n    this.reset();\n    this.mode = Mode.swap;\n    this.entrypoint = LqdEntrypoints.xtzToToken;\n    this.chartInit = false;\n    super.close();\n  }\n\n  calculateXtzToToken(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 6\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 8\n    });\n    const xtzToSell = this.qty;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateXtzToToken(\n      xtzToSell,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumToken = result.minimum;\n    this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.rate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    this.impactDouble = result.impactDouble;\n    this.qtyOut = result.expected;\n    this.qtyRawOut = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n  }\n\n  calculateTokenToXTZFromXTZ(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 8\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 6\n    });\n    const xtzToBuy = this.qtyOut;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateTokenToXTZFromXTZ(\n      xtzToBuy,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumXtz = result.xtz.minimum;\n    this.expectedRate = `1 tzBTC ($${Big(result.xtz.rate).times(this.walletService?.wallet?.XTZrate).toFixed(2)}) = ${Big(result.xtz.rate).toFixed(\n      xtzPool.decimalPlaces\n    )} XTZ`;\n    this.impactDouble = result.xtz.impactDouble;\n    this.qty = result.token.expected;\n    this.qtyRaw = result.token.expected?.internalNormalised.toFixed(result.token.expected?.decimalPlaces).toString();\n  }\n\n  calculateTokenToXTZ(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 8\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 6\n    });\n    const tokenToSell = this.qty;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateTokenToXTZ(\n      tokenToSell,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumXtz = result.minimum;\n    this.expectedRate = `1 tzBTC ($${Big(result.rate).times(this.walletService?.wallet?.XTZrate).toFixed(2)}) = ${Big(result.rate).toFixed(\n      xtzPool.decimalPlaces\n    )} XTZ`;\n    this.impactDouble = result.impactDouble;\n    this.qtyOut = result.expected;\n    this.qtyRawOut = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n  }\n\n  calculateXtzToTokenFromToken(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 6\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 8\n    });\n    const tokenToBuy = this.qtyOut;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateXtzToTokenFromToken(\n      tokenToBuy,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumToken = result.token.minimum;\n    this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.token.rate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    this.impactDouble = result.token.impactDouble;\n    this.qty = result.xtz.expected;\n    this.qtyRaw = result.xtz.expected?.internalNormalised.toFixed(result.xtz.expected?.decimalPlaces).toString();\n  }\n\n  calcSwap(type: string = 'qtyRaw'): void {\n    if (type === 'qtyRaw' && this.entrypoint === LqdEntrypoints.xtzToToken) {\n      this.calculateXtzToToken();\n    } else if (type === 'qtyRawOut' && this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      this.calculateTokenToXTZFromXTZ();\n    } else if (type === 'qtyRaw' && this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      this.calculateTokenToXTZ();\n    } else if (type === 'qtyRawOut' && this.entrypoint === LqdEntrypoints.xtzToToken) {\n      this.calculateXtzToTokenFromToken();\n    }\n  }\n\n  calcAddLiquidity(type: string): void {\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    if (type === 'qtyRaw') {\n      const toSell = this.qty;\n      const result = this.swapLiquidityService.calculateAddLiquidityXTZ(\n        toSell,\n        xtzPool,\n        tokenPool,\n        parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n        this.slippage,\n        this.swapLiquidityService.settings('liquidityBaking')\n      );\n      this.minimumLqd = result.liquidityMinimum;\n      this.qtyOut = result.tokenRequired;\n      this.qtyRawOut = result.tokenRequired?.internalNormalised.toFixed(result.tokenRequired?.decimalPlaces).toString();\n      this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.exchangeRate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    } else {\n      const toSell = this.qtyOut;\n      const result = this.swapLiquidityService.calculateAddLiquidityToken(\n        toSell,\n        xtzPool,\n        tokenPool,\n        parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n        this.slippage,\n        this.swapLiquidityService.settings('liquidityBaking')\n      );\n      this.minimumLqd = result.liquidityMinimum;\n      this.qty = this.xtzRequired = result.xtzRequired;\n      this.qtyRaw = result.xtzRequired?.internalNormalised.toFixed(result.xtzRequired?.decimalPlaces).toString();\n      this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.exchangeRate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    }\n  }\n\n  calcRemoveLiquidity(): void {\n    const lqtToBurn = this.qty;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateRemoveLiquidity(\n      lqtToBurn,\n      xtzPool,\n      tokenPool,\n      parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumXtz = result.xtzMinimum;\n    this.minimumToken = result.tokenMinimum;\n  }\n\n  reset(): void {\n    this.minimumLqd = null;\n    this.minimumXtz = null;\n    this.minimumToken = null;\n    this.expectedRate = '';\n    this.impactDouble = undefined;\n    this.xtzRequired = null;\n\n    this.qty = new Amount({\n      normalisedAmount: '',\n      decimalPlaces: 6\n    });\n    this.qtyRaw = '';\n    this.qtyOut = new Amount({\n      normalisedAmount: '',\n      decimalPlaces: 8\n    });\n    this.qtyRawOut = '';\n\n    this.advancedForm = false;\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n    this.defaultTransactionParams = zeroTxParams;\n    this.formInvalid = '';\n    this.latestSimError = '';\n\n    this.slippage = 0.005;\n    this.transactions = [];\n\n    this.moreInfo = false;\n  }\n  async hydratePools(): Promise<boolean> {\n    try {\n      await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    } catch (e) {\n      this.messageService.addError(this.translate.instant('SWAPCOMPONENT.CONTRACTSTORAGEFAILED'));\n      return false;\n    }\n    return true;\n  }\n\n  async update(type: string = 'qtyRaw'): Promise<void> {\n    this.xtzBalance = Big(this.activeAccount?.balanceXTZ ?? 0)\n      .div(10 ** 6)\n      .toString();\n    this.lqdBalance = this.balances.find((b) => b.contractAddress === this.lqdTokenContract && b.id == 0)?.balance ?? '0';\n    this.tzBTCBalance = this.balances.find((b) => b.contractAddress === this.tzBTCContract && b.id == 0)?.balance ?? '0';\n    if (this.entrypoint === LqdEntrypoints.xtzToToken || this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      this.calcSwap(type);\n    } else if (this.entrypoint === LqdEntrypoints.addLiquidity) {\n      this.qty = new Amount({\n        normalisedAmount: parseFloat(this.qtyRaw),\n        decimalPlaces: 6\n      });\n      this.qtyOut = new Amount({\n        normalisedAmount: parseFloat(this.qtyRawOut),\n        decimalPlaces: 8\n      });\n      this.calcAddLiquidity(type);\n    } else if (this.entrypoint === LqdEntrypoints.removeLiquidity) {\n      this.qty = new Amount({\n        normalisedAmount: parseFloat(this.qtyRaw),\n        decimalPlaces: 0\n      });\n      this.qtyOut = new Amount({\n        normalisedAmount: parseFloat(this.qtyRawOut),\n        decimalPlaces: 0\n      });\n      this.calcRemoveLiquidity();\n    }\n    if (this.qty && this.qty.internalNormalised) {\n      this.estimateFees();\n    }\n  }\n\n  preview(): void {\n    if (!this.qtyRaw) {\n      return;\n    }\n    try {\n      this.prepareResponse.emit(this.getFullyPreparedTxs());\n      ModalComponent.currentModel.next({ name: '', data: {} });\n      this.reset();\n    } catch (e) {\n      this.formInvalid = e.message;\n    }\n  }\n  toggleMode(mode): void {\n    if (mode === this.mode) {\n      return;\n    }\n    this.reset();\n    const chartToggle = (label) => {\n      const style = getComputedStyle(document.body);\n      this.titleColor = style.getPropertyValue('--base-font-color');\n      this.miniChart.toggleSet(label);\n      this.leftChart.toggleSet(label);\n      if (label === ChartTitle.totalValueLocked) {\n        this.miniChart.toggleSeries(ChartSeries.month);\n        this.leftChart.toggleSeries(ChartSeries.month);\n      } else {\n        this.miniChart.toggleSeries(ChartSeries.week);\n        this.leftChart.toggleSeries(ChartSeries.day);\n      }\n    };\n    if (mode === Mode.swap) {\n      this.mode = Mode.swap;\n      this.entrypoint = LqdEntrypoints.xtzToToken;\n      chartToggle(ChartTitle.XTZtzBTC);\n    } else if (mode === Mode.liquidity) {\n      this.mode = Mode.liquidity;\n      this.entrypoint = LqdEntrypoints.addLiquidity;\n      chartToggle(ChartTitle.totalValueLocked);\n    }\n    this.qty = new Amount({\n      normalisedAmount: 0,\n      decimalPlaces: 6\n    });\n    this.birthExchangeRate();\n  }\n  toggleDirection(dir): void {\n    if (this.mode === 'swap') {\n      const chartToggle = (label) => {\n        const style = getComputedStyle(document.body);\n        this.titleColor = style.getPropertyValue('--base-font-color');\n        this.leftChart.toggleSet(label);\n        this.miniChart.toggleSet(label);\n        this.miniChart.toggleSeries(ChartSeries.week);\n      };\n      this.qtyRaw = this.qtyRawOut;\n      if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n        this.entrypoint = LqdEntrypoints.xtzToToken;\n        chartToggle(ChartTitle.XTZtzBTC);\n      } else if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n        this.entrypoint = LqdEntrypoints.tokenToXtz;\n        chartToggle(ChartTitle.tzBTCXTZ);\n      }\n      this.evalAmount();\n    } else {\n      if (dir === 0 && this.entrypoint !== LqdEntrypoints.addLiquidity) {\n        this.reset();\n        this.entrypoint = LqdEntrypoints.addLiquidity;\n        this.qty = new Amount({\n          normalisedAmount: parseFloat(this.qtyRaw),\n          decimalPlaces: 6\n        });\n      } else if (dir === 1 && this.entrypoint !== LqdEntrypoints.removeLiquidity) {\n        this.reset();\n        this.entrypoint = LqdEntrypoints.removeLiquidity;\n        this.qty = new Amount({\n          normalisedAmount: parseFloat(this.qtyRaw),\n          decimalPlaces: 0\n        });\n      }\n      this.birthExchangeRate();\n    }\n  }\n  getTotalFee(): number {\n    if (this.customFee !== '' && Number(this.customFee)) {\n      return Number(this.customFee);\n    }\n    return Number(this.defaultTransactionParams.fee);\n  }\n  getTotalBurn(): number {\n    if (this.customStorageLimit !== '' && Number(this.customStorageLimit)) {\n      return Number(Big(this.customStorageLimit).mul(this.transactions.length).times(this.costPerByte).div(1000000).toString());\n    }\n    return this.defaultTransactionParams.burn;\n  }\n  burnAmount(): string {\n    const burn = this.customStorageLimit ? Number(Big(this.customStorageLimit).times(this.costPerByte).div(1000000)) : this.defaultTransactionParams.burn;\n    if (burn) {\n      return burn + ' tez';\n    }\n    return '';\n  }\n  customSlippage(e): void {\n    e.target.value = e.target.value.replace(/[^0-9\\.]+/g, '');\n    this.slippage = Math.max(Math.min(100, parseFloat(e.target.value || 0) / 100.0), 0);\n    // this.slippageInput.nativeElement.value = this.slippage;\n    this.update();\n  }\n  customSlippageFocus(e): void {\n    if (e.target.value !== '') {\n      e.target.value = e.target.value.replace(/[^0-9\\.]+/g, '');\n      this.slippage = Math.max(Math.min(100, parseFloat(e.target.value || 0) / 100.0), 0);\n      this.update();\n    }\n  }\n  customSlippageBlur(e): void {\n    if (!Number.isNaN(Number(e.target.value)) && e.target.value !== '') {\n      e.target.value = Math.max(Math.min(100, e.target.value), 0);\n    } else {\n      e.target.value = '';\n      this.slippage = 0.005;\n      this.update();\n    }\n  }\n  getMaxAmount(account: Account): { tez; lqd; tzBTC } {\n    if (account) {\n      let accountBalance = Big(this.xtzBalance);\n      accountBalance = accountBalance.minus(this.customFee && Number(this.customFee) ? Number(this.customFee) : this.defaultTransactionParams.fee);\n      accountBalance = accountBalance.minus(\n        this.customStorageLimit && Number(this.customStorageLimit)\n          ? Number(Big(this.customStorageLimit).times(this.costPerByte).div('1000000'))\n          : this.defaultTransactionParams.burn\n      );\n      accountBalance = accountBalance.minus(0.000001); // dust\n      return {\n        tez: accountBalance.toFixed(),\n        lqd: Big(this.lqdBalance).toFixed(),\n        tzBTC: Big(this.tzBTCBalance).toFixed()\n      };\n    }\n  }\n  async estimateFees(): Promise<void> {\n    console.log('estimate..');\n    const prevSimError = this.latestSimError;\n    this.latestSimError = '';\n    let txs: PartiallyPreparedTransaction[] = [];\n    try {\n      txs = this.getMinimalPreparedTxs();\n      this.transactions = txs;\n    } catch (e) {\n      console.log(e);\n    }\n    if (txs?.length) {\n      this.simSemaphore++;\n      this.latestSimError = '';\n      const callback = (res) => {\n        if (res) {\n          this.formInvalid = this.checkBalances();\n          if (res.error) {\n            this.latestSimError = res.error;\n          } else {\n            this.defaultTransactionParams = res;\n            this.latestSimError = '';\n          }\n          console.log(res, txs);\n        } else {\n          console.log('no res');\n        }\n        this.simSemaphore--;\n      };\n      this.estimateService.estimateTransactions(JSON.parse(JSON.stringify(txs)), this.activeAccount.address, undefined, callback);\n    } else {\n      this.latestSimError = prevSimError;\n    }\n  }\n  updateMaxAmount(input: string = 'qtyRaw'): void {\n    if (this.activeAccount) {\n      const balances = this.getMaxAmount(this.activeAccount);\n      if (!balances) {\n        return;\n      }\n      let balance: string = '0.0';\n      if (this.entrypoint === this.LqdEntrypoints.removeLiquidity) {\n        balance = balances?.lqd;\n        this.qtyRaw = balance;\n        this.update('qtyRaw');\n      } else if (this.entrypoint === this.LqdEntrypoints.tokenToXtz) {\n        if (input === 'qtyRaw') {\n          balance = balances?.tzBTC;\n          this.qtyRaw = balance;\n          this.update('qtyRaw');\n        } else {\n          balance = balances?.tez;\n          this.qtyRawOut = balance;\n          this.update('qtyRawOut');\n        }\n      } else if (this.entrypoint === this.LqdEntrypoints.xtzToToken || this.entrypoint === this.LqdEntrypoints.addLiquidity) {\n        if (input === 'qtyRawOut') {\n          balance = balances?.tzBTC;\n          this.qtyRawOut = balance;\n          this.update('qtyRawOut');\n        } else {\n          balance = balances?.tez;\n          this.qtyRaw = balance;\n          this.update('qtyRaw');\n        }\n      }\n    }\n  }\n  getMinimalPreparedTxs(): PartiallyPreparedTransaction[] {\n    if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: this.qty.internalNormalised.toString(),\n          destination: this.lqdContract,\n          parameters: this.operationService.getXTZToTokenParameters(\n            this.activeAccount.address,\n            this.minimumToken.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        }\n      ]);\n    } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getApproveAmountParameters(this.lqdContract, this.qty.internalBigInt.toFixed(0).toString())\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.lqdContract,\n          parameters: this.operationService.getTokenToXTZParameters(\n            this.activeAccount.address,\n            this.qty.internalBigInt.toFixed(0).toString(),\n            this.minimumXtz.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        }\n      ]);\n    } else if (this.entrypoint === LqdEntrypoints.removeLiquidity) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.lqdContract,\n          parameters: this.operationService.getRemoveLiquidityParameters(\n            this.activeAccount.address,\n            this.qty.internalBigInt.toFixed(0).toString(),\n            this.minimumXtz.internalBigInt.toFixed(0).toString(),\n            this.minimumToken.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        }\n      ]);\n    } else if (this.entrypoint === LqdEntrypoints.addLiquidity) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getApproveAmountParameters(this.lqdContract, this.qtyOut.internalBigInt.toFixed(0))\n        },\n        {\n          kind: 'transaction',\n          amount: this.qty.internalNormalised.toString(),\n          destination: this.lqdContract,\n          parameters: this.operationService.getAddLiquidityParameters(\n            this.activeAccount.address,\n            this.minimumLqd.internalBigInt.toFixed(0).toString(),\n            this.qtyOut.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        }\n      ]);\n    }\n  }\n  getFullyPreparedTxs(): FullyPreparedTransaction[] {\n    assert(!this.simSemaphore, 'Awaiting request');\n    const minimalTxs = this.getMinimalPreparedTxs();\n    this.transactions = minimalTxs;\n    assert(this.inputValidationService.fee(this.customFee), 'Invalid fee');\n    assert(this.inputValidationService.gas(this.customGasLimit), 'Invalid gas limit');\n    assert(this.inputValidationService.gas(this.customStorageLimit), 'Invalid storage limit');\n    assert(!this.checkBalances(), this.checkBalances());\n    assert(minimalTxs.length === this.defaultTransactionParams.customLimits?.length, 'Simulation error');\n    return this.opsWithCustomLimits();\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.defaultTransactionParams.gas.toString()) {\n      extraGas = Number(this.customGasLimit) - this.defaultTransactionParams.gas;\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.defaultTransactionParams.storage.toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.defaultTransactionParams.storage;\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas\n        ? (Number(this.defaultTransactionParams.customLimits[i].gasLimit) + extraGasPerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.defaultTransactionParams.customLimits[i].storageLimit) + extraStoragePerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  checkBalances(): string {\n    if (this.transactions.length > 0 && this.activeAccount) {\n      const balances = this.getMaxAmount(this.activeAccount);\n      if (balances) {\n        const maxTez = Big(balances?.tez).minus(0.000001);\n        const maxLQD = Big(balances.lqd).plus(0.0);\n        const maxtzBTC = Big(balances.tzBTC).plus(0.0);\n        let amount = Big(0);\n        for (const tx of this.transactions) {\n          amount = amount.plus(Big(tx.amount));\n        }\n        if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n          if (!!maxTez && amount.gt(maxTez)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHFEEORAMOUNT');\n          }\n          if (this.minimumToken && this.minimumToken.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n          if (Big(this.qty.internalNormalised).gt(maxtzBTC)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.minimumXtz && this.minimumXtz.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        } else if (this.entrypoint === LqdEntrypoints.addLiquidity) {\n          if (!!maxTez && amount.gt(maxTez)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.qtyOut && Big(this.qtyOut.internalNormalised).gt(maxtzBTC)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.xtzRequired && this.xtzRequired.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n          if (this.minimumLqd && this.minimumLqd.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        } else if (this.entrypoint === LqdEntrypoints.removeLiquidity) {\n          if (Big(this.qty.internalNormalised).gt(maxLQD)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.minimumXtz && this.minimumXtz.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        }\n      }\n    }\n    return '';\n  }\n  sanitizeNumberInput(e, decimalPlaces: number, type = ''): void {\n    const exp = new RegExp(`^\\\\d{0,}(\\\\.\\\\d{0,${decimalPlaces}})?\\$`, 'g');\n    if (type === 'qtyRaw') {\n      if (exp.test(e?.target?.value)) {\n        this.qtyRaw = e?.target?.value;\n      } else {\n        e.target.value = this.qtyRaw;\n      }\n      this.evalAmount('qtyRaw');\n    } else if (type === 'qtyRawOut') {\n      if (exp.test(e?.target?.value)) {\n        this.qtyRawOut = e?.target?.value;\n      } else {\n        e.target.value = this.qtyRawOut;\n      }\n      this.evalAmount('qtyRawOut');\n    } else {\n      if (exp.test(e?.target?.value)) {\n        this[type] = e?.target?.value;\n      } else {\n        e.target.value = this[type];\n      }\n    }\n  }\n  evalAmount(type: string = 'qtyRaw'): void {\n    let qty = this[type];\n    if (parseFloat(qty) < 0.0 || !qty) {\n      this.qtyRawOut = this.qtyRaw = '';\n      return;\n    } else if (isNaN(parseFloat(qty)) && parseFloat(qty) === 0.0) {\n      return;\n    } else if (!isNaN(parseFloat(qty))) {\n      this.update(type);\n    }\n  }\n  openInfoModal(title: string): void {\n    switch (title) {\n      case 'slippage':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message:\n              'Token prices in a pool may change significantly within seconds. Slippage tolerance defines the difference between the expected and current exchange rate that you find acceptable. The higher the slippage tolerance, the more likely a transaction will go through.',\n            title: 'Slippage Information'\n          },\n          forceClose: false\n        });\n        break;\n      case 'pricerate':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The amount of token B you receive for 1 token A, per the current exchange rate.',\n            title: 'Price Rate Information'\n          },\n          forceClose: false\n        });\n        break;\n      case 'impactdouble':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The impact your transaction is expected to make on the exchange rate.',\n            title: 'Price Impact'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumxtz':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of XTZ to be received from the transaction.',\n            title: 'Minimum XTZ'\n          },\n          forceClose: false\n        });\n        break;\n      case 'requiredtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'Required tzBTC needed for transaction.',\n            title: 'Required tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of tzBTC to be received from the transaction.',\n            title: 'Minimum tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumlqt':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of SIRS to be received from the transaction.',\n            title: 'Minimum SIRS'\n          },\n          forceClose: false\n        });\n        break;\n      default:\n        break;\n    }\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"flex-column confirm-send\" [class.image]=\"tokenBalanceService.isNFT(token)\" [class.batch]=\"parameters\">\n      <form autocomplete=\"off\">\n        <div class=\"flex-row top\">\n          <div class=\"flex-column left\" [style.minHeight]=\"!tokenBalanceService.isNFT(token) ? 'unset' : ''\">\n            <span *ngIf=\"!tokenBalanceService.isNFT(token)\" class=\"key\">SEND AMOUNT:</span>\n            <app-asset class=\"token-image\" [class.balance]=\"!tokenBalanceService.isNFT(token)\"\n              [assets]=\"token ? {displayAsset: token?.displayAsset, thumbnailAsset: token?.thumbnailAsset} : {thumbnailAsset: 'assets/img/tezos-xtz-logo.svg'}\"\n              [priorityList]=\"['thumbnailAsset', 'displayAsset']\" [class.sd]=\"!token\"></app-asset>\n          </div>\n          <div class=\"flex-column right\">\n            <span class=\"flex-row amount\"><span class=\"tez value\">{{ formatAmount(token, totalAmount(),\n                false)\n                }}</span>\n              <ng-container *ngIf=\"!tokenTransfer\"><span class=\"fiat key\">USD: <span class=\"value\">{{'$' +\n                    (totalAmount()\n                    *\n                    walletService.wallet.XTZrate | number:'1.2-2')\n                    }}</span></span>\n              </ng-container>\n            </span>\n            <div class=\"flex-column items\">\n              <span *ngIf=\"tokenBalanceService.isNFT(token)\" class=\"key amount-quantity\">QUANTITY:&nbsp;&nbsp;<span\n                  class=\"value\">{{ getQuantity(totalAmount())\n                  }}</span></span>\n              <span class=\"key\">FEE:&nbsp;&nbsp;<span class=\"value\">{{ (getTotalFee() | number:'1.0-6') + ' tez'\n                  }}</span></span>\n              <span *ngIf=\"getTotalBurn(); let totalBurn\" class=\"key\">STORAGE COST:&nbsp;<span class=\"value\">{{\n                  (totalBurn\n                  |\n                  number:'1.0-6') + ' tez'\n                  }}</span></span>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex-row from\">\n          <div class=\"flex-column left\">\n            <span class=\"key\">FROM: </span>\n          </div>\n          <div class=\"flex-column right\">\n            <div *ngIf=\"getUsername(); let displayName\" class=\"flex-row torus-name\"><img class=\"verifier-logo\"\n                src=\"../../../assets/img/{{ getVerifier() }}-logo.svg\">{{ displayName }}</div>\n            <span class=\"address\">{{\n              activeAccount?.address\n              }}</span>\n          </div>\n        </div>\n        <div *ngIf=\"!parameters\" class=\"flex-row divider\">\n          <span></span><img class=\"icon\" src=\"../../../assets/img/send-down-arrow.png\" /><span></span>\n        </div>\n        <div class=\"flex-row to\">\n          <div class=\"flex-column left\">\n            <span class=\"key\">SEND TO<ng-container *ngIf=\"parameters && transactions?.length > 1\">&nbsp;BATCH\n              </ng-container>: </span>\n          </div>\n          <div class=\"flex-column right\">\n            <div *ngFor=\"let transaction of transactions | slice:0:showAll; index as i\"\n              (click)=\"updateParameters(i, transaction.parameters)\" class=\"flex-column transaction\">\n              <span *ngIf=\"transaction?.meta && transaction.meta?.verifier\" class=\"flex-row torus-to value\"><img\n                  src=\"../../../assets/img/{{ transaction.meta.verifier }}-logo.svg\" class=\"icon\">\n                {{ transaction.meta?.alias }}</span>\n              <span class=\"flex-row single-to\" [class.default]=\"transactions.length === 1\"\n                [class.selectable]=\"transactions.length > 1 && parameters\"\n                [class.active]=\"batchParamIndex === i && transactions.length > 1 && parameters\"><span>{{\n                  transaction?.destination\n                  }}</span></span>\n              <p class=\"previewAttention\" *ngIf=\"tokenTransfer && transaction?.destination.slice(0, 3) === 'KT1'\">\n                Warning:\n                Verify the contract can manage tokens</p>\n            </div>\n            <div *ngIf=\"transactions?.length > 10\" class=\"button show-all\"\n              (click)=\"showAll = showAll === 10 ? undefined : 10\">{{ showAll === 10 ? 'Show All' : 'Show Less' }}</div>\n          </div>\n        </div>\n        <br />\n        <br />\n        <span *ngIf=\"parameters && transactions.length > 1\" class=\"flex-row transfer-amount\"><span class=\"key\">TRANSFER\n            AMOUNT: </span><span class=\"key\">{{ (transactions[batchParamIndex]?.amount | number:'1.0-6')\n            }}</span></span>\n        <div *ngIf=\"parameters && parameters?.entrypoint\" class=\"flex-row contract-call\"><span class=\"key\">CONTRACT\n            CALL:\n          </span><span class=\"key\">{{ parameters?.entrypoint }}</span></div>\n        <app-ui-toggle-advanced style=\"width: calc(100% - 1em);margin: 0 0 2.5em 0;\" *ngIf=\"externalReq\"\n          [default]=\"false\" (stateChange)=\"advancedForm = $event\">\n        </app-ui-toggle-advanced>\n      </form>\n      <div *ngIf=\"advancedForm\" class=\"advanced-form\">\n        <div class=\"flex-column parms-container\">\n          <ng-container *ngIf=\"parameters\">\n            <div class=\"tabs-container\">\n              <ul class=\"flex-row tabs\">\n                <li class=\"tab\" [class.active]=\"parametersFormat === 0\" (click)=\"setParametersFormat(0)\">Micheline</li>\n                <li class=\"tab\" [class.active]=\"parametersFormat === 1\" (click)=\"setParametersFormat(1)\">Tabular</li>\n              </ul>\n            </div>\n            <textarea *ngIf=\"parameters && parametersFormat === 0\" name=\"none\" rows=\"10\"\n              readonly>{{ micheline.value || '' }}</textarea>\n            <ul *ngIf=\"parameters && parametersFormat === 1\" class=\"encoded-parms\">\n              <ng-container *ngTemplateOutlet=\"recursiveListTmpl; context:{ list: transformedParameters, level: 0 }\">\n              </ng-container>\n            </ul>\n            <ng-template #recursiveListTmpl let-list=\"list\" let-level=\"level\">\n              <li *ngFor=\"let item of list\" [class]=\"item?.children?.length ? 'expanded' : ''\"\n                [style.marginLeft]=\"!level ? '0em' : '3em'\">\n                <ng-container *ngIf=\"item?.children\">\n                  <span [class.key]=\"item.children.length ? true : false\"\n                    (click)=\"item.children.length ? toggleTab($event) : null\">{{ item.key }}{{item.key ? ': ' : ' '}}{{\n                    (item.val ?? '') }}</span>\n                  <svg *ngIf=\"item.children.length\" (click)=\"toggleTab($event)\" version=\"1.2\" baseProfile=\"tiny-ps\"\n                    xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 13\" width=\"20\" height=\"13\">\n                    <g id=\"1\">\n                      <g id=\"NFT\">\n                        <g id=\"Line 1\">\n                          <g id=\"Line\">\n                            <path id=\"Rectangle 4\" class=\"shp0\"\n                              d=\"M2.86 -0.02L12.86 10.1L10 12.99L0.01 2.88L2.86 -0.02ZM17.14 -0.02L19.99 2.88L10 12.99L7.14 10.1L17.14 -0.02Z\" />\n                          </g>\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                  <ul *ngIf=\"item.children && item.children.length > 0\">\n                    <ng-container\n                      *ngTemplateOutlet=\"recursiveListTmpl; context:{ list: item.children, level: level+3 }\">\n                    </ng-container>\n                  </ul>\n                </ng-container>\n              </li>\n            </ng-template>\n          </ng-container>\n        </div>\n        <form autocomplete=\"off\" *ngIf=\"externalReq && (!walletService.isLedgerWallet()) || ledgerError\">\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Gas limit</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\"\n                (input)=\"sanitizeNumberInput($event, 'gas')\" (paste)=\"sanitizeNumberInput($event, 'gas')\"\n                [placeholder]=\"getTotalDefaultGas() || '0'\" [(ngModel)]=\"customGasLimit\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Fee</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\" [placeholder]=\"getTotalFee() || '0'\"\n                (paste)=\"sanitizeNumberInput($event)\" (input)=\"sanitizeNumberInput($event)\" [(ngModel)]=\"customFee\">\n            </div>\n          </div>\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Storage limit</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\"\n                (input)=\"sanitizeNumberInput($event, 'storage')\" (paste)=\"sanitizeNumberInput($event, 'storage')\"\n                [placeholder]=\"getTotalDefaultStorage() || '0'\" [(ngModel)]=\"customStorageLimit\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Max storage cost</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text read-only\"\n                [placeholder]=\"(getTotalBurn() || '0') + ' tez'\" tabindex=-1 readonly>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"flex-column bottom\">\n        <span [style.visibility]=\"!pwdInvalid ? 'hidden' : ''\" [style.margin]=\"!pwdInvalid ? '0' : ''\"\n          class=\"label danger\">{{ this.pwdInvalid }}</span>\n        <ng-container *ngIf=\"walletService.isPwdWallet()\">\n          <span class=\"label\">ENTER YOUR\n            PASSWORD TO CONFIRM:</span>\n          <input name=\"none\" [(ngModel)]=\"password\" autocomplete=\"current-password\" placeholder=\"Password\"\n            class=\"text password\" type=\"password\" (input)=\"this.pwdInvalid = ''\" (change)=\"this.pwdInvalid = ''\"\n            (keydown.enter)='!messageService.spinnerOn ? inject() : null'>\n        </ng-container>\n        <button class=\"confirm\" *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\"\n          (click)=\"ledgerRetry()\">Sign with\n          Ledger</button>\n        <ng-template #elseBlock>\n          <button class=\"confirm\" (click)=\"!messageService.spinnerOn ? inject() : null\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : 'Confirm'}}</button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>","import { EventEmitter, Input, OnChanges, OnDestroy, Output } from '@angular/core';\nimport { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { FullyPreparedTransaction, PrepareRequest } from '../../../misc/send/interfaces';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { EstimateService } from '../../../../services/estimate/estimate.service';\nimport { OperationService } from '../../../../services/operation/operation.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { CoordinatorService } from '../../../../services/coordinator/coordinator.service';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { LedgerService } from '../../../../services/ledger/ledger.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { KeyPair } from '../../../../interfaces';\nimport { emitMicheline, assertMichelsonData } from '@taquito/michel-codec';\nimport Big from 'big.js';\nimport { LedgerWallet, TorusWallet } from '../../../../services/wallet/wallet';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { ModalComponent } from '../../modal.component';\nimport { Subscription } from 'rxjs';\nimport { TezosDomainsService } from '../../../../services/tezos-domains/tezos-domains.service';\nimport { TokenBalancesService } from '../../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { Schema } from '@taquito/michelson-encoder';\nimport { TzktService } from '../../../../services/indexer/tzkt/tzkt.service';\n@Component({\n  selector: 'app-confirm-send',\n  templateUrl: './send-confirmation.component.html',\n  styleUrls: ['../../../../../scss/components/modals/modal.scss']\n})\nexport class ConfirmSendComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() confirmRequest: PrepareRequest = null;\n  @Output() operationResponse = new EventEmitter();\n  syncSub: Subscription;\n  tokenTransfer = '';\n  activeAccount = null;\n  externalReq: boolean = false;\n  transactions: FullyPreparedTransaction[] = [];\n  costPerByte: string = this.estimateService.costPerByte;\n\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  schema = undefined;\n  parameters: any = null;\n  batchParamIndex = 0;\n  micheline: any = null;\n  batchParameters: { num: number; parameters: any }[] = [];\n  parametersFormat = 0;\n  parametersDisplay = '';\n  transformedParameters = [];\n  extractedSchema = [];\n  showAll = 10;\n\n  showFullBatch = false;\n  sendResponse = null;\n  ledgerError = '';\n  password = '';\n  pwdInvalid = '';\n  advancedForm = false;\n  name = 'confirm-send';\n  token = null;\n  domain = undefined;\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private translate: TranslateService,\n    public tokenService: TokenService,\n    public walletService: WalletService,\n    private estimateService: EstimateService,\n    private operationService: OperationService,\n    private messageService: MessageService,\n    private coordinatorService: CoordinatorService,\n    private lookupService: LookupService,\n    private ledgerService: LedgerService,\n    private inputValidationService: InputValidationService,\n    public tezosDomainService: TezosDomainsService,\n    public tokenBalanceService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private tzktService: TzktService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.confirmRequest?.currentValue) {\n      this.reset(true);\n      this.externalReq = changes.confirmRequest.currentValue.externalReq;\n      this.tokenTransfer = changes.confirmRequest.currentValue.tokenTransfer;\n      this.activeAccount = changes.confirmRequest.currentValue.account;\n      this.tezosDomainService.getDomainFromAddress(this.activeAccount?.address).then((domain) => {\n        this.domain = domain;\n      });\n      this.transactions = changes.confirmRequest.currentValue.transactions;\n      this.token = this.tokenService.getAsset(this.tokenTransfer);\n      console.log('transactions', this.transactions);\n      if (this.externalReq) {\n        ModalComponent.currentModel.next({\n          name: this.name,\n          data: null\n        });\n      }\n      this.init();\n      if (this.externalReq) {\n        this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n          if (response) {\n            this.closeModalAction('silent');\n          }\n        });\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  open(data: any): void {\n    this.customGasLimit = data?.customGasLimit;\n    this.customStorageLimit = data?.customStorageLimit;\n    super.open();\n  }\n  async init(): Promise<void> {\n    await this.loadParameters();\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      this.ledgerError = '?';\n    }\n  }\n  async loadParameters(): Promise<void> {\n    if (this.transactions.length > 1) {\n      for (const [i, op] of this.transactions.entries()) {\n        if (op.parameters) {\n          this.batchParameters.push({\n            num: i + 1,\n            parameters: op.parameters\n          });\n          if (!this.parameters) {\n            this.updateParameters(i, op.parameters);\n          }\n        }\n      }\n    } else if (this.transactions[0].parameters) {\n      this.updateParameters(0, this.transactions[0].parameters);\n    }\n  }\n  async updateParameters(index: number, parameters: any): Promise<void> {\n    if (!parameters) {\n      return;\n    }\n    this.batchParamIndex = index;\n    this.parameters = parameters;\n    this.parametersToMicheline();\n    this.extractedSchema = undefined;\n    try {\n      const sc = await this.tzktService.getEntrypointMicheline(this.transactions[this.batchParamIndex]?.destination, this.parameters?.entrypoint);\n      this.schema = new Schema(sc);\n      this.extractedSchema = this.schema.Execute(this.parameters.value);\n      this.transformedParameters = this.parametersToTabular(this.extractedSchema);\n      this.parametersFormat = 1;\n    } catch {\n      this.transformedParameters = [{ children: [], key: 'Error', val: 'Failed to fetch annotations!' }];\n    }\n  }\n  setParametersFormat(id: number): void {\n    this.parametersFormat = id;\n  }\n  beaconTokenTransfer(op: any): null | { tokenId: string; to: string; amount: string } {\n    if (op.parameters && this.tokenService.isKnownTokenContract(op.destination)) {\n      return this.operationService.parseTokenTransfer(op);\n    }\n    return null;\n  }\n  parametersToMicheline(): void {\n    if (this.parameters) {\n      try {\n        if (!this.parameters.value || !this.parameters.entrypoint) {\n          throw new Error('entrypoint and value expected');\n        }\n        assertMichelsonData(this.parameters.value);\n        const res = emitMicheline(this.parameters.value, {\n          indent: '  ',\n          newline: '\\n'\n        });\n        this.micheline = {\n          entrypoint: this.parameters.entrypoint,\n          value: res\n        };\n      } catch (e) {\n        console.warn(e);\n        this.micheline = null;\n      }\n    }\n  }\n  parametersToTabular(parameters) {\n    const traverse = (key, val, level) => {\n      const isObject = (key, val, level) => {\n        let arr = [];\n        const entries = Object.entries(val);\n        for (const [key, value] of entries) {\n          if (\n            (typeof value === 'object' && (value as any)?.c == undefined && (value as any)?.e === undefined && (value as any)?.s === undefined) ||\n            ((value as any)?.length > 0 && typeof value !== 'string')\n          ) {\n            arr.push({ key, children: traverse(key, value, level + 1) });\n          } else {\n            arr.push(traverse(key, value, level + 1));\n          }\n        }\n        return arr;\n      };\n\n      const isArray = (key, val, level) => {\n        if (val.length === 1) {\n          return traverse(key, val[0], level + 1);\n        }\n        const arr = [];\n        for (let i = 0; i < val.length; ++i) {\n          if (\n            (typeof val[i] === 'object' && val[i]?.c === undefined && val[i]?.e === undefined && val[i]?.s === undefined) ||\n            ((val[i] as any)?.length > 0 && typeof val[i] !== 'string')\n          ) {\n            if (key) {\n              arr.push({ key, children: traverse(key, val[i], level + 1) });\n            } else {\n              arr.push(...traverse(key, val[i], level + 1));\n            }\n          } else {\n            arr.push(traverse(key, val[i], level + 1));\n          }\n        }\n        return arr;\n      };\n      if (typeof val === 'string') {\n        return { key, val, children: [] };\n      } else if (val && typeof val === 'object' && val?.c !== undefined && val?.e !== undefined && val?.s !== undefined) {\n        return { key, val: Big(val).toString(), children: [] };\n      } else if (!!val?.length && typeof val !== 'string') {\n        return isArray(key, val, level);\n      } else if (val && typeof val === 'object') {\n        return isObject(key, val, level);\n      } else if (typeof val === 'number') {\n        return { key, val, children: [] };\n      } else if (typeof val === 'symbol') {\n        return { key, val: val.valueOf(), children: [] };\n      } else {\n        return { key, val: null, children: [] };\n      }\n    };\n    let result = traverse(null, parameters, 0);\n    if (result?.length === undefined) {\n      result = [result];\n    }\n    return result;\n  }\n  getTotalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  getTotalCost(display: boolean = false): string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return totalFee;\n  }\n  getTotalFee(): string {\n    let totalFee = Big(0);\n    for (const tx of this.transactions) {\n      totalFee = totalFee.add(tx.fee ? tx.fee : 0);\n    }\n    return totalFee.toFixed();\n  }\n  getTotalBurn(): number {\n    const totalActiveStorageLimit: number =\n      this.customStorageLimit !== '' && Number(this.customStorageLimit) ? Number(this.customStorageLimit) : this.getTotalDefaultStorage();\n    return Number(Big(totalActiveStorageLimit).times(this.costPerByte).div(1000000).toString());\n  }\n  getTotalDefaultGas(): number {\n    let totalGas = Big(0);\n    for (const tx of this.transactions) {\n      totalGas = totalGas.plus(tx.gasLimit);\n    }\n    return totalGas.toFixed();\n  }\n  getTotalDefaultStorage(): number {\n    let totalStorage = Big(0);\n    for (const tx of this.transactions) {\n      totalStorage = totalStorage.plus(tx.storageLimit);\n    }\n    return totalStorage.toFixed();\n  }\n  getQuantity(amount): number {\n    return Big(amount)\n      .div(10 ** (false ? this.token.decimals : 0))\n      .toFixed();\n  }\n  totalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  formatAmount(token, amount: string, baseUnit = true): string {\n    if (!token) {\n      return `${Big(amount)\n        .div(10 ** (baseUnit ? 6 : 0))\n        .toFixed()} tez`;\n    } else {\n      if (token) {\n        if (this.tokenBalanceService.isNFT(token)) {\n          return `${token.name}`;\n        } else {\n          return `${Big(amount)\n            .div(10 ** (baseUnit ? token.decimals : 0))\n            .toFixed()} ${token.symbol}`;\n        }\n      } else {\n        return '[Unknown token]';\n      }\n    }\n  }\n  async ledgerRetry(): Promise<void> {\n    if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n      this.messageService.addError('Invalid fee');\n      return;\n    }\n    this.messageService.startSpinner('Preparing transaction...');\n    const keys = await this.walletService.getKeys('');\n    if (keys) {\n      await this.sendTransaction(keys);\n    } else {\n      this.messageService.stopSpinner();\n    }\n  }\n  async inject(): Promise<void> {\n    if (this.walletService.isLedgerWallet()) {\n      await this.broadCastLedgerTransaction();\n      this.sendResponse = null;\n      ModalComponent.currentModel.next({ name: '', data: null });\n    } else {\n      if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n        this.messageService.addError('Invalid fee');\n        return;\n      }\n      const pwd = this.password;\n      this.password = '';\n      this.messageService.startSpinner('Signing transaction...');\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n      } catch {\n        this.messageService.stopSpinner();\n      }\n      if (keys) {\n        this.pwdInvalid = '';\n        this.messageService.startSpinner('Sending transaction...');\n        await this.sendTransaction(keys);\n        ModalComponent.currentModel.next({ name: '', data: null });\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.wallet instanceof TorusWallet) {\n          this.pwdInvalid = `Authorization failed`;\n        } else {\n          this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD'); // 'Wrong password!';\n        }\n      }\n    }\n  }\n  async sendTransaction(keys: KeyPair): Promise<void> {\n    const txs: FullyPreparedTransaction[] = this.opsWithCustomLimits();\n    this.subscriptions.add(\n      this.operationService.transfer(this.activeAccount.address, txs, Number(this.getTotalFee()), keys, this.tokenTransfer).subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success === true) {\n            console.log('Transaction successful ', ans);\n            if (ans.payload.opHash) {\n              await this.messageService.stopSpinner();\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                transactions: this.transactions,\n                opHash: ans.payload.opHash,\n                tokenTransfer: this.tokenTransfer\n              };\n              await this.coordinatorService.boost(this.activeAccount.address, metadata);\n              if (this.transactions[0].meta) {\n                this.torusNotification(this.transactions[0]);\n              }\n              for (const transaction of this.transactions) {\n                if (this.walletService.addressExists(transaction.destination)) {\n                  await this.coordinatorService.boost(transaction.destination);\n                }\n              }\n            } else if (this.walletService.wallet instanceof LedgerWallet) {\n              await this.requestLedgerSignature();\n              return;\n            }\n          } else {\n            await this.messageService.stopSpinner();\n            console.log('Transaction error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        },\n        (err) => {\n          this.messageService.stopSpinner();\n          console.log('Error Message ', JSON.stringify(err));\n          if (this.walletService.isLedgerWallet()) {\n            this.messageService.addError('Failed to create transaction', 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        }\n      )\n    );\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.getTotalDefaultGas().toString()) {\n      extraGas = Number(this.customGasLimit) - this.getTotalDefaultGas();\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.getTotalDefaultStorage().toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.getTotalDefaultStorage();\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas ? (Number(this.transactions[i].gasLimit) + extraGasPerOp).toString() : this.transactions[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.transactions[i].storageLimit) + extraStoragePerOp).toString()\n        : this.transactions[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      await this.messageService.startSpinner('Waiting for Ledger signature...');\n      try {\n        const op = this.sendResponse.payload.unsignedOperation;\n        let signature = '';\n        if (op.length <= 2290) {\n          signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n        } else {\n          signature = await this.ledgerService.signHash(\n            this.operationService.ledgerPreHash('03' + op),\n            this.walletService.wallet.implicitAccounts[0].derivationPath\n          );\n        }\n        if (signature) {\n          const signedOp = op + signature;\n          this.sendResponse.payload.signedOperation = signedOp;\n          this.ledgerError = '';\n        } else {\n          this.ledgerError = 'Failed to sign transaction';\n        }\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.subscriptions.add(\n      this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(async (ans: any) => {\n        this.sendResponse = ans;\n        if (ans.success && this.activeAccount) {\n          const metadata = {\n            transactions: this.transactions,\n            opHash: ans.payload.opHash,\n            tokenTransfer: this.tokenTransfer\n          };\n          if (this.transactions[0].meta) {\n            this.torusNotification(this.transactions[0]);\n          }\n          await this.coordinatorService.boost(this.activeAccount.address, metadata);\n          if (this.walletService.addressExists(this.transactions[0].destination)) {\n            await this.coordinatorService.boost(this.transactions[0].destination);\n          }\n          this.operationResponse.emit(ans.payload.opHash);\n        } else {\n          console.log('sendResponse', JSON.stringify(this.sendResponse));\n          this.operationResponse.emit('broadcast_error');\n        }\n        console.log('ans: ' + JSON.stringify(ans));\n        this.reset();\n      })\n    );\n  }\n  async torusNotification(transaction: FullyPreparedTransaction): Promise<void> {\n    if (transaction.meta) {\n      const amount = this.tokenService.formatAmount(this.tokenTransfer, transaction.amount.toString(), false);\n      if (transaction.meta.verifier === 'google') {\n        this.messageService.emailNotify(transaction.meta.alias, amount);\n        this.lookupService.add(transaction.destination, transaction.meta.alias, 2);\n      } else if (transaction.meta.verifier === 'reddit') {\n        this.messageService.redditNotify(transaction.meta.alias, amount);\n        this.lookupService.add(transaction.destination, transaction.meta.alias, 3);\n      } else if (transaction.meta.verifier === 'twitter') {\n        this.messageService.twitterNotify(transaction.meta.twitterId, transaction.meta.alias, amount);\n        this.lookupService.add(transaction.destination, transaction.meta.alias, 4);\n      }\n    }\n  }\n  getUsername(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else if (this.activeAccount) {\n      const party = this.lookupService.resolve({\n        address: this.activeAccount.address\n      });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n  previewAttention(): string {\n    if (this.transactions[0]?.meta?.verifier) {\n      if (!this.tokenTransfer && new Big(this.totalAmount()).gt('50')) {\n        let recipientKind = '';\n        switch (this.transactions[0].meta.verifier) {\n          case 'google':\n            recipientKind = 'Google account email address';\n            break;\n          case 'reddit':\n            recipientKind = 'Reddit username';\n            break;\n          case 'twitter':\n            recipientKind = 'Twitter handle';\n            break;\n          default:\n            recipientKind = 'information';\n        }\n        return `Carefully review the recipient's ${recipientKind}! Spelling mistakes can lead to permanent loss of the transferred funds.`;\n      }\n    }\n    return '';\n  }\n  // Only Numbers with Decimals\n  sanitizeNumberInput(e, type = ''): void {\n    console.dir(this.token?.decimals, e.target);\n    if (['gas', 'storage'].includes(type) || (type === 'amount' && this.token?.decimals == 0)) {\n      e.target.value = e.target.value.replace(/[^0-9]/g, '');\n    } else {\n      e.target.value = e.target.value.replace(/[^0-9\\.]/g, '');\n      if ((e.target.value.match(/\\./g) || []).length > 1) {\n        const tmp = e.target.value.split('');\n        tmp.splice(tmp.lastIndexOf('.'), 1);\n        e.target.value = tmp.join('');\n      }\n      if (e.target.value.charAt(0) === '.') {\n        e.target.value = '0' + e.target.value;\n      }\n    }\n  }\n  closeModalAction(emit: string = null): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.operationResponse.emit(emit);\n    this.reset();\n  }\n  reset(init = false): void {\n    if (!init) {\n      this.confirmRequest = null;\n      if (this.syncSub) {\n        this.syncSub.unsubscribe();\n        this.syncSub = undefined;\n      }\n    }\n    this.tokenTransfer = '';\n    this.transactions = [];\n    this.activeAccount = null;\n\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n\n    this.token = null;\n    this.domain = undefined;\n\n    this.parameters = null;\n    this.batchParamIndex = 0;\n    this.micheline = null;\n    this.batchParameters = [];\n    this.parametersFormat = 0;\n    this.transformedParameters = [];\n    this.extractedSchema = [];\n    this.schema = undefined;\n\n    this.showFullBatch = false;\n    this.sendResponse = null;\n    this.ledgerError = '';\n    this.password = '';\n    this.pwdInvalid = '';\n    this.advancedForm = false;\n    this.externalReq = false;\n  }\n  counter(i: number) {\n    return new Array(i);\n  }\n\n  toggleTab(e) {\n    let elem = e.target;\n    while (elem.tagName.toLowerCase() !== 'li') {\n      elem = elem.parentElement;\n    }\n    elem.classList.toggle('expanded');\n  }\n}\n","<div class=\"flex-row dropdown\" [class.expanded]=\"isOpen\" (click)=\"toggleDropdown()\" [id]=\"ecmpId\">\n  <img class=\"button icon-torus\"\n    [src]=\"torusVerifier === '' ? 'assets/img/tezos-xtz-logo.svg' :  'assets/img/' + torusVerifier.toLowerCase() + '-logo.svg'\" />\n  <input readonly [(ngModel)]=\"torusVerifierName\" /><img class=\"button icon-db\"\n    src=\"../../../assets/img/down-arrow.svg\" />\n  <div class=\"flex-column dropdown-content\">\n    <a [class.selected]=\"torusVerifierName === 'Tezos Address'\"\n      (click)=\"torusVerifier = ''; torusVerifierName = 'Tezos Address';\">\n      Tezos Address\n    </a>\n    <a [class.selected]=\"torusVerifierName === 'Tezos Domains'\"\n      (click)=\"torusVerifier = 'domain'; torusVerifierName = 'Tezos Domains'\">\n      Tezos Domains\n    </a>\n    <ng-container *ngFor=\"let key of torusService.verifierMapKeys\">\n      <ng-container *ngIf=\"torusService.verifierMap[key].lookups\">\n        <a [class.selected]=\"torusVerifierName === torusService.verifierMap[key].name\"\n          (click)=\"torusVerifier = key; torusVerifierName = torusService.verifierMap[key].name\">\n          {{ torusService.verifierMap[key].name }}\n        </a>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TorusService } from '../../../../services/torus/torus.service';\nimport { DropdownComponent } from '../dropdown.component';\n\n@Component({\n  selector: 'app-ui-dropdown-prepare-send',\n  templateUrl: './prepare-send-dropdown.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/prepare-send-dropdown.component.scss']\n})\nexport class PrepareSendDropdownComponent extends DropdownComponent implements OnInit {\n  @Input() torusVerifierName = 'Tezos Address';\n  @Input() torusVerifier = '';\n\n  constructor(public router: Router, public torusService: TorusService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  toggleDropdown(): void {\n    this.dropdownResponse.emit({\n      torusVerifierName: this.torusVerifierName,\n      torusVerifier: this.torusVerifier\n    });\n    this.isOpen = !this.isOpen;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">{{ !isNFT ? getTitle() : 'Send Token'}}</h1>\n    </div>\n    <div class=\"flex-column prepare-send\">\n      <form autocomplete=\"off\">\n        <div *ngIf=\"!this.isMultipleDestinations\" class=\"flex-column top\">\n          <div *ngIf=\"isNFT\" class=\"flex-row token\">\n            <app-asset class=\"asset\" [priorityList]=\"['thumbnailAsset', 'displayAsset']\" [assets]=\"token\"></app-asset>\n            <span class=\"title\">{{token?.name}}</span>\n          </div>\n          <span *ngIf=\"!this.token || !(this.token?.isBooleanAmount || this.token?.balance == 1)\"\n            class=\"flex-row label title\">ENTER {{!isNFT ? 'AMOUNT' :\n            'QUANTITY'}}:</span>\n          <div *ngIf=\"!this.token || !(this.token?.isBooleanAmount || this.token?.balance == 1)\"\n            class=\"flex-row amount\">\n            <input #amountInput inputmode=\"decimal\" name=\"none\" [placeholder]=\"token?.decimals == 0 ? '0' : '0.00'\" [(ngModel)]=\"amount\"\n              name=\"none\" (mousedown)=\"sendMax = false; default\"\n              (input)=\"sanitizeNumberInput($event, 'amount'); amountChange()\"\n              (paste)=\"sanitizeNumberInput($event, 'amount')\" (change)=\"amountChange()\"\n              [disabled]=\"isMultipleDestinations\" />\n            <button *ngIf=\"!this.isMultipleDestinations\" tabindex=-1 class=\"small\" [class.max]=\"sendMax\"\n              (click)=\"sendEntireBalance($event)\">MAX</button>\n          </div>\n          <div class=\"flex-row fees\">\n            <span *ngIf=\"!tokenTransfer\" class=\"amount-usd\">\n              <span>USD:&nbsp;</span>{{'$' + (getTotalAmount() * walletService.wallet.XTZrate | number:'1.2-2' ||\n              '0.00')\n              }}\n            </span>\n            <span class=\"amount-fee\"><span>FEE{{ getTotalBurn() > 0 ? ' & STORAGE COST' : ''}}:&nbsp;</span><img\n                *ngIf=\"simSemaphore\" src=\"../../../../assets/img/feeLoader.gif\">{{ getTotalCost() != 0 ? (getTotalCost()\n              |\n              number:'1.0-6') + ' tez' : '--'\n              }}</span>\n          </div>\n        </div>\n      </form>\n      <form class=\"to\" autocomplete=\"off\">\n        <div *ngIf=\"!this.isMultipleDestinations\" class=\"flex-column\">\n          <span class=\"label title\">SEND TO:</span>\n          <div class=\"address\">\n            <div *ngIf=\"!toPkh\" class=\"flex-column tool\" id=\"paste\" (click)=\"pasteToPkh()\">\n              <img src=\"assets/img/paste.svg\" />\n            </div>\n            <app-qr-scanner *ngIf=\"!toPkh\" [override]=\"true\" class=\"flex-column tool\" id=\"qr\" (scanResponse)=\"handleScanResponse($event)\"></app-qr-scanner>\n            <app-ui-dropdown-prepare-send [torusVerifier]=\"torusVerifier\" [torusVerifierName]=\"torusVerifierName\"\n              (dropdownResponse)=\"dropdownResponse($event)\"></app-ui-dropdown-prepare-send>\n            <input type=\"text\" placeholder=\"Recipient\" class=\"text\" (input)=\"updateDefaultValues($event)\"\n              (change)=\"toPkhChange()\" name=\"toPkh\" [(ngModel)]=\"toPkh\">\n          </div>\n          <div class=\"flex-row address-display\">\n            <span [style.display]=\"!torusPendingLookup && torusLookupAddress ? '' : 'none'\">{{ torusLookupAddress\n              }}</span><span [style.display]=\"torusPendingLookup ? '' : 'none'\"><img\n                src=\"../../../../assets/img/feeLoader.gif\"></span>\n          </div>\n        </div>\n        <div *ngIf=\"this.isMultipleDestinations\" class=\"flex-column\">\n          <label class=\"label\">Addresses and amounts <span class=\"batchInfo\">{{ batchSpace() }}</span></label>\n          <textarea name=\"none\" type=\"text\" class=\"text\" (input)=\"updateDefaultValues()\" rows=\"3\"\n            [(ngModel)]=\"toMultipleDestinationsString\" name=\"none\"\n            placeholder=\"address1 amount1 ; &#10;address2 amount2 ; &#10;address3 ...\"></textarea>\n        </div>\n        <div class=\"flex-column\">\n          <app-ui-toggle-advanced style=\"width: calc(100% - 1.5em);margin: 1rem 0;\" [default]=\"false\"\n            (stateChange)=\"advancedForm = $event\"></app-ui-toggle-advanced>\n          <button *ngIf=\"!isNFT && advancedForm\" class=\"small multiple-destinations\" (click)=\"toggleDestination()\">\n            <span>\n              <ng-container *ngIf=\"!this.isMultipleDestinations\">Multiple transactions</ng-container>\n              <ng-container *ngIf=\"this.isMultipleDestinations\">Single transaction</ng-container>\n            </span>\n          </button>\n        </div>\n      </form>\n      <form autocomplete=\"off\" *ngIf=\"advancedForm\" class=\"flex-column advanced-form\">\n        <div class=\"flex-row\">\n          <div class=\"flex-column\">\n            <label class=\"label\">Gas limit</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\" (input)=\"sanitizeNumberInput($event, 'gas')\"\n              (paste)=\"sanitizeNumberInput($event, 'gas')\" placeholder={{this.defaultTransactionParams.gas.toString()}}\n              [(ngModel)]=\"customGasLimit\" name=\"none\">\n          </div>\n          <div class=\"flex-column\">\n            <label class=\"label\">Fee</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" (input)=\"sanitizeNumberInput($event); updateMaxAmount()\"\n              (paste)=\"sanitizeNumberInput($event); updateMaxAmount()\" class=\"text\"\n              placeholder={{this.defaultTransactionParams.fee.toString()}} [(ngModel)]=\"customFee\" name=\"none\">\n          </div>\n        </div>\n        <div class=\"flex-row\">\n          <div class=\"flex-column\">\n            <label class=\"label\">Storage limit</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" (input)=\"sanitizeNumberInput($event, 'storage'); updateMaxAmount()\"\n              (paste)=\"sanitizeNumberInput($event, 'storage'); updateMaxAmount()\" class=\"text\"\n              placeholder={{this.defaultTransactionParams.storage.toString()}} [(ngModel)]=\"customStorageLimit\"\n              name=\"none\">\n          </div>\n          <div class=\"flex-column\">\n            <label class=\"label\">Max storage cost</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text read-only\" [value]=\"burnAmount() ? burnAmount() : '0 tez'\"\n              tabindex=-1 readonly>\n          </div>\n        </div>\n      </form>\n      <br />\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <span *ngIf=\"formInvalid !== ''\" class=\"label danger\">\n          {{ formInvalid }}\n        </span>\n        <button class=\"confirm\" (click)=\"preview()\">Preview</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { EstimateService } from '../../../../services/estimate/estimate.service';\nimport { DefaultTransactionParams } from '../../../../interfaces';\nimport { FullyPreparedTransaction, PartiallyPreparedTransaction, PrepareRequest } from '../../../misc/send/interfaces';\nimport { Account, ImplicitAccount, OriginatedAccount } from '../../../../services/wallet/wallet';\nimport { TorusService } from '../../../../services/torus/torus.service';\nimport Big from 'big.js';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport assert from 'assert';\nimport { TezosDomainsService } from '../../../../services/tezos-domains/tezos-domains.service';\nimport { ModalComponent } from '../../modal.component';\nimport { TokenBalancesService } from '../../../../services/token-balances/token-balances.service';\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n@Component({\n  selector: 'app-prepare-send',\n  templateUrl: './prepare-send.component.html',\n  styleUrls: ['../../../../../scss/components/modals/modal.scss']\n})\nexport class PrepareSendComponent extends ModalComponent implements OnInit, OnChanges {\n  @Input() prepareRequest: PrepareRequest = null;\n  @Output() prepareResponse = new EventEmitter();\n  @ViewChild('destType') public destType: ElementRef;\n  activeAccount: Account = null;\n  tokenTransfer: string = null;\n  token = null;\n  costPerByte: string = this.estimateService.costPerByte;\n\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n  active = false;\n  isMultipleDestinations = false;\n  advancedForm = false;\n  hideAmount = false;\n  simSemaphore = 0;\n  isNFT = false;\n  accountDropdownIsOpen = false;\n\n  torusVerifierName = 'Tezos Address';\n  torusVerifier = '';\n  torusLookupId = '';\n  torusLookupAddress = '';\n  torusTwitterId = '';\n  torusPendingLookup = false;\n\n  transactions = [];\n  toMultipleDestinationsString = '';\n\n  formInvalid = '';\n  latestSimError = '';\n  prevEquiClass = '';\n\n  sendMax = null;\n\n  amount = '';\n  toPkh = '';\n  customFee = '';\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  name = 'prepare-send';\n\n  constructor(\n    private tokenService: TokenService,\n    private estimateService: EstimateService,\n    public torusService: TorusService,\n    private translate: TranslateService,\n    private walletService: WalletService,\n    public tezosDomains: TezosDomainsService,\n    private inputValidationService: InputValidationService,\n    private tokenBalancesService: TokenBalancesService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.prepareRequest?.currentValue) {\n      this.reset(true);\n      this.tokenTransfer = changes.prepareRequest.currentValue.tokenTransfer ?? null;\n      this.token = this.tokenService.getAsset(this.tokenTransfer);\n      this.isNFT = this.tokenBalancesService.isNFT(this.token);\n      this.activeAccount = changes.prepareRequest.currentValue.account;\n      this.amount = !this.token || !(this.token?.isBooleanAmount || this.token?.balance == 1) ? '' : '1';\n      if (!this.isOpen) {\n        this.openModal();\n      }\n    }\n  }\n  openModal() {\n    ModalComponent.currentModel.next({ name: this.name, data: null });\n    this.estimateService.preLoadData(this.activeAccount.pkh, this.activeAccount.pk);\n  }\n  closeModalAction() {\n    this.prepareResponse.emit(null);\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.reset();\n  }\n\n  reset(init = false) {\n    if (!init) {\n      this.prepareRequest = null;\n    }\n\n    this.defaultTransactionParams = zeroTxParams;\n    this.active = false;\n    this.isMultipleDestinations = false;\n    this.advancedForm = false;\n    this.hideAmount = false;\n    this.simSemaphore = 0;\n\n    this.tokenTransfer = null;\n    this.token = null;\n    this.isNFT = null;\n    this.accountDropdownIsOpen = false;\n\n    this.transactions = [];\n    this.toMultipleDestinationsString = '';\n\n    this.formInvalid = '';\n    this.latestSimError = '';\n    this.prevEquiClass = '';\n    this.torusVerifierName = 'Tezos Address';\n    this.torusVerifier = '';\n\n    this.sendMax = null;\n\n    this.amount = '';\n    this.toPkh = '';\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n    this.clearTorus();\n  }\n  getTitle(): string {\n    return `Send ${this.getAssetName(true)}`;\n  }\n  getAssetName(short = true): string {\n    if (this.tokenTransfer) {\n      return this.token?.symbol ?? this.token?.name ?? 'Unknown';\n    } else {\n      return !this.prepareRequest.symbol ? 'tez' : this.prepareRequest.symbol;\n    }\n  }\n  getTotalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  getTotalCost(display: boolean = false): number | string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return Number(totalFee);\n  }\n  getTotalFee(): number {\n    if (this.customFee !== '' && (Number(this.customFee) || this.customFee === '0')) {\n      return Number(this.customFee);\n    }\n    return Number(this.defaultTransactionParams.fee);\n  }\n  getTotalBurn(): number {\n    if (this.customStorageLimit !== '' && Number(this.customStorageLimit)) {\n      return Number(Big(this.customStorageLimit).mul(this.transactions.length).times(this.costPerByte).div(1000000).toString());\n    }\n    return this.defaultTransactionParams.burn;\n  }\n  burnAmount(): string {\n    const burn = this.customStorageLimit ? Number(Big(this.customStorageLimit).times(this.costPerByte).div(1000000)) : this.defaultTransactionParams.burn;\n    if (burn) {\n      return burn + ' tez';\n    }\n    return '';\n  }\n  amountChange(): void {\n    this.estimateFees();\n  }\n  async estimateFees(): Promise<void> {\n    console.log('estimate..');\n    const prevSimError = this.latestSimError;\n    this.latestSimError = '';\n    let txs: PartiallyPreparedTransaction[] = [];\n    try {\n      txs = this.getMinimalPreparedTxs();\n      this.transactions = txs;\n    } catch (e) {\n      console.log(e);\n    }\n    if (txs?.length) {\n      const equiClass = this.equiClass(this.activeAccount.address, txs);\n      if (this.prevEquiClass !== equiClass || (this.tokenTransfer && this.checkBalance())) {\n        this.latestSimError = '';\n        this.prevEquiClass = equiClass;\n        this.simSemaphore++; // Put lock on 'Preview and 'Send max'\n        const callback = (res) => {\n          if (res) {\n            if (res.error) {\n              this.formInvalid = res.error;\n              this.latestSimError = res.error;\n            } else {\n              this.defaultTransactionParams = res;\n              this.formInvalid = '';\n              this.latestSimError = '';\n              this.updateMaxAmount();\n            }\n          } else {\n            console.log('no res');\n          }\n          this.simSemaphore--;\n        };\n        this.estimateService.estimateTransactions(JSON.parse(JSON.stringify(txs)), this.activeAccount.address, this.tokenTransfer, callback);\n      } else {\n        this.latestSimError = prevSimError;\n        this.formInvalid = this.latestSimError;\n      }\n    } else {\n      this.latestSimError = prevSimError;\n      if (this.isMultipleDestinations ? !this.toMultipleDestinationsString : !this.toPkh) {\n        this.defaultTransactionParams = zeroTxParams;\n        this.updateMaxAmount();\n        this.prevEquiClass = '';\n      }\n    }\n  }\n  equiClass(sender: string, transactions: any): string {\n    let data = sender;\n    if (this.tokenTransfer) {\n      data += transactions[0].to + transactions[0].amount.toString();\n    } else {\n      for (const tx of transactions) {\n        data += tx.to;\n      }\n    }\n    return data;\n  }\n  /*\n    1. input validation\n      strict checks that\n    2. create basic transaction array\n  */\n  sanitizeNumberInput(e, type = ''): void {\n    console.dir(this.token?.decimals, e.target);\n    if (['gas', 'storage'].includes(type) || (type === 'amount' && this.token?.decimals == 0)) {\n      e.target.value = e.target.value.replace(/[^0-9]/g, '');\n    } else {\n      e.target.value = e.target.value.replace(/[^0-9\\.]/g, '');\n      if ((e.target.value.match(/\\./g) || []).length > 1) {\n        const tmp = e.target.value.split('');\n        tmp.splice(tmp.lastIndexOf('.'), 1);\n        e.target.value = tmp.join('');\n      }\n      if (e.target.value.charAt(0) === '.') {\n        e.target.value = '0' + e.target.value;\n      }\n    }\n  }\n  updateDefaultValues(ev?: any): void {\n    const val = ev?.target.value.trim();\n    if (val && !this.torusVerifier) {\n      if (this.inputValidationService.twitterAccount(val)) {\n        this.torusVerifier = 'twitter';\n        this.torusVerifierName = 'Twitter';\n      } else if (this.inputValidationService.tezosDomain(val)) {\n        this.torusVerifier = 'domain';\n        this.torusVerifierName = 'Tezos Domains';\n      }\n      ev.target.value = ev.target.value.trim();\n    }\n\n    if (!this.torusVerifier) {\n      this.estimateFees();\n      if (this.isMultipleDestinations) {\n        this.amount = this.getTotalAmount();\n      }\n    }\n  }\n  toPkhChange(): void {\n    if (this.torusVerifier) {\n      this.torusLookup();\n    }\n  }\n  // Will return PartiallyPreparedTransaction or throw an error\n  getMinimalPreparedTxs(finalCheck = false): PartiallyPreparedTransaction[] {\n    if (!this.isMultipleDestinations) {\n      if (this.torusVerifier) {\n        assert(!this.invalidTorusAccount(), this.invalidTorusAccount());\n        assert(this.torusReady(), 'Pending lookup');\n        this.checkTx(this.torusLookupAddress, this.amount, finalCheck);\n        const meta: any = {\n          verifier: this.torusVerifier,\n          alias: this.torusLookupId\n        };\n        if (this.torusTwitterId) {\n          meta.twitterId = this.torusTwitterId;\n        }\n        return [\n          {\n            kind: 'transaction',\n            destination: this.torusLookupAddress,\n            amount: this.amount ? this.amount : '0',\n            meta\n          }\n        ];\n      } else {\n        this.checkTx(this.toPkh, this.amount, finalCheck);\n      }\n      return [\n        {\n          kind: 'transaction',\n          destination: this.toPkh,\n          amount: this.amount ? this.amount : '0'\n        }\n      ];\n      //this.checkGasStorageFee();\n    } else {\n      return this.getBatch(finalCheck);\n      //assert(false, 'not supported yet')\n    }\n  }\n  checkTx(toPkh: string, amount: string, finalCheck: boolean): void {\n    assert(\n      this.torusVerifier || !(!this.inputValidationService.address(toPkh) || toPkh === this.activeAccount.address),\n      this.translate.instant('SENDCOMPONENT.INVALIDRECEIVERADDRESS')\n    );\n    assert(\n      !this.torusVerifier ||\n        !(!this.inputValidationService.torusAccount(this.toPkh, this.torusVerifier) || this.torusLookupAddress === this.activeAccount.address),\n      'Invalid recipient'\n    );\n    assert(\n      !(\n        !this.inputValidationService.amount(amount, this.token ? this.token.decimals : undefined) ||\n        (finalCheck && (amount === '0' || amount === '') && toPkh.slice(0, 3) !== 'KT1')\n      ),\n      this.translate.instant('SENDCOMPONENT.INVALIDAMOUNT')\n    );\n  }\n  getBatch(finalCheck = false): PartiallyPreparedTransaction[] {\n    const txs: PartiallyPreparedTransaction[] = this.toMultipleDestinationsString\n      .trim()\n      .split(';')\n      .map((row, i) => {\n        if (row.trim()) {\n          const cols = row\n            .trim()\n            .split(' ')\n            .map((col) => col.trim())\n            .filter((col) => col);\n          assert(cols?.length === 2, `Transaction ${i + 1} has invalid number of arguments. Expected 2, but got ${cols?.length}.`);\n          assert(this.inputValidationService.address(cols[0]), `Transaction ${i + 1} contains an invalid destination.`);\n          assert(this.inputValidationService.amount(cols[1]), `Transaction ${i + 1} contains an invalid amount.`);\n          this.checkTx(cols[0], cols[1], finalCheck);\n          const tx: PartiallyPreparedTransaction = {\n            kind: 'transaction',\n            destination: cols[0],\n            amount: cols[1]\n          };\n          return tx;\n        }\n      })\n      .filter((row) => row);\n    return txs;\n  }\n  getFullyPreparedTxs(): FullyPreparedTransaction[] {\n    assert(!this.simSemaphore && (!this.torusVerifier || this.torusReady()), this.formInvalid ? this.formInvalid : 'Awaiting request');\n    const minimalTxs = this.getMinimalPreparedTxs(true);\n    this.transactions = minimalTxs;\n    assert(this.inputValidationService.fee(this.customFee), 'Invalid fee');\n    assert(this.inputValidationService.gas(this.customGasLimit), 'Invalid gas limit');\n    assert(this.inputValidationService.gas(this.customStorageLimit), 'Invalid storage limit');\n    assert(!this.checkBalance(), this.checkBalance());\n    assert(minimalTxs.length === this.defaultTransactionParams.customLimits?.length, 'Simulation error');\n    return this.opsWithCustomLimits();\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.defaultTransactionParams.gas.toString()) {\n      extraGas = Number(this.customGasLimit) - this.defaultTransactionParams.gas;\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.defaultTransactionParams.storage.toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.defaultTransactionParams.storage;\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas\n        ? (Number(this.defaultTransactionParams.customLimits[i].gasLimit) + extraGasPerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.defaultTransactionParams.customLimits[i].storageLimit) + extraStoragePerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  invalidTorusAccount(): string {\n    const torusError = {\n      google: 'Invalid Google email address',\n      reddit: 'Invalid Reddit username',\n      twitter: 'Invalid Twitter username',\n      domain: 'Tezos Domains must be valid url',\n      email: 'Invalid email address'\n    };\n    if (!this.inputValidationService.torusAccount(this.toPkh, this.torusVerifier) && this.toPkh !== '') {\n      return torusError[this.torusVerifier];\n    }\n  }\n  sendEntireBalance(event: Event): void {\n    event.stopPropagation();\n    this.sendMax = true;\n    this.checkMaxAmount();\n    this.amountChange();\n  }\n  toggleDestination(): void {\n    this.defaultTransactionParams = zeroTxParams;\n    this.sendMax = false;\n    this.prevEquiClass = '';\n    this.isMultipleDestinations = !this.isMultipleDestinations;\n    this.transactions = [];\n    this.toMultipleDestinationsString = '';\n    this.formInvalid = '';\n    this.toPkh = '';\n    this.amount = '';\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n    this.clearTorus();\n    this.updateDefaultValues();\n  }\n  clearTorus(): void {\n    this.torusVerifier = '';\n    this.torusPendingLookup = false;\n    this.torusLookupAddress = '';\n    this.torusLookupId = '';\n    this.torusTwitterId = '';\n  }\n  checkMaxAmount(): void {\n    if (this.sendMax) {\n      const max = this.maxToSend(this.activeAccount);\n      if (max.length && max.slice(0, 1) !== '-') {\n        this.amount = max;\n      } else {\n        this.amount = '0';\n      }\n    }\n  }\n  checkBalance(): string {\n    if (this.transactions.length > 0) {\n      if (this.activeAccount && this.activeAccount instanceof ImplicitAccount) {\n        const max = Big(this.maxToSend(this.activeAccount)).plus(this.tokenTransfer ? 0 : 0.000001);\n        let amount = Big(0);\n        for (const tx of this.transactions) {\n          amount = amount.plus(Big(tx.amount));\n        }\n        if (amount.gt(max)) {\n          return this.translate.instant('SENDCOMPONENT.TOOHIGHFEEORAMOUNT');\n        }\n      } else if (this.activeAccount && this.activeAccount instanceof OriginatedAccount) {\n        const maxKt = Big(this.maxToSend(this.activeAccount));\n        const maxTz = Big(this.maxToSend(this.walletService.wallet.getImplicitAccount(this.activeAccount.pkh))).plus(0.000001);\n        let amount = Big(0);\n        for (const tx of this.transactions) {\n          amount = amount.plus(Big(tx.amount));\n        }\n        if (amount.gt(maxKt)) {\n          return this.translate.instant('SENDCOMPONENT.TOOHIGHAMOUNT');\n        } else if (new Big('0').gt(maxTz)) {\n          return this.translate.instant('SENDCOMPONENT.TOOHIGHFEE');\n        }\n      }\n    }\n    return '';\n  }\n  updateMaxAmount(): void {\n    if (this.sendMax) {\n      const max = this.maxToSend(this.activeAccount);\n      let maxAmount = '0';\n      if (max.length && max.slice(0, 1) !== '-') {\n        maxAmount = max;\n      }\n      if (this.amount !== maxAmount) {\n        this.amount = maxAmount;\n      }\n    }\n  }\n  maxToSend(account: Account): string {\n    if (account && account instanceof ImplicitAccount && !this.tokenTransfer) {\n      let accountBalance = Big(account.balanceXTZ).div(1000000);\n      accountBalance = accountBalance.minus(this.customFee && Number(this.customFee) ? Number(this.customFee) : this.defaultTransactionParams.fee);\n      if (!this.isMultipleDestinations) {\n        accountBalance = accountBalance.minus(\n          this.customStorageLimit && Number(this.customStorageLimit)\n            ? Number(Big(this.customStorageLimit).times(this.costPerByte).div('1000000'))\n            : this.defaultTransactionParams.burn\n        );\n      } else {\n        accountBalance = accountBalance.minus(this.defaultTransactionParams.burn);\n      }\n      accountBalance = accountBalance.minus(0.000001); // dust\n      return accountBalance.toString();\n    } else {\n      if (this.tokenTransfer) {\n        if (account instanceof ImplicitAccount) {\n          return Big(account.getTokenBalance(this.tokenTransfer))\n            .div(10 ** this.token.decimals)\n            .toFixed();\n        }\n      } else {\n        return Big(account.balanceXTZ).div(1000000).toString();\n      }\n    }\n  }\n\n  async verifierChange(): Promise<void> {\n    this.torusLookupAddress = '';\n    if (this.torusVerifier) {\n      this.torusLookup();\n    } else {\n      this.formInvalid = '';\n      this.estimateFees();\n    }\n    // this.validateReceiverAddress();\n    // resimulate?\n  }\n  async torusLookup(): Promise<any> {\n    if (!this.torusService.verifierMapKeys.includes(this.torusVerifier) && this.torusVerifier !== 'domain') {\n      this.formInvalid = 'Invalid verifier';\n    } else if (this.invalidTorusAccount()) {\n      this.formInvalid = this.invalidTorusAccount();\n    } else if (this.toPkh) {\n      this.torusPendingLookup = true;\n      this.torusLookupId = this.toPkh;\n\n      const { pkh, twitterId } =\n        this.torusVerifier === 'domain'\n          ? await this.tezosDomains\n              .getAddressFromDomain(this.toPkh)\n              .then((ans) => {\n                if (ans?.pkh === '') {\n                  this.formInvalid = 'Could not find the domain';\n                }\n                return ans;\n              })\n              .catch((e) => {\n                console.error(e);\n                this.formInvalid = e;\n                return '';\n              })\n          : await this.torusService.lookupPkh(this.torusVerifier, this.toPkh).catch((e) => {\n              console.error(e);\n              this.formInvalid = e;\n              return '';\n            });\n\n      this.torusPendingLookup = false;\n      if (pkh) {\n        this.torusLookupAddress = pkh;\n        this.torusTwitterId = twitterId ? twitterId : '';\n        this.estimateFees();\n      } else {\n        this.torusLookupAddress = '';\n      }\n    }\n  }\n  batchSpace(txs = 0): boolean | string {\n    if (this.isMultipleDestinations && this.defaultTransactionParams.customLimits && this.defaultTransactionParams.customLimits.length) {\n      const numberOfTxs = txs ? txs : this.defaultTransactionParams.customLimits.length;\n      const txsLimit = 294 + (this.defaultTransactionParams.reveal ? 0 : 2); // Max transactions in a batch is 296 (294 with a reveal)\n      return !txs ? this.numberWithCommas(numberOfTxs + ' / ' + txsLimit) : numberOfTxs <= txsLimit;\n    }\n    return !txs ? '' : true;\n  }\n  numberWithCommas(x: string): string {\n    const parts: Array<string> = x.split('.');\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return parts.join('.');\n  }\n  torusReady(): boolean {\n    return !this.torusPendingLookup && this.torusLookupAddress !== '';\n  }\n  preview(): void {\n    let txs: FullyPreparedTransaction[];\n    try {\n      txs = this.getFullyPreparedTxs();\n      this.prepareResponse.emit(txs);\n      ModalComponent.currentModel.next({\n        name: 'confirm-send',\n        data: {\n          customGasLimit: this.customGasLimit,\n          customStorageLimit: this.customStorageLimit\n        }\n      });\n      this.reset();\n    } catch (e) {\n      this.formInvalid = e.message;\n    }\n  }\n  dynSize(): string {\n    const size = this.amount ? this.amount.length : 0;\n    if (size < 7) {\n      return '5';\n    } else if (size < 9) {\n      return '4';\n    } else if (size < 12) {\n      return '3';\n    } else if (size < 17) {\n      return '2';\n    }\n    return '1.5';\n  }\n\n  dropdownResponse(data): void {\n    if (data?.torusVerifier !== this.torusVerifier) {\n      console.log(this.torusVerifier + ' -> ' + data.torusVerifier);\n      this.torusVerifier = data.torusVerifier;\n      this.torusVerifierName = data.torusVerifierName;\n      this.verifierChange();\n    }\n  }\n  pasteToPkh(): void {\n    navigator.clipboard.readText().then((clipText) => {\n      this.toPkh = clipText;\n      this.updateDefaultValues({ target: { value: this.toPkh } });\n    });\n  }\n  handleScanResponse(ev): void {\n    this.toPkh = ev?.pkh || '';\n    this.updateDefaultValues({ target: { value: this.toPkh } });\n  }\n}\n","<div *ngIf=\"active && template === 'gap'\" class=\"flex-column kukai-modal gap\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"cancel()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column confirm-send\">\n        <div class=\"asset-name\">{{ templateRequest.template.descriptions[0].text }}</div>\n        <div class=\"flex-row transaction\">\n          <div class=\"flex-column left\">\n            <span class=\"default-text\">Send</span>\n            <span class=\"default-text amount\">{{ (templateRequest.partialOps[0].amount | number:'1.0-6') + ' tez'\n              }}</span>\n            <span class=\"default-text\">USD&nbsp;{{'$' +\n              (templateRequest.partialOps[0].amount\n              *\n              walletService.wallet.XTZrate | number:'1.0-2')\n              }}</span>\n            <span class=\"default-text\">From:</span>\n            <div class=\"flex-row torus\" *ngIf=\"this.walletService.wallet.verifier\">\n              <img class=\"icon\" src=\"../../../assets/img/{{ this.walletService.wallet.verifier }}-logo.svg\">\n              <div class=\"flex-column\">\n                <span class=\"name\">{{ this.walletService.wallet.displayName() }}</span><span class=\"address\">{{\n                  activeAccount.address }}</span>\n              </div>\n            </div>\n            <span *ngIf=\"!this.walletService.wallet.verifier\" class=\"default-text single-to\">{{ activeAccount.address\n              }}</span>\n          </div>\n          <div *ngIf=\"templateRequest.template.descriptions[0]?.imgUrl\" class=\"flex-column right\">\n            <img class=\"token-image\" [src]=\"templateRequest.template.descriptions[0]?.imgUrl\" />\n          </div>\n        </div>\n      <br />\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column bottom\">\n        <div class=\"flex-row default-text more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"toggle()\">{{ !showMore ?\n          'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/gap-arrow.svg\"></div>\n        <div *ngIf=\"showMore\" class=\"info\">\n          <div class=\"flex-column\">\n            <div class=\"default-text\">\n              Send to:\n            </div>\n            <div class=\"default-text\">\n              {{ templateRequest.ops[0].destination }}\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Fee\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.network + ' tez' }}\n              </div>\n            </div>\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Max Storage Cost\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.storage + ' tez' }}\n              </div>\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Contract Call\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.ops[0]?.parameters?.entrypoint }}\n              </div>\n            </div>\n            <br/>\n          </div>\n        </div>\n      </div>\n      <br />\n      <div class=\"flex-row buttons\">\n        <button (click)=\"approve()\" [disabled]=\"templateRequest?.partialOps?.length !== 1\">\n          <ng-container *ngIf=\"templateRequest.template.button; else defaultButtonText\">\n            {{templateRequest.template.button}}</ng-container>\n          <ng-template #defaultButtonText>PURCHASE</ng-template>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"active && template === 'minterpop'\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"cancel()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column confirm-send\">\n        <div class=\"asset-name\">{{ templateRequest.template.descriptions[0].text }}</div>\n        <div class=\"flex-row transaction\">\n          <div class=\"flex-column left\">\n            <span class=\"default-text\">Send</span>\n            <span class=\"default-text amount\">{{ (templateRequest.partialOps[0].amount | number:'1.0-6') + ' tez'\n              }}</span>\n            <span class=\"default-text\">USD&nbsp;{{'$' +\n              (templateRequest.partialOps[0].amount\n              *\n              walletService.wallet.XTZrate | number:'1.0-2')\n              }}</span>\n            <span class=\"default-text\">From:</span>\n            <div class=\"flex-row torus\" *ngIf=\"this.walletService.wallet.verifier\">\n              <img class=\"icon\" src=\"../../../assets/img/{{ this.walletService.wallet.verifier }}-logo.svg\">\n              <div class=\"flex-column\">\n                <span class=\"name\">{{ this.walletService.wallet.displayName() }}</span><span class=\"address\">{{\n                  activeAccount.address }}</span>\n              </div>\n            </div>\n            <span *ngIf=\"!this.walletService.wallet.verifier\" class=\"default-text single-to\">{{ activeAccount.address\n              }}</span>\n          </div>\n          <div *ngIf=\"templateRequest.template.descriptions[0]?.imgUrl\" class=\"flex-column right\">\n            <img class=\"token-image\" [src]=\"templateRequest.template.descriptions[0]?.imgUrl\" />\n          </div>\n        </div>\n      <br />\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column bottom\">\n        <div class=\"flex-row default-text more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"toggle()\">{{ !showMore ?\n          'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/dropdown-minterpop.svg\"></div>\n        <div *ngIf=\"showMore\" class=\"info\">\n          <div class=\"flex-column\">\n            <div class=\"default-text\">\n              Send to:\n            </div>\n            <div class=\"default-text\">\n              {{ templateRequest.ops[0].destination }}\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Fee\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.network + ' tez' }}\n              </div>\n            </div>\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Max Storage Cost\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.storage + ' tez' }}\n              </div>\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Contract Call\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.ops[0]?.parameters?.entrypoint }}\n              </div>\n            </div>\n            <br/>\n          </div>\n        </div>\n      </div>\n      <br />\n      <div class=\"flex-row buttons\">\n        <button (click)=\"approve()\" [disabled]=\"templateRequest?.partialOps?.length !== 1\">\n          <ng-container *ngIf=\"templateRequest.template.button; else defaultButtonText\">\n            {{templateRequest.template.button}}</ng-container>\n          <ng-template #defaultButtonText>Send</ng-template>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<div *ngIf=\"active && template === 'default'\" class=\"kukai-template\">\n  <div *ngIf=\"templateRequest.template\" class=\"flex-column card\">\n    <H1>You are about to<BR><b\n        *ngIf=\"templateRequest.template.action; else defaultAction\">{{templateRequest.template.action}}</b>\n      <ng-template #defaultAction><b>send</b></ng-template>\n    </H1>\n    <ng-container *ngFor=\"let description of templateRequest.template.descriptions\">\n      <ng-container *ngIf=\"!description.imgUrl\">\n        <p class=\"single\" *ngIf=\"description.text\">{{ description.text }}</p>\n      </ng-container>\n      <ng-container *ngIf=\"description.imgUrl\">\n        <img *ngIf=\"description.imgUrl\" src=\"{{description.imgUrl}}\" height=\"150\">\n        <p class=\"img-text\" *ngIf=\"description.text\">{{description.text}}</p>\n      </ng-container>\n    </ng-container>\n    <div class=\"buttons\" [class.horizontally]=\"!templateRequest.template.buttonsVertically\"\n      [class.vertically]=\"templateRequest.template.buttonsVertically\">\n      <button class=\"secondary\" (click)=\"cancel()\">Cancel</button>\n      <button (click)=\"approve()\">\n        <ng-container *ngIf=\"templateRequest.template.button; else defaultButtonText\">\n          {{templateRequest.template.button}}</ng-container>\n        <ng-template #defaultButtonText>Send</ng-template>\n      </button>\n    </div>\n    <p class=\"fee\">Estimated fee <b *ngIf=\"templateRequest.fee\">{{templateRequest.fee.total}} tez</b><img\n        *ngIf=\"!templateRequest.fee\" src=\"../../../../assets/img/feeLoader.gif\"></p>\n    <div class=\"footer\">\n      <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n    </div>\n  </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges, OnChanges } from '@angular/core';\nimport { TemplateRequest, TemplateFee, FullyPreparedTransaction } from '../../../misc/send/interfaces';\nimport { Template, BaseTemplate } from 'kukai-embed';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-confirm-send-embed',\n  templateUrl: './confirm-send.component.html',\n  styleUrls: ['./confirm-send.component.scss']\n})\nexport class ConfirmSendEmbedComponent implements OnInit, OnChanges {\n  @Input() templateRequest: TemplateRequest = null;\n  @Output() isApproved = new EventEmitter();\n  @Input() activeAccount = null;\n  active = false;\n  showMore = false;\n  template = 'default';\n  constructor(public walletService: WalletService, public messageService: MessageService, private subjectService: SubjectService) {}\n\n  ngOnInit(): void {\n    this.subjectService.origin.subscribe((origin) => {\n      if (origin && origin.indexOf('gap') !== -1) {\n        // (m)interpop\n        this.template = 'gap';\n      } else if (origin && origin.indexOf('interpop') !== -1) {\n        // (m)interpop\n        this.template = 'minterpop';\n      } else {\n        this.template = 'default';\n      }\n    });\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.templateRequest?.currentValue) {\n      console.log(this.templateRequest);\n      if ((<BaseTemplate>this.templateRequest?.template)?.descriptions?.length) {\n        this.hideScrollbar();\n        this.active = true;\n      } else {\n        console.warn('No template descriptions');\n        this.cancel();\n      }\n    }\n  }\n  cancel() {\n    this.reset();\n    this.isApproved.emit(null);\n  }\n  approve() {\n    if (this.templateRequest.ops && this.templateRequest.fee) {\n      this.isApproved.emit(this.templateRequest.ops);\n      this.reset();\n    }\n  }\n  toggle() {\n    if (this.templateRequest.ops) {\n      this.showMore = !this.showMore;\n    }\n  }\n  reset() {\n    this.resetScrollbar();\n    this.active = false;\n  }\n  hideScrollbar() {\n    const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n    document.body.style.marginRight = scrollBarWidth.toString();\n    document.body.style.overflow = 'hidden';\n  }\n  resetScrollbar() {\n    document.body.style.marginRight = '';\n    document.body.style.overflow = '';\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"flex-column liquidity-baking-confirm\">\n      <ng-container *ngIf=\"entrypoint === 'addLiquidity'\">\n        <div class=\"flex-column container-inputs alt from\">\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{ expectedXtz | number:'1.0-6' }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow plus\">\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-plus.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{ expectedToken | number:'1.0-8' }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"seperator arrow\">\n          <div class=\"backdrop\"></div>\n          <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n        </div>\n        <div class=\"flex-column container-inputs alt to\">\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{ expectedLqd ? (expectedLqd | number:'1.0-0') : \"&nbsp;\" }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'SIRS' }}</span>\n              <img [src]=\"'assets/img/tokens/sirius.png'\" />\n            </div>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"entrypoint === 'removeLiquidity'\">\n        <div class=\"flex-column container-inputs alt from\">\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{ expectedLqd | number:'1.0-0' }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'SIRS' }}</span>\n              <img [src]=\"'assets/img/tokens/sirius.png'\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"seperator arrow\">\n          <div class=\"backdrop\"></div>\n          <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n        </div>\n        <div class=\"flex-column container-inputs alt to\">\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedXtz ? (expectedXtz | number:'1.0-6') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow plus\">\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-plus.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedToken ? (expectedToken | number:'1.0-8') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"entrypoint === 'xtzToToken'\">\n        <div class=\"flex-column container-inputs\">\n          <div *ngIf=\"expectedXtz\" class=\"flex-row currency from\">\n            <span class=\"amount\">{{expectedXtz | number:'1.0-6'}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow\">\n            <div class=\"backdrop\"></div>\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedToken ? (expectedToken | number:'1.0-8') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n            <span class=\"flex-row hint\">Expected</span>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"entrypoint === 'tokenToXtz'\">\n        <div class=\"flex-column container-inputs\">\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{expectedToken | number:'1.0-8'}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow\">\n            <div class=\"backdrop\"></div>\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedXtz ? (expectedXtz | number:'1.0-6') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n            <span class=\"flex-row hint\">Expected</span>\n          </div>\n        </div>\n      </ng-container>\n      <div class=\"output\">\n        <div *ngIf=\"minimumToken && !minimumXtz\" class=\"flex-row item\">\n          <span class=\"flex-row key\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\" class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumToken | number:'1.2-8'}} tzBTC</span>\n        </div>\n        <div *ngIf=\"minimumXtz && !minimumToken\" class=\"flex-row item\">\n          <span class=\"flex-row key\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\"\n              class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumXtz | number:'1.6-6'}} XTZ</span>\n        </div>\n        <div\n          *ngIf=\"minimumXtz && minimumToken\"\n          class=\"item\">\n          <span class=\"flex-row key\" style=\"margin: 0 0 0.5em 0\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\" class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumXtz | number:'1.6-6'}} XTZ + {{\n            minimumToken | number:'1.2-8'}} tzBTC</span>\n        </div>\n        <div *ngIf=\"minimumLqd\" class=\"flex-row item\">\n          <span class=\"flex-row key\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\" class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumLqd | number:'1.0-0'}} SIRS</span>\n        </div>\n        <div class=\"flex-row item\">\n          <span class=\"flex-row key\">Fee:</span>\n          <span class=\"value\">&nbsp;{{getTotalFee() | number:'1.0-6'}} tez</span>\n        </div>\n        <div class=\"flex-row item\" *ngIf=\"getTotalBurn(); let storageCost\">\n          <span class=\"flex-row key\">Max Storage Cost:</span>\n          <span class=\"value\">&nbsp;{{storageCost | number:'1.0-6'}} tez</span>\n        </div>\n      </div>\n      <div *ngIf=\"(externalReq && (!walletService.isLedgerWallet() || ledgerError))\" class=\"flex-column more-info-toggle\" [class.expanded]=\"advancedForm\">\n        <div class=\"flex-row item\" (click)=\"advancedForm = !advancedForm\">\n          <span class=\"value\">{{ 'Advanced' }}</span>\n          <div class=\"flex-row\"><img src=\"assets/img/chevron-down.svg\"></div>\n        </div>\n      </div>\n      <form *ngIf=\"advancedForm && (externalReq && (!walletService.isLedgerWallet() || ledgerError))\" autocomplete=\"off\" class=\"more-info-body\" [class.expanded]=\"advancedForm\">\n        <div class=\"flex-row\">\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Gas limit</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\"\n              (paste)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\" [placeholder]=\"getTotalDefaultGas() || '0'\"\n              [value]=\"customGasLimit\">\n          </div>\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Fee</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text\" [placeholder]=\"getTotalFee() || '0'\" (paste)=\"sanitizeNumberInput($event, 6, 'customFee')\"\n              (input)=\"sanitizeNumberInput($event, 6, 'customFee')\" [value]=\"customFee\">\n          </div>\n        </div>\n        <div class=\"flex-row\">\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Storage limit</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\"\n              (paste)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\" [placeholder]=\"getTotalDefaultStorage() || '0'\"\n              [value]=\"customStorageLimit\">\n          </div>\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Max storage cost</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text read-only\" [placeholder]=\"(getTotalBurn() || '0') + ' tez'\" tabindex=-1\n              readonly>\n          </div>\n        </div>\n      </form>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <span class=\"form-validity\" [class.error]=\"formInvalid !== 'Awaiting Request'\">{{ formInvalid }}</span>\n        <button *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\" class=\"confirm\"\n          [disabled]=\"!!formInvalid\" (click)=\"ledgerRetry()\">Sign with Ledger</button>\n        <ng-template #elseBlock>\n          <span *ngIf=\"this.pwdInvalid\" class=\"label danger\">{{ pwdInvalid }}</span>\n          <input *ngIf=\"walletService.isPwdWallet()\" [(ngModel)]=\"password\" autocomplete=\"current-password\"\n            placeholder=\"Password\" class=\"text password\" type=\"password\" (input)=\"this.pwdInvalid = ''\"\n            (change)=\"this.pwdInvalid = ''\" (keydown.enter)='inject()'>\n          <button class=\"confirm\" (click)=\"inject()\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : confirmTitle}}</button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>","import { EventEmitter, Input, OnChanges, OnDestroy, Output } from '@angular/core';\nimport { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { ConfirmSwapRequest, FullyPreparedTransaction, PrepareRequest, LqdEntrypoints, PartiallyPreparedTransaction } from '../../misc/send/interfaces';\nimport { TokenService } from '../../../services/token/token.service';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { LookupService } from '../../../services/lookup/lookup.service';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DefaultTransactionParams, KeyPair } from '../../../interfaces';\nimport Big from 'big.js';\nimport { LedgerWallet, TorusWallet } from '../../../services/wallet/wallet';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { ModalComponent } from '../modal.component';\nimport { Subscription } from 'rxjs';\nimport { TezosDomainsService } from '../../../services/tezos-domains/tezos-domains.service';\nimport { TokenBalancesService } from '../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Amount } from '../../../services/swap-liquidity/classes/Amount';\nimport assert from 'assert';\nimport { SwapLiquidityService } from '../../../services/swap-liquidity/swap-liquidity.service';\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n\n@Component({\n  selector: 'app-swap-liquidity-confirm',\n  templateUrl: './swap-liquidity-confirm.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class SwapLiquidityConfirmComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  readonly lqdTokenContract = 'KT1AafHA1C1vk959wvHWBispY9Y2f3fxBUUo';\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  @Input() confirmRequest: PrepareRequest = null;\n  @Output() operationResponse = new EventEmitter();\n  syncSub: Subscription;\n  activeAccount = null;\n  externalReq: boolean = false;\n  transactions: FullyPreparedTransaction[] = [];\n  semaphore = false;\n\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n\n  customFee = '';\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  sendResponse = null;\n  ledgerError = '';\n  password = '';\n  pwdInvalid = '';\n  advancedForm = false;\n  name = 'swap-liquidity-confirm';\n\n  expectedLqd: number;\n  minimumLqd: number;\n  expectedXtz: number;\n  minimumXtz: number;\n  expectedToken: number;\n  minimumToken: number;\n  entrypoint: string;\n\n  confirmTitle = '';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private translate: TranslateService,\n    public tokenService: TokenService,\n    public walletService: WalletService,\n    private estimateService: EstimateService,\n    private operationService: OperationService,\n    private messageService: MessageService,\n    private coordinatorService: CoordinatorService,\n    private lookupService: LookupService,\n    private ledgerService: LedgerService,\n    private inputValidationService: InputValidationService,\n    public tezosDomainService: TezosDomainsService,\n    public tokenBalanceService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private swapLiquidityService: SwapLiquidityService\n  ) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.confirmRequest?.currentValue) {\n      this.reset(true);\n      this.parseTransactions(changes.confirmRequest.currentValue);\n      this.init();\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n      if (this.externalReq) {\n        this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n          if (response) {\n            this.closeModalAction('silent');\n          }\n        });\n      }\n    }\n  }\n  parseTransactions(csr: ConfirmSwapRequest): void {\n    let hasTrailingZeroApproval = false;\n    this.externalReq = csr.externalReq;\n    this.activeAccount = csr.account;\n    this.transactions = csr.transactions;\n    this.entrypoint = this.transactions.find((t) => Object.values(LqdEntrypoints).includes(t?.parameters?.entrypoint))?.parameters.entrypoint;\n    switch (this.entrypoint) {\n      case LqdEntrypoints.xtzToToken:\n        this.confirmTitle = 'Confirm Swap';\n        this.expectedXtz = parseFloat(this.transactions[0]?.amount);\n        this.minimumToken = new Amount({ rpcAmount: this.transactions[0]?.parameters.value.args[1].args[0].int, decimalPlaces: 8 }).internalNormalised;\n        this.calculateXtzToToken();\n        break;\n      case LqdEntrypoints.tokenToXtz:\n        this.confirmTitle = 'Confirm Swap';\n        const tokenToXtz = this.transactions.find((t) => t?.parameters?.entrypoint === LqdEntrypoints.tokenToXtz);\n        hasTrailingZeroApproval =\n          this.transactions[this.transactions.length - 1].parameters.entrypoint === 'approve' &&\n          this.transactions[this.transactions.length - 1]?.parameters?.value.args[1].int === '0';\n        this.expectedToken = new Amount({ rpcAmount: tokenToXtz?.parameters.value.args[1].args[0].int, decimalPlaces: 8 }).internalNormalised;\n        this.minimumXtz = new Amount({ rpcAmount: tokenToXtz?.parameters.value.args[1].args[1].args[0].int, decimalPlaces: 6 }).internalNormalised;\n        this.calculateTokenToXTZ();\n        break;\n      case LqdEntrypoints.addLiquidity:\n        this.confirmTitle = 'Add Liquidity';\n        const addLiquidity = this.transactions.find((t) => t?.parameters?.entrypoint === LqdEntrypoints.addLiquidity);\n        hasTrailingZeroApproval =\n          this.transactions[this.transactions.length - 1].parameters.entrypoint === 'approve' &&\n          this.transactions[this.transactions.length - 1]?.parameters?.value.args[1].int === '0';\n        this.expectedToken = new Amount({ rpcAmount: addLiquidity?.parameters.value.args[1].args[1].args[0].int, decimalPlaces: 8 }).internalNormalised;\n        this.expectedXtz = parseFloat(addLiquidity?.amount);\n        this.minimumLqd = new Amount({ rpcAmount: addLiquidity?.parameters.value.args[1].args[0].int, decimalPlaces: 0 }).internalNormalised;\n        this.calcAddLiquidity();\n        break;\n      case LqdEntrypoints.removeLiquidity:\n        this.confirmTitle = 'Remove Liquidity';\n        this.expectedLqd = new Amount({ rpcAmount: this.transactions[0]?.parameters.value.args[1].args[0].int, decimalPlaces: 0 }).internalNormalised;\n        this.minimumXtz = new Amount({ rpcAmount: this.transactions[0]?.parameters.value.args[1].args[1].args[0].int, decimalPlaces: 6 }).internalNormalised;\n        this.minimumToken = new Amount({\n          rpcAmount: this.transactions[0]?.parameters.value.args[1].args[1].args[1].args[0].int,\n          decimalPlaces: 8\n        }).internalNormalised;\n        this.calcRemoveLiquidity();\n        break;\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  open(): void {\n    super.open();\n  }\n  async init(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      this.ledgerError = '?';\n    }\n  }\n  getTotalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  getTotalCost(display: boolean = false): string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return totalFee;\n  }\n  getTotalFee(): string {\n    if (this.customFee) {\n      return this.customFee;\n    }\n    let totalFee = Big(0);\n    for (const tx of this.transactions) {\n      totalFee = totalFee.add(tx.fee ? tx.fee : 0);\n    }\n    return totalFee.toFixed();\n  }\n  getTotalBurn(): number {\n    const totalActiveStorageLimit: number =\n      this.customStorageLimit !== '' && Number(this.customStorageLimit) ? Number(this.customStorageLimit) : this.getTotalDefaultStorage();\n    return Number(Big(totalActiveStorageLimit).times(this.estimateService.costPerByte).div(1000000).toString());\n  }\n  getTotalDefaultGas(): number {\n    let totalGas = Big(0);\n    for (const tx of this.transactions) {\n      totalGas = totalGas.plus(tx.gasLimit);\n    }\n    return totalGas.toFixed();\n  }\n  getTotalDefaultStorage(): number {\n    let totalStorage = Big(0);\n    for (const tx of this.transactions) {\n      totalStorage = totalStorage.plus(tx.storageLimit);\n    }\n    return totalStorage.toFixed();\n  }\n  totalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  async ledgerRetry(): Promise<void> {\n    if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n      this.messageService.addError('Invalid fee');\n      return;\n    }\n    this.messageService.startSpinner('Preparing transaction...');\n    const keys = await this.walletService.getKeys('');\n    if (keys) {\n      await this.sendTransaction(keys);\n    } else {\n      this.messageService.stopSpinner();\n    }\n  }\n  async inject(): Promise<void> {\n    if (this.semaphore) {\n      return;\n    }\n    if (this.walletService.isLedgerWallet()) {\n      await this.broadCastLedgerTransaction();\n      this.sendResponse = null;\n      ModalComponent.currentModel.next({ name: '', data: null });\n    } else {\n      if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n        this.messageService.addError('Invalid fee');\n        return;\n      }\n      const pwd = this.password;\n      this.password = '';\n      this.messageService.startSpinner('Signing transaction...');\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n      } catch {\n        this.messageService.stopSpinner();\n      }\n      if (keys) {\n        this.pwdInvalid = '';\n        this.messageService.startSpinner('Sending transaction...');\n        await this.sendTransaction(keys);\n        ModalComponent.currentModel.next({ name: '', data: null });\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.wallet instanceof TorusWallet) {\n          this.pwdInvalid = `Authorization failed`;\n        } else {\n          this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD'); // 'Wrong password!';\n        }\n      }\n    }\n  }\n  async sendTransaction(keys: KeyPair): Promise<void> {\n    const txs: FullyPreparedTransaction[] = this.opsWithCustomLimits();\n    this.subscriptions.add(\n      this.operationService.transfer(this.activeAccount.address, txs, Number(this.getTotalFee()), keys, '').subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success === true) {\n            console.log('Transaction successful ', ans);\n            if (ans.payload.opHash) {\n              await this.messageService.stopSpinner();\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                transactions: this.transactions,\n                opHash: ans.payload.opHash\n              };\n              await this.coordinatorService.boost(this.activeAccount.address, metadata);\n              for (const transaction of this.transactions) {\n                if (this.walletService.addressExists(transaction.destination)) {\n                  await this.coordinatorService.boost(transaction.destination);\n                }\n              }\n            } else if (this.walletService.wallet instanceof LedgerWallet) {\n              await this.requestLedgerSignature();\n              return;\n            }\n          } else {\n            await this.messageService.stopSpinner();\n            console.log('Transaction error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        },\n        (err) => {\n          this.messageService.stopSpinner();\n          console.log('Error Message ', JSON.stringify(err));\n          if (this.walletService.isLedgerWallet()) {\n            this.messageService.addError('Failed to create transaction', 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        }\n      )\n    );\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.getTotalDefaultGas().toString()) {\n      extraGas = Number(this.customGasLimit) - this.getTotalDefaultGas();\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.getTotalDefaultStorage().toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.getTotalDefaultStorage();\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas ? (Number(this.transactions[i].gasLimit) + extraGasPerOp).toString() : this.transactions[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.transactions[i].storageLimit) + extraStoragePerOp).toString()\n        : this.transactions[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  sanitizeNumberInput(e, decimalPlaces: number, type = ''): void {\n    const exp = new RegExp(`^\\\\d{0,}(\\\\.\\\\d{0,${decimalPlaces}})?\\$`, 'g');\n    if (exp.test(e?.target?.value)) {\n      this[type] = e?.target?.value;\n    } else {\n      e.target.value = this[type];\n    }\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      await this.messageService.startSpinner('Waiting for Ledger signature...');\n      try {\n        const op = this.sendResponse.payload.unsignedOperation;\n        let signature = '';\n        if (op.length <= 2290) {\n          signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n        } else {\n          signature = await this.ledgerService.signHash(\n            this.operationService.ledgerPreHash('03' + op),\n            this.walletService.wallet.implicitAccounts[0].derivationPath\n          );\n        }\n        if (signature) {\n          const signedOp = op + signature;\n          this.sendResponse.payload.signedOperation = signedOp;\n          this.ledgerError = '';\n        } else {\n          this.ledgerError = 'Failed to sign transaction';\n        }\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.subscriptions.add(\n      this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(async (ans: any) => {\n        this.sendResponse = ans;\n        if (ans.success && this.activeAccount) {\n          const metadata = {\n            transactions: this.transactions,\n            opHash: ans.payload.opHash\n          };\n          await this.coordinatorService.boost(this.activeAccount.address, metadata);\n          if (this.walletService.addressExists(this.transactions[0].destination)) {\n            await this.coordinatorService.boost(this.transactions[0].destination);\n          }\n          this.operationResponse.emit(ans.payload.opHash);\n        } else {\n          console.log('sendResponse', JSON.stringify(this.sendResponse));\n          this.operationResponse.emit('broadcast_error');\n        }\n        console.log('ans: ' + JSON.stringify(ans));\n        this.reset();\n      })\n    );\n  }\n  closeModalAction(emit: string = null): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.operationResponse.emit(emit);\n    this.reset();\n  }\n  reset(init = false): void {\n    if (!init) {\n      this.confirmRequest = null;\n      if (this.syncSub) {\n        this.syncSub.unsubscribe();\n        this.syncSub = undefined;\n      }\n    }\n    this.transactions = [];\n    this.activeAccount = null;\n\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n\n    this.sendResponse = null;\n    this.ledgerError = '';\n    this.password = '';\n    this.pwdInvalid = '';\n    this.advancedForm = false;\n    this.externalReq = false;\n\n    this.expectedLqd = undefined;\n    this.minimumLqd = undefined;\n    this.expectedXtz = undefined;\n    this.minimumXtz = undefined;\n    this.expectedToken = undefined;\n    this.minimumToken = undefined;\n  }\n  openInfoModal(title: string): void {\n    switch (title) {\n      case 'fee':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'Expected fee for this transaction charged by the Tezos blockchain.',\n            title: 'Fee'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumxtz':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of XTZ to be received from the transaction.',\n            title: 'Minimum XTZ'\n          },\n          forceClose: false\n        });\n        break;\n      case 'expectedxtz':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The expected amount of XTZ to be received from the transaction.',\n            title: 'Expected XTZ'\n          },\n          forceClose: false\n        });\n        break;\n      case 'requiredtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'Required tzBTC needed for transaction.',\n            title: 'Required tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of tzBTC to be received from the transaction.',\n            title: 'Minimum tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'expectedtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The expected amount of tzBTC to be received from the transaction.',\n            title: 'Expected tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumlqt':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of SIRS to be received from the transaction.',\n            title: 'Minimum SIRS'\n          },\n          forceClose: false\n        });\n        break;\n      case 'expectedlqt':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The expected amount of SIRS to be received from the transaction.',\n            title: 'Expected SIRS'\n          },\n          forceClose: false\n        });\n        break;\n      default:\n        break;\n    }\n  }\n  async calculateXtzToToken(): Promise<void> {\n    this.semaphore = true;\n    const xtzToSell = new Amount({\n      normalisedAmount: this.expectedXtz,\n      decimalPlaces: 6\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateXtzToToken(xtzToSell, xtzPool, tokenPool, 0.005, this.swapLiquidityService.settings('liquidityBaking'));\n    this.expectedToken = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n  async calculateTokenToXTZ(): Promise<void> {\n    this.semaphore = true;\n    const tokenToSell = new Amount({\n      normalisedAmount: this.expectedToken,\n      decimalPlaces: 8\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateTokenToXTZ(tokenToSell, xtzPool, tokenPool, 0.005, this.swapLiquidityService.settings('liquidityBaking'));\n    this.expectedXtz = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n  async calcAddLiquidity(): Promise<void> {\n    this.semaphore = true;\n    const toSell = new Amount({\n      normalisedAmount: this.expectedXtz,\n      decimalPlaces: 6\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateAddLiquidityXTZ(\n      toSell,\n      xtzPool,\n      tokenPool,\n      parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n      0.005,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.expectedLqd = result.liquidityExpected?.internalNormalised.toFixed(result.liquidityExpected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n  async calcRemoveLiquidity(): Promise<void> {\n    this.semaphore = true;\n    const lqtToBurn = new Amount({\n      normalisedAmount: this.expectedLqd,\n      decimalPlaces: 0\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateRemoveLiquidity(\n      lqtToBurn,\n      xtzPool,\n      tokenPool,\n      parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n      0.005,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.expectedXtz = result.xtzExpected?.internalNormalised.toFixed(result.xtzExpected?.decimalPlaces).toString();\n    this.expectedToken = result.tokenExpected?.internalNormalised.toFixed(result.tokenExpected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n}\n","<app-prepare-send *ngIf=\"!embedded\" [prepareRequest]=\"prepareRequest\" (prepareResponse)=\"handlePrepareResponse($event)\"></app-prepare-send>\n<app-confirm-send [confirmRequest]=\"confirmRequest\" (operationResponse)=\"handleConfirmResponse($event)\"></app-confirm-send>\n<app-confirm-send-embed *ngIf=\"embedded\" [templateRequest]=\"templateRequest\" (isApproved)=\"handleTemplateApproval($event)\" [activeAccount]=\"activeAccount\"></app-confirm-send-embed>\n<app-swap-liquidity (prepareResponse)=\"handlePrepareResponse($event)\"></app-swap-liquidity>\n<app-swap-liquidity-confirm [confirmRequest]=\"confirmSwapLiquidityRequest\" (operationResponse)=\"handleConfirmResponse($event)\"></app-swap-liquidity-confirm>\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { Account, EmbeddedTorusWallet } from '../../../services/wallet/wallet';\nimport {\n  PrepareRequest,\n  ConfirmRequest,\n  FullyPreparedTransaction,\n  PartiallyPreparedTransaction,\n  TemplateRequest,\n  TemplateFee,\n  ConfirmSwapRequest,\n  LqdEntrypoints\n} from './interfaces';\nimport { Template } from 'kukai-embed';\nimport { TokenService } from '../../../services/token/token.service';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { assertMichelsonData } from '@taquito/michel-codec';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport Big from 'big.js';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\nimport { ExternalRequest } from '../../../interfaces';\n\n@Component({\n  selector: 'app-send',\n  templateUrl: './send.component.html'\n})\nexport class SendComponent implements OnInit, OnChanges, OnDestroy {\n  LqdEntrypoints = LqdEntrypoints;\n  @Input() embedded: boolean;\n  activeAccount: Account;\n  @Input() tokenTransfer: string;\n  @Input() externalRequest: ExternalRequest;\n  @Input() template: Template;\n  @Output() operationResponse = new EventEmitter();\n  prepareRequest: PrepareRequest = null;\n  confirmRequest: ConfirmRequest = null;\n  templateRequest: TemplateRequest = null;\n  confirmSwapLiquidityRequest: ConfirmSwapRequest = null;\n  symbol: string;\n  readonly thresholdUSD = 50;\n  private subscriptions: Subscription = new Subscription();\n  private swapLiquidityEntrypoints = ['addLiquidity', 'removeLiquidity', 'xtzToToken', 'tokenToXtz'];\n\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  constructor(\n    public tokenService: TokenService,\n    private estimateService: EstimateService,\n    private messageService: MessageService,\n    private operationService: OperationService,\n    private walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private subjectService: SubjectService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.prepareTokenTransfer.subscribe((t) => {\n        this.prepareRequest = t;\n        this.tokenTransfer = t?.tokenTransfer;\n        this.activeAccount = t?.account;\n        this.symbol = t?.symbol;\n      })\n    );\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.externalRequest?.currentValue) {\n      this.activeAccount = changes.externalRequest.currentValue.selectedAccount;\n      this.checkOpReq(changes.externalRequest.currentValue.operationRequest);\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  private async checkOpReq(opReq: any): Promise<void | {\n    kind;\n    destination;\n    amount;\n    parameters;\n    gasRecommendation;\n    storageRecommendation;\n  }> {\n    if (opReq.operationDetails) {\n      opReq = opReq.operationDetails;\n    }\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && !this.walletService.wallet?.sk && this.template?.silent) {\n      this.operationResponse.emit('invalid_parameters');\n      return;\n    }\n    if (opReq[0].kind === 'transaction') {\n      const txs: PartiallyPreparedTransaction[] = opReq.map((tx) => {\n        if (tx.kind !== 'transaction') {\n          throw new Error('Invalid op kind');\n        }\n        // identify token transfers\n        return {\n          kind: 'transaction',\n          destination: tx.destination,\n          amount: Big(tx.amount)\n            .div(10 ** 6)\n            .toFixed(), // handle token decimals here\n          parameters: tx.parameters ? tx.parameters : undefined,\n          gasRecommendation: tx.gas_limit ? tx.gas_limit : undefined,\n          storageRecommendation: tx.storage_limit ? tx.storage_limit : undefined\n        };\n      });\n      if (this.validParameters(txs)) {\n        if (txs.length === 1 && !this.template) {\n          const tokenTransferObj: any = this.getTokenTransferObj(txs[0]);\n          if (tokenTransferObj) {\n            const asset = this.tokenService.getAsset(tokenTransferObj.tokenId);\n            txs[0].amount = Big(tokenTransferObj.amount)\n              .div(10 ** asset.decimals)\n              .toFixed();\n            txs[0].destination = tokenTransferObj.to;\n            this.tokenTransfer = tokenTransferObj.tokenId;\n            delete txs[0].parameters;\n          } else {\n            this.tokenTransfer = '';\n          }\n          this.simulateRequest(txs, tokenTransferObj?.tokenId);\n        } else {\n          this.tokenTransfer = '';\n          this.simulateRequest(txs, '');\n        }\n      } else {\n        this.operationResponse.emit('invalid_parameters');\n      }\n    }\n  }\n  getTokenTransferObj(op: any): null | { tokenId: string; to: string; amount: string } {\n    if (op.parameters && this.tokenService.isKnownTokenContract(op.destination)) {\n      const tokenTransfer = this.operationService.parseTokenTransfer(op);\n      if (tokenTransfer && this.tokenService.isKnownTokenId(tokenTransfer?.tokenId)) {\n        return tokenTransfer;\n      }\n    }\n    return null;\n  }\n  validParameters(txs: PartiallyPreparedTransaction[]): boolean {\n    for (const tx of txs) {\n      if (tx.parameters) {\n        try {\n          if (!tx.parameters.value || !tx.parameters.entrypoint) {\n            throw new Error('entrypoint and value expected');\n          }\n          assertMichelsonData(tx.parameters.value);\n        } catch (e) {\n          this.messageService.addError(`Invalid parameters: ${e.message}`);\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  async simulateRequest(\n    txs: PartiallyPreparedTransaction[],\n    tokenTransfer: string\n  ): Promise<void | {\n    tx: PartiallyPreparedTransaction;\n    fee;\n    gasLimit;\n    storageLimit;\n  }> {\n    if (this.template) {\n      if (this.template.silent) {\n        console.log('Silent signing');\n      } else {\n        this.templateRequest = {\n          template: this.template,\n          partialOps: txs\n        };\n      }\n    } else {\n      await this.messageService.startSpinner('Preparing transaction...');\n    }\n    try {\n      await this.estimateService.preLoadData(this.activeAccount.pkh, this.activeAccount.pk);\n      const callback = (res) => {\n        if (res) {\n          if (res.error) {\n            this.messageService.addError(`Simulation error: ${res.error.message}`, 0);\n            this.operationResponse.emit({\n              error: 'invalid_parameters',\n              errorMessage: res.error.message\n            });\n          } else {\n            const fullyPrepared: FullyPreparedTransaction[] = txs.map((tx, i) => {\n              return {\n                ...tx,\n                fee: i === txs.length - 1 ? res.fee : '0',\n                gasLimit: res.customLimits[i].gasLimit.toString(),\n                storageLimit: res.customLimits[i].storageLimit.toString()\n              };\n            });\n            if (this.template) {\n              const fee = this.getTemplateFee(fullyPrepared);\n              console.log('Use template', this.template);\n              if (!this.template.silent) {\n                this.templateRequest = {\n                  template: this.template,\n                  partialOps: txs,\n                  ops: fullyPrepared,\n                  fee\n                };\n              } else {\n                let amount = Big(0);\n                for (const op of fullyPrepared) {\n                  amount = Big(op.amount).plus(amount);\n                }\n                amount = Big(fee.total).plus(amount);\n                amount = amount.times(Big(CONSTANTS.MAINNET && this.walletService.wallet?.XTZrate ? this.walletService.wallet.XTZrate : 1));\n                if (amount.gt(Big(this.thresholdUSD))) {\n                  this.operationResponse.emit('exceeded_threshold');\n                } else {\n                  this.silentInject(fullyPrepared);\n                }\n              }\n            } else {\n              this.confirmTransactions(fullyPrepared, true);\n            }\n          }\n        } else {\n          throw new Error('No simulation result');\n        }\n      };\n      await this.estimateService.estimateTransactions(JSON.parse(JSON.stringify(txs)), this.activeAccount.pkh, tokenTransfer, callback);\n    } catch (e) {\n      console.error(e);\n      this.operationResponse.emit('unknown_error');\n    } finally {\n      await this.messageService.stopSpinner();\n    }\n  }\n  prepareTransaction(): void {\n    this.prepareRequest = {\n      account: this.activeAccount,\n      tokenTransfer: this.tokenTransfer,\n      symbol: this.symbol\n    };\n  }\n  confirmTransactions(transactions: FullyPreparedTransaction[], externalReq: boolean): void {\n    if (this.isLbReq(transactions)) {\n      if (!externalReq) {\n        this.activeAccount = this.subjectService.activeAccount.getValue();\n      }\n      this.confirmSwapLiquidityRequest = {\n        account: this.activeAccount,\n        transactions,\n        externalReq\n      };\n    } else {\n      this.confirmRequest = {\n        account: this.activeAccount,\n        tokenTransfer: this.tokenTransfer,\n        transactions,\n        externalReq\n      };\n    }\n  }\n  private isLbReq(transactions: FullyPreparedTransaction[]): boolean {\n    if (\n      transactions.length === 1 &&\n      transactions[0].destination === this.lqdContract &&\n      ['xtzToToken', 'removeLiquidity'].includes(transactions[0].parameters?.entrypoint)\n    ) {\n      // xtzToToken or removeLiquidity\n      return true;\n    } else if (transactions[0].destination === this.tzBTCContract && transactions[0].parameters?.entrypoint === 'approve') {\n      // can be tokenToXtz or addLiquidity\n      if (transactions.length === 3 && transactions[0].parameters?.value?.args[1]?.int !== '0') {\n        console.log('prepend 0 approve');\n        // normalize\n        transactions.unshift({\n          ...transactions[0],\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        });\n      }\n      if (\n        transactions.length === 4 &&\n        new Set([transactions[0].destination, transactions[1].destination, transactions[3].destination, this.tzBTCContract]).size === 1 &&\n        new Set([transactions[0].parameters?.entrypoint, transactions[1].parameters?.entrypoint, transactions[3].parameters?.entrypoint, 'approve']).size ===\n          1 &&\n        new Set([\n          transactions[0].parameters?.value?.args[0]?.string,\n          transactions[1].parameters?.value?.args[0]?.string,\n          transactions[3].parameters?.value?.args[0]?.string,\n          this.lqdContract\n        ]).size === 1 &&\n        transactions[2].destination === this.lqdContract &&\n        ['tokenToXtz', 'addLiquidity'].includes(transactions[2].parameters?.entrypoint)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n  handlePrepareResponse(preparedTransactions: FullyPreparedTransaction[]): void {\n    this.prepareRequest = null;\n    if (preparedTransactions) {\n      console.log('PrepareResponse', JSON.stringify(preparedTransactions));\n      this.confirmTransactions(preparedTransactions, false);\n    }\n  }\n  handleConfirmResponse(opHash: string): void {\n    this.confirmRequest = null;\n    this.confirmSwapLiquidityRequest = null;\n    this.operationResponse.emit(opHash);\n  }\n  handleTemplateApproval(ops: FullyPreparedTransaction[]): void {\n    if (ops) {\n      this.silentInject(ops);\n    } else {\n      this.operationResponse.emit(null);\n    }\n    this.template = null;\n  }\n  private getTemplateFee(ops: FullyPreparedTransaction[]): TemplateFee {\n    let network = new Big(0);\n    let storageLimit = new Big(0);\n    for (const op of ops) {\n      network = network.plus(op.fee);\n      storageLimit = storageLimit.plus(op.storageLimit);\n    }\n    let storage = storageLimit.times(this.estimateService.costPerByte).div('1000000');\n    const total = network.plus(storage).toFixed();\n    network = network.toFixed();\n    storage = storage.toFixed();\n    return { network, storage, total };\n  }\n  async silentInject(ops: FullyPreparedTransaction[]): Promise<void> {\n    if (!this.walletService.isEmbeddedTorusWallet()) {\n      this.operationResponse.emit('UNSUPPORTED_WALLET_TYPE');\n      return;\n    }\n    for (const op of ops) {\n      // Limit to transactions for now\n      if (op.kind !== 'transaction') {\n        this.operationResponse.emit('UNSUPPORTED_KIND');\n        break;\n      }\n    }\n    if (!this.template.silent) {\n      this.messageService.startSpinner('Sending transaction...');\n    }\n    let keys;\n    try {\n      keys = await this.walletService.getKeys('', this.activeAccount.pkh);\n    } catch {\n      this.messageService.stopSpinner();\n    }\n    if (!keys) {\n      this.operationResponse.emit('FAILED_TO_SIGN');\n      return;\n    }\n    this.subscriptions.add(\n      this.operationService.transfer(this.activeAccount.address, ops, Number(ops[ops.length - 1].fee), keys, '').subscribe(\n        async (ans: any) => {\n          if (ans.success === true) {\n            console.log('Transaction successful ', ans);\n            await this.messageService.stopSpinner();\n            this.operationResponse.emit(ans.payload.opHash);\n            const metadata = {\n              transactions: ops,\n              opHash: ans.payload.opHash\n            };\n            await this.coordinatorService.boost(this.activeAccount.address, metadata);\n            for (const transaction of ops) {\n              if (this.walletService.addressExists(transaction.destination)) {\n                await this.coordinatorService.boost(transaction.destination);\n              }\n            }\n          } else {\n            await this.messageService.stopSpinner();\n            console.log('Transaction error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit({\n              error: 'broadcast_error',\n              errorMessage: ans.payload.msg\n            });\n          }\n        },\n        (err) => {\n          this.messageService.stopSpinner();\n          console.log(err);\n          this.operationResponse.emit('UNKNOWN_ERROR');\n        }\n      )\n    );\n  }\n}\n","<div *ngIf=\"req\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"cancel()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">{{req.template.action || 'Confirmation'}}</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column confirm-send\">\n        <div *ngIf=\"req.template.descriptions[0].text\" class=\"asset-name\">{{ req.template.descriptions[0].text }}</div>\n        <div class=\"flex-row transaction\">\n          <div class=\"flex-column left\">\n            <span *ngIf=\"req.template.descriptions[1].text\" class=\"default-text\">{{ req.template.descriptions[1].text }}</span>\n            <span *ngIf=\"req.template.descriptions[2]\" class=\"default-text amount\">{{ req.template.descriptions[2].text }}</span>\n            <span *ngIf=\"req.template.descriptions[3]\" class=\"default-text\">{{ req.template.descriptions[3].text }}</span>\n            <span class=\"default-text\">From:</span>\n            <div class=\"flex-row torus\" *ngIf=\"this.walletService.wallet.verifier\">\n              <img class=\"icon\" src=\"../../../assets/img/{{ this.walletService.wallet.verifier }}-logo.svg\">\n              <div class=\"flex-column\">\n                <span class=\"name\">{{ this.walletService.wallet.displayName() }}</span><span class=\"address\">{{\n                  req.activeAccount.address }}</span>\n              </div>\n            </div>\n            <span *ngIf=\"!this.walletService.wallet.verifier\" class=\"default-text single-to\">{{ req.activeAccount.address\n              }}</span>\n          </div>\n          <div *ngIf=\"req.template.descriptions[0]?.imgUrl\" class=\"flex-column right\">\n            <img class=\"token-image\" [src]=\"req.template.descriptions[0]?.imgUrl\" />\n          </div>\n        </div>\n      <br />\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column bottom\">\n        <div class=\"flex-row default-text more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"showMore = !showMore\">{{ !showMore ?\n          'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/dropdown-minterpop.svg\"></div>\n        <div *ngIf=\"showMore && req.payload\" class=\"info\">\n          <textarea style=\"width: 100%; padding: 0.5rem\" rows=10>{{req.payload}}</textarea>\n        </div>\n      </div>\n      <br />\n      <div class=\"flex-row buttons\">\n        <button (click)=\"approve()\">\n          <ng-container *ngIf=\"req.template.button; else defaultButtonText\">\n            {{req.template.button}}</ng-container>\n          <ng-template #defaultButtonText>Send</ng-template>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n      </div>\n    </div>\n  </div>\n</div> ","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\n\n@Component({\n  selector: 'app-sign-expr-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['../../confirm-send/confirm-send.component.scss']\n})\nexport class ExprTemplateComponent implements OnInit, OnChanges {\n  @Input() req = null;\n  @Output() isApproved = new EventEmitter();\n  constructor(public walletService: WalletService) {}\n\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {}\n  cancel() {\n    this.isApproved.emit(false);\n  }\n  approve() {\n    this.isApproved.emit(true);\n  }\n}\n","<div *ngIf=\"signRequest && payload && !template\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"rejectSigning()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">{{ signRequest?.title ? signRequest.title : 'Sign Expression' }}</h1>\n    </div>\n    <div class=\"flex-column sign-expr\">\n      <div class=\"seperator\"></div>\n      <p class=\"previewAttention\">{{ description ? description : 'An application has requested you sign an\n        expression.' }}</p>\n        <div class=\"seperator\"></div>\n      <div class=\"flex-row more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"toggle()\">{{ !showMore ? 'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/dropdown-minterpop.svg\"></div>\n      <div *ngIf=\"showMore\" class=\"info\">\n        <textarea rows=\"6\" readonly>{{ payload }}</textarea>\n      </div>\n      <div class=\"flex-column bottom\">\n        <span *ngIf=\"this.pwdInvalid\" class=\"danger margin\">{{ this.pwdInvalid }}</span>\n        <button class=\"purple confirm\" (click)=\"sign()\">SIGN</button>\n        <div class=\"footer\">\n          <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<app-sign-expr-template *ngIf=\"signRequest && payload && template\" [req]=\"{payload: payload, template: template, activeAccount: activeAccount}\" (isApproved)=\"handleTemplateApproval($event)\"></app-sign-expr-template>","import { Component, OnInit, SimpleChanges, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Account } from '../../../../services/wallet/wallet';\nimport { OperationService } from '../../../../services/operation/operation.service';\nimport { emitMicheline } from '@taquito/michel-codec';\nimport { valueDecoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { Uint8ArrayConsumer } from '@taquito/local-forging/dist/lib/uint8array-consumer';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-sign-expr-embed',\n  templateUrl: './sign-expr.component.html',\n  styleUrls: ['./sign-expr.component.scss']\n})\nexport class SignExprEmbedComponent implements OnInit, OnChanges {\n  @Input() signRequest: any;\n  @Input() activeAccount: Account;\n  @Output() signResponse = new EventEmitter();\n  syncSub: Subscription;\n  password = '';\n  pwdInvalid = '';\n  payload = '';\n  template = null;\n  description = null;\n  isMessage = false;\n  showMore = false;\n  constructor(\n    public walletService: WalletService,\n    private messageService: MessageService,\n    public translate: TranslateService,\n    private operationService: OperationService,\n    private inputValidationService: InputValidationService\n  ) {}\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.signRequest) {\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflow = 'hidden';\n      this.template = this.signRequest.ui;\n      this.isMessage = this.inputValidationService.isMessageSigning(this.signRequest.payload);\n      const value = valueDecoder(Uint8ArrayConsumer.fromHexString(this.signRequest.payload.slice(2)));\n      const payload = emitMicheline(value, {\n        indent: '  ',\n        newline: '\\n'\n      });\n      this.payload = this.isMessage ? value.string : payload;\n    }\n  }\n  async sign() {\n    const pwd = this.password;\n    this.password = '';\n    await this.messageService.startSpinner(`Signing ${this.isMessage ? 'message' : 'payload'}...`);\n    let keys;\n    try {\n      keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n    } catch (e) {\n      console.warn(e);\n      this.messageService.stopSpinner();\n    }\n    if (keys) {\n      this.pwdInvalid = '';\n      try {\n        const signature = this.operationService.sign(this.signRequest.payload, keys.sk).edsig;\n        this.acceptSigning(signature);\n      } catch (e) {\n        this.pwdInvalid = 'Signing failed';\n        console.warn(e);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    } else {\n      this.messageService.stopSpinner();\n      if (this.walletService.isTorusWallet()) {\n        this.pwdInvalid = `Authorization failed`;\n      } else {\n        this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD');\n      }\n    }\n  }\n  rejectSigning() {\n    this.closeModal();\n    this.signResponse.emit(null);\n  }\n  acceptSigning(signature: string) {\n    this.messageService.addSuccess(this.isMessage ? 'Message signed!' : 'Payload signed!');\n    this.closeModal();\n    this.signResponse.emit(signature);\n  }\n  closeModal() {\n    // restore body scrollbar\n    document.body.style.marginRight = '';\n    document.body.style.overflow = '';\n    this.clear();\n  }\n  clear() {\n    this.password = '';\n    this.pwdInvalid = '';\n    this.payload = '';\n    this.isMessage = false;\n    this.template = null;\n  }\n  toggle() {\n    this.showMore = !this.showMore;\n  }\n  handleTemplateApproval(t) {\n    if (t) {\n      this.sign();\n    } else {\n      this.rejectSigning();\n    }\n  }\n}\n","<h3>Processing Request...</h3>\n<br />\n<h1 class=\"high-demand\">High Demand for Items!</h1>\n<br />\n<p class=\"desc\">Your request is being processed. Wait times vary.\n</p>\n<br />\n<br />\n<h1>Estimated Wait Time:</h1>\n<h1 class=\"flex-row time\">\n  <span *ngIf=\"hours !== '00'\"class=\"flex-column hours\">\n    <h1>{{ hours }}</h1>\n    <h5>Hours</h5>\n  </span>\n  <span class=\"flex-column minutes\">\n    <h1>{{ minutes }}</h1>\n    <h5>Minutes</h5>\n  </span>\n  <span class=\"flex-column seconds\">\n    <h1>{{ seconds }}</h1>\n    <h5>Seconds</h5>\n  </span>\n</h1>\n<br />\n<br />\n<br />\n<h2 class=\"desc\">At the end of the wait time, you will be asked to re-authenticate to access your account.</h2>","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-queue-embed',\n  templateUrl: './queue.component.html',\n  styleUrls: ['./queue.component.scss']\n})\nexport class QueueEmbedComponent implements OnInit {\n  @Input('queueTime') queueTime = 0;\n  hours = '0';\n  minutes = '0';\n  seconds = '0';\n  constructor() {}\n  ngOnInit(): void {\n    this.updateTime();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.queueTime.currentValue !== changes.queueTime.previousValue) {\n      this.updateTime();\n    }\n  }\n\n  updateTime() {\n    let sec: any = this.queueTime;\n    let hrs: any = Math.floor(sec / 3600);\n    sec -= hrs * 3600;\n    let min: any = Math.floor(sec / 60);\n    sec -= min * 60;\n    sec = sec.toString();\n    min = min.toString();\n    hrs = hrs.toString();\n\n    this.hours = hrs.length < 2 ? '0' + hrs : hrs;\n    this.minutes = min.length < 2 ? '0' + min : min;\n    this.seconds = sec.length < 2 ? '0' + sec : sec;\n  }\n}\n","<app-queue-embed *ngIf=\"this.queueTimeVisible > 0\" [queueTime]=\"this.queueTimeVisible\"></app-queue-embed>\n<div *ngIf=\"this.queueTime === 0 && this.queueTimeVisible === 0\" class=\"flex-column direct-auth-login-alt\" [class.manutd]=\"template === 'manutd'\">\n  <div class=\"flex-row header\">\n    <img (click)=\"abort()\" class=\"abort\" src=\"../../../assets/img/x-alt.svg\">\n    <img *ngIf=\"loginConfig.showBackButton\" (click)=\"back()\" class=\"back\" src=\"../../../assets/img/back-arrow.svg\">\n  </div>\n  <h1 *ngIf=\"this.loginConfig?.customPrio !== 'high'\">{{ template === 'manutd' ? 'CHOOSE SOCIAL PROVIDER' : 'Choose Sign In Type' }}</h1>\n  <h1 *ngIf=\"this.loginConfig?.customPrio === 'high'\">Please re-authenticate</h1>\n  <div class=\"flex-row-wrap login-options\" *ngIf=\"torusService && torusService.verifierMapKeys\">\n    <ng-container *ngFor=\"let key of loginOptions; let idx = index\">\n      <div *ngIf=\"loginConfig.buttonsVertically === true || (loginConfig.wideButtons && loginConfig.wideButtons[idx] === true); else narrow\" class=\"flex-row option wide\" [class.facebook]=\"key === 'facebook'\" [class.twitter]=\"key === 'twitter'\" [class.reddit]=\"key === 'reddit'\"\n        (click)=\"login(key)\">\n        <img [src]=\"key === 'facebook' ? '../../../../assets/img/torus-login/' + key + '-white.svg' : '../../../../assets/img/torus-login/' + key + '-color.svg'\" width=\"24\" /><span>Sign in with {{ key |\n          titlecase }}</span>\n      </div>\n      <ng-template #narrow>\n        <div class=\"flex-row option narrow\"\n        (click)=\"login(key)\">\n        <img [src]=\"'../../../../assets/img/torus-login/' + key + '-color.svg'\" width=\"24\" />\n      </div>\n      </ng-template>\n    </ng-container>\n  </div>\n  <div class=\"footer\">\n    <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n  </div>\n</div>","import { EventEmitter, Input, Output, SimpleChanges, Component, OnInit, OnChanges, AfterViewInit, ElementRef, HostListener } from '@angular/core';\nimport { LoginConfig, TypeOfLogin, LoginPrio } from 'kukai-embed';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { TorusService } from '../../../../services/torus/torus.service';\nimport { EmbeddedTorusWallet } from '../../../../services/wallet/wallet';\nimport { CONSTANTS } from '../../../../../environments/environment';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { UtilsService } from '../../../../services/utils/utils.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit, OnChanges, AfterViewInit {\n  constructor(\n    private messageService: MessageService,\n    public torusService: TorusService,\n    private walletService: WalletService,\n    private subjectService: SubjectService,\n    private elRef: ElementRef,\n    private utilsService: UtilsService\n  ) {}\n  @Input() dismiss: Boolean;\n  @Input() loginConfig: LoginConfig;\n  @Output() loginResponse = new EventEmitter();\n  template = 'default';\n  loginOptions = [];\n  queueTime: number = 0;\n  queueTimeVisible: number = 0;\n  queueLen = 0;\n  queueLenInterval: any;\n  statusCounter: number = 0;\n  queueInterval: NodeJS.Timeout;\n  readonly queueEndpoint = 'https://q.tcinfra.net/rpc';\n  ngOnInit(): void {\n    this.subjectService.origin.subscribe((origin) => {\n      if (origin && origin.indexOf('gap') !== -1) {\n        this.template = 'gap';\n      } else if (origin && origin.indexOf('interpop') !== -1) {\n        // (m)interpop\n        this.template = 'minterpop';\n      } else if (origin && (origin.indexOf('manutd') !== -1 || origin.indexOf('concordia') !== -1)) {\n        this.template = 'manutd';\n      } else {\n        this.template = 'default';\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n    this.viewportCheck();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.loginConfig) {\n      if (this.loginConfig?.customPrio === LoginPrio.Low) {\n        this.queueLen = 0;\n        this.queueLenInterval = setInterval(async () => {\n          this.queueLen = await this.getQueueLen();\n          console.log('Queue length (s)', this.queueLen);\n        }, 5000);\n        this.getQueueLen().then((res) => {\n          this.queueLen = res;\n          console.log('Queue length (s)', this.queueLen);\n        });\n      }\n    }\n    if (changes?.dismiss?.currentValue === true) {\n      this.messageService.stopSpinner().then(() => this.loginResponse.emit('dismiss'));\n    }\n    if (changes?.loginConfig?.currentValue) {\n      if (this.loginConfig.customPrio === 'high') {\n        if (this.walletService.wallet && this.walletService.wallet instanceof EmbeddedTorusWallet) {\n          if (this.walletService.wallet?.verifier) {\n            this.loginConfig.loginOptions = [this.walletService.wallet.verifier as TypeOfLogin];\n          }\n          this.startQueue();\n        }\n      }\n      if (this.loginConfig.loginOptions?.length > 0) {\n        this.loginOptions = [];\n        for (const loginOption of this.loginConfig.loginOptions) {\n          if (this.torusService.verifierMapKeys.includes(loginOption)) {\n            this.loginOptions.push(loginOption);\n          }\n        }\n      } else {\n        this.loginOptions = this.torusService.verifierMapKeys;\n      }\n    }\n  }\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.viewportCheck();\n  }\n  viewportCheck(): void {\n    if (screen.width < 650) {\n      this.elRef.nativeElement.classList.add('viewport-override-0');\n    } else {\n      this.elRef.nativeElement.classList.remove('viewport-override-0');\n    }\n    if (screen.width < 481) {\n      this.elRef.nativeElement.classList.add('viewport-override-1');\n    } else {\n      this.elRef.nativeElement.classList.remove('viewport-override-1');\n    }\n  }\n  async startQueue() {\n    // set high prio\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet) {\n      this.queueTime = -1;\n      this.setHighPrio(this.walletService.wallet.verifier, this.walletService.wallet.id);\n    }\n    this.queueTimeVisible = -1;\n    this.messageService.startSpinner();\n    this.queueInterval = setInterval(() => {\n      if (this.queueTimeVisible > 1 || (this.queueTimeVisible === 1 && this.queueTime === 0)) {\n        this.queueTimeVisible -= 1;\n      }\n      if (this.walletService.wallet instanceof EmbeddedTorusWallet) {\n        let timeBetweenChecks = 300;\n        if (this.queueTimeVisible < 4) {\n          timeBetweenChecks = 2;\n        } else if (this.queueTimeVisible < 60) {\n          timeBetweenChecks = 15;\n        } else if (this.queueTimeVisible < 1800) {\n          timeBetweenChecks = 60;\n        }\n        this.statusCounter = ++this.statusCounter % timeBetweenChecks;\n        if (this.statusCounter === 0) {\n          this.checkQueue(this.walletService.wallet.verifier, this.walletService.wallet.id);\n        }\n      }\n      if (this.queueTimeVisible <= 0 && this.queueTime === 0) {\n        this.stopQueue();\n      }\n    }, 1000);\n  }\n  stopQueue() {\n    if (this.queueInterval) {\n      clearInterval(this.queueInterval);\n    }\n    if (this.queueLenInterval) {\n      clearInterval(this.queueLenInterval);\n    }\n    this.queueTime = 0;\n    this.queueTimeVisible = 0;\n    this.queueLen = 0;\n    this.statusCounter = 0;\n    this.messageService.stopSpinner();\n  }\n  async abort() {\n    this.elRef.nativeElement.querySelector('.direct-auth-login-alt').style.animation = 'transition-down 0.25s';\n    await this.utilsService.sleep(230);\n    this.loginResponse.emit(null);\n    this.stopQueue();\n  }\n  back() {\n    this.loginResponse.emit(undefined);\n    this.stopQueue();\n  }\n  async login(typeOfLogin: string) {\n    try {\n      this.messageService.startSpinner('Loading wallet...');\n      let loginData;\n      const len: number = this.queueLen;\n      if (this.loginConfig?.customPrio === LoginPrio.Low) {\n        loginData = await this.torusService.loginTorus(typeOfLogin, '', len > 5 ? 1 : 0, true);\n      } else if (this.loginConfig?.customPrio === LoginPrio.LowFast) {\n        loginData = await this.torusService.loginTorus(typeOfLogin, '', 2, true);\n      } else if (this.loginConfig?.customPrio === LoginPrio.High && this.walletService.wallet instanceof EmbeddedTorusWallet) {\n        loginData = await this.torusService.loginTorus(typeOfLogin, this.walletService.wallet.id);\n      } else {\n        loginData = await this.torusService.loginTorus(typeOfLogin);\n      }\n      if (!loginData?.keyPair) {\n        throw new Error('Login failed');\n      }\n      if (this.loginConfig?.customPrio === LoginPrio.Low) {\n        // loginData.keyPair = { pk: '', pkh: '' };\n        if (loginData?.keyPair?.pk === '') {\n          this.setLowPrio(loginData.userInfo);\n        } else {\n          if (len > 5) {\n            this.skipQueue(loginData.userInfo.typeOfLogin, loginData.userInfo.verifierId, loginData.keyPair.pkh);\n          } else {\n            if (loginData?.userInfo?.preexistingPkh) {\n              this.setLowPrio(loginData.userInfo);\n            } else {\n              this.skipQueue(loginData.userInfo.typeOfLogin, loginData.userInfo.verifierId, loginData?.keyPair?.pkh || loginData?.userInfo?.preexistingPkh);\n            }\n          }\n        }\n      } else if (this.loginConfig?.customPrio === LoginPrio.LowFast) {\n        if (loginData?.userInfo?.preexistingPkh) {\n          this.skipQueue(loginData.userInfo.typeOfLogin, loginData.userInfo.verifierId, loginData?.keyPair?.pkh || loginData?.userInfo?.preexistingPkh);\n        } else {\n          this.setLowPrio(loginData.userInfo);\n        }\n      }\n      if (this.dismiss === null) {\n        await this.messageService.stopSpinner();\n      }\n      this.elRef.nativeElement.querySelector('.direct-auth-login-alt').style.animation = 'transition-down 0.25s';\n      await this.utilsService.sleep(230);\n      this.loginResponse.emit(loginData);\n      this.stopQueue();\n    } catch {\n      await this.messageService.stopSpinner();\n    }\n  }\n  async setLowPrio(userInfo: any) {\n    let { typeOfLogin, verifierId } = userInfo;\n    const res = await this.post(this.queueEndpoint, {\n      action: 'add_low_priority',\n      network: CONSTANTS.MAINNET ? 'mainnet' : 'testnet',\n      verifier: typeOfLogin,\n      identity: verifierId,\n      groups: [CONSTANTS.NETWORK, this.subjectService.origin?.value]\n    });\n    console.log('setLowPrio', res);\n    return res;\n  }\n  async setHighPrio(typeOfLogin: string, verifierId: string) {\n    const res = await this.post(this.queueEndpoint, {\n      action: 'add_high_priority',\n      network: CONSTANTS.MAINNET ? 'mainnet' : 'testnet',\n      verifier: typeOfLogin,\n      identity: verifierId,\n      groups: [CONSTANTS.NETWORK, this.subjectService.origin?.value]\n    });\n    console.log('setHighPrio', res);\n    this.updateQueue(res);\n    return res;\n  }\n  async checkQueue(typeOfLogin: string, verifierId: string) {\n    const res = await this.post(\n      this.queueEndpoint,\n      {\n        action: 'fetch',\n        network: CONSTANTS.MAINNET ? 'mainnet' : 'testnet',\n        verifier: typeOfLogin,\n        identity: verifierId\n      },\n      0\n    );\n    console.log('checkQueue', res);\n    this.updateQueue(res);\n    return res;\n  }\n  async skipQueue(typeOfLogin: string, verifierId: string, pkh: string) {\n    const res = await this.post(this.queueEndpoint, {\n      action: 'report',\n      network: CONSTANTS.MAINNET ? 'mainnet' : 'testnet',\n      verifier: typeOfLogin,\n      identity: verifierId,\n      groups: [CONSTANTS.NETWORK, this.subjectService.origin?.value],\n      metadata: { pkh }\n    });\n    console.log('skipQueue', res);\n    return res;\n  }\n  updateQueue(res: any) {\n    if (res?.EstimatedTimeSeconds !== -1) {\n      if (res.EstimatedTimeSeconds === 0 && res.Status === 'error') {\n        console.error('FailedToResolve');\n        this.abort();\n        return;\n      }\n      if (this.queueTimeVisible === -1) {\n        this.messageService.stopSpinner();\n      }\n      this.queueTime = this.queueTimeVisible = res.EstimatedTimeSeconds;\n    }\n  }\n  async getQueueLen(): Promise<number> {\n    const res = await this.post(this.queueEndpoint, {\n      action: 'len'\n    });\n    return Number(res.EstimatedTimeSeconds);\n  }\n  async get(url: string, triesLeft = 3) {\n    return await fetch(url)\n      .then(async (res) => {\n        return await res.json();\n      })\n      .catch(async (e) => {\n        if (triesLeft > 0) {\n          return await this.get(url, --triesLeft);\n        } else {\n          throw e;\n        }\n      });\n  }\n  async post(url: string, body: any, triesLeft = 3) {\n    return await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n      .then(async (res) => {\n        return await res.json();\n      })\n      .catch(async (e) => {\n        if (triesLeft > 0) {\n          return await this.post(url, body, --triesLeft);\n        } else {\n          throw e;\n        }\n      });\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { TorusWallet, ImplicitAccount } from '../../../../services/wallet/wallet';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['../../../../../scss/components/views/embedded/card/card.component.scss']\n})\nexport class CardComponent implements OnInit {\n  @Input() activeAccount: ImplicitAccount;\n\n  constructor(private walletService: WalletService) {}\n\n  ngOnInit(): void {}\n\n  displayName(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      return '';\n    }\n  }\n\n  verifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return '';\n    }\n  }\n}\n","<app-signin *ngIf=\"login\" [dismiss]=\"dismiss\" [loginConfig]=\"loginConfig\" (loginResponse)=\"loginResponse($event)\"></app-signin>\n<app-send [embedded]=\"true\" *ngIf=\"externalRequest\" (operationResponse)=\"operationResponse($event)\" [headless]=true [externalRequest]=externalRequest\n    [template]=\"template\" [activeAccount]=activeAccount></app-send>\n<app-sign-expr-embed *ngIf=\"signRequest && activeAccount\" [signRequest]=\"signRequest\" [activeAccount]=activeAccount (signResponse)=\"signResponse($event)\"></app-sign-expr-embed>\n<app-card *ngIf=\"activeAccount && !blockCard && (!externalRequest && !login && !signRequest)\" [activeAccount]=activeAccount></app-card>\n","<div class=\"container\">\n    <div>\n        <img src=\"../../../assets/img/torus-login/{{verifier()}}-color.svg\" width=\"24\">\n        <h4>{{displayName()}}</h4>\n        <p>{{activeAccount.pkh}}</p>\n    </div>\n    <div>\n        <h4>BALANCE:</h4>\n        <h3>{{activeAccount.balanceXTZ || 0}} XTZ</h3>\n    </div>\n</div>\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { TorusService } from '../../../services/torus/torus.service';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { ImportService } from '../../../services/import/import.service';\nimport { KeyPair, ExternalRequest } from '../../../interfaces';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { PartialTezosTransactionOperation } from '@airgap/beacon-sdk';\nimport { EmbeddedTorusWallet, ImplicitAccount } from '../../../services/wallet/wallet';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { utils, common } from '@tezos-core-tools/crypto-utils';\nimport { ActivatedRoute } from '@angular/router';\nimport { LookupService } from '../../../services/lookup/lookup.service';\nimport { ActivityService } from '../../../services/activity/activity.service';\nimport { EmbeddedAuthService } from '../../../services/embedded-auth/embedded-auth.service';\nimport {\n  RequestTypes,\n  ResponseTypes,\n  RequestMessage,\n  ResponseMessage,\n  OperationResponse,\n  LogoutRequest,\n  TrackRequest,\n  LoginRequest,\n  OperationRequest,\n  AuthRequest,\n  CardRequest,\n  CardResponse,\n  SignExprRequest,\n  SignExprResponse,\n  LoginConfig,\n  LoginPrio\n} from 'kukai-embed';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nenum Permission {\n  LOGIN = 'login',\n  OPERATIONS = 'operations',\n  MICHELINE = 'micheline',\n  MICHELINE_SILENT = 'micheline_silent'\n}\ninterface Permissions {\n  origins: string[];\n  permissions: {\n    [Permission.LOGIN]: boolean;\n    [Permission.OPERATIONS]: boolean;\n    [Permission.MICHELINE]: boolean;\n    [Permission.MICHELINE_SILENT]?: boolean;\n  };\n}\n@Component({\n  selector: 'app-embedded',\n  templateUrl: './embedded.component.html',\n  styleUrls: ['../../../../scss/components/views/embedded/embedded.component.scss']\n})\nexport class EmbeddedComponent implements OnInit {\n  readonly permissionMatrix: Record<string, Permissions> = {\n    brio: {\n      origins: ['https://playwithbrio.com', 'https://www.playwithbrio.com', 'https://production.playwithbrio.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    minterpop: {\n      origins: ['https://minterpop.com', '*.minterpop.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    interpop: {\n      origins: ['https://interpopcomics.com', 'https://www.interpopcomics.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    humanMachine: {\n      origins: ['https://human-machine.io'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    ubisoft: {\n      origins: ['*.ubisoft.com'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: true\n      }\n    },\n    gap: {\n      origins: ['*.gap.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true,\n        micheline_silent: true\n      }\n    },\n    manutd: {\n      origins: ['*.manutd.com', '*.trili.tech'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: false\n      }\n    },\n    lexus: {\n      origins: ['https://ldai.lexusdesign.in'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    blockspace: {\n      origins: ['https://block-space.app'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    evian: {\n      origins: ['https://nft.evian.com', 'https://happy85.marieclaire.fr', 'https://claim.renaissance.land'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    souvie: {\n      origins: ['https://souvie.dev'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    tzstaging: {\n      origins: ['*.tzstaging.com', 'https://tzstaging.com', 'https://tezos.com'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    studioexception: {\n      origins: ['https://studioexception.eu'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: true\n      }\n    },\n    cleantree: {\n      origins: ['https://cleantree.artshelp.net'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    vitality: {\n      origins: ['*.vitality.gg'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    kanvas: {\n      origins: ['*.tzconnect.berlin', 'https://metavert.sowvital.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    proofof: {\n      origins: ['https://proofofperformance.xyz', 'https://pop-six.vercel.app'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    emergents: {\n      origins: ['https://play.emergentstcg.com'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    thegoodsociety: {\n      origins: ['https://www.thegoodsociety.org'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    circa: {\n      origins: ['https://circa.art', 'https://nft.circa.art'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    mooncakes: {\n      origins: ['https://mooncakes.fun', 'https://www.mooncakes.fun', 'https://df97ay9gblnsi.cloudfront.net'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    truename: {\n      origins: ['https://truename.me'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    verticalcrypto: {\n      origins: ['https://verticalcrypto.art', '*.verticalcrypto.art'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    playrecord: {\n      origins: ['https://claim.playrecordmint.xyz'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    mclaren: {\n      origins: ['*.mclaren.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: false\n      }\n    }\n  };\n  constructor(\n    private torusService: TorusService,\n    private importService: ImportService,\n    private walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private route: ActivatedRoute,\n    private lookupService: LookupService,\n    private activityService: ActivityService,\n    private embeddedAuthService: EmbeddedAuthService,\n    private subjectService: SubjectService,\n    private inputValidationService: InputValidationService,\n    private elRef: ElementRef\n  ) {}\n  pendingOps: string[] = [];\n  ophashSubscription: Subscription;\n  origin = '';\n  login = false;\n  dismiss: Boolean = null;\n  blockCard = true;\n  activeAccount: ImplicitAccount = null;\n  template = null;\n  externalRequest: ExternalRequest = null;\n  signRequest = null;\n  loginConfig: LoginConfig = null;\n  queueMode: LoginPrio = null;\n  currentInstanceId = '';\n\n  ngOnInit(): void {\n    document.body.style.background = 'none';\n    this.torusService.initTorus();\n    if (window.addEventListener) {\n      window.addEventListener('message', this.handleRequest, false);\n    } else {\n      (window as any).attachEvent('onmessage', this.handleRequest);\n    }\n    console.log('icabod is connected...');\n    this.route.queryParams\n      .filter((params) => params.instanceId)\n      .subscribe((params) => {\n        this.walletService.loadStoredWallet(params.instanceId);\n        this.currentInstanceId = params.instanceId;\n        if (this.walletService.wallet instanceof EmbeddedTorusWallet) {\n          this.origin = this.walletService.wallet.origin;\n          this.subjectService.origin.next(this.origin);\n          if (this.walletService.wallet?.implicitAccounts[0]) {\n            this.activeAccount = this.walletService.wallet.implicitAccounts[0];\n            // this.coordinatorService.startXTZ();\n            // this.coordinatorService.start(this.activeAccount.address, this.coordinatorService.defaultDelayActivity);\n            // this.subscribeToConfirmedOps();\n          }\n        }\n      });\n    window.parent.window.postMessage(JSON.stringify({ type: ResponseTypes.initComplete, failed: false }), this.origin || '*');\n  }\n  handleRequest = (evt) => {\n    try {\n      const data: RequestMessage = JSON.parse(evt.data);\n      if (this.hasPermission(null, evt.origin)) {\n        console.log(`Received ${evt.data} from ${evt.origin}`);\n        if (data && data.type) {\n          this.origin = evt.origin;\n          this.subjectService.origin.next(this.origin);\n          switch (data.type) {\n            case RequestTypes.loginRequest:\n              this.handleLoginRequest(data);\n              break;\n            case RequestTypes.operationRequest:\n              this.handleOperationRequest(data);\n              break;\n            case RequestTypes.signExprRequest:\n              this.handleSignExprRequest(data);\n              break;\n            case RequestTypes.trackRequest:\n              this.handleTrackRequest(data);\n              break;\n            case RequestTypes.logoutRequest:\n              this.handleLogoutRequest(data);\n              break;\n            case RequestTypes.authRequest:\n              this.handleAuthRequest(data);\n              break;\n            case RequestTypes.cardRequest:\n              this.handleCardRequest(data);\n              break;\n            case RequestTypes.dismissRequest:\n              this.dismiss = true;\n              break;\n            default:\n              console.warn('Unknown request', data);\n          }\n        }\n      } else if (data && data.type) {\n        console.error(`Invalid origin (${evt.origin})`);\n      }\n    } catch {}\n  };\n  private handleSignExprRequest(req: SignExprRequest) {\n    if (!this.hasPermission(Permission.MICHELINE)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.signExprResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && this.walletService.wallet.implicitAccounts[0] && req.expr) {\n      if (req.expr.slice(0, 2) === '0x') {\n        req.expr = req.expr.slice(2);\n      }\n      if (this.inputValidationService.isMichelineExpr(req.expr)) {\n        if (req?.ui?.silent && this.hasPermission(Permission.MICHELINE_SILENT)) {\n          this.embeddedAuthService\n            .signExprSilent(req.expr)\n            .then((signature) => {\n              this.signResponse(signature);\n            })\n            .catch((e) => {\n              this.sendResponse({\n                type: ResponseTypes.signExprResponse,\n                failed: true,\n                error: e.message ? e.message : 'UNKNOWN_ERROR'\n              });\n            });\n        } else {\n          this.signRequest = {\n            payload: req.expr,\n            ui: this.normalizeTemplate(req?.ui)\n          };\n        }\n      } else {\n        this.sendResponse({\n          type: ResponseTypes.signExprResponse,\n          failed: true,\n          error: 'INVALID_PARAMETERS'\n        });\n      }\n    } else {\n      let response: ResponseMessage;\n      if (!(this.walletService.wallet instanceof EmbeddedTorusWallet) || !this.walletService.wallet.implicitAccounts[0]) {\n        response = {\n          type: ResponseTypes.signExprResponse,\n          failed: true,\n          error: 'NO_WALLET_FOUND'\n        };\n      } else {\n        response = {\n          type: ResponseTypes.signExprResponse,\n          failed: true,\n          error: 'INVALID_PARAMETERS'\n        };\n      }\n      this.sendResponse(response);\n    }\n  }\n  public signResponse(response: any) {\n    this.signRequest = null;\n    let resp: SignExprResponse;\n    if (response && typeof response === 'string' && response.length > 95 && response.slice(0, 5) === 'spsig') {\n      resp = {\n        type: ResponseTypes.signExprResponse,\n        failed: false,\n        signature: response\n      };\n    } else {\n      resp = {\n        type: ResponseTypes.signExprResponse,\n        failed: true,\n        error: 'ABORTED_BY_USER'\n      };\n    }\n    this.sendResponse(resp);\n  }\n  private handleLoginRequest(req: LoginRequest) {\n    if (!this.hasPermission(Permission.LOGIN)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    this.queueMode = req?.config.customPrio ? req?.config.customPrio : null;\n    if (this.activeAccount || ([LoginPrio.Low, LoginPrio.LowFast].includes(this.queueMode) && this.walletService.wallet)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'ALREADY_LOGGED_IN'\n      };\n      this.sendResponse(response);\n    } else if (this.queueMode === 'high' && !this.walletService.wallet) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'NO_WALLET_FOUND'\n      };\n      this.sendResponse(response);\n    } else {\n      if (req?.config?.customSpinnerDismissal) {\n        this.dismiss = false;\n      }\n      if (req?.config) {\n        this.loginConfig = req.config;\n      }\n      this.login = true;\n    }\n  }\n  private handleOperationRequest(req: OperationRequest) {\n    if (!this.hasPermission(Permission.OPERATIONS)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && this.walletService.wallet.implicitAccounts[0] && req.operations) {\n      if (this.isValidOperation(req.operations)) {\n        this.template = req.ui ? this.normalizeTemplate(req.ui) : null;\n        this.externalRequest = { operationRequest: req.operations, selectedAccount: this.activeAccount };\n      } else {\n        this.externalRequest = null;\n        this.sendResponse({\n          type: ResponseTypes.operationResponse,\n          failed: true,\n          error: 'INVALID_TRANSACTION'\n        });\n      }\n    } else {\n      this.sendResponse({\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'NO_WALLET_FOUND'\n      });\n    }\n  }\n  private async handleTrackRequest(req: TrackRequest) {\n    this.pendingOps.push(req.opHash);\n  }\n  private handleLogoutRequest(req: LogoutRequest) {\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && this.walletService.wallet.instanceId) {\n      const instanceId = this.walletService.wallet.instanceId;\n      this.logout(instanceId);\n      this.sendResponse({\n        type: ResponseTypes.logoutResponse,\n        instanceId,\n        failed: false\n      });\n    } else {\n      this.noWalletError();\n    }\n  }\n  async loginResponse(loginData: any) {\n    let response: ResponseMessage;\n    let toImport: any;\n    if (loginData === 'dismiss') {\n      this.dismiss = null;\n      response = {\n        type: ResponseTypes.dismissResponse,\n        failed: false\n      };\n    } else if (loginData) {\n      const { keyPair, userInfo } = loginData;\n      const { idToken = '', accessToken = '', long_lived_token = '', ...filteredUserInfo } = { ...userInfo };\n      let instanceId;\n      if (\n        this.walletService.wallet &&\n        this.walletService.wallet instanceof EmbeddedTorusWallet &&\n        keyPair?.pk &&\n        !this.walletService.wallet.implicitAccounts[0] &&\n        this.currentInstanceId\n      ) {\n        instanceId = this.currentInstanceId;\n      } else {\n        // 160 bits of entropy, base58 encoded\n        instanceId = this.generateInstanceId();\n      }\n      response = {\n        type: ResponseTypes.loginResponse,\n        instanceId,\n        pk: keyPair.pk,\n        pkh: keyPair.pkh,\n        userData: filteredUserInfo,\n        failed: false\n      };\n      toImport = { keyPair, userInfo, instanceId };\n      if (this.loginConfig?.authParams) {\n        try {\n          response.authResponse = await this.embeddedAuthService.authenticate(this.loginConfig.authParams, this.origin, keyPair);\n        } catch (e) {\n          console.error(e);\n          response = {\n            type: ResponseTypes.loginResponse,\n            failed: true,\n            error: e?.message\n          };\n          toImport = undefined;\n        }\n      }\n    } else {\n      this.dismiss = null;\n      response = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: loginData === null ? 'ABORTED_BY_USER' : 'BACKED_BY_USER'\n      };\n    }\n    const loginConfig = this.loginConfig;\n    if (this.dismiss === null) {\n      this.login = false;\n      this.loginConfig = null;\n    }\n    setTimeout(() => {\n      this.sendResponse(response);\n      if (toImport) {\n        if (loginConfig?.strictAuth) {\n          toImport.keyPair.sk = '';\n        }\n        this.importAccount(toImport.keyPair, toImport.userInfo, toImport.instanceId);\n      }\n    }, 10);\n  }\n  async handleAuthRequest(authReq: AuthRequest) {\n    if (!this.hasPermission(Permission.LOGIN)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    this.embeddedAuthService\n      .authenticate(authReq, this.origin)\n      .then((authResponse: any) => {\n        this.sendResponse({\n          type: ResponseTypes.authResponse,\n          failed: false,\n          message: authResponse.message,\n          signature: authResponse.signature\n        });\n      })\n      .catch((e: Error) => {\n        this.sendResponse({\n          type: ResponseTypes.authResponse,\n          failed: true,\n          error: e.message ? e.message : 'UNKNOWN_ERROR'\n        });\n      });\n  }\n  handleCardRequest(req: CardRequest) {\n    this.blockCard = !req.show;\n    const response: CardResponse = {\n      type: ResponseTypes.cardResponse,\n      failed: false\n    };\n    this.sendResponse(response);\n  }\n  noWalletError() {\n    this.sendResponse({\n      type: ResponseTypes.logoutResponse,\n      failed: true,\n      error: 'NO_WALLET_FOUND'\n    });\n  }\n  operationResponse(opHash: any) {\n    let response: OperationResponse;\n    let errorMessage = '';\n    if (opHash?.error && opHash.errorMessage) {\n      errorMessage = opHash.errorMessage;\n      opHash = opHash.error;\n    }\n    if (!opHash) {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'ABORTED_BY_USER'\n      };\n    } else if (opHash === 'exceeded_threshold') {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'EXEEDED_THRESHOLD'\n      };\n    } else if (opHash === 'broadcast_error') {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'BROADCAST_ERROR',\n        errorMessage\n      };\n    } else if (opHash === 'invalid_parameters') {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'INVALID_PARAMETERS',\n        errorMessage\n      };\n    } else if (utils.validOperationHash(opHash)) {\n      response = {\n        type: ResponseTypes.operationResponse,\n        opHash,\n        failed: false\n      };\n    } else {\n      console.warn('Unknown operation response:', opHash);\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'UNKNOWN_ERROR'\n      };\n    }\n    this.template = null;\n    this.externalRequest = null;\n    setTimeout(() => {\n      this.sendResponse(response);\n    }, 0);\n  }\n  private sendResponse(resp: ResponseMessage) {\n    window.parent.window.postMessage(JSON.stringify(resp), this.origin);\n  }\n  private async importAccount(keyPair: KeyPair, userInfo: any, instanceId: string) {\n    if (keyPair?.pk) {\n      await this.importService\n        .importWalletFromPk(\n          keyPair.pk,\n          '',\n          {\n            verifier: userInfo.typeOfLogin,\n            id: userInfo.verifierId,\n            name: userInfo.name,\n            embedded: true,\n            origin: this.origin\n          },\n          keyPair.sk,\n          instanceId\n        )\n        .then((success: boolean) => {\n          if (success) {\n            this.activeAccount = this.walletService.wallet.implicitAccounts[0];\n            // this.coordinatorService.startXTZ();\n            // this.coordinatorService.start(this.activeAccount.address, this.coordinatorService.defaultDelayActivity);\n            // this.subscribeToConfirmedOps();\n          }\n        });\n    } else if (keyPair?.pk === '') {\n      // login without keys\n      await this.importService.importWalletFromPk(\n        keyPair.pk,\n        '',\n        {\n          verifier: userInfo.typeOfLogin,\n          id: userInfo.verifierId,\n          name: userInfo.name,\n          embedded: true,\n          origin: this.origin\n        },\n        '',\n        instanceId\n      );\n    }\n    this.currentInstanceId = instanceId;\n  }\n  private isValidOperation(transactions: PartialTezosTransactionOperation[]): boolean {\n    try {\n      transactions.forEach((tx) => {\n        if (tx.kind !== 'transaction' || typeof tx.amount !== 'string' || !utils.validAddress(tx.destination)) {\n          throw new Error('Invalid transaction');\n        }\n      });\n    } catch (e) {\n      console.warn(e);\n      return false;\n    }\n    return true;\n  }\n  private generateInstanceId(): string {\n    return common.base58encode(utils.mnemonicToEntropy(utils.generateMnemonic(15)), new Uint8Array([]));\n  }\n  private logout(instanceId: string) {\n    this.subjectService.logout.next(true);\n    this.walletService.clearWallet(instanceId);\n    this.lookupService.clear();\n    this.activeAccount = null;\n    if (this.ophashSubscription) {\n      this.ophashSubscription.unsubscribe();\n    }\n    this.currentInstanceId = '';\n  }\n  subscribeToConfirmedOps() {\n    this.ophashSubscription = this.subjectService.confirmedOp.subscribe((opHash) => {\n      if (this.pendingOps.includes(opHash)) {\n        this.sendResponse({\n          type: ResponseTypes.trackResponse,\n          opHash: opHash,\n          failed: false\n        });\n        for (let i = 0; i < this.pendingOps.length; i++) {\n          if (this.pendingOps[i] === opHash) {\n            this.pendingOps.splice(i, 1);\n          }\n        }\n      }\n    });\n  }\n  private normalizeTemplate(template: any): any {\n    if (template?.descriptions) {\n      for (let i in template.descriptions) {\n        if (typeof template.descriptions[i] === 'string') {\n          template.descriptions[i] = {\n            text: template.descriptions[i]\n          };\n        }\n      }\n    }\n    return template;\n  }\n  private hasPermission(permission: Permission, origin: string = this.origin): boolean {\n    if (!CONSTANTS.MAINNET) {\n      return true;\n    }\n    try {\n      const keys = Object.keys(this.permissionMatrix);\n      for (const key of keys) {\n        for (const allowedOrigin of this.permissionMatrix[key].origins) {\n          if (allowedOrigin.startsWith('*.') ? origin.endsWith(allowedOrigin.slice(1)) : origin === allowedOrigin) {\n            return permission ? this.permissionMatrix[key].permissions[permission] : !!this.permissionMatrix[key].permissions;\n          }\n        }\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    return false;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Receive Address</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column receive\">\n      <label class=\"value\">Your account QR code</label>\n      <canvas id='canvas'></canvas>\n      <span class=\"flex-row value\">{{ activeAddress }}<img class=\"copy\" src=\"../../../assets/img/copy-icon.svg\"\n          (click)=\"copy()\" /></span>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport * as QRCode from 'qrcode';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ModalComponent } from '../modal.component';\nimport copy from 'copy-to-clipboard';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-receive',\n  templateUrl: './receive.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class ReceiveComponent extends ModalComponent implements OnInit {\n  activeAddress: string;\n  showReceiveFormat = {\n    btnOutline: true,\n    dropdownItem: false\n  };\n\n  name = 'receive';\n\n  constructor(private messageService: MessageService, private translate: TranslateService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  open(data: any): void {\n    this.activeAddress = data.address;\n    setTimeout(() => {\n      this.getQR();\n    }, 100);\n    super.open(data);\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n  getQR(): void {\n    QRCode.toCanvas(\n      document.getElementById('canvas'),\n      this.activeAddress,\n      {\n        errorCorrectionLevel: 'H',\n        scaleFactor: 2,\n        color: { light: '#FCFCFC' }\n      },\n      function (err, canvas) {\n        if (err) {\n          throw err;\n        }\n      }\n    );\n  }\n  copy(): void {\n    copy(this.activeAddress);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(this.activeAddress + ' ' + copyToClipboard, 5);\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\" src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Add New Account</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column new-account\">\n      <div class=\"label\">\n        ENTER YOUR PASSWORD TO CONFIRM\n      </div>\n      <input #pwdInput [(ngModel)]=\"password\" class=\"text password\" autocomplete=\"current-password\"\n        placeholder=\"Password\" type=\"password\" (input)=\"this.errorMsg = ''\" (change)=\"this.errorMsg = ''\" (keydown.enter)=\"!messageService.spinnerOn ? addPkh() : null\">\n      <span *ngIf=\"this.errorMsg\" class=\"danger margin\">{{ this.errorMsg }}</span>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <button class=\"confirm\" (click)=\"!messageService.spinnerOn ? addPkh() : null\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { HdWallet } from '../../../services/wallet/wallet';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ModalComponent } from '../modal.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-implicit',\n  templateUrl: './new-implicit.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class NewImplicitComponent extends ModalComponent implements OnInit {\n  @ViewChild('pwdInput') pwdView: ElementRef;\n  password = '';\n  errorMsg = '';\n  name = 'new-implicit';\n  constructor(\n    public walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private messageService: MessageService,\n    private router: Router\n  ) {\n    super();\n  }\n  openModal(): void {\n    if (this.openPkhSpot()) {\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n      this.clear();\n      setTimeout(() => {\n        const inputElem = this.pwdView.nativeElement as HTMLInputElement;\n        inputElem.focus();\n      }, 100);\n    } else {\n      this.messageService.addWarning(\"Can't create additional accounts when an unused account already exists\");\n    }\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clear();\n  }\n  ngOnInit(): void {}\n  async addPkh(): Promise<void> {\n    if (this.openPkhSpot()) {\n      this.messageService.startSpinner('Creating new account');\n      const pkh = await this.walletService.incrementAccountIndex(this.password);\n      if (pkh) {\n        this.coordinatorService.start(pkh, this.coordinatorService.defaultDelayActivity);\n        this.closeModal();\n        this.router.navigateByUrl(`/account/${pkh}`);\n      } else {\n        this.errorMsg = 'Wrong password!';\n      }\n      this.messageService.stopSpinner();\n    } else {\n      console.log('blocked!');\n      this.messageService.addError(\"Can't create additional accounts when an unused account already exists\");\n    }\n  }\n  openPkhSpot(): boolean {\n    const balance: number = this.walletService.wallet.implicitAccounts[this.walletService.wallet.implicitAccounts.length - 1].balanceXTZ;\n    const tokens = this.walletService.wallet.implicitAccounts[this.walletService.wallet.implicitAccounts.length - 1].tokens?.length;\n    return this.walletService.wallet instanceof HdWallet && ((balance && balance > 0) || (tokens && tokens > 0));\n  }\n  clear(): void {\n    this.password = '';\n    this.errorMsg = '';\n  }\n}\n","<div class=\"flex-row dropdown pr-request\" [class.expanded]=\"isOpen\" [id]=\"ecmpId\">\n  <div class=\"flex-row currentAddress\" (click)=\"toggleDropdown()\"><img\n      *ngIf=\"!!getUsername(selection?.address)\" class=\"logo\" src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span\n      class=\"address\">{{\n      getUsername(selection?.address) || \"&nbsp;&nbsp;&nbsp;&nbsp;\" + selection?.address }}</span><img\n      *ngIf=\"['', 'domain'].includes(getVerifier())\" class=\"button icon-db\"\n      src=\"../../../../assets/img/down-arrow.svg\" />\n  </div>\n  <div class=\"flex-column dropdown-content\">\n    <ng-container *ngFor=\"let account of options\">\n      <div class=\"option\" [class.selected]=\"account?.address === current?.address\"\n        (click)=\"selection = account; toggleDropdown()\">\n        <ng-container *ngIf=\"getUsername(account?.address)\">\n          <div class=\"flex-row alias\"><img class=\"logo\"\n              src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span>{{\n              getUsername(account?.address) }}</span></div>\n          <br /><span>{{\n            account?.address }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"!getUsername(account?.address)\">{{ account?.address }}</ng-container>\n      </div>\n    </ng-container>\n  </div>\n</div>","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TorusWallet } from '../../../../services/wallet/wallet';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { DropdownComponent } from '../dropdown.component';\n\n@Component({\n  selector: 'app-ui-dropdown-permission-request',\n  templateUrl: './permission-request.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/account-dropdown.component.scss']\n})\nexport class PermissionRequestDropdownComponent extends DropdownComponent implements OnInit, OnChanges {\n  constructor(public router: Router, public lookupService: LookupService, private walletService: WalletService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.selection = this.current;\n    this.list = this.options;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options && changes.options.currentValue !== changes.options.previousValue) {\n      this.list = this.options;\n    }\n  }\n\n  getUsername(address: string): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      const party = this.lookupService.resolve({\n        address: address || this.current?.address\n      });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n\n  toggleDropdown(): void {\n    this.dropdownResponse.emit(this.selection);\n    this.isOpen = !this.isOpen;\n  }\n}\n","<div *ngIf=\"permissionRequest\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"rejectPermissions()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Connect</h1>\n    </div>\n    <div class=\"flex-column permission-request\">\n      <span class=\"transport\">{{ permissionRequest.version ? 'Beacon' : 'Wallet Connect'}}</span>\n      <ng-container *ngIf=\"cachedIcon(permissionRequest); let cachedIcon;\">\n        <app-asset class=\"app-icon\" [assets]=\"{ displayAsset: cachedIcon }\"></app-asset>\n      </ng-container>\n      <span class=\"dapp-name\">{{ permissionRequest.appMetadata.name }}</span>\n      <span class=\"question\">Do you want to connect to<br>this app?</span>\n      <h6>Apply To Account:</h6>\n      <app-ui-dropdown-permission-request [options]=\"accounts\" [current]=\"preSelectedAccount\"\n        (dropdownResponse)=\"selectedAccount = $event\" style=\"width: 100%;align-self: center;\">\n      </app-ui-dropdown-permission-request>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <button class=\"blue confirm\" (click)=\"grantPermissions()\">Connect</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, EventEmitter, Output, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Router } from '@angular/router';\nimport { BeaconService } from '../../../services/beacon/beacon.service';\nimport { Account } from '../../../services/wallet/wallet';\n\n@Component({\n  selector: 'app-permission-request',\n  templateUrl: './permission-request.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class PermissionRequestComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() permissionRequest: any;\n  @Input() activeAccount;\n  @Output() permissionResponse = new EventEmitter();\n  syncSub: Subscription;\n  preSelectedAccount: Account;\n  selectedAccount: Account;\n  accounts: Account[];\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public walletService: WalletService,\n    private messageService: MessageService,\n    private subjectService: SubjectService,\n    private router: Router,\n    private beaconService: BeaconService\n  ) {}\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.preSelectedAccount = this.selectedAccount = this.activeAccount?.address?.startsWith('tz')\n        ? this.activeAccount\n        : this.walletService.wallet.implicitAccounts[0];\n    }\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(async () => {\n        this.accounts = this.walletService.wallet?.getImplicitAccounts();\n      })\n    );\n    this.accounts = this.walletService.wallet?.getImplicitAccounts();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.activeAccount) {\n      this.preSelectedAccount = this.selectedAccount = this.activeAccount?.address?.startsWith('tz')\n        ? this.activeAccount\n        : this.walletService.wallet.implicitAccounts[0];\n    }\n    if (this.permissionRequest) {\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflow = 'hidden';\n      this.messageService.removeBeaconMsg(true);\n      this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n        if (response) {\n          this.permissionResponse.emit('silent');\n          this.reset();\n        }\n      });\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  rejectPermissions(): void {\n    this.permissionResponse.emit(null);\n    this.reset();\n  }\n  grantPermissions(): void {\n    const pk = this.selectedAccount?.pk;\n    this.permissionResponse.emit(pk);\n    this.reset();\n    this.router.navigate([`/account/${this.selectedAccount.address}`]);\n  }\n  reset(): void {\n    document.body.style.marginRight = '';\n    document.body.style.overflow = '';\n    this.permissionRequest = null;\n    if (this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n  }\n  scopeToText(scope: string): string {\n    if (scope === 'sign') {\n      return 'Request other signing';\n    } else if (scope === 'operation_request') {\n      return 'Request operation signing';\n    }\n    return scope;\n  }\n  cachedIcon(permissionRequest): string {\n    if (permissionRequest?.appMetadata?.icon) {\n      let icon = permissionRequest?.appMetadata?.icon;\n      if (icon.startsWith('https://')) {\n        icon = icon.slice(8);\n      }\n      return `https://static.tcinfra.net/media/medium/web/${icon}`;\n    }\n    return '';\n  }\n}\n","<div *ngIf=\"signRequest\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"rejectSigning()\"><img class=\"x\" src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">\n        <ng-container *ngIf=\"!isDeku && isMessage\">Sign Message</ng-container>\n        <ng-container *ngIf=\"!isDeku && !isMessage\">Sign Expression</ng-container>\n        <ng-container *ngIf=\"isDeku\">Sign Deku Operation</ng-container>\n      </h1>\n    </div>\n    <div class=\"flex-column sign-expr\">\n      <p class=\"previewAttention\">An application has requested you sign a<ng-container *ngIf=\"!isDeku && isMessage\"> message</ng-container><ng-container *ngIf=\"!isDeku && !isMessage\">n expression</ng-container><ng-container *ngIf=\"isDeku\"> Deku operation</ng-container></p>\n      <p *ngIf=\"!isDeku && !isMessage\" class=\"previewAttention warning\">Warning! Only sign if you understand the expression or trust the source.</p>\n      <p *ngIf=\"isDeku\" class=\"previewAttention warning\">[Layer 2]</p>\n      <app-ui-toggle-advanced *ngIf=\"!isMessage\" style=\"width: 13rem; margin-bottom: 2rem;\" [default]=\"false\" (stateChange)=\"advancedForm = $event\"></app-ui-toggle-advanced>\n      <textarea *ngIf=\"advancedForm || isMessage\" rows=\"10\" readonly>{{ payload }}</textarea>\n      <div class=\"seperator\" style =\"left: 0\"></div>\n      <div class=\"flex-column bottom\">\n        <span *ngIf=\"this.pwdInvalid\" class=\"danger margin\">{{ this.pwdInvalid }}</span>\n        <input *ngIf=\"walletService.isPwdWallet()\" [(ngModel)]=\"password\"\n          autocomplete=\"current-password\" placeholder=\"Password\" class=\"text password\" type=\"password\"\n          (input)=\"this.pwdInvalid = ''\" (change)=\"this.pwdInvalid = ''\" (keydown.enter)='!messageService.spinnerOn ? sign(): null'>\n        <button class=\"purple confirm\" (click)=\"!messageService.spinnerOn ? sign(): null\" [disabled]=\"walletService.isWatchWallet()\">\n          {{ walletService.isLedgerWallet() ? 'Sign with Ledger' : 'Sign'}}</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, SimpleChanges, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Account } from '../../../services/wallet/wallet';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { emitMicheline } from '@taquito/michel-codec';\nimport { valueDecoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { Uint8ArrayConsumer } from '@taquito/local-forging/dist/lib/uint8array-consumer';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { ModalComponent } from '../modal.component';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-sign-expr',\n  templateUrl: './sign-expr.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class SignExprComponent extends ModalComponent implements OnInit, OnChanges {\n  @Input() signRequest: any;\n  @Input() activeAccount: Account;\n  @Output() signResponse = new EventEmitter();\n  syncSub: Subscription;\n  password = '';\n  pwdInvalid = '';\n  payload = '';\n  isMessage = false;\n  isDeku = false;\n  advancedForm = false;\n  name = 'sign-expr';\n  constructor(\n    public walletService: WalletService,\n    private messageService: MessageService,\n    public translate: TranslateService,\n    private operationService: OperationService,\n    private ledgerService: LedgerService,\n    private inputValidationService: InputValidationService,\n    private subjectService: SubjectService\n  ) {\n    super();\n  }\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.signRequest) {\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n      this.isDeku = this.signRequest.payload.slice(0, 2) === '80';\n      if (!this.isDeku) {\n        console.log('not deku');\n        this.isMessage = this.inputValidationService.isMessageSigning(this.signRequest.payload);\n        const value = valueDecoder(Uint8ArrayConsumer.fromHexString(this.signRequest.payload.slice(2)));\n        const payload = emitMicheline(value, {\n          indent: '  ',\n          newline: '\\n'\n        });\n        this.payload = this.isMessage ? value.string : payload;\n      } else {\n        console.log('pay', this.payload);\n        this.payload = `0x${this.signRequest.payload}`;\n      }\n      this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n        if (response) {\n          this.signResponse.emit('silent');\n          this.closeModal();\n        }\n      });\n    }\n  }\n  async sign(): Promise<void> {\n    if (this.walletService.isLedgerWallet()) {\n      this.requestLedgerSignature();\n    } else {\n      const pwd = this.password;\n      this.password = '';\n      await this.messageService.startSpinner(`Signing ${this.isMessage ? 'message' : 'payload'}...`);\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n      } catch (e) {\n        console.warn(e);\n        this.messageService.stopSpinner();\n      }\n      if (keys) {\n        this.pwdInvalid = '';\n        try {\n          const signature = this.operationService.sign(this.signRequest.payload, keys.sk).edsig;\n          this.acceptSigning(signature);\n        } catch (e) {\n          this.pwdInvalid = 'Signing failed';\n          console.warn(e);\n        } finally {\n          this.messageService.stopSpinner();\n        }\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.isTorusWallet()) {\n          this.pwdInvalid = `Authorization failed`;\n        } else {\n          this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD');\n        }\n      }\n    }\n  }\n  async requestLedgerSignature(): Promise<void> {\n    await this.messageService.startSpinner('Waiting for Ledger signature...');\n    try {\n      const payload = this.signRequest.payload;\n      let signature = '';\n      if (payload.length <= 2290) {\n        signature = await this.ledgerService.signOperation(payload, this.walletService.wallet.implicitAccounts[0].derivationPath);\n      } else {\n        signature = await this.ledgerService.signHash(\n          this.operationService.ledgerPreHash(payload),\n          this.walletService.wallet.implicitAccounts[0].derivationPath\n        );\n      }\n      if (signature) {\n        this.acceptSigning(this.operationService.hexsigToEdsig(signature));\n      } else {\n        this.pwdInvalid = 'Failed to sign transaction';\n      }\n    } finally {\n      this.messageService.stopSpinner();\n    }\n  }\n  rejectSigning(): void {\n    this.closeModal();\n    this.signResponse.emit(null);\n  }\n  acceptSigning(signature: string): void {\n    this.messageService.addSuccess(this.isMessage ? 'Message signed!' : 'Payload signed!');\n    this.closeModal();\n    this.signResponse.emit(signature);\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clear();\n  }\n  clear(): void {\n    this.password = '';\n    this.pwdInvalid = '';\n    this.payload = '';\n    this.isMessage = false;\n    if (this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Originate</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column originate\">\n      <div class=\"flex-column top\">\n        <span class=\"amount key\">AMOUNT:&nbsp;<span class=\"value\">{{ this.balance ? this.balance + ' ' + 'tez' : ''\n            }}</span></span>\n        <!-- <span class=\"amount-usd\"> </span> -->\n        <span class=\"section key\">From:&nbsp;<span class=\"from\">{{ externalRequest?.selectedAccount?.address }}</span></span>\n      </div>\n      <br />\n      <div class=\"flex-row attrs\">\n        <div class=\"flex-row attr\">\n          <span class=\"key\">FEE:&nbsp;</span><span class=\"value\">{{ this.getTotalFee() }} tez</span>\n        </div>\n        <div class=\"flex-row attr\">\n          <span class=\"key\">MAX STORAGE COST:&nbsp;</span><span class=\"value\">{{ getTotalBurn() }} tez</span>\n        </div>\n      </div>\n      <app-ui-toggle-advanced style=\"width: calc(100% - 1em);margin: 2em 0;\" [default]=\"false\"\n        (stateChange)=\"advancedForm = $event\">\n      </app-ui-toggle-advanced>\n      <form autocomplete=\"off\" *ngIf=\"advancedForm\" class=\"advanced-form\">\n        <div class=\"tabs-container\">\n          <div class=\"flex-row tabs\">\n            <span class=\"tab\" [class.active]=\"activeTab === 0\" (click)=\"activeTab = 0\">Code</span>\n            <span class=\"tab\" [class.active]=\"activeTab === 1\" (click)=\"activeTab = 1\">Storage</span>\n          </div>\n        </div>\n        <textarea rows=\"10\" readonly>{{ getScript() }}</textarea>\n        <ng-container *ngIf=\"!(walletService.isLedgerWallet() && !ledgerError)\">\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Gas limit</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text\" placeholder={{this.defaultTransactionParams.gas.toString()}}\n                [(ngModel)]=\"customGas\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Fee</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text\" (keypress)=\"keyPressNumbersDecimal($event, 'customFee')\"\n                placeholder={{this.defaultTransactionParams.fee.toString()}} [(ngModel)]=\"customFee\">\n            </div>\n          </div>\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Storage limit</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text\"\n                placeholder={{this.defaultTransactionParams?.storage.toString()}} [(ngModel)]=\"customStorage\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Max storage cost</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text read-only\" [value]=\"burnAmount() ? burnAmount() : '0 tez'\"\n                tabindex=-1 readonly>\n            </div>\n          </div>\n        </ng-container>\n      </form>\n      <span *ngIf=\"formInvalid\" class=\"danger margin\">\n        {{ formInvalid }}\n      </span>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <br />\n        <ng-container *ngIf=\"walletService.isPwdWallet()\">\n          <input name=\"none\" [(ngModel)]=\"password\" placeholder=\"Password\" autocomplete=\"current-password\"\n            class=\"text password\" type=\"password\" (input)=\"this.pwdInvalid = ''\" (paste)=\"this.pwdInvalid = ''\"\n            (keydown.enter)='!messageService.spinnerOn ? inject() : null'>\n        </ng-container>\n        <button *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\" class=\"blue confirm\"\n          (click)=\"ledgerSign()\">Sign with Ledger</button>\n        <ng-template #elseBlock>\n          <button class=\"blue confirm\" (click)=\"!messageService.spinnerOn ? inject() : null\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : 'Confirm'}}</button>\n        </ng-template>\n      </div>\n      <span *ngIf=\"this.pwdInvalid\" class=\"danger margin\">{{ this.pwdInvalid }}</span>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { KeyPair, DefaultTransactionParams, ExternalRequest } from '../../../interfaces';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { LedgerWallet, Account, TorusWallet } from '../../../services/wallet/wallet';\nimport { MessageService } from '../../../services/message/message.service';\nimport Big from 'big.js';\nimport { emitMicheline, assertMichelsonData, assertMichelsonContract } from '@taquito/michel-codec';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { Subscription } from 'rxjs';\nimport { ModalComponent } from '../modal.component';\nimport { SubjectService } from '../../../services/subject/subject.service';\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n\n@Component({\n  selector: 'app-originate',\n  templateUrl: './originate.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class OriginateComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  readonly beaconMode = true;\n  @Input() externalRequest: ExternalRequest;\n  @Output() operationResponse = new EventEmitter();\n  syncSub: Subscription;\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n  costPerByte: string = this.estimateService.costPerByte;\n\n  balance = '';\n  script: any;\n\n  customFee = '';\n  customGas = '';\n  customStorage = '';\n\n  pwdInvalid: string;\n  formInvalid = '';\n  sendResponse: any;\n  ledgerError = '';\n  simError = '';\n\n  password: string;\n  advancedForm = false;\n  simSemaphore = 0;\n  activeTab = 0;\n\n  name = 'originate';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private walletService: WalletService,\n    private operationService: OperationService,\n    private coordinatorService: CoordinatorService,\n    private inputValidationService: InputValidationService,\n    private ledgerService: LedgerService,\n    private messageService: MessageService,\n    private estimateService: EstimateService,\n    private subjectService: SubjectService\n  ) {\n    super();\n  }\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.beaconMode) {\n      if (\n        this.externalRequest?.operationRequest?.operationDetails?.length === 1 &&\n        this.externalRequest.operationRequest.operationDetails[0].kind === 'origination'\n      ) {\n        if (this.isValidOrigination()) {\n          this.openModal();\n          this.balance = Big(this.externalRequest.operationRequest.operationDetails[0].balance)\n            .div(10 ** 6)\n            .toFixed();\n          this.script = this.externalRequest.operationRequest.operationDetails[0].script;\n          const recommendations = {\n            gasRecommendation: this.externalRequest.operationRequest.operationDetails[0].gas_limit\n              ? this.externalRequest.operationRequest.operationDetails[0].gas_limit\n              : undefined,\n            storageRecommendation: this.externalRequest.operationRequest.operationDetails[0].storage_limit\n              ? this.externalRequest.operationRequest.operationDetails[0].storage_limit\n              : undefined\n          };\n          this.estimateFees(recommendations);\n          if (this.beaconMode) {\n            this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n              if (response) {\n                this.operationResponse.emit('silent');\n                this.closeModal();\n              }\n            });\n          }\n        } else {\n          console.warn('Invalid origination');\n          this.operationResponse.emit('parameters_error');\n        }\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  openModal(): void {\n    if (this.walletService.wallet) {\n      // hide body scrollbar\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflow = 'hidden';\n      this.clearForm();\n      if (this.walletService.isLedgerWallet()) {\n        this.ledgerError = '?';\n      }\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n    }\n  }\n  isValidOrigination(): boolean {\n    const origination = this.externalRequest.operationRequest.operationDetails[0];\n    if (!origination.balance || !this.inputValidationService.amount(origination.balance, 0)) {\n      console.warn('invalid balance');\n      return false;\n    }\n    try {\n      assertMichelsonContract(origination.script.code);\n      assertMichelsonData(origination.script.storage);\n    } catch (e) {\n      console.warn('Invalid script');\n      return false;\n    }\n    return true;\n  }\n  async estimateFees(recommendations: any = {}): Promise<void> {\n    const callback = (res) => {\n      if (res) {\n        if (res.error) {\n          this.simError = res.error;\n          this.formInvalid = this.simError;\n        } else {\n          this.defaultTransactionParams = res;\n        }\n      }\n      this.simSemaphore--;\n    };\n    this.simSemaphore++;\n    await this.estimateService.preLoadData(this.externalRequest.selectedAccount.pkh, this.externalRequest.selectedAccount.pk);\n    this.estimateService.estimateOrigination({ ...this.getOrigination(), ...recommendations }, this.externalRequest.selectedAccount.pkh, callback);\n  }\n  getOrigination(): {\n    balance: string;\n    script: string;\n    gasLimit: number;\n    storageLimit: number;\n  } {\n    const gasLimit = this.customGas ? Number(this.customGas) : this.defaultTransactionParams.gas;\n    const storageLimit = this.customStorage ? Number(this.customStorage) : this.defaultTransactionParams.storage;\n    return JSON.parse(\n      JSON.stringify({\n        balance: this.balance,\n        script: this.script,\n        gasLimit,\n        storageLimit\n      })\n    );\n  }\n  getTotalCost(display: boolean = false): string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return totalFee;\n  }\n  getTotalFee(): number {\n    if (this.customFee !== '' && Number(this.customFee)) {\n      return Number(this.customFee);\n    }\n    return Number(this.defaultTransactionParams.fee);\n  }\n  getTotalBurn(): number {\n    if (this.customStorage !== '' && Number(this.customStorage)) {\n      return Number(Big(this.customStorage).times(this.costPerByte).div(1000000).toString());\n    }\n    return this.defaultTransactionParams.burn;\n  }\n  burnAmount(): string {\n    const burn = this.customStorage ? Number(Big(this.customStorage).times(this.costPerByte).div(1000000)) : this.defaultTransactionParams.burn;\n    if (burn) {\n      return burn + ' tez';\n    }\n    return '';\n  }\n  getScript(): string {\n    return this.activeTab\n      ? emitMicheline(this.script.storage, {\n          indent: '  ',\n          newline: '\\n'\n        })\n      : emitMicheline(this.script.code, { indent: '  ', newline: '\\n' });\n  }\n  closeModalAction(): void {\n    this.operationResponse.emit(null);\n    this.closeModal();\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clearForm();\n    this.messageService?.stopSpinner();\n  }\n  async inject(): Promise<void> {\n    this.formInvalid = this.simError;\n    const valid = this.validateOrigination();\n    if (valid) {\n      const pwd = this.password;\n      this.password = '';\n      this.messageService.startSpinner('Signing operation...');\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.externalRequest.selectedAccount.pkh);\n      } catch {\n        this.messageService.stopSpinner();\n      }\n      if (this.walletService.isLedgerWallet()) {\n        this.broadCastLedgerTransaction();\n        this.sendResponse = null;\n      } else {\n        if (keys) {\n          this.pwdInvalid = '';\n          this.messageService.startSpinner('Sending operation...');\n          this.sendOrigination(keys);\n          this.closeModal();\n        } else {\n          this.messageService.stopSpinner();\n          if (this.walletService.wallet instanceof TorusWallet) {\n            this.pwdInvalid = `Authorization failed`;\n          } else {\n            this.pwdInvalid = 'Wrong password!';\n          }\n        }\n      }\n    }\n  }\n  validateOrigination(): boolean {\n    if (this.simSemaphore) {\n      return false;\n    } else if (this.formInvalid) {\n      return false;\n    } else if (!this.inputValidationService.gas(this.customGas)) {\n      this.formInvalid = 'Invalid gas limit';\n      return false;\n    } else if (!this.inputValidationService.storage(this.customStorage)) {\n      this.formInvalid = 'Invalid storage limit';\n      return false;\n    } else if (!this.inputValidationService.amount(this.customFee, 6)) {\n      this.formInvalid = 'Invalid fee';\n      return false;\n    }\n    return true;\n  }\n  async ledgerSign(): Promise<void> {\n    this.formInvalid = this.simError;\n    const valid = this.validateOrigination();\n    if (valid) {\n      const keys = await this.walletService.getKeys('');\n      if (keys) {\n        this.sendOrigination(keys);\n      }\n    }\n  }\n  async sendOrigination(keys: KeyPair): Promise<void> {\n    //this.fee = '';\n    this.subscriptions.add(\n      this.operationService.originate(this.getOrigination(), this.getTotalFee(), keys).subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success === true) {\n            if (ans.payload.opHash) {\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                kt1: ans.payload.newPkh,\n                opHash: ans.payload.opHash,\n                origination: this.externalRequest.operationRequest.operationDetails[0]\n              };\n              this.coordinatorService.boost(this.externalRequest.selectedAccount.address, metadata);\n            } else if (this.walletService.isLedgerWallet()) {\n              this.requestLedgerSignature();\n            }\n          } else {\n            this.messageService.stopSpinner();\n            console.log('Origination error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n            if (this.walletService.isLedgerWallet) {\n              this.closeModal();\n            }\n          }\n        },\n        (err) => {\n          console.log('Error Message ', JSON.stringify(err));\n          this.ledgerError = 'Failed to create operation';\n        }\n      )\n    );\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      const op = this.sendResponse.payload.unsignedOperation;\n      this.messageService.startSpinner('Waiting for Ledger signature');\n      let signature;\n      try {\n        signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n      if (signature) {\n        const signedOp = op + signature;\n        this.sendResponse.payload.signedOperation = signedOp;\n        this.ledgerError = '';\n      } else {\n        this.ledgerError = 'Failed to sign operation';\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.messageService.startSpinner('Broadcasting operation');\n    this.subscriptions.add(\n      this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(\n        (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success && this.externalRequest.selectedAccount.address) {\n            const metadata = {\n              kt1: ans.payload.newPkh,\n              opHash: ans.payload.opHash,\n              origination: this.externalRequest.operationRequest.operationDetails[0]\n            };\n            this.coordinatorService.boost(this.externalRequest.selectedAccount.address, metadata);\n          } else {\n            this.messageService.addError(this.sendResponse.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.closeModal();\n          console.log('ans: ' + JSON.stringify(ans));\n        },\n        (error) => {\n          this.messageService.stopSpinner();\n          this.messageService.addError(error, 0);\n          this.operationResponse.emit('broadcast_error');\n        }\n      )\n    );\n  }\n  clearForm(): void {\n    this.defaultTransactionParams = zeroTxParams;\n    this.customFee = '';\n    this.customGas = '';\n    this.customStorage = '';\n\n    this.balance = '';\n    this.script = null;\n\n    this.advancedForm = false;\n\n    this.password = '';\n    this.pwdInvalid = '';\n    this.formInvalid = '';\n    this.simError = '';\n\n    this.sendResponse = null;\n    this.ledgerError = '';\n    this.simSemaphore = 0;\n    this.activeTab = 0;\n\n    if (this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n  }\n  // Only Numbers with Decimals\n  keyPressNumbersDecimal(event, input): boolean {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode !== 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n      event.preventDefault();\n      return false;\n    } else if (charCode === 46 && this[input].length === 0) {\n      this[input] = '0' + this[input];\n    }\n    return true;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Confirm Staking</h1>\n    </div>\n    <div class=\"flex-column confirm-staking\">\n      <div class=\"flex-row head\">\n        <img *ngIf=\"delegate?.logo\" [src]=\"delegate.logo\" />\n        <div class=\"flex-column data\"\n          *ngIf=\"delegate?.name ? delegate.name : toPkh; let delegateDisplayName; else undelegate\">\n          <span class=\"name\">{{ delegateDisplayName }}</span>\n          <div class=\"flex-row fee-space\"><span class=\"fee\"><span>SPLIT:</span>&nbsp;{{ delegate?.fee ?\n              toPercent(delegate.fee) : 'UNKNOWN' }}</span><span *ngIf=\"delegate?.freeSpace\"\n              class=\"space\"><span>SPACE:</span>&nbsp;{{ round(delegate.freeSpace) }}</span>\n          </div>\n        </div>\n        <ng-template #undelegate>\n          <div class=\"flex-column data\">\n            <span class=\"name\">Undelegate from baker</span>\n          </div>\n        </ng-template>\n      </div>\n      <br />\n      <app-ui-toggle-advanced style=\"width: calc(100% - 1em);\" [default]=\"false\" (stateChange)=\"advanced = $event\">\n      </app-ui-toggle-advanced>\n      <br />\n      <br />\n      <ng-container *ngIf=\"advanced\">\n        <form autocomplete=\"off\">\n          <div class=\"label\">Fee <span class=\"label\" style=\"margin: 0; text-transform: lowercase;\">(tez)</span></div>\n          <input inputmode=\"decimal\" name=\"none\" [(ngModel)]=\"fee\" class=\"text fee\" type=\"text\" placeholder=\"{{defaultFee}}\"\n            [disabled]=\"walletService.isLedgerWallet() && sendResponse?.payload?.signedOperation\" />\n        </form>\n      </ng-container>\n      <br />\n      <br />\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <ng-container *ngIf=\"walletService.isPwdWallet()\">\n          <div class=\"label\">ENTER YOUR PASSWORD TO CONFIRM</div>\n          <span *ngIf=\"this.pwdValid\" class=\"label danger\">{{ this.pwdValid }}</span>\n          <input name=\"none\" [(ngModel)]=\"password\" placeholder=\"Password\" autocomplete=\"current-password\"\n            class=\"text password\" type=\"password\" (input)=\"this.pwdValid = ''\" (change)=\"this.pwdValid = ''\"\n            (keydown.enter)='!messageService.spinnerOn ? inject() : null'>\n        </ng-container>\n        <button class=\"confirm\" *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\"\n          (click)=\"ledgerSign()\">Sign with Ledger</button>\n        <ng-template #elseBlock>\n          <button class=\"confirm\" (click)=\"!messageService.spinnerOn ? inject() : null\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : 'Confirm'}}</button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { KeyPair, ExternalRequest } from '../../../interfaces';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { ExportService } from '../../../services/export/export.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { LedgerWallet, Account, ImplicitAccount, OriginatedAccount, TorusWallet } from '../../../services/wallet/wallet';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TezosDomainsService } from '../../../services/tezos-domains/tezos-domains.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalComponent } from '../modal.component';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport Big from 'big.js';\n\n@Component({\n  selector: 'app-delegate',\n  templateUrl: './delegate.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class DelegateComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  domainPendingLookup = false;\n  defaultFee = 0.0004;\n  readonly pkhFee = 0.0004;\n  readonly ktFee = 0.0008;\n  @ViewChild('toPkhInput') toPkhView: ElementRef;\n  @Input() beaconMode = false;\n  @Input() externalRequest: ExternalRequest;\n  @Output() operationResponse = new EventEmitter();\n  activeAccount: Account;\n  toPkh: string;\n  delegate = null;\n  fee: string = '';\n  password: string;\n  pwdValid: string;\n  formInvalid = '';\n  sendResponse: any;\n  ledgerError = '';\n  syncSub: Subscription;\n  advanced = false;\n\n  name = 'delegate-confirm';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private route: ActivatedRoute,\n    public walletService: WalletService,\n    private operationService: OperationService,\n    private coordinatorService: CoordinatorService,\n    private exportService: ExportService,\n    private inputValidationService: InputValidationService,\n    private ledgerService: LedgerService,\n    private messageService: MessageService,\n    private tezosDomains: TezosDomainsService,\n    private subjectService: SubjectService,\n    private router: Router\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      let address = this.route.snapshot.paramMap.get('address');\n      if (this.walletService.addressExists(address)) {\n        this.activeAccount = this.walletService.wallet.getAccount(address);\n      }\n      this.subscriptions.add(\n        this.subjectService.activeAccount.subscribe((activeAccount) => {\n          this.activeAccount = activeAccount;\n        })\n      );\n    }\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.beaconMode) {\n      if (this.externalRequest?.operationRequest) {\n        const opReq = this.externalRequest.operationRequest.operationDetails\n          ? this.externalRequest.operationRequest.operationDetails\n          : this.externalRequest.operationRequest;\n        if (opReq[0]?.kind === 'delegation') {\n          if (opReq[0].delegate) {\n            this.activeAccount = this.externalRequest.selectedAccount;\n            ModalComponent.currentModel.next({\n              name: '',\n              data: null\n            });\n            this.clearForm();\n            ModalComponent.currentModel.next({\n              name: 'delegate-confirm',\n              data: { address: opReq[0].delegate }\n            });\n          }\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  open(data): void {\n    if (this.walletService.wallet) {\n      this.clearForm(true);\n      this.estimateDefaultFee();\n      this.toPkh = data.address;\n      this.delegate = data;\n      if (this.walletService.isLedgerWallet()) {\n        this.ledgerError = '?';\n      }\n      if (this.beaconMode) {\n        this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n          if (response) {\n            this.operationResponse.emit('silent');\n          }\n        });\n      }\n      super.open();\n    }\n  }\n\n  async inject(): Promise<void> {\n    const pwd = this.password;\n    this.password = '';\n    this.messageService.startSpinner('Signing operation...');\n    let keys;\n    try {\n      keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n    } catch {\n      this.messageService.stopSpinner();\n    }\n    if (this.walletService.isLedgerWallet()) {\n      this.broadCastLedgerTransaction();\n      this.sendResponse = null;\n    } else {\n      if (keys) {\n        this.pwdValid = '';\n        this.messageService.startSpinner('Sending operation...');\n        this.sendDelegation(keys);\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.wallet instanceof TorusWallet) {\n          this.pwdValid = `Authorization failed`;\n        } else {\n          this.pwdValid = 'Wrong password!';\n        }\n      }\n    }\n  }\n  async ledgerSign(): Promise<void> {\n    const keys = await this.walletService.getKeys('');\n    if (keys) {\n      this.messageService.startSpinner('');\n      this.sendDelegation(keys);\n    }\n  }\n\n  async sendDelegation(keys: KeyPair): Promise<void> {\n    let fee = this.getFee();\n    this.subscriptions.add(\n      this.operationService.delegate(this.activeAccount.address, this.toPkh, Number(fee), keys).subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          console.log(JSON.stringify(ans));\n          if (ans.success === true) {\n            if (ans.payload.opHash) {\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                delegate: this.toPkh,\n                opHash: ans.payload.opHash\n              };\n              this.coordinatorService.boost(this.activeAccount.address, metadata);\n              this.closeModal();\n              this.router.navigate([`/account/${this.activeAccount.address}`]);\n            } else if (this.walletService.isLedgerWallet()) {\n              this.requestLedgerSignature();\n            }\n          } else {\n            console.log('Delegation error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n            this.closeModal();\n          }\n        },\n        (err) => {\n          console.log('Error Message ', JSON.stringify(err));\n          this.ledgerError = 'Failed to create operation';\n        }\n      )\n    );\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      const op = this.sendResponse.payload.unsignedOperation;\n      this.messageService.startSpinner('Waiting for Ledger signature');\n      let signature;\n      try {\n        signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n      if (signature) {\n        const signedOp = op + signature;\n        this.sendResponse.payload.signedOperation = signedOp;\n        this.ledgerError = '';\n      } else {\n        this.ledgerError = 'Failed to sign operation';\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.messageService.startSpinner('Broadcasting operation');\n    this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(\n      (ans: any) => {\n        this.sendResponse = ans;\n        if (ans.success && this.activeAccount.address) {\n          this.operationResponse.emit(ans.payload.opHash);\n          const metadata = {\n            delegate: this.toPkh,\n            opHash: ans.payload.opHash\n          };\n          this.coordinatorService.boost(this.activeAccount.address, metadata);\n          this.closeModal();\n          this.router.navigate([`/account/${this.activeAccount.address}`]);\n        } else {\n          this.messageService.addError(this.sendResponse.payload.msg, 0);\n          this.operationResponse.emit('broadcast_error');\n        }\n        this.closeModal();\n        console.log('ans: ' + JSON.stringify(ans));\n      },\n      (error) => {\n        this.messageService.stopSpinner();\n        this.messageService.addError(error, 0);\n        this.operationResponse.emit('broadcast_error');\n      }\n    );\n  }\n  estimateDefaultFee(): void {\n    this.subscriptions.add(\n      this.operationService.isRevealed(this.activeAccount.pkh).subscribe((revealed: boolean) => {\n        const revealFee = revealed ? 0 : 0.0002;\n        if (this.activeAccount instanceof ImplicitAccount) {\n          this.defaultFee = Number(new Big(revealFee).plus(this.pkhFee));\n        } else if (this.activeAccount instanceof OriginatedAccount) {\n          this.defaultFee = Number(new Big(revealFee).plus(this.ktFee));\n        }\n      })\n    );\n  }\n  getFee(): string {\n    return this.fee !== '' ? this.fee : this.defaultFee.toString();\n  }\n  clearForm(init: boolean = false): void {\n    if (!init && this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n    this.toPkh = '';\n    this.fee = '';\n    this.defaultFee = 0.0004;\n    this.password = '';\n    this.pwdValid = '';\n    this.formInvalid = '';\n    this.sendResponse = '';\n    this.ledgerError = '';\n    this.domainPendingLookup = false;\n    this.delegate = null;\n    this.advanced = false;\n  }\n  async invalidInput(): Promise<string> {\n    // if it is a tezos-domain\n    if (this.toPkh && this.toPkh.indexOf('.') > -1) {\n      try {\n        this.domainPendingLookup = true;\n        const { pkh } = await this.tezosDomains.getAddressFromDomain(this.toPkh);\n        if (pkh) {\n          this.toPkh = pkh;\n        } else {\n          this.domainPendingLookup = false;\n          return 'Could not find the domain';\n        }\n      } catch (error) {\n        return error.message;\n      } finally {\n        this.domainPendingLookup = false;\n      }\n    }\n    if (\n      (!this.inputValidationService.address(this.toPkh) && this.toPkh !== '') ||\n      (this.toPkh.length > 1 && this.toPkh.slice(0, 2) !== 'tz') ||\n      this.walletService.wallet.getImplicitAccount(this.toPkh)\n    ) {\n      return 'invalid delegate address';\n    } else if (!this.inputValidationService.fee(this.fee)) {\n      return 'invalid fee';\n    } else {\n      return '';\n    }\n  }\n  // Only Numbers with Decimals\n  keyPressNumbersDecimal(event, input): boolean {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode !== 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n      event.preventDefault();\n      return false;\n    } else if (charCode === 46 && this[input].length === 0) {\n      this[input] = '0' + this[input];\n    }\n    return true;\n  }\n  download(): void {\n    this.exportService.downloadOperationData(this.sendResponse.payload.unsignedOperation, false);\n  }\n\n  closeModalAction(): void {\n    this.operationResponse.emit(null);\n    this.closeModal();\n  }\n\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clearForm();\n    this.ledgerError = '';\n    this.messageService.stopSpinner();\n  }\n\n  round(val): string {\n    return Math.round(Number(val)).toString();\n  }\n\n  toPercent(val): string {\n    return parseFloat((Number(val) * 100).toFixed(2)).toString() + '%';\n  }\n}\n","<div #viewRef class=\"flex-column list\">\n  <a *ngFor=\"let account of list\" class=\"flex-row option\" [class.selected]=\"account?.address === current?.address\"\n    routerLink=\"/account/{{account?.address}}{{postfix}}\" (click)=\"closeModal()\">\n    <div class=\"flex-column left\">\n      <ng-container *ngIf=\"getUsername(account?.address)\">\n        <div class=\"flex-row alias\"><img class=\"logo\" src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span\n            class=\"name\">{{\n            getUsername(account?.address) }}</span><img class=\"copy\" src=\"../../../../assets/img/copy-icon.svg\"\n            (click)=\"this.copy($event, account?.address); false\" /></div>\n        <span class=\"addr\">{{\n          !isMobile ? account?.address : account?.shortAddress() }}</span>\n      </ng-container>\n      <ng-container *ngIf=\"!getUsername(account?.address)\">\n        <div class=\"flex-row\"><span class=\"addr default\">{{\n            !isMobile ? account?.address : account?.shortAddress() }}</span><img class=\"copy\"\n            src=\"../../../../assets/img/copy-icon.svg\" (click)=\"this.copy($event, account?.address); false\" /></div>\n      </ng-container>\n    </div>\n    <div class=\"flex-column balances\">\n      <div class=\"balance-tez\">{{ (getBalance(account) | number: '1.0-6' | removeComma) }} tez</div>\n      <div class=\"balance-fiat\">{{ '$' + (getBalanceFiat(account) | number:'1.2-2' | removeComma)\n        }}</div>\n    </div>\n  </a>\n  <div class=\"flex-row total-balances\">\n    <h3>TOTAL:</h3>\n    <div class=\"flex-column\">\n      <div class=\"balance-tez\">{{ (getTotalBalance() | number: '1.0-6' | removeComma) + ' tez' }}\n      </div>\n      <div class=\"balance-fiat\">{{ '$' + (getTotalFiat() | number:'1.2-2' | removeComma) }}\n      </div>\n    </div>\n  </div>\n</div>","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { TorusWallet } from '../../../../services/wallet/wallet';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { ModalComponent } from '../../modal.component';\nimport { Subscription } from 'rxjs';\nimport { ListComponent } from '../../../ui/generic/list.component';\nimport copy from 'copy-to-clipboard';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport Big from 'big.js';\nimport { RemoveCommaPipe } from '../../../../pipes/remove-comma.pipe';\nimport { filter } from 'rxjs/operators';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-account-list-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['../../../../../scss/components/modals/account-list.scss']\n})\nexport class AccountListBodyComponent extends ListComponent implements OnInit, AfterViewInit, OnDestroy {\n  postfix = '';\n  isMobile = false;\n  @ViewChild('viewRef') viewRef: ElementRef;\n  preSelectedAccount: string;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    public router: Router,\n    public lookupService: LookupService,\n    private walletService: WalletService,\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public removeCommaPipe: RemoveCommaPipe,\n    private subjectService: SubjectService\n  ) {\n    super();\n    this.subscriptions.add(\n      this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n        let accountAddress = r.url.substr(r.url.indexOf('/account/') + 9);\n        this.postfix = !!accountAddress.substring(36) ? accountAddress.substring(36) : '';\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.preSelectedAccount = this.current;\n    }\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(() => {\n        this.list = this.walletService.wallet?.getAccounts();\n      })\n    );\n    this.list = this.walletService.wallet?.getAccounts();\n\n    const e = () => {\n      this.isMobile = !!parseInt(document.documentElement.style.getPropertyValue('--is-mobile'));\n    };\n    window.addEventListener('resize', e);\n    e();\n  }\n\n  ngAfterViewInit(): void {\n    const selRef = this.viewRef.nativeElement.querySelector('.option.selected') as HTMLElement;\n    this.viewRef.nativeElement.scrollTo(0, selRef.offsetTop - 100);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  getUsername(address: string): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      const party = this.lookupService.resolve({ address: address });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n  copy(e, address: string): void {\n    e.stopPropagation();\n    copy(address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(address + ' ' + copyToClipboard, 5);\n  }\n  getBalance(account): number | string {\n    return Big(account?.balanceXTZ ?? 0)\n      .div(1000000)\n      .toFixed();\n  }\n  getBalanceFiat(account): number {\n    return account?.balanceUSD ?? 0;\n  }\n\n  getTotalBalance(): number {\n    return Big(this.walletService.wallet.totalBalanceXTZ ?? 0)\n      .div(1000000)\n      .toFixed();\n  }\n\n  getTotalFiat(): number {\n    return this.walletService.wallet.totalBalanceUSD ?? 0;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LookupService } from '../../../services/lookup/lookup.service';\nimport { ModalComponent } from '../modal.component';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-account-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class AccountListComponent extends ModalComponent implements OnInit {\n  @Input() title;\n  @Input() activeAccount;\n  name = 'account-list';\n\n  constructor(public router: Router, public lookupService: LookupService, public translate: TranslateService, public messageService: MessageService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n}\n","<div [style.display]=\"!isOpen ? 'none' : ''\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">{{ title }}</h1>\n    </div>\n    <div class=\"flex-column export-mnemonic\">\n      <div *ngIf=\"!!mnemonicPhrase\" class=\"whitebox\" (mouseout)=\"mouseOut($event)\" (touchstart)=\"$event.stopPropagation(); this.hideBlur = true;\"\n        (touchend)=\"checkSelection($event)\" (click)=\"$event.stopPropagation()\" (mouseup)=\"checkSelection($event)\">\n        {{ mnemonicPhrase }}<div *ngIf=\"!hideBlur\" class=\"flex-row seed-blur\"\n          (click)=\"$event.stopPropagation(); this.hideBlur = true;\">\n          <span>CLICK HERE TO REVEAL YOUR SEED WORDS</span>\n        </div>\n      </div>\n      <p *ngIf=\"!!mnemonicPhrase\" class=\"description red\">\n        <span *ngIf=\"isSelectedMnemonic\" style=\"margin: 1rem 0\" class=\"warning red\">\n          WARNING: Copying the seed words to your clipboard can result in sensitive leakage. The clipboard is a shared\n          resource that can be monitored by other web pages or browser extensions.<br />\n        </span>\n      </p>\n      <div *ngIf=\"!mnemonicPhrase\" class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <div class=\"label\">\n          ENTER YOUR PASSWORD TO REVEAL \n        </div>\n        <span [style.visibility]=\"!pwdInvalid ? 'hidden' : ''\" [style.margin]=\"!pwdInvalid ? '0' : ''\"\n        class=\"label danger\">{{ this.pwdInvalid }}</span>\n        <input [(ngModel)]=\"pwd\" autocomplete=\"current-password\" placeholder=\"Password\" class=\"text password\"\n          type=\"password\" (input)=\"this.pwdInvalid = ''\" (change)=\"this.pwdInvalid = ''\" (keydown.enter)='!messageService.spinnerOn ? reveal() : null'>\n        <button class=\"button confirm\" (click)=\"!messageService.spinnerOn ? reveal() : null\">Continue</button>\n      </div>\n    </div>\n  </div>\n</div>","<div [style.display]=\"!isOpen ? 'none' : ''\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">{{ title }}</h1>\n    </div>\n    <app-account-list-body [current]=\"activeAccount\">\n    </app-account-list-body>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { ModalComponent } from '../modal.component';\n\n@Component({\n  selector: 'app-export-mnemonic',\n  templateUrl: './export-mnemonic.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class ExportMnemonicComponent extends ModalComponent implements OnInit {\n  title = 'Reveal Seed Words';\n  name = 'export-mnemonic';\n  mnemonicPhrase = '';\n  ledgerError = '';\n  pwdInvalid = '';\n  pwd = '';\n  hideBlur = false;\n  isSelectedMnemonic = false;\n  constructor(public walletService: WalletService, private messageService: MessageService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  closeModal(): void {\n    this.reset();\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n\n  async reveal(): Promise<void> {\n    try {\n      this.messageService.startSpinner();\n      this.mnemonicPhrase = await this.walletService.revealMnemonicPhrase(this.pwd);\n      this.pwdInvalid = this.mnemonicPhrase === '' ? 'INVALID PASSWORD' : '';\n      this.messageService.stopSpinner();\n    } catch {\n      this.pwdInvalid = this.mnemonicPhrase === '' ? 'INVALID PASSWORD' : '';\n    }\n  }\n\n  mouseOut(e): void {\n    e.stopPropagation();\n    this.hideBlur = false;\n    window.getSelection()?.removeAllRanges();\n  }\n  checkSelection(ev): void {\n    ev.stopPropagation();\n    if (this.isTextSelected()) {\n      this.isSelectedMnemonic = true;\n    }\n  }\n  private isTextSelected(): boolean {\n    let selection: Selection;\n    if (window.getSelection) {\n      selection = window.getSelection();\n    } else if (document.getSelection) {\n      selection = document.getSelection();\n    } else return false;\n    return !selection?.isCollapsed;\n  }\n  reset(): void {\n    this.mnemonicPhrase = '';\n    this.ledgerError = '';\n    this.pwdInvalid = '';\n    this.pwd = '';\n    this.hideBlur = false;\n    this.isSelectedMnemonic = false;\n  }\n}\n","<div class=\"flex-row dropdown session-select\" [class.expanded]=\"isOpen\" [id]=\"ecmpId\">\n  <div class=\"flex-row currentAddress\" (click)=\"toggleDropdown()\"><img\n      *ngIf=\"!!getUsername(selection?.address)\" class=\"logo\" src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span\n      class=\"address\">{{\n      getUsername(selection?.address) || \"&nbsp;&nbsp;&nbsp;&nbsp;\" + selection?.address }}</span><img\n      *ngIf=\"['', 'domain'].includes(getVerifier())\" class=\"button icon-db\"\n      src=\"../../../../assets/img/down-arrow.svg\" />\n  </div>\n  <div class=\"flex-column dropdown-content\">\n    <ng-container *ngFor=\"let account of options\">\n      <div class=\"option\" [class.selected]=\"account?.address === current?.address\"\n        (click)=\"selection = account; toggleDropdown()\">\n        <ng-container *ngIf=\"getUsername(account?.address)\">\n          <div class=\"flex-row alias\"><img class=\"logo\"\n              src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span>{{\n              getUsername(account?.address) }}</span></div>\n          <br /><span>{{\n            account?.address }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"!getUsername(account?.address)\">{{ account?.address }}</ng-container>\n      </div>\n    </ng-container>\n  </div>\n</div>","import { Component, OnChanges, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { PermissionRequestDropdownComponent } from '../permission-request/permission-request.component';\n\n@Component({\n  selector: 'app-ui-dropdown-session-select',\n  templateUrl: './session-select.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/account-dropdown.component.scss']\n})\nexport class SessionSelectDropdownComponent extends PermissionRequestDropdownComponent implements OnInit, OnChanges {\n  constructor(public router: Router, public lookupService: LookupService, walletService: WalletService) {\n    super(router, lookupService, walletService);\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"close()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Change Session Account</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column session-select\">\n      <app-ui-dropdown-session-select [options]=\"accounts\" [current]=\"selectedAccount\"\n        (dropdownResponse)=\"selectedAccount = $event\" style=\"width: 100%;align-self: center;\">\n      </app-ui-dropdown-session-select>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <button class=\"blue confirm\" (click)=\"changeAddress()\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Account } from '../../../services/wallet/wallet';\nimport { ModalComponent } from '../modal.component';\nimport { WalletConnectService } from '../../../services/wallet-connect/wallet-connect.service';\n\n@Component({\n  selector: 'app-session-select',\n  templateUrl: './session-select.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class SessionSelectComponent extends ModalComponent implements OnInit, OnDestroy {\n  preSelectedAccountAddress: string;\n  selectedAccount: Account;\n  accounts: Account[];\n  topic: string;\n  private subscriptions: Subscription = new Subscription();\n  name = 'session-select';\n  constructor(public walletService: WalletService, private subjectService: SubjectService, private walletConnectService: WalletConnectService) {\n    super();\n  }\n  open(data: { topic: string; preSelectedAccountAddress: string }): void {\n    this.topic = data.topic;\n    this.preSelectedAccountAddress = data.preSelectedAccountAddress;\n    this.accounts = this.walletService.wallet?.getImplicitAccounts();\n    this.selectedAccount = this.accounts.find((acc) => acc.address === this.preSelectedAccountAddress);\n    super.open();\n  }\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(async () => {\n        this.accounts = this.walletService.wallet?.getImplicitAccounts();\n      })\n    );\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  changeAddress(): void {\n    this.walletConnectService.updateSession(this.topic, this.selectedAccount.pkh);\n    this.close();\n  }\n}\n","import { Component, OnDestroy, OnInit, HostListener } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\nimport { WalletClient, BeaconMessageType, PermissionScope, PermissionResponseInput, OperationResponseInput } from '@airgap/beacon-sdk';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { Account } from '../../../services/wallet/wallet';\nimport { BeaconService } from '../../../services/beacon/beacon.service';\nimport { DeeplinkService } from '../../../services/deeplink/deeplink.service';\nimport { assertMichelsonData } from '@taquito/michel-codec';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\nimport { ExternalRequest } from '../../../interfaces';\nimport { WalletConnectService } from '../../../services/wallet-connect/wallet-connect.service';\n\n@Component({\n  selector: 'app-uri-handler',\n  templateUrl: './uri-handler.component.html'\n})\nexport class UriHandlerComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public messageService: MessageService,\n    public walletService: WalletService,\n    private beaconService: BeaconService,\n    private deeplinkService: DeeplinkService,\n    private inputValidationService: InputValidationService,\n    private subjectService: SubjectService,\n    private walletConnectService: WalletConnectService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.activeAccount = activeAccount;\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.wc2.subscribe((m) => {\n        this.handleBeaconMessage(m);\n      })\n    );\n  }\n  permissionRequest: PermissionResponseInput = null;\n  externalRequest: ExternalRequest = null;\n  signRequest: any = null;\n  activeAccount: Account;\n  selectedAccount: Account;\n  @HostListener('window:focus', ['$event'])\n  onFocus(event: FocusEvent): void {\n    this.changeFavicon();\n  }\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.init();\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  async init() {\n    let pairingString = this.deeplinkService.popPairingJson();\n    if (pairingString) {\n      console.log(pairingString);\n      if (pairingString.startsWith('wc')) {\n        this.walletConnectService.pair(pairingString);\n        pairingString = '';\n      } else {\n        this.beaconService.preNotifyPairing(pairingString);\n      }\n    }\n    window.addEventListener('storage', (e) => {\n      this.handleStorageEvent(e);\n    });\n    await this.connectApp().catch((error) => console.error('connect error', error));\n    if (pairingString) {\n      await this.beaconService.client.isConnected;\n      this.beaconService.addPeer(pairingString);\n    }\n  }\n  changeFavicon(active: boolean = false): void {\n    if (active && document.hasFocus()) {\n      active = false;\n    }\n    const src: string = active ? 'favicon-attention.ico' : 'favicon.ico';\n    document.getElementById('favicon').setAttribute('href', src);\n  }\n  /* https://github.com/airgap-it/beacon-sdk/blob/master/src/clients/wallet-client/WalletClient.ts */\n  connectApp = async (): Promise<void> => {\n    if (!this.beaconService.client) {\n      this.beaconService.client = new WalletClient({\n        name: 'Kukai Wallet'\n      });\n    }\n    await this.beaconService.client.init(); // Establish P2P connection\n    this.beaconService.client\n      .connect(async (message: any) => {\n        this.handleBeaconMessage(message);\n      })\n      .catch((error) => console.error('connect error', error));\n  };\n  async handleBeaconMessage(message: any) {\n    console.log('### beacon message', message);\n    console.log(JSON.stringify(message));\n    if (message.type !== BeaconMessageType.SignPayloadRequest && message.network.type !== CONSTANTS.NETWORK) {\n      console.warn(`Rejecting Beacon message because of network. Expected ${CONSTANTS.NETWORK} instead of ${message.network.type}`);\n      await this.beaconService.rejectOnNetwork(message);\n    } else if (!this.permissionRequest && !this.externalRequest && !this.signRequest) {\n      switch (message.type) {\n        case BeaconMessageType.PermissionRequest:\n          await this.handlePermissionRequest(message);\n          break;\n        case BeaconMessageType.OperationRequest:\n          if (await this.isSupportedOperationRequest(message)) {\n            this.externalRequest = { operationRequest: message, selectedAccount: this.selectedAccount };\n            this.changeFavicon(true);\n          } else if (message?.version === 0) {\n            console.error('Invalid request');\n          }\n          break;\n        case BeaconMessageType.SignPayloadRequest:\n          if (await this.isSupportedSignPayload(message)) {\n            this.signRequest = message;\n            this.changeFavicon(true);\n          }\n          break;\n        default:\n          await this.beaconService.rejectOnUnknown(message);\n          console.warn('Unknown message type', message);\n      }\n    } else {\n      console.warn('Blocked by other Beacon/Wc2 request');\n    }\n  }\n  async handlePermissionRequest(message: any): Promise<void> {\n    console.log('## permission request');\n    if (message.version) {\n      message.scopes = message.scopes.filter((scope: PermissionScope) => [PermissionScope.OPERATION_REQUEST, PermissionScope.SIGN].includes(scope));\n    }\n    if (typeof message.scopes === 'object' || message.scopes.length) {\n      if (this.walletService.wallet) {\n        this.permissionRequest = message;\n        this.changeFavicon(true);\n      } else {\n        console.warn('No wallet found');\n        await this.beaconService.rejectOnSourceAddress(message);\n      }\n    } else {\n      console.warn('No valid scope');\n    }\n  }\n  async isSupportedOperationRequest(message: any): Promise<boolean> {\n    try {\n      if (!this.walletService.wallet) {\n        console.log('No wallet found');\n        await this.beaconService.rejectOnUnknown(message);\n        return false;\n      } else if (!this.walletService.wallet.getImplicitAccount(message.sourceAddress)) {\n        console.warn('Source address not recogized');\n        await this.beaconService.rejectOnSourceAddress(message);\n        return false;\n      } else if (message.operationDetails.length > 1) {\n        for (const op of message.operationDetails) {\n          if (op.kind !== 'transaction') {\n            console.warn('Only transaction batches supported');\n            await this.beaconService.rejectOnTooManyOps(message);\n            return false;\n          }\n        }\n      }\n      if (message.operationDetails[0].kind === 'transaction') {\n        for (let i = 0; i < message.operationDetails.length; i++) {\n          if (\n            message.operationDetails[i].destination &&\n            message.operationDetails[i].parameters &&\n            this.walletService.wallet.getAccount(message.operationDetails[i].destination)\n          ) {\n            console.warn('Invocation of user controlled contract is disabled');\n            await this.beaconService.rejectOnPermission(message);\n            return false;\n          } else if (!message.operationDetails[i].destination || !message.operationDetails[i].amount) {\n            console.warn('Missing destination or amount');\n            await this.beaconService.rejectOnUnknown(message);\n            return false;\n          } else if (this.invalidParameters(message.operationDetails[i].parameters)) {\n            await this.beaconService.rejectOnParameters(message);\n            return false;\n          } else if (this.invalidOptionals(message.operationDetails[i])) {\n            await this.beaconService.rejectOnParameters(message);\n            return false;\n          }\n        }\n      } else if (message.operationDetails[0].kind === 'delegation') {\n        if (!message.operationDetails[0].delegate) {\n          console.warn('Invalid delegate');\n          await this.beaconService.rejectOnUnknown(message);\n          return false;\n        }\n      } else if (message.operationDetails[0].kind === 'origination') {\n        if (!message.operationDetails[0].script) {\n          console.warn('No script found');\n          await this.beaconService.rejectOnParameters(message);\n          return false;\n        } else if (this.invalidOptionals(message.operationDetails[0])) {\n          await this.beaconService.rejectOnParameters(message);\n          return false;\n        }\n      } else {\n        console.warn('Unsupported operation kind');\n        await this.beaconService.rejectOnUnknown(message);\n        return false;\n      }\n      this.selectedAccount = this.walletService.wallet.getImplicitAccount(message.sourceAddress);\n      return true;\n    } catch (e) {\n      if (e?.message === 'No matching request found!' && message.version === 0) {\n        console.log('wc2');\n        this.walletConnectService.opResponse(message, '', false);\n      } else {\n        throw e;\n      }\n    }\n    return false;\n  }\n  private invalidOptionals(op: any): boolean {\n    if (typeof op.gas_limit === 'number') {\n      // normalize\n      op.gas_limit = op.gas_limit.toString();\n    }\n    if (typeof op.storage_limit === 'number') {\n      op.storage_limit = op.storage_limit.toString();\n    }\n    if (op.gas_limit && (typeof op.gas_limit !== 'string' || !this.inputValidationService.amount(op.gas_limit, 0))) {\n      return true;\n    } else if (op.storage_limit && (typeof op.storage_limit !== 'string' || !this.inputValidationService.amount(op.storage_limit, 0))) {\n      return true;\n    }\n    return false;\n  }\n  async isSupportedSignPayload(message: any): Promise<Boolean> {\n    try {\n      if (!this.walletService.wallet) {\n        console.log('No wallet found');\n        await this.beaconService.rejectOnUnknown(message);\n        return false;\n      } else if (!this.walletService.wallet.getImplicitAccount(message.sourceAddress)) {\n        console.warn('Source address not recogized');\n        await this.beaconService.rejectOnSourceAddress(message);\n        return false;\n      }\n      if (message.payload.slice(0, 2) === '0x') {\n        message.payload = message.payload.slice(2);\n      }\n      message.payload = message.payload.toLowerCase();\n      const hexString = message.payload;\n      console.log('hex', hexString);\n      if ((message.signingType !== 'raw' && message.signingType !== 'micheline') || !this.inputValidationService.hexString(hexString)) {\n        console.warn('Invalid sign payload');\n        await this.beaconService.rejectOnUnknown(message);\n        return false;\n      } else if (!['05', '80'].includes(hexString.slice(0, 2))) {\n        console.warn('Unsupported prefix:' + hexString.slice(0, 2));\n        await this.beaconService.rejectOnUnknown(message);\n        return false;\n      }\n      if (hexString.slice(0, 2) === '05' && !this.inputValidationService.isMichelineExpr(hexString)) {\n        await this.beaconService.rejectOnUnknown(message);\n        return false;\n      }\n      this.selectedAccount = this.walletService.wallet.getImplicitAccount(message.sourceAddress);\n      return true;\n    } catch (e) {\n      if (e?.message === 'No matching request found!' && message.version === 0) {\n        console.log('wc2');\n        this.walletConnectService.opResponse(message, '', false);\n      } else {\n        throw e;\n      }\n    }\n    return false;\n  }\n  invalidParameters(parameters: any): boolean {\n    try {\n      if (parameters) {\n        if (!parameters.value || !parameters.entrypoint) {\n          throw new Error('entrypoint and value expected');\n        }\n        assertMichelsonData(parameters.value);\n      }\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n  /* operation request handling */\n  async operationResponse(opHash: any): Promise<void> {\n    if (opHash?.error) {\n      opHash = opHash.error;\n    }\n    if (!this.externalRequest) {\n      return;\n    }\n    console.log('hash', opHash);\n    console.log('externalRequest', this.externalRequest);\n    if (this.externalRequest.operationRequest.version) {\n      if (!opHash) {\n        await this.beaconService.rejectOnUserAbort(this.externalRequest.operationRequest);\n      } else if (opHash === 'broadcast_error') {\n        await this.beaconService.rejectOnBroadcastError(this.externalRequest.operationRequest);\n      } else if (opHash === 'invalid_parameters') {\n        await this.beaconService.rejectOnParameters(this.externalRequest.operationRequest);\n      } else if (opHash === 'parameters_error') {\n        await this.beaconService.rejectOnParameters(this.externalRequest.operationRequest);\n      } else if (opHash === 'unknown_error') {\n        await this.beaconService.rejectOnUnknown(this.externalRequest.operationRequest);\n      } else if (opHash !== 'silent') {\n        const response: OperationResponseInput = {\n          type: BeaconMessageType.OperationResponse,\n          transactionHash: opHash,\n          id: this.externalRequest.operationRequest.id\n        };\n        await this.beaconService.client.respond(response);\n      }\n    } else if (this.externalRequest.operationRequest.version === 0) {\n      if (opHash?.length > 50) {\n        this.walletConnectService.opResponse(this.externalRequest.operationRequest, opHash, true);\n      } else if (opHash !== 'silent') {\n        this.walletConnectService.opResponse(this.externalRequest.operationRequest, opHash, false);\n      }\n    }\n    if (opHash !== 'silent') {\n      this.beaconService.responseSync();\n    }\n    this.externalRequest = null;\n  }\n  /* permission handling */\n  async permissionResponse(publicKey: string): Promise<void> {\n    if (this.permissionRequest.version) {\n      // Beacon\n      if (!publicKey) {\n        await this.beaconService.rejectOnUserAbort(this.permissionRequest);\n        this.beaconService.responseSync();\n      } else if (publicKey !== 'silent') {\n        await this.beaconService.approvePermissionRequest(this.permissionRequest, publicKey);\n        this.beaconService.syncBeaconState();\n        this.beaconService.responseSync();\n      }\n    } else {\n      // Wallet Connect 2\n      if (!publicKey) {\n        this.walletConnectService.rejectPairing(this.permissionRequest);\n      } else if (publicKey !== 'silent') {\n        this.walletConnectService.approvePairing(this.permissionRequest, publicKey);\n      }\n    }\n    this.permissionRequest = null;\n  }\n  /* sign payload handling */\n  async signResponse(signature: string): Promise<void> {\n    if (this.signRequest.version) {\n      if (!signature) {\n        await this.beaconService.rejectOnUserAbort(this.signRequest);\n        this.beaconService.responseSync();\n      } else if (signature !== 'silent') {\n        await this.beaconService.approveSignPayloadRequest(this.signRequest, signature);\n        this.beaconService.responseSync();\n      }\n    } else if (this.signRequest.version === 0) {\n      if (signature) {\n        this.walletConnectService.opResponse(this.signRequest, signature, true);\n      } else {\n        this.walletConnectService.opResponse(this.signRequest, signature, false);\n      }\n    }\n    console.log(signature);\n    this.signRequest = null;\n  }\n  private async handleStorageEvent(ev: StorageEvent): Promise<void> {\n    switch (ev.key) {\n      case 'beacon:communication-peers-wallet':\n        const peers = JSON.parse(ev.newValue);\n        const senderIds = (await this.beaconService.client.getAppMetadataList()).map((app) => {\n          return app.senderId;\n        });\n        const newPeers = peers.length - senderIds.length;\n        if (newPeers > 0) {\n          const newPeer = peers ? peers.pop() : null;\n          if (newPeer && !senderIds.includes(newPeer.senderId)) {\n            const { senderId, ...peer } = newPeer;\n            await this.beaconService.addPeer(JSON.stringify(peer), false);\n          }\n        } else {\n          this.beaconService.syncBeaconState();\n        }\n        break;\n      case 'beacon:request-response':\n        if (ev.newValue) {\n          this.subjectService.beaconResponse.next(true);\n          this.beaconService.syncBeaconState();\n          this.changeFavicon();\n        }\n        break;\n    }\n  }\n}\n","<app-send [embedded]=\"false\" (operationResponse)=\"operationResponse($event)\"\n  [externalRequest]=\"externalRequest\"></app-send>\n<app-delegate (operationResponse)=\"operationResponse($event)\" [beaconMode]=true [externalRequest]=externalRequest>\n</app-delegate>\n<app-originate (operationResponse)=\"operationResponse($event)\" [externalRequest]=externalRequest></app-originate>\n<app-permission-request (permissionResponse)=\"permissionResponse($event)\" [permissionRequest]=\"permissionRequest\"\n  [activeAccount]=activeAccount>\n</app-permission-request>\n<app-sign-expr (signResponse)=\"signResponse($event)\" [signRequest]=\"signRequest\" [activeAccount]=selectedAccount>\n</app-sign-expr>\n<app-account-list [title]=\"'Accounts'\" [activeAccount]=\"activeAccount\"></app-account-list>\n<app-new-implicit></app-new-implicit>\n<app-receive></app-receive>\n<app-export-mnemonic></app-export-mnemonic>\n<app-session-select></app-session-select>","<div *ngIf=\"provider\" [class.transak]=\"provider === BuyProviderType.Transak\" [class.moonpay]=\"provider === BuyProviderType.MoonPay\">\n  <div class=\"top\">\n    <a>\n      <button class=\"back secondary\" (click)=\"close()\">\n        <img src=\"../../../../../assets/img/left-arrow.svg\">Back</button>\n    </a>\n    <p>Buy XTZ (tez) with {{ BuyProviderType[provider] }}</p>\n  </div>\n  <div class=\"main\">\n    <ng-container *ngIf=\"url\">\n      <iframe allow=\"accelerometer; autoplay; camera; gyroscope; payment\" frameborder=\"0\" height=\"100%\" [src]=\"this.url\"\n        width=\"100%\" (load)=\"iframeLoaded()\" (error)=\"iframeError()\">\n        <p>Your browser does not support iframes.</p>\n      </iframe>\n    </ng-container>\n  </div>\n</div>\n<img *ngIf=\"isLoading\" class=\"loading\" src=\"../../../../../../assets/img/loader.svg\">","import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { SubjectService, BuyProvider } from '../../../../../services/subject/subject.service';\nimport { generateOnRampURL } from '@coinbase/cbpay-js';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { Subscription } from 'rxjs';\nimport { CONSTANTS, environment } from '../../../../../../environments/environment';\n@Component({\n  selector: 'app-buy',\n  templateUrl: `./buy.component.html`,\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/buy/buy.component.scss']\n})\nexport class BuyComponent implements OnInit, OnDestroy {\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.mobile = window.innerWidth < 575;\n  }\n  public readonly BuyProviderType = BuyProvider;\n  readonly dev: boolean = !(CONSTANTS.MAINNET && environment.production);\n  readonly baseUrl: string = `https://buy${this.dev ? '-staging' : ''}.moonpay.com`;\n  mobile = false;\n  url: SafeUrl;\n  account: Account;\n  provider: BuyProvider;\n  isLoading: boolean = false;\n  private subscriptions: Subscription = new Subscription();\n  constructor(private sanitizer: DomSanitizer, private subjectService: SubjectService) {}\n\n  ngOnInit(): void {\n    this.onResize();\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((a) => {\n        this.account = a;\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.buy.subscribe((o) => {\n        this.provider = o;\n        if (Number.isInteger(o)) {\n          this.open();\n        } else {\n          this.close();\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  private async open(): Promise<void> {\n    this.isLoading = true;\n    const address: string = this.account ? this.account.address : null;\n    if (!address?.startsWith('tz')) {\n      return;\n    }\n    switch (this.provider) {\n      case BuyProvider.Coinbase:\n        this.isLoading = false;\n        const newWindow = window.open(\n          generateOnRampURL({\n            appId: 'aa41d510-15f9-4426-87bd-3a506b6e22c0',\n            destinationWallets: [{ address, blockchains: ['tezos'] }]\n          }),\n          'Coinbase Pay',\n          'height=600,width=400'\n        );\n        newWindow.opener = null;\n        break;\n      case BuyProvider.Transak:\n        this.isLoading = false;\n        let walletAddressesData = {\n          coins: {\n            XTZ: { address }\n          }\n        };\n        const apiKey = CONSTANTS.MAINNET ? 'f1336570-699b-4181-9bd1-cdd57206981f' : '3b0e81f3-37dc-41f3-9837-bd8d2c350313';\n        this.url = this.sanitizer.bypassSecurityTrustResourceUrl(\n          `https://${!CONSTANTS.MAINNET ? 'staging-' : ''}global.transak.com?apiKey=${apiKey}&cryptoCurrencyCode=XTZ&walletAddressesData=${JSON.stringify(\n            walletAddressesData\n          )}&disableWalletAddressForm=true}`\n        );\n        break;\n      case BuyProvider.MoonPay:\n        this.url = await this.signUrl(address);\n        break;\n    }\n  }\n  private close(): void {\n    this.url = null;\n    this.provider = undefined;\n    this.isLoading = false;\n  }\n  private async signUrl(address: string): Promise<SafeUrl> {\n    if (address?.startsWith('tz')) {\n      const query: string = `?apiKey=${\n        this.dev ? 'pk_test_M23P0Zc5SvBORSFV63sfWKi7n5QbGZR' : 'pk_live_rP9HlBRO54nY4QKLxc6ONl4Prrm6vymK'\n      }&colorCode=%237178E3&currencyCode=xtz&walletAddress=${encodeURIComponent(address)}`;\n      const sig = await this.post({ dev: this.dev, url: query });\n      if (sig) {\n        const url = this.sanitizer.bypassSecurityTrustResourceUrl(`${this.baseUrl}${query}&signature=${encodeURIComponent(sig)}`);\n        return url;\n      }\n    }\n    return null;\n  }\n  private async post(data: any = {}): Promise<string> {\n    return fetch('https://utils.kukai.network/moonpay/sign', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(async (d) => {\n        return d.text();\n      })\n      .catch((e) => {\n        return '';\n      });\n  }\n  iframeLoaded() {\n    this.isLoading = false;\n  }\n  iframeError() {\n    this.isLoading = false;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <div class=\"flex-column text\">\n        <h1 class=\"title\">{{ title }}</h1>\n        <h2 class=\"secondary\">Choose a provider</h2>\n      </div>\n    </div>\n    <div class=\"flex-column buy\">\n      <div class=\"flex-row option\" (click)=\"buyTez(BuyProviderType.Coinbase)\">\n        <img src=\"assets/img/coinbase.png\" />\n        <div class=\"text\">\n          <h3>Coinbase</h3>\n          <h4>Transfer from Coinbase</h4>\n        </div>\n      </div>\n      <div class=\"flex-row option\" (click)=\"buyTez(BuyProviderType.Transak)\">\n        <img src=\"assets/img/transak.png\" />\n        <div class=\"text\">\n          <h3>Transak</h3>\n          <h4>Bank transfers &amp; local payment methods in 120+ countries</h4>\n        </div>\n      </div>\n      <div class=\"flex-row option\" (click)=\"buyTez(BuyProviderType.MoonPay)\">\n        <img src=\"assets/img/moonpay.svg\" />\n        <div class=\"text\">\n          <h3>Moonpay</h3>\n          <h4>Cards &amp; bank transfers</h4>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ModalComponent } from '../modal.component';\nimport { SubjectService, BuyProvider } from '../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-buy-modal',\n  templateUrl: './buy.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class BuyModalComponent extends ModalComponent implements OnInit {\n  title = 'Get Tez (XTZ)';\n  name = 'buy';\n  address = '';\n  onrampInstance = null;\n  public readonly BuyProviderType = BuyProvider;\n  constructor(private subjectService: SubjectService) {\n    super();\n  }\n\n  ngOnInit() {}\n  open() {\n    super.open();\n  }\n\n  closeModal(): void {\n    super.close();\n  }\n  buyTez(provider: BuyProvider) {\n    this.subjectService.buy.next(provider);\n    this.closeModal();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logged-in',\n  templateUrl: './logged-in.component.html'\n})\nexport class LoggedInComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-uri-handler></app-uri-handler>\n<router-outlet></router-outlet>\n<app-buy></app-buy>\n<app-buy-modal></app-buy-modal>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StartComponent } from './components/views/start/start.component';\nimport { NewWalletComponent } from './components/views/start/login-types/new-wallet/new-wallet.component';\nimport { MnemonicImportComponent } from './components/views/start/login-types/mnemonic-import/mnemonic-import.component';\nimport { ConnectLedgerComponent } from './components/views/start/login-types/connect-ledger/connect-ledger.component';\nimport { P404Component } from './components/views/error/404.component';\nimport { P500Component } from './components/views/error/500.component';\nimport { PrivacyPolicyComponent } from './components/views/start/agreement/privacy-policy/privacy-policy.component';\nimport { TermsOfUseComponent } from './components/views/start/agreement/terms-of-use/terms-of-use.component';\nimport { EmbeddedComponent } from './components/views/embedded/embedded.component';\nimport { LoggedInComponent } from './components/views/logged-in/logged-in.component';\nimport { ActivateComponent } from './components/views/start/activate/activate.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: '', component: StartComponent },\n      { path: 'new-wallet', component: NewWalletComponent },\n      { path: 'import', component: MnemonicImportComponent },\n      { path: 'connect-ledger', component: ConnectLedgerComponent },\n      {\n        path: 'account',\n        component: LoggedInComponent,\n        loadChildren: () => import(`./components/views/logged-in/logged-in.module`).then((module) => module.LoggedInModule)\n      },\n      { path: 'activate', component: ActivateComponent },\n      { path: 'serviceworker', component: TermsOfUseComponent },\n      { path: 'embedded', component: EmbeddedComponent }\n    ]\n  },\n  { path: 'privacy-policy', component: PrivacyPolicyComponent },\n  { path: 'terms-of-use', component: TermsOfUseComponent },\n  { path: 'wc', redirectTo: '' },\n  { path: '404', component: P404Component, data: { title: 'Page 404' } },\n  { path: '500', component: P500Component, data: { title: 'Page 500' } },\n  { path: '**', redirectTo: '404' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","<div [style.display]=\"!isOpen ? 'none' : ''\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"close()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <h1 class=\"title\">{{ title }}</h1>\n    </div>\n    <div class=\"flex-column info\">\n      <div class=\"message\">\n        {{ message }}\n      </div>\n      <div *ngIf=\"action\" class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <button class=\"button confirm\" (click)=\"proceed()\">{{ action }}</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalComponent } from '../modal.component';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class InfoComponent extends ModalComponent implements OnInit {\n  action = '';\n  message = '';\n  href = '';\n  title = 'Info';\n  name = 'info';\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  open(data: any): void {\n    this.action = data?.action;\n    this.message = data?.message;\n    this.href = data?.href;\n    this.title = data?.title || this.title;\n    super.open();\n  }\n\n  closeModal(): void {\n    super.close();\n  }\n  proceed(): void {\n    if (!!this.href) {\n      const newTab = window.open(this.href, '_blank');\n      newTab.focus();\n      newTab.opener = null;\n    }\n    this.closeModal();\n  }\n}\n","<ng-container *ngIf=\"!message?.timeout && message?.msg\">\n  <span *ngIf=\"!message?.email && !message?.username && !message?.twitterId && message?.msg\">{{ message.msg }}</span>\n  <span *ngIf=\"message?.email || message?.username || message?.twitterId\">Click <a target=\"_blank\"\n      href=\"{{ notifyFormat(message) }}\">here to notify</a> {{ getAlias(message) }} via {{ message.msg }}: <b>{{\n      message.amount }}</b> sent</span>\n  <svg version=\"1.2\" baseProfile=\"tiny-ps\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14 14\" width=\"14\" height=\"14\"\n    class=\"flex-row button close\" (click)=\"removeMessage(index)\">\n    <title>Popups</title>\n    <g id=\"Popups\">\n      <g id=\"Confirmation TEZ\">\n        <g id=\"Close Button\">\n          <path id=\"Rectangle 13\" class=\"shp0\"\n            d=\"M13.46 0.54C14.18 1.25 14.18 2.41 13.46 3.12L3.12 13.46C2.41 14.18 1.25 14.18 0.54 13.46C-0.18 12.75 -0.18 11.59 0.54 10.88L10.88 0.54C11.59 -0.18 12.75 -0.18 13.46 0.54ZM3.12 0.54L13.46 10.88C14.18 11.59 14.18 12.75 13.46 13.46C12.75 14.18 11.59 14.18 10.88 13.46L0.54 3.12C-0.18 2.41 -0.18 1.25 0.54 0.54C1.25 -0.18 2.41 -0.18 3.12 0.54Z\" />\n        </g>\n      </g>\n    </g>\n  </svg>\n</ng-container>\n<ng-container *ngIf=\"message?.timeout && message?.msg\">\n  <span *ngIf=\"message?.msg\">{{ message.msg }}</span><img *ngIf=\"message?.loader\" class=\"loader\"\n    src=\"../../../../assets/img/wait.svg\">\n</ng-container>","import { Component, Input, OnInit } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['../../../../scss/components/modals/alert/alert.component.scss']\n})\nexport class AlertComponent implements OnInit {\n  @Input() public message;\n  @Input() index;\n\n  constructor(public messageService: MessageService) {}\n  readonly subject = 'Sent you Tezos tokens';\n  ngOnInit(): void {\n    if (this.message?.timeout) {\n      setTimeout(() => {\n        this.removeMessage(this.index);\n        this.message = null;\n      }, this.message?.timeout);\n    }\n  }\n\n  removeMessage(index: number): void {\n    this.messageService.messages.splice(index, 1);\n  }\n  getHostName(): string {\n    return location.hostname;\n  }\n  notifyFormat(message: any): string | Error {\n    if (message.email) {\n      return this.mailtoFormat(message);\n    } else if (message.username) {\n      return this.redditPmFormat(message);\n    } else if (message.twitterId) {\n      return this.twitterPmFormat(message);\n    } else {\n      throw new Error('Invalid message');\n    }\n  }\n  mailtoFormat(message: any): string {\n    const subject = encodeURI(this.subject);\n    const body = this.encodedBody(message.amount, 'Google', `https://${this.getHostName()}\\n\\n`);\n    return `mailto:${message.email}?subject=${subject}&body=${body}`;\n  }\n  redditPmFormat(message: any): string {\n    // https://www.reddit.com/message/compose?to=USERNAME&subject=SUBJECT&message=MESSAGE\n    const subject = encodeURI(this.subject);\n    const body = this.encodedBody(`${message.amount}`, 'Reddit', `[kukai.app](https://${this.getHostName()})`);\n    return `https://www.reddit.com/message/compose?to=${message.username}&subject=${subject}&message=${body}`;\n  }\n  twitterPmFormat(message: any): string {\n    // https://twitter.com/messages/compose?recipient_id=USER_ID&text=MESSAGE\n    const body = this.encodedBody(message.amount, 'Twitter', `https://${this.getHostName()}`);\n    return `https://twitter.com/messages/compose?recipient_id=${message.twitterId}&text=${body}`;\n  }\n  encodedBody(amount: string, accountType: string, url: string): string {\n    const s = accountType === 'Reddit' ? '  ' : '';\n    const b = accountType === 'Reddit' ? '**' : '';\n    const t = accountType === 'Twitter' ? 'Tezos ' : '';\n    return encodeURI(\n      `Hi,${s}\\nI sent you ${b}${amount}${b} using the Kukai wallet.\\n\\nYou can access your ${t}wallet with your ${accountType} account at: ${url}`\n    );\n  }\n  getAlias(message: any): string {\n    return message.email ? message.email : message.username ? message.username : message.handler ? message.handler : 'recipient';\n  }\n}\n","<div class='msg-container'>\n  <div *ngFor=\"let message of messageService.messages ; let i = index\">\n    <app-alert [message]=\"message\" [index]=\"i\" class=\"flex-row alert\" [class]=\"'alert alert-'+message.type\">\n    </app-alert>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TorusService } from '../../../services/torus/torus.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['../../../../scss/components/ui/messages/messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n  constructor(public messageService: MessageService, public torusService: TorusService) {}\n  ngOnInit(): void {}\n}\n","<div *ngIf=\"router.url.indexOf('/account/') > -1\" class=\"flex-row dropdown\" [class.expanded]=\"isOpen\"\n  [style.cursor]=\"['', 'domain'].includes(getVerifier()) ? '' : 'text'\" [id]=\"ecmpId\">\n  <div class=\"flex-row currentAddress\" (click)=\"['', 'domain'].includes(getVerifier()) ? toggleDropdown() : ''\"><img\n      *ngIf=\"!!getUsername(current?.address)\" class=\"logo\"\n      src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span class=\"address\">{{\n      getUsername(current?.address) || \"&nbsp;&nbsp;&nbsp;&nbsp;\" + current?.shortAddress() }}</span><img\n      *ngIf=\"['', 'domain'].includes(getVerifier())\" class=\"button icon-db\"\n      src=\"../../../../assets/img/down-arrow.svg\" />\n  </div>\n  <div class=\"flex-column dropdown-content\">\n    <div class=\"flex-column body\">\n      <ng-container *ngFor=\"let account of list; trackBy: trackAccount\">\n        <a class=\"option\" routerLink=\"/account/{{account?.address}}{{postfix}}\"\n          [class.selected]=\"account?.address === current?.address\"\n          [style.padding]=\"!getUsername(current?.address) ? '0.75rem 1.125rem 0.75rem calc(2.5rem - var(--border-width))' : ''\"\n          (click)=\"toggleDropdown()\">\n          <ng-container *ngIf=\"getUsername(account?.address)\">\n            <div class=\"flex-row alias\"><img class=\"logo\"\n                src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span>{{\n                getUsername(account?.address) }}</span></div>\n          </ng-container>\n          <ng-container *ngIf=\"!getUsername(account?.address)\">{{ account?.shortAddress() }}</ng-container>\n        </a>\n      </ng-container>\n    </div>\n    <div *ngIf=\"list?.length > 1\" class=\"option show-all\" [style.padding]=\"!getUsername(current?.address) ? '0.75rem 1.125rem 0.75rem calc(2.5rem - var(--border-width))' : ''\" (click)=\"showAll()\">\n      <span>Show All</span>\n    </div>\n  </div>\n</div>","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { TorusWallet } from '../../../../services/wallet/wallet';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { DropdownComponent } from '../dropdown.component';\nimport { ModalComponent } from '../../../modals/modal.component';\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-ui-dropdown-account',\n  templateUrl: './account-dropdown.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/account-dropdown.component.scss']\n})\nexport class AccountDropdownComponent extends DropdownComponent implements OnInit, OnChanges, OnDestroy {\n  postfix = '';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(public router: Router, public lookupService: LookupService, private walletService: WalletService) {\n    super();\n    this.subscriptions.add(\n      this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n        let accountAddress = r.url.substr(r.url.indexOf('/account/') + 9);\n        this.postfix = !!accountAddress.substring(36) ? accountAddress.substring(36) : '';\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    this.list = this.options;\n    let accountAddress = this.router.url.substr(this.router.url.indexOf('/account/') + 9);\n    this.postfix = !!accountAddress.substring(36) ? accountAddress.substring(36) : '';\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options && changes.options.currentValue !== changes.options.previousValue) {\n      this.list = this.options;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  getUsername(address: string): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      const party = this.lookupService.resolve({\n        address: address || this.current?.address\n      });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n  showAll(): void {\n    ModalComponent.currentModel.next({ name: 'account-list', data: null });\n  }\n  trackAccount(index: number, account: any) {\n    return account?.address ? account.address : index;\n  }\n}\n","<div class=\"hamburger-dropdown\" [class.expanded]=\"isOpen\" [id]=\"ecmpId\">\n  <img class=\"button icon-db\" src=\"../../../../assets/img/hamburger.svg\" (click)=\"toggleDropdown()\" />\n  <div *ngIf=\"router.url.indexOf('/account/') === 0\" class=\"flex-column mobile dropdown-content\">\n    <div class=\"flex-row-wrap account-content\">\n      <div class=\"flex-column button\" (click)=\"unlockableService.toggleFeature('theme', 'dark');toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" [src]=\"this.unlockableService?.unlockables?.theme === 'dark' ? 'assets/img/light_mode_blue.svg' : 'assets/img/dark_mode_blue.svg'\" />\n        </div>\n        <span>THEME</span>\n      </div>\n      <div *ngIf=\"router.url.indexOf('/account/') === 0\" class=\"flex-column button\" (click)=\"copy();toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" src=\"../../../../assets/img/copy-blue.svg\" />\n        </div>\n        <span>COPY</span>\n      </div>\n      <div class=\"flex-column button\" (click)=\"receive();toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" src=\"../../../../assets/img/qr-blue.svg\" />\n        </div>\n        <span>QR</span>\n      </div>\n      <div *ngIf=\"walletService.isHdWallet()\" class=\"flex-column button\" (click)=\"newAccount();toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" src=\"../../../../assets/img/add-blue.svg\" />\n        </div>\n        <span>ADD</span>\n      </div>\n    </div>\n    <div class=\"flex-row button delegation\" routerLink=\"/account/{{activeAccount?.address}}/stakers\"\n      (click)=\"toggleDropdown()\">\n      <div *ngIf=\"!activeAccount?.delegate\" class=\"flex-row\">\n        <span class=\"flex-row\">STAKING:</span><span class=\"choose\">NOT\n          STAKING</span>\n      </div>\n      <div *ngIf=\"activeAccount?.delegate\" class=\"flex-row\">\n        <span>STAKING</span>\n        <span class=\"flex-row address\">{{ delegateName\n          }}</span>\n      </div>\n    </div>\n\n    <div class=\"flex-row button\" [routerLink]=\"'/account/' + activeAccount?.address + '/settings'\" (click)=\"toggleDropdown()\">\n      <span>SETTINGS</span><img class=\"icon settings\" src=\"../../../../assets/img/cog.svg\" style=\"width: 2.75rem\" />\n    </div>\n    <div class=\"flex-row button\" (click)=\"logout();toggleDropdown()\">\n      <span>LOGOUT</span><img class=\"icon\" src=\"../../../../assets/img/sign-out-alt.svg\" style=\"width: 2.5rem\" />\n    </div>\n  </div>\n  <div *ngIf=\"router.url.indexOf('/account/') !== 0\" class=\"flex-column mobile dropdown-content\">\n    <div routerLink=\"/import/\" class=\"flex-row button\" (click)=\"toggleDropdown()\">\n      <span>Import Wallet</span>\n    </div>\n    <div routerLink=\"/new-wallet/\" class=\"flex-row button\" (click)=\"toggleDropdown()\">\n      <span>Create New Wallet</span>\n    </div>\n    <div routerLink=\"/connect-ledger/\" class=\"flex-row button\" (click)=\"toggleDropdown()\">\n      <span>Connect Ledger</span>\n    </div>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { Account } from '../../../../services/wallet/wallet';\nimport { DropdownComponent } from '../dropdown.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport copy from 'copy-to-clipboard';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { ModalComponent } from '../../../../components/modals/modal.component';\nimport { take } from 'rxjs/operators';\nimport { UnlockableService } from '../../../../services/unlockable/unlockable.service';\n\n@Component({\n  selector: 'app-ui-mobile-menu',\n  templateUrl: './mobile-menu.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/mobile-menu.component.scss']\n})\nexport class MobileMenuDropdownComponent extends DropdownComponent implements OnInit {\n  @Input() activeAccount: Account;\n  @Input() delegateName;\n  @Input() newAccount;\n  @Input() receive;\n\n  constructor(\n    public router: Router,\n    public walletService: WalletService,\n    public lookupService: LookupService,\n    private messageService: MessageService,\n    private translate: TranslateService,\n    private subjectService: SubjectService,\n    public unlockableService: UnlockableService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  toggleDropdown(): void {\n    if (window.innerHeight < document.body.scrollHeight) {\n      document.body.style.overflow = 'hidden';\n    }\n    this.isOpen = !this.isOpen;\n  }\n  copy(): void {\n    copy(this.activeAccount.address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(this.activeAccount.address + ' ' + copyToClipboard, 5);\n  }\n  openSwap() {\n    this.messageService.startSpinner();\n    ModalComponent.currentModel.next({ name: 'swap-liquidity', data: null });\n  }\n  logout(): void {\n    this.subjectService.logout.next(true);\n    this.messageService.clear();\n    this.walletService.clearWallet();\n    this.lookupService.clear();\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"flex-row top-container desktop\" [class]=\"router.url.indexOf('/account') === 0 ? 'default' : ''\">\n  <a routerLink=\"/\" class=\"flex-row brand-logo\">\n    <img class=\"icon\" src=\"../../../assets/img/header-logo.svg\" />\n  </a>\n  <div *ngIf=\"router.url.indexOf('/account/') === 0\" class=\"flex-row right\">\n    <div class=\"button icon\" (click)=\"unlockableService.toggleFeature('theme', 'dark')\">\n      <img [src]=\"this.unlockableService?.unlockables?.theme === 'dark' ? 'assets/img/light_mode.svg' : 'assets/img/dark_mode.svg'\" />\n      <div class=\"tooltip\">\n        <div class=\"description\">THEME</div>\n      </div>\n    </div>\n    <div class=\"flex-column left\">\n      <app-ui-dropdown-account [options]=\"accounts\" [current]=\"activeAccount\"></app-ui-dropdown-account>\n      <div class=\"delegation\">\n        <div class=\"flex-row outside-container\" *ngIf=\"!beaconMode\">\n          <div class=\"flex-row button\" routerLink=\"/account/{{activeAccount?.address}}/stakers\">\n            <span *ngIf=\"!activeAccount?.delegate\">STAKING: <span class=\"choose\">NOT\n                STAKED</span></span>\n            <span *ngIf=\"activeAccount?.delegate\" class=\"address\">STAKING: <span>{{ delegateName }}</span></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"flex-row right\">\n      <div class=\"button icon\" (click)=\"copy()\">\n        <img src=\"../../../assets/img/copy.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">COPY ADDRESS</div>\n        </div>\n      </div>\n      <div class=\"button icon receive\" (click)=\"receive()\">\n        <img src=\"../../../assets/img/qr.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">ADDRESS QR</div>\n        </div>\n      </div>\n      <div *ngIf=\"walletService.isHdWallet()\" class=\"button icon\" (click)=\"newAccount()\">\n        <img src=\"../../../assets/img/add.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">ADD ACCOUNT</div>\n        </div>\n      </div>\n      <div class=\"button icon settings\" [routerLink]=\"'/account/' + activeAccount?.address + '/settings'\">\n        <img src=\"../../../assets/img/settings.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">SETTINGS</div>\n        </div>\n      </div>\n      <div class=\"button icon\" (click)=\"logout()\">\n        <img src=\"../../../assets/img/logout.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">SIGN OUT</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"router?.url?.indexOf('/account/') !== 0\" class=\"flex-row right\">\n    <div class=\"right\">\n      <span *ngIf=\"router.url.indexOf('/import') === 0 || router.url === '/' || router.url.startsWith('/?type') || router.url.startsWith('/?uri')\" routerLink=\"/import/\" class=\"button\"\n        [class.selected]=\"router.url.indexOf('/import') === 0\">Import Wallet</span>\n      <span *ngIf=\"router.url.indexOf('/new-wallet') === 0 || router.url === '/' || router.url.startsWith('/?type') || router.url.startsWith('/?uri')\" routerLink=\"/new-wallet/\"\n        class=\"button\" [class.selected]=\"router.url.indexOf('/new-wallet') === 0\">Create New Wallet</span>\n      <span *ngIf=\"router.url.indexOf('/connect-ledger') === 0 || router.url === '/' || router.url.startsWith('/?type') || router.url.startsWith('/?uri')\" routerLink=\"/connect-ledger/\"\n        class=\"button\" [class.selected]=\"router.url.indexOf('/connect-ledger') === 0\">Connect Ledger</span>\n      <span *ngIf=\"router.url.indexOf('/activate') === 0\" routerLink=\"/activate/\" class=\"button\"\n        [class.selected]=\"router.url.indexOf('/activate') === 0\">Activate</span>\n    </div>\n  </div>\n</div>\n<div class=\"flex-row top-container mobile\" [class]=\"router.url.indexOf('/account') === 0 ? 'default' : ''\">\n  <a routerLink=\"/\" class=\"flex-row brand-logo\">\n    <img class=\"icon\" src=\"../../../assets/img/header-logo.svg\" />\n  </a>\n  <div *ngIf=\"router.url.indexOf('/account/') > -1\" class=\"flex-row center\">\n    <app-ui-dropdown-account [options]=\"accounts\" [current]=\"activeAccount\" style=\"width: 100%;\">\n    </app-ui-dropdown-account>\n  </div>\n  <app-ui-mobile-menu [activeAccount]=\"activeAccount\" [delegateName]=\"delegateName\" [newAccount]=\"newAccount\" [receive]=\"receive\"></app-ui-mobile-menu>\n</div>","import { Component, OnInit, Input, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { Account } from '../../../../services/wallet/wallet';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { CONSTANTS as _CONSTANTS } from '../../../../../environments/environment';\nimport { filter } from 'rxjs/operators';\nimport copy from 'copy-to-clipboard';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalComponent } from '../../../modals/modal.component';\nimport { DelegateService } from '../../../../services/delegate/delegate.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\nimport { DeeplinkService } from '../../../../services/deeplink/deeplink.service';\nimport { UnlockableService } from '../../../../services/unlockable/unlockable.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['../../../../../scss/components/views/layouts/header/header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnChanges, OnDestroy {\n  window = window;\n  document = document;\n  @Input() activeAccount: Account;\n  accounts: Account[];\n  delegateName = '';\n  readonly CONSTANTS = _CONSTANTS;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public router: Router,\n    private route: ActivatedRoute,\n    private deeplinkService: DeeplinkService,\n    public walletService: WalletService,\n    public lookupService: LookupService,\n    private messageService: MessageService,\n    private translate: TranslateService,\n    private delegateService: DelegateService,\n    private subjectService: SubjectService,\n    public unlockableService: UnlockableService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(async () => {\n        this.accounts = this.walletService.wallet?.getAccounts();\n        this.delegateName = await this.getDelegateName(this.activeAccount?.delegate);\n      })\n    );\n    this.accounts = this.walletService.wallet?.getAccounts();\n    this.subscriptions.add(\n      this.route.queryParams.subscribe(async (params) => {\n        if (params?.type || (params?.uri && params.uri.startsWith('wc:'))) {\n          this.deeplinkService.set(params);\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n        document.body.scrollTop = 0;\n        if (!(this.accounts?.length > 0) && r.url.indexOf('/account/') === 0) {\n          this.router.navigateByUrl('/');\n        } else if (this.accounts?.length > 0 && !r.url.match(/terms\\-of\\-use|privacy\\-policy/g)) {\n          let accountAddress = r.url.substr(r.url.indexOf('/account/') + 9);\n          accountAddress = accountAddress.indexOf('/') !== -1 ? accountAddress.substring(0, accountAddress.indexOf('/')) : accountAddress;\n          if (!this.walletService.addressExists(accountAddress)) {\n            this.router.navigateByUrl(`/account/${this.accounts[0].address}`);\n            this.activeAccount = this.accounts[0];\n            this.subjectService.activeAccount.next(this.accounts[0]);\n          } else {\n            this.activeAccount = this.walletService.wallet?.getAccount(accountAddress);\n            this.subjectService.activeAccount.next(this.activeAccount);\n          }\n          this.delegateName = await this.getDelegateName(this.activeAccount?.delegate);\n        }\n      })\n    );\n  }\n\n  async ngOnChanges(changes: SimpleChanges): Promise<void> {\n    if (changes?.activeAccount?.currentValue) {\n      this.delegateName = await this.getDelegateName(changes?.activeAccount?.currentValue.delegate);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  logout(): void {\n    this.subjectService.logout.next(true);\n    this.messageService.clear();\n    this.walletService.clearWallet();\n    this.lookupService.clear();\n    this.router.navigate(['']);\n  }\n  copy(): void {\n    copy(this.activeAccount.address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(this.activeAccount.address + ' ' + copyToClipboard, 5);\n  }\n\n  toggleDropdown(sel): void {\n    document.querySelector(sel).parentNode.classList.toggle('expanded');\n  }\n  newAccount(): void {\n    ModalComponent.currentModel.next({ name: 'new-implicit', data: null });\n  }\n  receive(): void {\n    ModalComponent.currentModel.next({\n      name: 'receive',\n      data: { address: this.activeAccount.address }\n    });\n  }\n\n  async getDelegateName(address: string): Promise<string> {\n    return address\n      ? (await this.delegateService.resolveDelegateByAddress(address))?.name ??\n          address.substring(0, 7) + '...' + address.substring(address.length - 4, address.length)\n      : address;\n  }\n}\n","<div *ngIf=\"this.path !== '/embedded'\" class=\"foot-container\" [class.dark]=\"true\">\n  <div class=\"flex-row links\">\n    <div class=\"flex-row left low\">\n      <a href=\"./terms-of-use\" target=\"_blank\">Terms of Use</a>\n      <a href=\"./privacy-policy\" target=\"_blank\">Privacy</a>\n      <a class=\"desktop\" target=\"_blank\" href=\"mailto:contact@kukai.app\">Contact</a>\n    </div>\n    <div class=\"flex-column since low\">\n      <div class=\"flex-row-wrap\" id=\"follow\">\n        <span>follow kukai on</span>\n        <a href=\"https://github.com/kukai-wallet/kukai\" target=\"_blank\"><img src=\"../../../assets/img/logo-github.svg\"></a>\n        <a (click)=\"promptTelegramDialog($event)\" id=\"tg\"><img src=\"../../../assets/img/logo-telegram.svg\"></a>\n        <a href=\"https://twitter.com/KukaiWallet/\" target=\"_blank\"><img src=\"../../../assets/img/logo-twitter.svg\"></a>\n        <a id=\"since\">Since 2018 &trade;</a>\n      </div>\n    </div>\n    <div class=\"flex-row low\">\n      <a class=\"mobile\" target=\"_blank\" href=\"mailto:contact@kukai.app\">Contact</a>\n        <a class=\"docs\" href=\"https://docs.kukai.app\" target=\"_blank\">\n          Help</a>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ModalComponent } from '../../../../components/modals/modal.component';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['../../../../../scss/components/views/layouts/footer/footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  darkText = false;\n  path = '';\n  ModalComponent = ModalComponent;\n  constructor() {}\n\n  ngOnInit(): void {}\n  promptTelegramDialog(ev) {\n    ev.preventDefault();\n    ModalComponent.currentModel.next({\n      name: 'info',\n      data: {\n        href: 'https://t.me/KukaiWallet',\n        message: `Social engineering attacks are currently a high threat on Telegram.\n\n• Do not answer anyone that sends you private messages or calls you\n\n• Do not click on any links in a private message, or share your seed words with anyone`,\n        title: 'Security Notice',\n        action: 'I understand'\n      }\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner-new',\n  templateUrl: './spinner-new.component.html',\n  styleUrls: ['./spinner-new.component.scss']\n})\nexport class SpinnerNewComponent implements OnInit {\n  @Input() logo: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<ng-container *ngIf=\"messageService && messageService.spinnerOn\">\n  <app-spinner-new [logo]=\"logo\"></app-spinner-new>\n  <!-- <app-spinner-legacy *ngIf=\"!embedded\"></app-spinner-legacy> -->\n</ng-container>","<img class=\"spinner\" src=\"../../../../assets/img/spinner/gradientSpiral.svg\">\n<img class=\"logo\" src=\"../../../../assets/img/spinner/{{logo}}.svg\">","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MessageService } from '../../../services/message/message.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit, OnDestroy {\n  @Input() embedded: boolean;\n  logo = 'default';\n  private subscriptions: Subscription = new Subscription();\n  constructor(public messageService: MessageService, private subjectService: SubjectService) {}\n\n  ngOnInit(): void {\n    this.subjectService.origin.subscribe((o) => {\n      if (o?.endsWith('gap.com')) {\n        this.logo = 'gap';\n      } else if (o?.endsWith('truesy.com')) {\n        this.logo = 'truesy';\n      } else if (o?.endsWith('playwithbrio.com')) {\n        this.logo = 'brio';\n      } else if (o && o?.indexOf('interpop') !== -1) {\n        this.logo = 'minterPop';\n      } else {\n        this.logo = 'default';\n      }\n    });\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div *ngIf=\"displayAgreement\" class=\"agreement-wrapper fade-in\">\n  <div class=\"agreement-body\">\n    <div class=\"agreement-footer fade-in\">\n      <p>By Accessing, Continuing to Use & Browse this Website including its Services provided therein (“Kukai Wallet”),\n        you agree that you have read and reviewed our <a href=\"./terms-of-use\" target=\"_blank\">Terms of Use</a> and <a\n          href=\"./privacy-policy\" target=\"_blank\">Privacy Policy</a>.</p>\n      <div>\n        <div class=\"flex-column accept\">\n          <button class=\"fade-in\" (click)=\"accept()\">Accept</button>\n          <p>I have reviewed the Terms of Use and Privacy Policy, I hereby Accept and Agree to the Terms of Use and\n            Privacy Policy.</p>\n        </div>\n        <div class=\"flex-column decline\">\n          <a class=\"flex-column\" href=\"about:blank\"><button>Decline</button></a>\n          <p>I have reviewed the Terms of Use and Privacy Policy, I hereby DO NOT Accept and Agree to the Terms of Use\n            and Privacy Policy.</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-agreement',\n  templateUrl: './agreement.component.html',\n  styleUrls: ['../../../../../scss/components/views/start/agreement/agreement.component.scss']\n})\nexport class AgreementComponent implements OnInit {\n  displayAgreement = false;\n  key = 'accepted-terms';\n  constructor(private location: Location) {}\n  ngOnInit(): void {\n    // localStorage.removeItem(this.key);\n    const accepted = localStorage.getItem(this.key);\n    const path = this.location.path();\n    if (!accepted && path !== '/terms-of-use' && path !== '/privacy-policy') {\n      this.displayAgreement = true;\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflowY = 'hidden';\n    }\n  }\n  accept(): void {\n    localStorage.setItem(this.key, '1');\n    this.displayAgreement = false;\n    document.body.style.marginRight = '';\n    document.body.style.overflowY = '';\n  }\n  reject(): void {\n    document.body.style.marginRight = '';\n    document.body.style.overflowY = '';\n    window.open('', '_self');\n  }\n}\n","<div *ngIf=\"!CONSTANTS.MAINNET && !embedded\" class=\"network\"\n  [style.boxShadow]=\"document?.body.scrollTop !== 0 ? '0 2px 10px #3333' : ''\">\n  WARNING: TEST ONLY {{ CONSTANTS.NETWORK.toUpperCase() }}\n</div>\n<app-header *ngIf=\"!embedded\"></app-header>\n<router-outlet></router-outlet>\n<app-messages *ngIf=\"!embedded\"></app-messages>\n<app-spinner [embedded]=\"embedded\"></app-spinner>\n<app-agreement *ngIf=\"!embedded\"></app-agreement>\n<app-info></app-info>\n<app-footer *ngIf=\"!embedded\" [class.initial]=\"router.url !== '/'\"></app-footer>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { WalletService } from './services/wallet/wallet.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Location } from '@angular/common';\nimport { CONSTANTS as _CONSTANTS } from '../environments/environment';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  readonly CONSTANTS = _CONSTANTS;\n  embedded = false;\n  isMobile = false;\n  previous = 0;\n  current = 0;\n  diff = 0;\n  container = null;\n  post = false;\n  private subscriptions: Subscription = new Subscription();\n  constructor(private walletService: WalletService, public router: Router, public translate: TranslateService, private location: Location) {\n    // this language will be used as a fallback when a translation isn't found in the current language\n    translate.setDefaultLang('en');\n\n    // the lang to use, if the lang isn't available, it will use the current loader to get them\n    const languagePreference = window.localStorage.getItem('languagePreference');\n    const browserLang = translate.getBrowserLang();\n    translate.use('en');\n  }\n\n  ngOnInit() {\n    this.checkEmbedded();\n    if (!this.embedded) {\n      this.walletService.loadStoredWallet();\n    }\n    this.subscriptions.add(\n      this.router.events.subscribe((event: Event) => {\n        if (event instanceof NavigationEnd) {\n          this.checkEmbedded();\n          window.scrollTo(0, 0);\n        }\n      })\n    );\n    if (!this.embedded) {\n      window.addEventListener('storage', (e) => {\n        this.handleStorageEvent(e);\n      });\n    }\n\n    const e = () => {\n      const brk = getComputedStyle(document.documentElement).getPropertyValue('--layout-break-5');\n      if (parseFloat(brk.replace(/[a-zA-Z]/g, '')) * 16 > document.documentElement.clientWidth) {\n        document.documentElement.style.setProperty('--is-mobile', '1');\n      } else {\n        document.documentElement.style.setProperty('--is-mobile', '0');\n      }\n    };\n    window.addEventListener('resize', e);\n    window.addEventListener('load', e);\n    e();\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  private handleStorageEvent(e: StorageEvent) {\n    if (e.key === 'kukai-wallet' && !this.embedded) {\n      if (e.oldValue && !e.newValue) {\n        window.location.reload();\n      } else if (!e.oldValue && e.newValue) {\n        setTimeout(async () => {\n          await this.router.navigate(['']);\n          window.location.reload();\n        }, 10000);\n      }\n    }\n  }\n  returnLanguage(lang: string) {\n    // this.translate.use(lang);\n    // console.log('lang ', lang);\n\n    const map: Map<string, string> = new Map([\n      ['en', 'English'],\n      ['cn', '中国'],\n      ['es', 'Español'],\n      ['fr', 'Français'],\n      ['ru', 'Pусский'],\n      ['jp', '日本語'],\n      ['kor', '한국어'],\n      ['por', 'Português'],\n      ['swe', 'Svenska']\n    ]);\n\n    const language = map.get(lang);\n\n    return language;\n  }\n  checkEmbedded() {\n    const path = this.location.path();\n    this.embedded = path.startsWith('/embedded');\n    const bg = this.embedded ? 'none' : '#f8f9fa';\n    if (!!this.embedded) {\n      document.documentElement.style.setProperty('--base-background-color', bg); // recheck\n      const resize = () => {\n        if (document.body.clientWidth < 540) {\n          document.documentElement.style.fontSize = '75%';\n        } else if (document.body.clientWidth < 650) {\n          document.documentElement.style.fontSize = '87.5%';\n        } else {\n          document.documentElement.style.fontSize = '100%';\n        }\n      };\n      window.addEventListener('resize', resize);\n      window.addEventListener('load', resize);\n      resize();\n    }\n  }\n  setLanguage(lang) {\n    window.localStorage.setItem('languagePreference', lang);\n    this.translate.use(lang);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value?: string, args?: number, endTrail?: boolean): string {\n    const limit = args ? args : 3;\n    const trail = '...';\n\n    let returnString;\n\n    if (endTrail && value.length > limit) {\n      const endTrailstring = value.slice(-limit);\n      returnString = value.substring(0, limit) + trail + endTrailstring;\n\n      return returnString;\n    } else {\n      return value.length > limit ? value.substring(0, limit) + trail : value;\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\n\n// From Angular Material\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// For translation\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\n// External libraries\nimport { AppComponent } from './app.component';\n\n// Services\nimport { MessageService } from './services/message/message.service';\nimport { WalletService } from './services/wallet/wallet.service';\nimport { ActivityService } from './services/activity/activity.service';\nimport { BalanceService } from './services/balance/balance.service';\nimport { EncryptionService } from './services/encryption/encryption.service';\nimport { ImportService } from './services/import/import.service';\nimport { TzrateService } from './services/tzrate/tzrate.service';\nimport { ExportService } from './services/export/export.service';\nimport { DelegateService } from './services/delegate/delegate.service';\nimport { InputValidationService } from './services/input-validation/input-validation.service';\nimport { LedgerService } from './services/ledger/ledger.service';\nimport { BeaconService } from './services/beacon/beacon.service';\nimport { TorusService } from './services/torus/torus.service';\nimport { EmbeddedAuthService } from './services/embedded-auth/embedded-auth.service';\nimport { TokenBalancesService } from './services/token-balances/token-balances.service';\nimport { SubjectService } from './services/subject/subject.service';\nimport { UnlockableService } from './services/unlockable/unlockable.service';\nimport { CoordinatorService } from './services/coordinator/coordinator.service';\nimport { OperationService } from './services/operation/operation.service';\n\n// View components\nimport { StartComponent } from './components/views/start/start.component';\nimport { NewWalletComponent } from './components/views/start/login-types/new-wallet/new-wallet.component';\nimport { MnemonicImportComponent } from './components/views/start/login-types/mnemonic-import/mnemonic-import.component';\nimport { MessagesComponent } from './components/ui/messages/messages.component';\nimport { ModalComponent } from './components/modals/modal.component';\nimport { HeaderComponent } from './components/views/layouts/header/header.component';\nimport { ConnectLedgerComponent } from './components/views/start/login-types/connect-ledger/connect-ledger.component';\nimport { FooterComponent } from './components/views/layouts/footer/footer.component';\nimport { AccountViewComponent } from './components/views/logged-in/account-view/account-view.component';\nimport { ActivityComponent } from './components/views/logged-in/account-view/activity/activity.component';\nimport { EventComponent } from './components/views/logged-in/account-view/activity/event/event.component';\nimport { NftsComponent } from './components/views/logged-in/account-view/nfts/nfts.component';\nimport { PendingComponent } from './components/views/logged-in/account-view/pending/pending.component';\nimport { BalancesComponent } from './components/views/logged-in/account-view/balances/balances.component';\nimport { BalanceTokenComponent } from './components/views/logged-in/account-view/balances/token/balance-token.component';\nimport { SpinnerComponent } from './components/ui/spinner/spinner.component';\nimport { AgreementComponent } from './components/views/start/agreement/agreement.component';\nimport { TermsOfUseComponent } from './components/views/start/agreement/terms-of-use/terms-of-use.component';\nimport { PrivacyPolicyComponent } from './components/views/start/agreement/privacy-policy/privacy-policy.component';\nimport { EmbeddedComponent } from './components/views/embedded/embedded.component';\nimport { SigninComponent } from './components/views/embedded/signin/signin.component';\nimport { CardComponent } from './components/views/embedded/card/card.component';\nimport { SendButtonComponent } from './components/ui/button/basic/send/send-button.component';\nimport { TokenDetail } from './components/modals/send/detail/token-detail.component';\nimport { AlertComponent } from './components/modals/alert/alert.component';\nimport { SpinnerLegacyComponent } from './components/ui/spinner/legacy/spinner-legacy.component';\nimport { SpinnerNewComponent } from './components/ui/spinner/new/spinner-new.component';\nimport { AccountDropdownComponent } from './components/ui/dropdown/account/account-dropdown.component';\nimport { MobileMenuDropdownComponent } from './components/ui/dropdown/mobile-menu/mobile-menu.component';\nimport { P404Component } from './components/views/error/404.component';\nimport { P500Component } from './components/views/error/500.component';\n\n// Modules\nimport { LoggedInModule } from './components/views/logged-in/logged-in.module';\n\n// Pipes\nimport { ErrorHandlingPipe } from './pipes/error-handling.pipe';\nimport { TruncatePipe } from './pipes/truncate.pipe';\nimport { TimeAgoPipe } from './pipes/time-ago.pipe';\nimport { DeeplinkService } from './services/deeplink/deeplink.service';\nimport { RemoveCommaPipe } from './pipes/remove-comma.pipe';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    // View components\n    NewWalletComponent,\n    StartComponent,\n    MnemonicImportComponent,\n    MessagesComponent,\n    ModalComponent,\n    HeaderComponent,\n    P404Component,\n    P500Component,\n    SendButtonComponent,\n    ConnectLedgerComponent,\n    FooterComponent,\n    AccountViewComponent,\n    ActivityComponent,\n    EventComponent,\n    NftsComponent,\n    PendingComponent,\n    BalancesComponent,\n    BalanceTokenComponent,\n    SpinnerComponent,\n    AgreementComponent,\n    TermsOfUseComponent,\n    PrivacyPolicyComponent,\n    EmbeddedComponent,\n    SigninComponent,\n    CardComponent,\n    TokenDetail,\n    SpinnerLegacyComponent,\n    SpinnerNewComponent,\n    AccountDropdownComponent,\n    MobileMenuDropdownComponent,\n    SpinnerLegacyComponent,\n\n    // Modals\n    ModalComponent,\n    AlertComponent,\n\n    // Pipes\n    ErrorHandlingPipe,\n    TruncatePipe,\n    TimeAgoPipe\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    LoggedInModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }) // lazy loading will need TranslateModule.forChild() in the lazy loaded modules\n  ],\n  providers: [\n    // Services\n    MessageService,\n    WalletService,\n    ActivityService,\n    EncryptionService,\n    BalanceService,\n    ImportService,\n    TzrateService,\n    CoordinatorService,\n    OperationService,\n    ExportService,\n    DelegateService,\n    InputValidationService,\n    LedgerService,\n    BeaconService,\n    TorusService,\n    EmbeddedAuthService,\n    SubjectService,\n    TokenBalancesService,\n    DeeplinkService,\n    UnlockableService,\n    // Pipes\n    ErrorHandlingPipe,\n    TruncatePipe,\n    TimeAgoPipe,\n    RemoveCommaPipe\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n  window.console.log = function () {};\n  window.console.dir = function () {};\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.log(err));\n","var map = {\n\t\"./af\": 58685,\n\t\"./af.js\": 58685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 32614,\n\t\"./ar-kw.js\": 32614,\n\t\"./ar-ly\": 18630,\n\t\"./ar-ly.js\": 18630,\n\t\"./ar-ma\": 28674,\n\t\"./ar-ma.js\": 28674,\n\t\"./ar-sa\": 49032,\n\t\"./ar-sa.js\": 49032,\n\t\"./ar-tn\": 24730,\n\t\"./ar-tn.js\": 24730,\n\t\"./ar.js\": 254,\n\t\"./az\": 53052,\n\t\"./az.js\": 53052,\n\t\"./be\": 60150,\n\t\"./be.js\": 60150,\n\t\"./bg\": 63069,\n\t\"./bg.js\": 63069,\n\t\"./bm\": 13466,\n\t\"./bm.js\": 13466,\n\t\"./bn\": 18516,\n\t\"./bn-bd\": 90557,\n\t\"./bn-bd.js\": 90557,\n\t\"./bn.js\": 18516,\n\t\"./bo\": 26273,\n\t\"./bo.js\": 26273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 19815,\n\t\"./bs.js\": 19815,\n\t\"./ca\": 83331,\n\t\"./ca.js\": 83331,\n\t\"./cs\": 21320,\n\t\"./cs.js\": 21320,\n\t\"./cv\": 72219,\n\t\"./cv.js\": 72219,\n\t\"./cy\": 68266,\n\t\"./cy.js\": 68266,\n\t\"./da\": 66427,\n\t\"./da.js\": 66427,\n\t\"./de\": 67435,\n\t\"./de-at\": 52871,\n\t\"./de-at.js\": 52871,\n\t\"./de-ch\": 12994,\n\t\"./de-ch.js\": 12994,\n\t\"./de.js\": 67435,\n\t\"./dv\": 82357,\n\t\"./dv.js\": 82357,\n\t\"./el\": 95649,\n\t\"./el.js\": 95649,\n\t\"./en-au\": 59961,\n\t\"./en-au.js\": 59961,\n\t\"./en-ca\": 10860,\n\t\"./en-ca.js\": 10860,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 70864,\n\t\"./en-ie.js\": 70864,\n\t\"./en-il\": 91579,\n\t\"./en-il.js\": 91579,\n\t\"./en-in\": 30940,\n\t\"./en-in.js\": 30940,\n\t\"./en-nz\": 16181,\n\t\"./en-nz.js\": 16181,\n\t\"./en-sg\": 44301,\n\t\"./en-sg.js\": 44301,\n\t\"./eo\": 85291,\n\t\"./eo.js\": 85291,\n\t\"./es\": 54529,\n\t\"./es-do\": 53764,\n\t\"./es-do.js\": 53764,\n\t\"./es-mx\": 12584,\n\t\"./es-mx.js\": 12584,\n\t\"./es-us\": 63425,\n\t\"./es-us.js\": 63425,\n\t\"./es.js\": 54529,\n\t\"./et\": 35203,\n\t\"./et.js\": 35203,\n\t\"./eu\": 70678,\n\t\"./eu.js\": 70678,\n\t\"./fa\": 83483,\n\t\"./fa.js\": 83483,\n\t\"./fi\": 96262,\n\t\"./fi.js\": 96262,\n\t\"./fil\": 52521,\n\t\"./fil.js\": 52521,\n\t\"./fo\": 34555,\n\t\"./fo.js\": 34555,\n\t\"./fr\": 63131,\n\t\"./fr-ca\": 88239,\n\t\"./fr-ca.js\": 88239,\n\t\"./fr-ch\": 21702,\n\t\"./fr-ch.js\": 21702,\n\t\"./fr.js\": 63131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 23821,\n\t\"./ga.js\": 23821,\n\t\"./gd\": 71753,\n\t\"./gd.js\": 71753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 92762,\n\t\"./gom-deva.js\": 92762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 82809,\n\t\"./gu.js\": 82809,\n\t\"./he\": 45402,\n\t\"./he.js\": 45402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 10410,\n\t\"./hr.js\": 10410,\n\t\"./hu\": 38288,\n\t\"./hu.js\": 38288,\n\t\"./hy-am\": 67928,\n\t\"./hy-am.js\": 67928,\n\t\"./id\": 71334,\n\t\"./id.js\": 71334,\n\t\"./is\": 86959,\n\t\"./is.js\": 86959,\n\t\"./it\": 34864,\n\t\"./it-ch\": 51124,\n\t\"./it-ch.js\": 51124,\n\t\"./it.js\": 34864,\n\t\"./ja\": 36141,\n\t\"./ja.js\": 36141,\n\t\"./jv\": 29187,\n\t\"./jv.js\": 29187,\n\t\"./ka\": 42136,\n\t\"./ka.js\": 42136,\n\t\"./kk\": 94332,\n\t\"./kk.js\": 94332,\n\t\"./km\": 18607,\n\t\"./km.js\": 18607,\n\t\"./kn\": 84305,\n\t\"./kn.js\": 84305,\n\t\"./ko\": 70234,\n\t\"./ko.js\": 70234,\n\t\"./ku\": 16003,\n\t\"./ku.js\": 16003,\n\t\"./ky\": 75061,\n\t\"./ky.js\": 75061,\n\t\"./lb\": 32786,\n\t\"./lb.js\": 32786,\n\t\"./lo\": 66183,\n\t\"./lo.js\": 66183,\n\t\"./lt\": 50029,\n\t\"./lt.js\": 50029,\n\t\"./lv\": 24169,\n\t\"./lv.js\": 24169,\n\t\"./me\": 68577,\n\t\"./me.js\": 68577,\n\t\"./mi\": 68177,\n\t\"./mi.js\": 68177,\n\t\"./mk\": 50337,\n\t\"./mk.js\": 50337,\n\t\"./ml\": 65260,\n\t\"./ml.js\": 65260,\n\t\"./mn\": 52325,\n\t\"./mn.js\": 52325,\n\t\"./mr\": 14695,\n\t\"./mr.js\": 14695,\n\t\"./ms\": 75334,\n\t\"./ms-my\": 37151,\n\t\"./ms-my.js\": 37151,\n\t\"./ms.js\": 75334,\n\t\"./mt\": 63570,\n\t\"./mt.js\": 63570,\n\t\"./my\": 97963,\n\t\"./my.js\": 97963,\n\t\"./nb\": 88028,\n\t\"./nb.js\": 88028,\n\t\"./ne\": 86638,\n\t\"./ne.js\": 86638,\n\t\"./nl\": 50302,\n\t\"./nl-be\": 66782,\n\t\"./nl-be.js\": 66782,\n\t\"./nl.js\": 50302,\n\t\"./nn\": 33501,\n\t\"./nn.js\": 33501,\n\t\"./oc-lnc\": 50563,\n\t\"./oc-lnc.js\": 50563,\n\t\"./pa-in\": 50869,\n\t\"./pa-in.js\": 50869,\n\t\"./pl\": 65302,\n\t\"./pl.js\": 65302,\n\t\"./pt\": 49687,\n\t\"./pt-br\": 74884,\n\t\"./pt-br.js\": 74884,\n\t\"./pt.js\": 49687,\n\t\"./ro\": 79107,\n\t\"./ro.js\": 79107,\n\t\"./ru\": 33627,\n\t\"./ru.js\": 33627,\n\t\"./sd\": 30355,\n\t\"./sd.js\": 30355,\n\t\"./se\": 83427,\n\t\"./se.js\": 83427,\n\t\"./si\": 43906,\n\t\"./si.js\": 43906,\n\t\"./sk\": 54590,\n\t\"./sk.js\": 54590,\n\t\"./sl\": 20184,\n\t\"./sl.js\": 20184,\n\t\"./sq\": 56361,\n\t\"./sq.js\": 56361,\n\t\"./sr\": 78965,\n\t\"./sr-cyrl\": 81287,\n\t\"./sr-cyrl.js\": 81287,\n\t\"./sr.js\": 78965,\n\t\"./ss\": 25456,\n\t\"./ss.js\": 25456,\n\t\"./sv\": 70451,\n\t\"./sv.js\": 70451,\n\t\"./sw\": 77558,\n\t\"./sw.js\": 77558,\n\t\"./ta\": 51356,\n\t\"./ta.js\": 51356,\n\t\"./te\": 73693,\n\t\"./te.js\": 73693,\n\t\"./tet\": 21243,\n\t\"./tet.js\": 21243,\n\t\"./tg\": 42500,\n\t\"./tg.js\": 42500,\n\t\"./th\": 55768,\n\t\"./th.js\": 55768,\n\t\"./tk\": 77761,\n\t\"./tk.js\": 77761,\n\t\"./tl-ph\": 35780,\n\t\"./tl-ph.js\": 35780,\n\t\"./tlh\": 29590,\n\t\"./tlh.js\": 29590,\n\t\"./tr\": 33807,\n\t\"./tr.js\": 33807,\n\t\"./tzl\": 93857,\n\t\"./tzl.js\": 93857,\n\t\"./tzm\": 60654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 60654,\n\t\"./ug-cn\": 30845,\n\t\"./ug-cn.js\": 30845,\n\t\"./uk\": 19232,\n\t\"./uk.js\": 19232,\n\t\"./ur\": 47052,\n\t\"./ur.js\": 47052,\n\t\"./uz\": 77967,\n\t\"./uz-latn\": 32233,\n\t\"./uz-latn.js\": 32233,\n\t\"./uz.js\": 77967,\n\t\"./vi\": 98615,\n\t\"./vi.js\": 98615,\n\t\"./x-pseudo\": 12320,\n\t\"./x-pseudo.js\": 12320,\n\t\"./yo\": 31313,\n\t\"./yo.js\": 31313,\n\t\"./zh-cn\": 64490,\n\t\"./zh-cn.js\": 64490,\n\t\"./zh-hk\": 55910,\n\t\"./zh-hk.js\": 55910,\n\t\"./zh-mo\": 98262,\n\t\"./zh-mo.js\": 98262,\n\t\"./zh-tw\": 44223,\n\t\"./zh-tw.js\": 44223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["ModalComponent","constructor","cd","isOpen","name","modalSub","Subscription","this","currentModel","subscribe","load","forceClose","undefined","willOpen","open","data","close","detectChanges","ngOnInit","ngOnDestroy","unsubscribe","window","innerHeight","document","body","scrollHeight","style","marginRight","overflowY","Number","documentElement","getPropertyValue","setTimeout","scrollTo","top","BehaviorSubject","selectors","decls","vars","template","encapsulation","i0","QrScannerComponent","beaconService","deeplinkService","messageService","walletConnectService","super","CONSTANTS","_CONSTANTS","env","environment","scanResponse","EventEmitter","override","manualInput","loadingCam","errorMessage","openModal","scan","QrScanner","videoplayer","nativeElement","qrScanner","result","handleQrCode","start","stop","destroy","e","console","warn","scanResult","qrString","log","pairingInfo","QRtoPairingJson","preNotifyPairing","addPeer","emit","pkh","closeModal","addError","handlePaste","ev","clipboardString","clipboardData","getData","startsWith","pair","viewQuery","Display","Size","AssetComponent","elRef","tokenService","display","image","size","medium","priorityList","controlsList","controls","requires","hideSpinner","muted","autoplay","loop","playsinline","inView","loaderUrl","unknownUrl","dataSrc","preSrc","postSrc","mimeType","errors","none","ngOnChanges","changes","assets","previousValue","currentValue","JSON","stringify","p0","assetToUrl","pickAsset","p1","from","to","reload","ngAfterViewInit","lazyLoad","updateDisplay","isImage","includes","isAudio","audio","isVideo","video","is3D","threeD","onLoad","target","id","onLoadData","volume","onError","evaluateInvalid","type","uri","evaluate","poster","asset","determineMime","error","setSrc","obs","IntersectionObserver","entries","_","forEach","entry","isIntersecting","unobserve","observe","url","Error","MODEL_3D_WHITELIST","getContractAddressFromAsset","response","i","ok","fetch","method","headers","get","contractAddress","raw","slice","ToggleComponent","text","default","stateChange","state","toggle","inputs","outputs","AdvancedToggleComponent","features","consts","ctx","ctx_r7","width","height","gradient","getGradientBackground","chartArea","theme","getComputedStyle","replace","chartWidth","right","left","chartHeight","bottom","createLinearGradient","addColorStop","Chart","registerables","ChartSeries","ChartComponent","Object","attributes","datasets","labels","datas","options","ddSets","sets","set","units","layout","tooltipValue","drawn","chart","series","day","ddExpanded","chartExpanded","afterTooltipDraw","args","x","tooltip","dataPoints","element","yAxis","scales","y","save","beginPath","moveTo","lineTo","lineWidth","setLineDash","strokeStyle","stroke","textAlign","font","fillStyle","fillText","title","restore","toggleChartExpand","chartRef","parentElement","classList","refreshDDSets","sort","a","b","nameA","toLowerCase","nameB","draw","ChartTitle","find","ds","label","parseFloat","length","toString","toFixed","toLocaleString","getContext","map","plugins","toggleSeries","overrideDatasetConfig","getChartOptions","toggleSet","reset","key","keys","hidden","pointHoverBorderWidth","design","pointHitRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointBackgroundColor","backgroundColor","context","yTickPadding","padding","beginAtZero","position","ticks","maxTicksLimit","align","weight","family","textStrokeColor","z","callback","index","grid","drawBorder","responsive","maintainAspectRatio","legend","hover","mode","axis","intersect","tooltips","interaction","elements","line","tension","point","radius","enabled","titleColor","bodyColor","footerColor","displayColors","callbacks","item","dataset","dataIndex","DropdownComponent","ListComponent","dropdownResponse","ecmpId","closeDropdown","closest","toggleDropdown","hostBindings","current","list","EventComponent","translate","timeAgoPipe","activityService","subjectService","OpStatus","LookupType","fresh","subscriptions","trigger","setInterval","add","confirmedOp","opHash","activity","hash","getType","destination","address","operationType","source","account","explorerURL","getCounterparty","transaction","c","trim","getEventIcon","lookupType","getEventStatusIcon","status","printAmount","formatAmount","tokenId","amount","sentKind","entrypoint","zeroSent","receivedKind","split","getAddressPrefix","copy","copyToClipboard","instant","ActivityComponent","trackEvent","block","NftsTokenComponent","tokenBalancesService","DisplayLinkOption","isNew","contractAliases","token","balance","viewToken","balanceChangeTimer","formatBalance","Big","div","parseInt","decimals","SearchBarComponent","onInput","itemCount","matchCount","inputUpdated","Subject","filter","isActive","hasValue","placeholder","placeholderText","searchText","pipe","debounceTime","value","activeAccount","onKeydown","next","onFocus","searchButtonClicked","input","focus","onBlur","NftsBodyComponent","searchable","tokensToDisplay","loaded","filtered","chunkSize","sliceEnd","refresh","isDisplaying","tokens","search","cb","scrollTop","clientHeight","addEventListener","t","match","RegExp","isNaN","updateFilter","prevFilter","trackToken","ctx_r9","NftsComponent","walletService","nfts","nftsArray","isDiscover","isInitLoad","activeAddress","nftsUpdated","p","getValue","flat","logout","o","displayTokenCard","sel","querySelector","innerWidth","scroll","offsetTop","shouldDisplayLink","option","wallet","TorusWallet","sanitizeKey","trackContract","contract","getContractAlias","category","join","BasicButtonComponent","SendButtonComponent","getAsset","tokenTransfer","prepareTransaction","prepareTokenTransfer","symbol","BalanceTokenComponent","removeCommaPipe","getBalance","balanceXTZ","getBalanceFiat","balanceUSD","price","buy","BalancesComponent","totalBalances","isFiat","balances","calcTotalBalances","walletUpdated","wrap","remove","ngAfterViewChecked","thumbnailAsset","toggleTotalBalances","reduce","prev","XTZrate","openSwap","startSpinner","TokenDetail","unlockableService","objktService","tokenFiltered","moreInfo","attrInfo","imageExpanded","autoOverflow","descOverflow","isNFT","assetLoaded","blacklistMeta","feat","contains","description","resolveToken","then","d","floorPrice","floor_price","last_sale","attribute","editions","attr","attribute_counts","freq","expand","expandImage","toggleFeature","AccountViewComponent","moreThan15","ImplicitAccount","SettingsComponent","router","coordinatorService","implicitAccounts","wideAccounts","recentlyRestartedWc2","getImplicitAccounts","syncBeaconState","onResize","accountAvailable","findIndex","impAcc","formatAddress","rescan","resetCounters","update","navigate","rescanAll","resetAllMetadata","revealMnemonic","canRevealMnomonic","HdWallet","LegacyWalletV3","changeSession","session","topic","preSelectedAccountAddress","unsorted","restart","DelegatePageComponent","delegateService","inputValidationService","messageServcie","customAddress","isShowingCustom","delegates","take","delegate","Math","ceil","freeSpace","estimatedRoi","openForDelegation","minDelegation","obj","stake","validDelegationAddress","round","val","toPercent","toggleCustom","routes","path","component","ActivateComponent","LoggedInRoutingModule","RouterModule","LoggedInModule","SwapLiquidityService","ChartService","EstimateService","RemoveCommaPipe","imports","CommonModule","HttpClientModule","FormsModule","operationService","formInvalid","activate","checkInput","secret","ans","success","payload","res","addSuccess","addWarning","msg","err","activateFailed","code","WalletType","ErrorHandlingPipe","ERROR_LIST","transform","errorId","withObj","location","protocol","s","string","int","jsonWith","indexOf","lines","pure","TimeAgoPipe","timestamp","now","sec","secs","mn","mns","hr","hrs","days","month","months","year","years","timeNow","Date","getTime","diff","timediff","count","output","minutes","seconds","ActivityService","lookupService","indexerService","maxTransactions","tokenBalanceUpdated","updateTransactions","getAccount","getTransactonsCounter","flatMap","of","knownTokenIds","fromPromise","accountInfo","counter","unknownTokenIds","searchAllMetadata","recheckMetadata","updateTokenBalances","getAllTransactions","activities","storeWallet","upToDate","Array","isArray","idsWithBalance","push","updateTokenBalance","currentTokenIds","getTokenBalances","getOperations","resp","operations","oldActivities","unconfirmedOps","op","opNew","concat","oldState","promptNewActivities","counterParty","check","newActivities","shortAddress","ref","metadataUpdated","takeUntil","delay","modify","withLookup","resolve","factory","BalanceService","tzrateService","getBalanceAll","getAccounts","getAccountBalance","updateAccountBalance","newBalance","updateTotalBalance","updateFiatBalances","change","totalBalanceXTZ","BeaconService","tzktService","client","peers","permissions","pairInfoJson","pairInfo","parse","isNewPairingRequest","addBeaconWait","peersJson","localStorage","getItem","newPublicKey","publicKey","peer","force","removeBeaconMsg","getPeers","getPermissions","removePeers","removePeer","senderId","getSenderId","peerResponse","removeAppMetadata","removePermissions","removeAllPermissions","removePermission","accountIdentifier","getAppMetadataList","rejectOnPermission","message","respondWithError","BeaconErrorType","rejectOnNetwork","rejectOnUserAbort","rejectOnSourceAddress","rejectOnTooManyOps","rejectOnUnknown","rejectOnParameters","rejectOnBroadcastError","errorType","requestMessage","BeaconMessageType","version","BEACON_VERSION","beaconId","respond","approvePermissionRequest","network","scopes","approveSignPayloadRequest","signature","signingType","responseSync","setItem","removeItem","providedIn","swapLiquidityService","stats","fetchLBGraphData","tzbtc","fetchHistoricalQuotesByContract","tzBTCContract","fetchHistoricalStatsByContract","lqdContract","interval","reverse","tvlUsd","getDate","getHours","defaultDatasetValues","borderColor","borderRadius","borderWidth","pointBorderWidth","pointBorderColor","pointRadius","pointHoverColor","fill","XTZtzBTC","tzBTCXTZ","totalValueLocked","offset","req","query","json","quotes1h","quotes1d","stats1d","SignalService","balanceService","connection","init","HubConnectionBuilder","withUrl","build","on","sender","invoke","parameter","confirmStatus","onclose","updateAccountData","acc","handleDelegateResponse","subscribeToAccount","types","State","CoordinatorService","dipdupService","signalService","scheduler","Map","defaultDelayActivity","shortDelayActivity","longDelayActivity","defaultDelayPrice","stopAll","accounts","startXTZ","tzrateInterval","getTzrate","fetchTokensMidPrice","recheckWalletAddresses","restoreFeatures","scheduleData","UpToDate","stateCounter","setDelay","boost","metadata","addressExists","addUnconfirmedOperations","Wait","changeState","Updating","latestActivity","shift","newState","time","delete","transactions","times","fee","parameters","unshift","destinationAccount","delegation","origination","kt1","DeeplinkService","pairingJson","params","extractPairingJson","b58cdecode","popPairingJson","qrPayload","DelegateService","bb","getDelegates","getDelegate","resolveDelegateByAddress","Promise","EncryptionService","encrypt","plaintext","password","salt","encrypt_v2","decrypt","chiphertext","decrypt_v1","decrypt_v2","encrypt_v1","pbkdf2","AES","salty","Buffer","cryptob","scrypt","cipher","forge","iv","byteStringBuffer","finish","toHex","tag","chipher","parts","decipher","shiftIV","isInteger","buf","http","imputValidationService","costPerByte","revealGasLimit","queue","nodeURL","contractsOverride","chainId","manager","pk","preLoadData","head","all","getHeader","toPromise","getCounter","getManager","chain_id","estimateTransactions","estimate","estimateOrigination","isOrigination","retry","_estimate","catch","simulation","gasLimit","min","floor","storageLimit","tx","createOriginationObject","createTransactionObject","simulate","contents","reveal","limits","kind","operation_result","opObj","gas","storage","getOpUsage","localForge","fop","bytes","totalGasLimit","totalStorageLimit","dtp","customLimits","recommendFee","burn","burnFee","content","gasUsage","minus","plus","balance_updates","balanceUpdate","consumed_milligas","internal_operation_results","internalResult","storageUsage","getOpLimits","gasUnits","numberOfOperations","postRpc","operation","checkApplied","catchError","errHandler","limit","contractOverride","gasRecommendation","relativeLimit","percentage","max","gasEstimation","storageRecommendation","storageEstimation","getRpc","DipDupService","storeKey","maxTokensReturned","rehydrate","exchange","exchanges","sharesTotal","Boolean","midPrice","store","fromEntries","midPrices","refreshTokens","parsed","IndexerService","isUsedAccount","getContractAddresses","getTokenMetadata","skipTzkt","ObjktService","utilsService","pending","event","price_xtz","fa","resolveCollection","sleep","collect","reject","addresses","q","items","resolveCollections","promise","contractAddresses","_objkts","objkts","objkt","logo","TzktService","tokenBalanceCache","TZKT_TOKEN_QUERY_SIZE","Tezos","TezosToolkit","customHandlers","IpfsHttpHandler","TezosStorageHandler","customMetadataProvider","MetadataProvider","addExtension","Tzip12Module","originatedContract","getHashAndBlockByIds","transactionIds","tokenBalances","getAllTokenBalances","digest","tokenBalancesCount","ops","hasInternals","opId","extractEntrypoint","newDelegate","contractBalance","tokenTxs","tokenArr","opIds","transactionId","extra","substring","meta","tokenType","standard","normalizeMetadata","filterMetadata","getTokenMetadataWithTaquito","at","tzip12","parsed_uri","token_metadata_uri","fetchToken","tzktTokensResponse","toAsset","formats","charAt","aryCamelKey","char","toUpperCase","camelKey","hasOwnProperty","mutableConvertObjectPropertiesSnakeToCamel","handleMetadataExceptions","isTransferable","shouldPreferSymbol","isBooleanAmount","displayUri","thumbnailUri","artifactUri","icon","f","getEntrypointMicheline","michelineParameters","InputValidationService","mnemonics","validMnemonic","zxcvbn","score","passwordStrengthDisplay","validAddress","torusAccount","verifierId","loginType","email","redditAccount","twitterAccount","tezosDomain","username","test","domain","sub","twitterId","passphrase","expr","endsWith","derivationPath","hexString","hex","isMessageSigning","isMichelineExpr","parsedPayload","valueDecoder","Uint8ArrayConsumer","invalidMnemonic","words","utils","wordCount","w","word","bip39","LookupService","torusService","tezosDomainsService","records","pendingLookups","initCheck","lookups","TezosDomains","clear","mark","indexTop","getDomainFromAddress","torusLookup","torusKeyLookup","Verifiers","verifierMap","verifier","Google","Reddit","verifierArray","twitterLookup","Twitter","noReveal","torusEntryExist","record","j","party","alias","Alias","MessageService","spinnerOn","spinnerText","messages","defaultTime","beaconResponse","pairingCompleteMsg","timeout","newMessage","emailNotify","redditNotify","twitterNotify","handler","loader","splice","stopSpinner","httpOptions","OperationService","errorHandlingPipe","prefix","tz1","Uint8Array","tz2","tz3","tz4","edpk","sppk","edsk","spsk","edsig","spsig","sig","B","TZ","KT","microTez","feeHardCap","header","branch","opbytes","sopbytes","preApplyResult","final","opCheck","newPkh","originate","actions","gas_limit","storage_limit","public_key","script","transfer","currentFee","invocation","txAmount","mod","eq","getFA12Transaction","getFA2Transaction","transactionOp","managerTransaction","getContractPkhTransaction","getContractKtTransaction","delegationOp","getContractDelegation","getContractUnDelegation","localOpbytes","sk","signed","sign","sbytes","applied","originated_contracts","unsignedOperation","broadcast","sig2edsig","localForger","tz2address","decompress","torusReq","jsonrpc","pub_key_X","X","pub_key_Y","Y","post","PublicKey","failed","ior","n","with","statusText","localForgedBytes","getVotingRights","listings","isRevealed","getVerifiedOpBytes","operationLevel","operationHash","opHashes","opIndex","managerPubkey","manager_pubkey","opBytes","pk2pkh","verify","buf2hex","getConstants","seed2keyPair","seed","keyPair","naclSign","b58cencode","secretKey","blake2b","mnemonic2seed","mnemonic","mnemonic2entropy","pkDecoded","spPrivKeyToKeyPair","hex2buf","elliptic","keyFromPrivate","yArray","getPublic","getY","toArray","prefixVal","pad","getX","isInvertedPk","invertSpsk","inv","remainder","spPointsToPkh","pubX","pubY","keyFromPublic","decodedPk","hexPk","secp256k1","instantiateSecp256k1","compressed","hexToBin","uncompressed","uncompressPublicKey","xy","binToHex","hex2pk","h","buffer","byteArray","hexParts","paddedHex","prefixx","Bs58check","enc","ledgerPreHash","canonical","r","hexsigToEdsig","decodeString","zarithDecode","byte","zarithDecodeInt","prim","getManagerScript","pkHex","annots","getApproveAmountParameters","getRevokeAmountParameters","getXTZToTokenParameters","minimum","expirationTime","getTokenToXTZParameters","minimumToken","minimumXTZ","getAddLiquidityParameters","minimumLqt","getRemoveLiquidityParameters","lqtBurn","minXtzWithdrawn","minTokensWithdrawn","getTezToTokenPaymentParameters","getTokenToTezPaymentParameters","minimumXtz","parseTokenTransfer","opJson","amounts","fa12ref","isEqual","fa2ref","String","retryPipeline","retries","retryWhen","concatMap","iif","throwError","delayOperator","retryWithWarning","BuyProvider","SubjectService","origin","wc2","Amount","decimalPlaces","internalBigInt","internalNormalised","rpcAmount","normalisedAmount","multiplierIntValue","pow","lqdTokenContract","dipdupContracts","fetchContracts","dipdupContract","fetchStorage","total_pool","tez_pool","token_pool","settings","dex","includeSubsidy","createPoolAmounts","xtzPool","tokenPool","calculateXtzToToken","xtzToSell","maxSlippage","expected","xtzToTokenExpectedReturn","xtzToTokenMinimumReturn","rate","xtzToTokenExchangeRateDisplay","impactDouble","xtzToTokenPriceImpact","calculateXtzToTokenFromToken","tokenToSell","calculateTokenToXTZ","xtz","tokenToXtzExpectedReturn","tokenToXtzMinimumReturn","tokenToXtzExchangeRateDisplay","tokenToXtzPriceImpact","calculateTokenToXTZFromXTZ","calculateAddLiquidityXTZ","totalLiquidity","tokenRequired","addLiquidityTokenRequired","liquidityReturned","addLiquidityReturn","exchangeRate","liquidityExpected","liquidityMinimum","calculateAddLiquidityToken","xtzRequired","addLiquidityXtzRequired","calculateRemoveLiquidity","liquidityBurned","xtzOut","removeLiquidityXtzReceived","tokenOut","removeLiquidityTokenReceived","xtzExpected","xtzMinimum","tokenExpected","tokenMinimum","xPool","tPool","dexterCalculations","includeSibsidy","tokenAmount","slippage","xtzToTokenRequiredXtzFor","xtzPoolRpc","tokenPoolRpc","xtzToTokenExchangeRate","xtzAmount","tokenToXtzRequiredTokenFor","tokenToXtzExchangeRate","tokenToXtzMarketRate","xtzToDeposit","xtzIn","totalLqt","tokenToDeposit","tokenIn","lqtBurned","tLqt","estimateLiquidityBakingAPY","TezosDomainsService","unsupportedNetwork","tezosToolkit","Tzip16Module","caching","TaquitoTezosDomainsClient","tezos","getAddressFromDomain","resolver","resolveNameToAddress","getDomainFromAddresses","baseUrl","reverseRecords","TokenBalancesService","_thumbnailsToCreate","combineLatest","resolveAsset","mintingTool","contractAlias","CONTRACT_ALIASES","thumbnailUrl","getContractName","getContractLogo","link","visitUrl","getPlaceholderToken","orderedNfts","mergeMarket","getThumbnailUrl","_nfts","aliases","pixels","decode","canvas","createElement","imageData","createImageData","putImageData","toDataURL","TokenService","AUTO_DISCOVER","contracts","exploredIds","pendingSave","unlockablesKey","workers","loadMetadata","saveMetadata","events","evt","NavigationEnd","className","tokenIdArray","ids","idx","span","first","last","gte","lte","displayAsset","artifactAsset","isKnownTokenId","tokenIds","contractKeys","contractKey","tokenKeys","tokenKey","isCategoryType","regex","isKnownTokenContract","addAsset","currentKeys","newKeys","checkContractData","updated","_objkt","_saveMetadata","searchMetadata","tokenObject","ttl","exp","lastCheck","explore","startWorker","recentDay","firstCheck","handleMetadata","tokenCategory","TRUSTED_TOKEN_CONTRACTS","t1","searchTimeMs","isUnknownToken","metadataJson","BLACKLISTED_TOKEN_CONTRACTS","baseUnit","GOOGLE","REDDIT","TWITTER","FACEBOOK","EMAIL","AUTH_DOMAIN","AUTH_DOMAIN_MAINNET","TorusService","torus","nodeDetails","verifierMaps","testnet","typeOfLogin","clientId","subVerifier","caseSensitiveVerifierID","aggregated","mainnet","_loginToConnectionMap","scope","verifierIdField","isVerifierIdCaseSensitive","isVerifierCaseSensitive","proxy","NodeDetailManager","TORUS_NETWORK","verifierMapKeys","initTorus","torusdirectsdk","DirectWebSdk","redirectToOpener","enableLogging","proxyContractAddress","skipSw","lookupPkh","selectedVerifier","fetchNodeDetails","proxyAddress","TorusUtils","sanitizedVerifierId","toLocaleLowerCase","torusNodeEndpoints","torusNodePub","torusIndexes","getNodeDetails","getPublicAddress","referrerPolicy","loginTorus","skipTorusKey","checkIfNewKey","host","mockLogin","jwtParams","login_hint","loginDetails","triggerAggregateLogin","aggregateVerifierType","verifierIdentifier","subVerifierDetailsArray","triggerLogin","userInfo","accessToken","privateKey","existingPk","preexistingPkh","isNewKey","getTorusKeyPair","TzrateService","apiUrl","usd","tot","totalBalanceUSD","UnlockableService","settingsKey","unlockables","UtilsService","ms","MessageKind","BcService","subject","wc_initialized","channel","BroadcastChannel","onmessage","handleMessage","postMessage","WalletConnectService","bcService","supportedMethods","supportedEvents","wc2activated","active","sessions","expanded","dapp","pairings","pairing","pairingsExpanded","sessionsExpanded","self","Initialized","createClient","subscribeToEvents","delayedPairing","Client","projectId","relayUrl","logger","icons","proposalHandler","removeListeners","requestHandler","core","unhandledSignClientEvents","unhandledPairingEvents","appMetadata","proposer","wcData","requiredNamespaces","chains","methods","approvePairing","request","namespaces","optionalNamespaces","m","acknowledged","approve","relayProtocol","relays","opResponse","formatJsonRpcResult","formatJsonRpcError","getSdkError","rejectPairing","reason","allowedAccounts","allowedMethods","sourceAddress","operationDetails","getImplicitAccount","algo","pubkey","extend","pairingString","paired","sessionsList","getAll","crypto","keychain","has","accountAddress","expiry","_sessions","dSession","pairingsList","getPairings","peerMetadata","_pairings","dPairing","updateSession","newAddress","deleteSession","deletePairing","disconnect","deletePairings","deleteSessions","timeEnd","prop","eventNames","removeAllListeners","WalletService","encryptionService","storageId","createNewWallet","createEncryptedWallet","hdSeed","entropy","hd","encrypted","encryptedSeed","iv2","encryptedEntropy","exportKeyStoreInit","getKeys","pwd","LegacyWalletV1","LegacyWalletV2","IV","LedgerWallet","EmbeddedTorusWallet","revealMnemonicPhrase","addImplicitAccount","addOriginatedAccount","kt","implicitAccount","origAcc","OriginatedAccount","originatedAccounts","incrementAccountIndex","clearWallet","instanceId","sessionStorage","isFullWallet","FullWallet","isViewOnlyWallet","isObserverWallet","isLedgerWallet","isHdWallet","isTorusWallet","isEmbeddedTorusWallet","isWatchWallet","WatchWallet","isPwdWallet","walletType","provider","initStorage","localStorageId","getLocalStorageId","getStorage","walletData","loadStoredWallet","parsedWalletData","wd","deserializeStoredWallet","implicit","originated","Wallet","originatedAccount","encrypedSeed","displayName","Account","getTokenBalance","isImplicit","ktAddress","managerPkh","managerPk","NETWORK","NAME","TEZOS_DOMAIN","CONTRACT","TOP_DOMAINS","MAINNET","NODE_URL","API_URL","BLOCK_EXPLORER_URL","HARD_LIMITS","hard_gas_limit_per_operation","hard_gas_limit_per_block","hard_storage_limit_per_operation","EmergentsTCG","discoverUrl","zoomDiscoverImg","ASSETS","NFT_CONTRACT_OVERRIDES","CONTRACT_OVERRIDES","FEATURE_CONTRACTS","production","_TTC","_BLTC","_M3DW","ImportService","pwdRequired","importWalletFromJson","importWalletFromObject","findContracts","importWalletFromPk","verifierDetails","ledgerImport","torusImport","watch","embedded","updateTwitterName","StartComponent","importService","route","isMobile","queryParams","devtool","prompt","torusLogin","ExportService","downloadWallet","blob","Blob","filename","saveAs","downloadOperationData","$event","stopPropagation","NewWalletComponent","exportService","showTacos","pwd1","pwd2","userMnemonic","hideBlur","isSelectedMnemonic","pwdStrength","ekfDownloaded","activePanel","longClickTs","generateSeed","MNEMONIC","array","wordsToVerify","mnemonicLength","random","checkWord","wordInput","getElementById","blur","formatVerifyDescription","indexFormat","valueFormat","verifyView","pwdView","mnemonicMatch","encryptWallet","preventDefault","validPwd","offsetWidth","calcStrength","done","export","getPkh","download","mouseOut","getSelection","removeAllRanges","checkSelection","isTextSelected","selection","isCollapsed","hostVars","_r5","ctx_r15","ctx_r41","ctx_r43","ctx_r44","MnemonicImportComponent","MIN_PWD_LENGTH","importOption","hdImport","Downloaded","fileName","browser","advancedForm","bip39Wordlist","navigation","getCurrentNavigation","extras","allowDrop","bind","handleFileDragAndDrop","clickPassword","removeAttribute","blurPassword","setAttribute","retrieve","setPwd","showPkh","importPreCheck","keyFile","typeCheckFile","walletJson","checkImportPwd","import","handleFileInput","dataTransfer","files","fileToUpload","validateFile","fileNotSupported","reader","FileReader","readAsText","onload","ext","lastIndexOf","seedWordKeydown","keyCode","selectionStart","selectionEnd","wordPos","charPos","metaKey","ctrlKey","second","firstSplit","pop","selStart","getAttribute","selEnd","LedgerService","setTransport","transport","TransportWebHID","TransportU2F","transportCheck","getAddress","sanitize","signOperation","signHash","getPk","ConnectLedgerComponent","ledgerService","defaultPath","defaultText","pendingLedgerConfirmation","isHDDerivationPathCustom","checkBrowser","navigator","userAgent","userAgentData","brands","some","brand","platform","importFromPk","setDefaultPath","v","P404Component","P500Component","PrivacyPolicyComponent","getHostName","hostname","TermsOfUseComponent","EmbeddedAuthService","authenticate","authReq","authMessage","createAuthMessage","nonce","signMessage","signExprSilent","hexExpr","requestId","authPayload","purpose","currentTime","_network","Parser","parseMichelineExpression","hexMessage","valueEncoder","LqdEntrypoints","ctx_r40","ctx_r42","Mode","zeroTxParams","SwapLiquidityComponent","estimateService","tezosDomainService","tezosDomains","chartService","prepareResponse","swap","xtzToToken","defaultTransactionParams","latestSimError","customFee","customGasLimit","customStorageLimit","minimumLqd","qty","qtyRaw","qtyOut","qtyRawOut","xtzBalance","lqdBalance","tzBTCBalance","simSemaphore","chartDatas","chartOptions","chartInit","setTokenBalances","initChartsMobile","arr","leftChart","miniChart","tokenToXtz","addLiquidity","removeLiquidity","initChartsDesktop","initCharts","birthExchangeRate","expectedRate","hydratePools","APY","xtzToBuy","tokenToBuy","calcSwap","calcAddLiquidity","toSell","calcRemoveLiquidity","lqtToBurn","estimateFees","preview","getFullyPreparedTxs","toggleMode","chartToggle","liquidity","toggleDirection","dir","evalAmount","getTotalFee","getTotalBurn","mul","burnAmount","customSlippage","customSlippageFocus","customSlippageBlur","getMaxAmount","accountBalance","tez","lqd","tzBTC","prevSimError","txs","getMinimalPreparedTxs","checkBalances","updateMaxAmount","assert","minimalTxs","opsWithCustomLimits","extraGas","extraStorage","extraGasPerOp","extraStoragePerOp","fullyTx","maxTez","maxLQD","maxtzBTC","gt","sanitizeNumberInput","openInfoModal","ctx_r50","ctx_r72","ctx_r75","ConfirmSendComponent","tokenBalanceService","confirmRequest","operationResponse","externalReq","schema","batchParamIndex","micheline","batchParameters","parametersFormat","parametersDisplay","transformedParameters","extractedSchema","showAll","showFullBatch","sendResponse","ledgerError","pwdInvalid","syncSub","closeModalAction","loadParameters","num","updateParameters","parametersToMicheline","sc","Schema","Execute","parametersToTabular","children","setParametersFormat","beaconTokenTransfer","assertMichelsonData","emitMicheline","indent","newline","traverse","level","isObject","valueOf","getTotalAmount","totalSent","getTotalCost","totalFee","totalActiveStorageLimit","getTotalDefaultStorage","getTotalDefaultGas","totalGas","totalStorage","getQuantity","totalAmount","ledgerRetry","sendTransaction","inject","broadCastLedgerTransaction","torusNotification","requestLedgerSignature","signedOp","signedOperation","getUsername","getVerifier","previewAttention","recipientKind","tmp","toggleTab","elem","tagName","ctx_r3","PrepareSendDropdownComponent","torusVerifierName","torusVerifier","ctx_r18","ctx_r19","ctx_r45","ctx_r47","ctx_r48","PrepareSendComponent","prepareRequest","isMultipleDestinations","hideAmount","accountDropdownIsOpen","torusLookupId","torusLookupAddress","torusTwitterId","torusPendingLookup","toMultipleDestinationsString","prevEquiClass","sendMax","toPkh","clearTorus","getTitle","getAssetName","short","amountChange","equiClass","checkBalance","updateDefaultValues","toPkhChange","finalCheck","getBatch","invalidTorusAccount","torusReady","checkTx","row","cols","col","torusError","google","reddit","twitter","sendEntireBalance","checkMaxAmount","toggleDestination","maxToSend","maxKt","maxTz","maxAmount","verifierChange","batchSpace","numberOfTxs","txsLimit","numberWithCommas","dynSize","pasteToPkh","clipboard","readText","clipText","handleScanResponse","ConfirmSendEmbedComponent","templateRequest","isApproved","showMore","descriptions","hideScrollbar","cancel","resetScrollbar","scrollBarWidth","overflow","SwapLiquidityConfirmComponent","semaphore","confirmTitle","parseTransactions","csr","hasTrailingZeroApproval","values","expectedXtz","expectedToken","expectedLqd","SendComponent","confirmSwapLiquidityRequest","thresholdUSD","swapLiquidityEntrypoints","externalRequest","selectedAccount","checkOpReq","operationRequest","opReq","silent","validParameters","simulateRequest","tokenTransferObj","getTokenTransferObj","partialOps","fullyPrepared","getTemplateFee","total","silentInject","confirmTransactions","isLbReq","Set","handlePrepareResponse","preparedTransactions","handleConfirmResponse","handleTemplateApproval","ExprTemplateComponent","SignExprEmbedComponent","signResponse","isMessage","signRequest","ui","acceptSigning","rejectSigning","QueueEmbedComponent","queueTime","hours","updateTime","SigninComponent","loginResponse","loginOptions","queueTimeVisible","queueLen","statusCounter","queueEndpoint","viewportCheck","loginConfig","customPrio","LoginPrio","queueLenInterval","getQueueLen","dismiss","startQueue","loginOption","screen","setHighPrio","queueInterval","timeBetweenChecks","checkQueue","stopQueue","clearInterval","abort","animation","back","login","loginData","len","setLowPrio","skipQueue","action","identity","groups","updateQueue","EstimatedTimeSeconds","Status","triesLeft","CardComponent","Permission","EmbeddedComponent","embeddedAuthService","permissionMatrix","brio","origins","minterpop","interpop","humanMachine","ubisoft","gap","micheline_silent","manutd","lexus","blockspace","evian","souvie","tzstaging","studioexception","cleantree","vitality","kanvas","proofof","emergents","thegoodsociety","circa","mooncakes","truename","verticalcrypto","playrecord","mclaren","pendingOps","blockCard","queueMode","currentInstanceId","handleRequest","hasPermission","RequestTypes","handleLoginRequest","handleOperationRequest","handleSignExprRequest","handleTrackRequest","handleLogoutRequest","handleAuthRequest","handleCardRequest","background","attachEvent","parent","ResponseTypes","MICHELINE","MICHELINE_SILENT","normalizeTemplate","LOGIN","config","customSpinnerDismissal","OPERATIONS","isValidOperation","noWalletError","toImport","idToken","long_lived_token","filteredUserInfo","generateInstanceId","userData","authParams","authResponse","strictAuth","importAccount","show","common","ophashSubscription","subscribeToConfirmedOps","permission","allowedOrigin","ReceiveComponent","showReceiveFormat","btnOutline","dropdownItem","getQR","QRCode","errorCorrectionLevel","scaleFactor","color","light","ctx_r8","NewImplicitComponent","errorMsg","openPkhSpot","addPkh","navigateByUrl","PermissionRequestDropdownComponent","PermissionRequestComponent","permissionResponse","preSelectedAccount","permissionRequest","rejectPermissions","grantPermissions","scopeToText","cachedIcon","ctx_r22","SignExprComponent","isDeku","ctx_r21","ctx_r24","OriginateComponent","beaconMode","customGas","customStorage","simError","activeTab","isValidOrigination","recommendations","clearForm","assertMichelsonContract","getOrigination","getScript","validateOrigination","sendOrigination","ledgerSign","keyPressNumbersDecimal","charCode","which","DelegateComponent","domainPendingLookup","defaultFee","pkhFee","ktFee","advanced","snapshot","paramMap","estimateDefaultFee","pwdValid","sendDelegation","getFee","revealed","revealFee","invalidInput","ctx_r5","AccountListBodyComponent","postfix","substr","selRef","viewRef","getTotalBalance","getTotalFiat","AccountListComponent","ctx_r17","ExportMnemonicComponent","mnemonicPhrase","SessionSelectDropdownComponent","SessionSelectComponent","changeAddress","UriHandlerComponent","connectApp","WalletClient","connect","handleBeaconMessage","changeFavicon","handleStorageEvent","isConnected","hasFocus","src","handlePermissionRequest","isSupportedOperationRequest","isSupportedSignPayload","PermissionScope","invalidParameters","invalidOptionals","transactionHash","newValue","senderIds","app","newPeer","BuyComponent","sanitizer","BuyProviderType","dev","mobile","isLoading","generateOnRampURL","appId","destinationWallets","blockchains","opener","walletAddressesData","coins","XTZ","apiKey","bypassSecurityTrustResourceUrl","signUrl","encodeURIComponent","iframeLoaded","iframeError","BuyModalComponent","onrampInstance","buyTez","LoggedInComponent","loadChildren","module","redirectTo","AppRoutingModule","InfoComponent","href","proceed","newTab","AlertComponent","removeMessage","notifyFormat","mailtoFormat","redditPmFormat","twitterPmFormat","encodeURI","encodedBody","accountType","getAlias","MessagesComponent","ctx_r14","AccountDropdownComponent","trackAccount","ctx_r6","ctx_r10","ctx_r12","MobileMenuDropdownComponent","delegateName","newAccount","receive","HeaderComponent","getDelegateName","parentNode","FooterComponent","darkText","promptTelegramDialog","SpinnerNewComponent","SpinnerComponent","AgreementComponent","displayAgreement","accepted","accept","AppComponent","previous","container","setDefaultLang","getBrowserLang","use","checkEmbedded","brk","clientWidth","setProperty","oldValue","returnLanguage","lang","bg","resize","fontSize","setLanguage","TruncatePipe","endTrail","returnString","endTrailstring","AppModule","bootstrap","BrowserModule","BrowserAnimationsModule","TranslateModule","provide","TranslateLoader","useFactory","TranslateHttpLoader","deps","HttpClient","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","webpackContext","webpackContextResolve","__webpack_require__","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[186]}